{"version":3,"file":"static/js/840.dff6c1b8.chunk.js","mappings":"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","sources":["components/Clickable/DisplayMode/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Image/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/Movies/components/Orientation/Vertical/index.tsx","pages/Movies/components/Poster/Horizontal/index.tsx","pages/Movies/components/Poster/Vertical/index.tsx"],"sourcesContent":["import { ReactElement, forwardRef } from 'react';\nimport { useIsFetching, useIsMutating } from 'react-query';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useBoolean, ButtonGroup } from '@chakra-ui/react';\n\nimport { DisplayModeRef, DisplayModeProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { toggleDisplayMode } from '../../../store/slices/App';\nimport { Theme } from '../../../theme/types';\nimport Icon from '../../Icon';\nimport Tooltip from '../../Tooltip';\nimport IconButton from '../IconButton';\n\nconst DisplayMode = forwardRef<DisplayModeRef, DisplayModeProps>(function DisplayMode(props, ref): ReactElement {\n\tconst theme = useTheme<Theme>();\n\n\tconst dispatch = useDispatch();\n\tconst displayMode = useSelector((state) => state.app.ui.displayMode);\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst isFetching = useIsFetching();\n\tconst isMutating = useIsMutating();\n\n\tconst [isHoveringGrid, setIsHoveringGrid] = useBoolean();\n\tconst [isClickingGrid, setIsClickingGrid] = useBoolean();\n\n\tconst [isHoveringList, setIsHoveringList] = useBoolean();\n\tconst [isClickingList, setIsClickingList] = useBoolean();\n\n\treturn (\n\t\t<ButtonGroup ref={ref} {...props} isAttached>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'grid'\n\t\t\t\t\t\t? 'Display is in Grid Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to Grid Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tisOpen={isHoveringGrid}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\tgutter={isClickingGrid ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\t\tcolor={displayMode === 'grid' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingGrid.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingGrid.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringGrid.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringGrid.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` },\n\t\t\t\t\t\tfront: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='grid_on' type={displayMode === 'grid' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'list'\n\t\t\t\t\t\t? 'Display is in List Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to List Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tisOpen={isHoveringList}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\tgutter={isClickingList ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\t\tcolor={displayMode === 'list' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingList.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingList.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringList.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringList.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` },\n\t\t\t\t\t\tfront: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='view_agenda' type={displayMode === 'list' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</ButtonGroup>\n\t);\n});\n\nexport default DisplayMode;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { DescriptionProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Description = (props: DescriptionProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { description, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{description || 'Poster Description'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Description;\n","import { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useMediaQuery, Box, AspectRatio, ScaleFade, Fade } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { PosterImageProps } from './types';\n\nimport { useSelector } from '../../../../../common/hooks';\nimport { MediaType } from '../../../../../common/types';\nimport { handleIsTouchDevice, handleReturnBoringTypeByMediaType, handleReturnRatio } from '../../../../../common/utils';\nimport Button from '../../../../../components/Clickable/Button';\nimport Skeleton from '../../../../../components/Skeleton';\nimport { toggleQuickView } from '../../../../../store/slices/Modals';\nimport { Theme } from '../../../../../theme/types';\nimport Image from '../../../../Image';\n\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\n\nconst isTouchDevice: boolean = handleIsTouchDevice();\n\nconst PosterImage = <MT extends MediaType>(props: PosterImageProps<MT>): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst [isMd] = useMediaQuery('(max-width: 960px)');\n\n\tconst dispatch = useDispatch();\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst {\n\t\tmediaItem,\n\t\tmediaType,\n\t\ttitle,\n\t\timage,\n\t\tisFocused = false,\n\t\tisLoading = true,\n\t\tisHovering = false,\n\t\tinView = false,\n\t\tonMouseChange\n\t} = props;\n\n\treturn (\n\t\t<AspectRatio as={Fade} in={inView} width={width} borderRadius='base' ratio={handleReturnRatio('portrait')}>\n\t\t\t<>\n\t\t\t\t<Skeleton borderRadius='base' isLoaded={!isLoading && inView}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\talt={image?.alt || ''}\n\t\t\t\t\t\tborderRadius='base'\n\t\t\t\t\t\tboringType={handleReturnBoringTypeByMediaType(mediaType)}\n\t\t\t\t\t\tthumbnailSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.thumbnail || ''}${\n\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tfullSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.full || ''}${image?.src || ''}`}\n\t\t\t\t\t/>\n\t\t\t\t</Skeleton>\n\n\t\t\t\t{/* Quick View component */}\n\t\t\t\t{!isMd && !(_.isNil(mediaItem) || _.isEmpty(mediaItem)) && !isTouchDevice && mediaType !== 'company' ? (\n\t\t\t\t\t<ScaleFade in={(isHovering || isFocused) && !isLoading} unmountOnExit>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tposition='absolute'\n\t\t\t\t\t\t\tbottom={theme.space[1]}\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\tonMouseEnter={() => onMouseChange(true)}\n\t\t\t\t\t\t\tonMouseLeave={() => onMouseChange(false)}\n\t\t\t\t\t\t\tpx={1}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\ttoggleQuickView({\n\t\t\t\t\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\t\t\t\t\tmediaType,\n\t\t\t\t\t\t\t\t\t\t\tmediaItem: { id: mediaItem?.id || -1, title }\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tQuick view\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</ScaleFade>\n\t\t\t\t) : null}\n\t\t\t</>\n\t\t</AspectRatio>\n\t);\n};\n\nexport default PosterImage;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { SubtitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Subtitle = (props: SubtitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { subtitle, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{subtitle || 'Poster Subtitle'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Subtitle;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { TitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['19.25px', '22px', '24.75px', '27.5px', '33px', '41.25px'];\n\nconst Title = (props: TitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { title, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{title || 'Poster Title'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Title;\n","import { ReactElement } from 'react';\nimport useInView from 'react-cool-inview';\n\nimport { useMediaQuery, useBreakpointValue, useBoolean, HStack, VStack, Center } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport Description from './components/Description';\nimport Image from './components/Image';\nimport Subtitle from './components/Subtitle';\nimport Title from './components/Title';\nimport { HorizontalPosterProps } from './types';\n\nimport { MediaType } from '../../../common/types';\nimport { handleReturnMediaTypeLabel } from '../../../common/utils';\nimport { FontSizes } from '../../../theme/types';\nimport Card from '../..//Clickable/Card';\nimport Link from '../../Clickable/Link';\nimport Rating from '../../Rating';\nimport Bookmark from '../components/Bookmark';\nimport Like from '../components/Like';\nimport Quickview from '../components/Quickview';\n\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst ratingFontSize = useBreakpointValue<keyof Omit<FontSizes, '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl'>>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { observe: ref, inView } = useInView<HTMLDivElement>({\n\t\tthreshold: [0.2, 0.4, 0.6, 0.8, 1],\n\t\tunobserveOnEnter: true\n\t});\n\n\tconst { mediaItem, mediaType, image, rating, title, subtitle, description, isLoading = true } = props;\n\n\tconst [isFocused, setIsFocused] = useBoolean();\n\tconst [isHovering, setIsHovering] = useBoolean();\n\n\tconst [isDisabled, setIsDisabled] = useBoolean();\n\n\tconst handleOnImageChange = (bool: boolean): void => {\n\t\tif (bool) {\n\t\t\tsetIsDisabled.on();\n\t\t} else {\n\t\t\tsetIsDisabled.off();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Link\n\t\t\tisFullWidth\n\t\t\tisDisabled={isLoading || isDisabled || mediaType === 'company'}\n\t\t\tto={\n\t\t\t\tmediaType !== 'company'\n\t\t\t\t\t? { pathname: `/${handleReturnMediaTypeLabel(mediaType)}/${mediaItem?.id || ''}` }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t\tonFocus={() => setIsFocused.on()}\n\t\t\tonBlur={() => setIsFocused.off()}\n\t\t\tonMouseEnter={() => setIsHovering.on()}\n\t\t\tonMouseLeave={() => setIsHovering.off()}\n\t\t>\n\t\t\t<Card isFullWidth isDisabled={isLoading} isClickable={mediaType !== 'company'} isFixed={isDisabled} isLight>\n\t\t\t\t<HStack ref={ref} width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\n\t\t\t\t\t{/* Image */}\n\t\t\t\t\t<Image\n\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\timage={image}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tisFocused={isFocused}\n\t\t\t\t\t\tisHovering={isHovering}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\tinView={inView}\n\t\t\t\t\t\tonMouseChange={handleOnImageChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<VStack\n\t\t\t\t\t\twidth={[\n\t\t\t\t\t\t\t'calc(100% - 108px)',\n\t\t\t\t\t\t\t'calc(100% - 124px)',\n\t\t\t\t\t\t\t'calc(100% - 168px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 240px)'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Rating */}\n\t\t\t\t\t\t{(mediaType === 'movie' || mediaType === 'tv') && rating ? (\n\t\t\t\t\t\t\t<Rating count={rating?.count} inView={inView} size={ratingFontSize} isLoading={isLoading}>\n\t\t\t\t\t\t\t\t{rating?.rating}\n\t\t\t\t\t\t\t</Rating>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title title={title} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t{(!_.isNil(subtitle) && !_.isEmpty(subtitle)) || isLoading ? (\n\t\t\t\t\t\t\t\t<Subtitle subtitle={subtitle} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t{(!_.isNil(description) && !_.isEmpty(description)) || isLoading ? (\n\t\t\t\t\t\t\t<Description description={description} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</VStack>\n\n\t\t\t\t\t{/* Like / List Icon / Quick View buttons */}\n\t\t\t\t\t<Center\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tright: 1\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Quick View component */}\n\t\t\t\t\t\t{mediaType !== 'company' ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Quickview\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{/* Like component */}\n\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t<Like\n\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t{/* List component */}\n\t\t\t\t\t\t{mediaType === 'movie' || mediaType === 'tv' ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Bookmark\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Center>\n\t\t\t\t</HStack>\n\t\t\t</Card>\n\t\t</Link>\n\t);\n};\n\nexport default HorizontalPoster;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { VerticalMoviesProps } from './types';\n\nimport { PartialMovie } from '../../../../../common/types/movie';\nimport Empty from '../../../../../components/Empty';\nimport Error from '../../../../../components/Error';\nimport VerticalGrid from '../../../../../components/Grid/Vertical';\nimport HorizontalMoviePoster from '../../Poster/Horizontal';\nimport VerticalMoviePoster from '../../Poster/Vertical';\n\nconst VerticalMovies = (props: VerticalMoviesProps): ReactElement => {\n\tconst { isError = false, isSuccess = false, isLoading = true, movies } = props;\n\n\treturn !isLoading && isError ? (\n\t\t<Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\n\t) : !isLoading && isSuccess && movies && movies.length === 0 ? (\n\t\t<Empty label='Movies list is currently empty!' variant='outlined' />\n\t) : !isLoading && isSuccess && movies && movies.length > 0 ? (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\tmovies.map((movie: PartialMovie) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalMoviePoster key={movie.id} movie={movie} isLoading={false} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalMoviePoster key={movie.id} movie={movie} isLoading={false} />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t) : (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\t_.range(0, isSuccess && movies && movies.length > 0 ? movies.length : 20).map((_dummy, index: number) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalMoviePoster key={index} isLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalMoviePoster key={index} isLoading />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t);\n};\n\nexport default VerticalMovies;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { HorizontalMoviePosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../../common/utils';\nimport HorizontalPoster from '../../../../../components/Poster/Horizontal';\n\nconst HorizontalMoviePoster = (props: HorizontalMoviePosterProps): ReactElement => {\n\tconst { movie, isLoading = true } = props;\n\tconst { title, poster_path, vote_average, vote_count, overview, release_date, genre_ids } = movie || {};\n\n\treturn (\n\t\t<HorizontalPoster\n\t\t\tmediaItem={movie ? { ...movie } : undefined}\n\t\t\tmediaType='movie'\n\t\t\timage={{\n\t\t\t\talt: `${title || ''} movie poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: {\n\t\t\t\t\tthumbnail: 'w92',\n\t\t\t\t\tfull: 'original'\n\t\t\t\t}\n\t\t\t}}\n\t\t\trating={{\n\t\t\t\trating: vote_average || null,\n\t\t\t\tcount: vote_count || null\n\t\t\t}}\n\t\t\ttitle={title || ''}\n\t\t\tsubtitle={`${_.compact([\n\t\t\t\t!_.isNil(release_date) && !_.isEmpty(release_date)\n\t\t\t\t\t? `${handleReturnDate(release_date || '', 'full')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!_.isNil(genre_ids) && !_.isEmpty(genre_ids)\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'movie')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tdescription={overview || ''}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default HorizontalMoviePoster;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { VerticalMoviePosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../../common/utils';\nimport VerticalPoster from '../../../../../components/Poster/Vertical';\n\nconst VerticalMoviePoster = (props: VerticalMoviePosterProps): ReactElement => {\n\tconst { movie, width, isLoading = true } = props;\n\tconst { title, poster_path, vote_average, release_date, genre_ids } = movie || {};\n\n\treturn (\n\t\t<VerticalPoster\n\t\t\twidth={width || '100%'}\n\t\t\tmediaItem={movie ? { ...movie } : undefined}\n\t\t\tmediaType='movie'\n\t\t\timage={{\n\t\t\t\talt: `${title || ''} movie poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: {\n\t\t\t\t\tthumbnail: 'w92',\n\t\t\t\t\tfull: 'original'\n\t\t\t\t}\n\t\t\t}}\n\t\t\trating={vote_average || null}\n\t\t\ttitle={title || ''}\n\t\t\tsubtitle={`${_.compact([\n\t\t\t\t!_.isNil(release_date) && !_.isEmpty(release_date)\n\t\t\t\t\t? `${handleReturnDate(release_date || '', 'year')} `\n\t\t\t\t\t: undefined,\n\t\t\t\t!_.isNil(genre_ids) && !_.isEmpty(genre_ids)\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'movie')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default VerticalMoviePoster;\n"],"names":["DisplayMode","forwardRef","props","ref","theme","useTheme","dispatch","useDispatch","displayMode","useSelector","state","app","ui","color","user","isFetching","useIsFetching","isMutating","useIsMutating","useBoolean","isHoveringGrid","setIsHoveringGrid","isClickingGrid","setIsClickingGrid","isHoveringList","setIsHoveringList","isClickingList","setIsClickingList","isAttached","isDisabled","isOpen","placement","label","gutter","onClick","toggleDisplayMode","undefined","onMouseDown","on","onMouseUp","off","onMouseEnter","onMouseLeave","variant","sx","back","borderRadius","radii","base","front","icon","type","dummies","_","height","colorMode","useColorMode","fontSize","useBreakpointValue","description","isLoading","inView","dummy","useConst","width","maxWidth","isLoaded","align","fontWeight","isTruncated","overflow","whiteSpace","isTouchDevice","handleIsTouchDevice","useMediaQuery","isMd","mediaItem","mediaType","title","image","isFocused","isHovering","onMouseChange","as","Fade","in","ratio","handleReturnRatio","Skeleton","Image","alt","boringType","handleReturnBoringTypeByMediaType","thumbnailSrc","process","size","thumbnail","src","fullSrc","full","unmountOnExit","position","bottom","space","px","Button","isFullWidth","event","preventDefault","stopPropagation","toggleQuickView","open","id","subtitle","isSm","ratingFontSize","useInView","threshold","unobserveOnEnter","observe","rating","setIsFocused","setIsHovering","setIsDisabled","Link","to","pathname","handleReturnMediaTypeLabel","onFocus","onBlur","Card","isClickable","isFixed","isLight","spacing","p","bool","alignItems","Rating","count","top","right","Quickview","Like","Bookmark","isError","isSuccess","movies","length","map","movie","_dummy","index","poster_path","vote_average","vote_count","overview","release_date","genre_ids","handleReturnDate","handleReturnGenresByID","join"],"sourceRoot":""}