{"version":3,"sources":["common/scripts/axios.ts","components/Grid/Horizontal/components/Header/index.tsx","common/hooks/useSelectorTyped.ts","store/slices/App/index.ts","store/slices/Options/index.ts","store/slices/User/index.ts","store/rootReducer.ts","store/index.ts","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/sizes.ts","theme/foundations/spacing.ts","theme/foundations/transition.ts","theme/foundations/typography.ts","theme/foundations/index.tsx","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/utils.ts","components/Clickable/Button/index.tsx","components/Clickable/Button/styles.ts","components/Grid/Horizontal/components/Grid/index.tsx","components/Clickable/IconButton/index.tsx","components/Clickable/IconButton/styles.ts","components/Tooltip/index.tsx","components/Grid/Horizontal/index.tsx","common/assets/illustrations/empty/blue.svg","common/assets/illustrations/empty/cyan.svg","common/assets/illustrations/empty/green.svg","common/assets/illustrations/empty/orange.svg","common/assets/illustrations/empty/pink.svg","common/assets/illustrations/empty/purple.svg","common/assets/illustrations/empty/teal.svg","common/assets/illustrations/empty/yellow.svg","common/assets/illustrations/empty/index.ts","components/Card/index.tsx","components/Card/styles.ts","components/Empty/index.tsx","common/assets/illustrations/error/blue.svg","common/assets/illustrations/error/cyan.svg","common/assets/illustrations/error/green.svg","common/assets/illustrations/error/orange.svg","common/assets/illustrations/error/pink.svg","common/assets/illustrations/error/purple.svg","common/assets/illustrations/error/teal.svg","common/assets/illustrations/error/yellow.svg","common/assets/illustrations/error/index.ts","components/Error/index.tsx","components/Clickable/Card/index.tsx","components/Clickable/Card/styles.ts","components/Bookmark/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/utils.ts","components/Skeleton/index.tsx","components/Image/index.tsx","components/Like/index.tsx","components/Skeleton/Text/index.tsx","components/Rating/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","components/Movies/Poster/Vertical/index.tsx","components/Movies/Grid/Horizontal/index.tsx","common/data/departments.ts","components/People/Poster/Vertical/index.tsx","components/People/Grid/Horizontal/index.tsx","components/TV/Poster/Vertical/index.tsx","components/TV/Grid/Horizontal/index.tsx","pages/Home/index.tsx","components/DisplayMode/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/Modal/index.tsx","components/MediaTypePicker/components/MediaTypeItem/index.tsx","components/MediaTypePicker/components/MediaTypes/index.tsx","components/MediaTypePicker/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","components/Movies/Poster/Horizontal/index.tsx","pages/Liked/components/Movie/index.tsx","components/People/Poster/Horizontal/index.tsx","pages/Liked/components/Person/index.tsx","components/TV/Poster/Horizontal/index.tsx","pages/Liked/components/Show/index.tsx","pages/Liked/components/All/index.tsx","pages/Liked/index.tsx","pages/Lists/components/Movie/index.tsx","pages/Lists/components/Show/index.tsx","pages/Lists/components/All/index.tsx","pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/Lists/components/ListPicker/index.tsx","pages/Lists/index.tsx","pages/Movies/index.tsx","common/data/response.ts","common/data/sort.ts","components/Filters/components/Container/index.tsx","components/Filters/components/Departments/components/Department/index.tsx","components/Filters/components/Departments/index.tsx","components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx","components/Filters/components/DisplayMode/index.tsx","components/Filters/components/Genres/components/Genre/index.tsx","components/Filters/components/Genres/index.tsx","components/Filters/components/SortBy/components/SortByItem/index.tsx","components/Filters/components/SortBy/components/SortByItem/styles.ts","components/Filters/components/SortBy/index.tsx","components/Filters/index.tsx","components/LoadMore/index.tsx","components/Movies/Grid/Vertical/index.tsx","pages/Movies/NowPlaying/index.tsx","pages/Movies/Popular/index.tsx","pages/Movies/TopRated/index.tsx","pages/Movies/Upcoming/index.tsx","components/People/Grid/Vertical/index.tsx","pages/People/index.tsx","components/SearchForm/components/Row/index.tsx","components/SearchForm/components/Row/styles.ts","components/SearchForm/components/Default/index.tsx","components/SearchForm/components/Display/index.tsx","components/SearchForm/index.tsx","components/TV/Grid/Vertical/index.tsx","pages/Search/components/All/index.tsx","pages/Search/index.tsx","pages/Trending/index.tsx","pages/TV/index.tsx","pages/TV/AiringToday/index.tsx","pages/TV/OnTV/index.tsx","pages/TV/Popular/index.tsx","pages/TV/TopRated/index.tsx","containers/Layout/common/data/sidebar.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/components/Header/components/Breadcrumb/index.tsx","containers/Layout/components/Header/components/Breadcrumb/styles.ts","containers/Layout/common/data/navItems.ts","containers/Layout/components/Logo/index.tsx","containers/Layout/components/Logo/styles.ts","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/index.tsx","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/styles.ts","containers/Layout/components/NavItems/components/NavItem/index.tsx","containers/Layout/components/NavItems/components/NavItem/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/Search/index.tsx","containers/Layout/components/Header/components/User/components/UserLink/index.tsx","containers/Layout/components/Header/components/User/components/UserLink/styles.ts","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","containers/Layout/components/Modals/Description/index.tsx","containers/Layout/components/Modals/Display/components/Container/index.tsx","containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx","containers/Layout/components/Modals/Display/components/Background/index.tsx","containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx","containers/Layout/components/Modals/Display/components/Color/index.tsx","containers/Layout/components/Modals/Display/index.tsx","containers/Layout/components/Modals/Lists/components/CreateList/validation.ts","containers/Layout/components/Modals/Lists/components/CreateList/index.tsx","containers/Layout/components/Modals/Lists/components/List/index.tsx","containers/Layout/components/Modals/Lists/index.tsx","containers/Layout/components/Modals/Splashscreen/index.tsx","containers/Layout/components/Modals/Splashscreen/styles.ts","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","common/hooks/useQueriesTyped.ts","routes/DefaultRoute.tsx","routes/index.tsx","containers/App/index.tsx","index.tsx"],"names":["instance","axios","create","baseURL","process","interceptors","request","use","headers","interval","useSelectorTyped","useSelector","appSlice","createSlice","name","initialState","data","sortDirection","ui","displayMode","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","defaultListsModal","open","item","undefined","recentSearches","recentlyViewed","liked","lists","id","uuid","label","date","moment","Date","toISOString","results","listsModal","descriptionModal","isDisplayModalOpen","isSplashscreenOpen","theme","color","background","userSlice","setTheme","setRecentSearches","setRecentlyViewed","setLiked","setLists","toggleList","toggleDescription","toggleDisplay","toggleSplashscreen","rootReducer","combineReducers","app","appReducer","options","optionsReducer","user","userReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","sm","base","md","lg","xl","full","sizes","container","spacing","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","transition","property","common","colors","dimensions","position","easing","duration","typography","fonts","body","heading","mono","fontSizes","radius","space","styles","global","props","fontFamily","mode","bg","slower","overflowX","lineHeight","borderColor","wordWrap","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","number","string","parseInt","_","replace","mediaType","getState","filter","genre","includes","map","join","window","navigator","maxTouchPoints","msMaxTouchPoints","section","split","month","find","time","size","alt","Math","floor","random","toString","substring","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","type","breakpoint","element","overflow","style","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","range","amount","Button","useTheme","colorMode","useColorMode","variant","isFullWidth","isLoading","button","back","normal","boxShadow","transform","front","cursor","width","height","display","justifyContent","willChange","fontWeight","fontSize","textTransform","borderStyle","borderWidth","borderRadius","padding","disabled","opacity","icon","light","contained","backgroundColor","outlined","text","dark","useStyles","children","leftIcon","rightIcon","isDisabled","rest","handleReturnSpacing","sx","merge","_disabled","className","thickness","speed","slow","as","mr","ml","Grid","gridRef","handleScrollChange","ref","px","onLoad","event","onScroll","minWidth","border","p","IconButton","forwardRef","Tooltip","closeDelay","openDelay","gutter","span","utils","arrowSize","fast","hasArrow","gray","Header","useDisclosure","isOpen","onOpen","onClose","title","reset","scrollButtons","handleScrollClick","useState","direction","setDirection","handleScroll","useCallback","handleIsOpen","setInterval","handleClose","clearInterval","useEffect","justify","align","aria-label","closeOnClick","closeOnMouseDown","placement","left","ArrowBackOutlinedIcon","onMouseDown","onClick","right","ArrowForwardOutlinedIcon","defaultScrollButtonsState","HorizontalGrid","footer","path","onFooterClick","setGridRef","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleGridRef","maxScroll","scrollLeft","offsetWidth","isLeftDisabled","isRightDisabled","currentTarget","to","Card","card","alignItems","transparent","Empty","maxWidth","useBreakpointValue","hasIllustration","description","in","handleReturnPadding","src","empty","handleReturnIllustration","Error","error","isLightGray","Bookmark","mediaItem","dispatch","useDispatch","isHovering","setIsHovering","list","some","result","isBookmarked","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","paramList","onMouseEnter","onMouseLeave","fadeDuration","Skeleton","commonProps","startColor","endColor","Image","orientation","isLoaded","ratio","fallbackSrc","Like","isLiked","like","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","SkeletonText","noOfLines","defaultRating","rating","count","Rating","iconSize","StarOutlinedIcon","dummyTextWidths","Subtitle","subtitle","isTruncated","setIsTruncated","handleIsTruncated","length","mt","whiteSpace","setTimeout","Title","mb","VerticalPoster","mediaItemID","image","top","VerticalMovie","Vertical","poster_path","vote_average","vote_count","release_date","genre_ids","HorizontalMovies","isError","isSuccess","movies","hasOptionsDownloaded","Array","_dummy","index","departments","VerticalPerson","person","profile_path","department","known_for_department","HorizontalPeople","people","VerticalTV","show","first_air_date","HorizontalTV","Home","source","CancelToken","popularMovies","useQuery","a","axiosInstance","get","cancelToken","token","trendingMovies","popularTV","trendingTV","trendingPeople","cancel","Horizontal","isFetching","pathname","DisplayMode","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","header","Boolean","unmountOnExit","VerticalGrid","Modal","useMediaQuery","isXs","blockScrollOnMount","preserveScrollBarGap","motionPreset","scrollBehavior","mx","py","borderBottom","borderBottomColor","CloseOutlinedIcon","borderTop","borderTopColor","MediaTypeItem","iconActive","isActive","mediaTypesList","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","MediaTypes","mediaTypes","onSetType","handleClick","mediaTypeItem","MediaTypePicker","location","useLocation","isCentered","Description","HorizontalPoster","HorizontalMovie","overview","Movie","search","HorizontalPerson","arraySort","known_for","Person","Show","All","Liked","isMediaTypePickerOpen","onMediaTypePickerOpen","onMediaTypePickerClose","isSmallMob","history","useHistory","paramMediaType","useParams","setMediaType","columns","push","ListItem","activeList","stringify","parse","Lists","isListPickerOpen","onListPickerOpen","onListPickerClose","setList","setMovies","setTV","pb","fromNow","ListPicker","Movies","upcomingMovies","moviesNowPlaying","topRatedMovies","defaultResponse","page","total_pages","total_results","movieSortBy","tvSortBy","peopleSortBy","Container","pt","Department","CheckOutlinedIcon","Departments","form","handleDepartmentClick","getValues","activeDepartment","setValue","shouldDirty","control","render","field","DisplayModeItem","displayModes","Genre","Genres","movieGenres","tvGenres","handleGenreClick","activeGenre","handleAllLabel","handleAllClick","SortByItem","onSortChange","onDirectionChange","ArrowDownwardOutlinedIcon","SortBy","handleSortChange","paramSort","sortBy","sort","current","findIndex","next","handleDirectionChange","Filters","onFilter","defaultValues","useForm","useFormState","isDirty","dirtyFields","VisibilityOutlinedIcon","handleSubmit","values","handleSubmitFilters","LoadMore","total","onFetch","max","round","VerticalMovies","MoviesNowPlaying","isMob","setSortBy","setGenres","useInfiniteQuery","pageParam","params","getPreviousPageParam","firstPage","getNextPageParam","lastPage","onSuccess","pages","forEach","reverse","active","refetch","hasNextPage","fetchNextPage","PopularMovies","TopRatedMovies","UpcomingMovies","VerticalPeople","People","setDepartments","setPeople","popularPeople","_genres","Row","onSearch","isHoveringDelete","setIsHoveringDelete","omit","handleSearch","colorScheme","ClearOutlinedIcon","Default","isOverflown","setIsOverflown","handleIsOverflown","offsetHeight","maxHeight","overflowY","pr","Display","totalResults","SearchForm","inputRef","useRef","onQueryChange","onMoviesChange","onTVChange","onPeopleChange","onIsLoading","onIsFetched","isLocked","setIsLocked","isHoveringLock","setIsHoveringLock","isFocused","setIsFocused","hasSubmitted","setHasSubmitted","localQuery","setLocalQuery","setTotalResults","keywords","enabled","searchMovies","cacheTime","searchTV","searchPeople","handleSearchQuery","trim","useOutsideClick","handler","parseNumbers","totalMovies","totalTV","totalPeople","focus","SearchOutlinedIcon","placeholder","onFocus","onBlur","onKeyPress","onChange","target","remove","LockOutlinedIcon","LockOpenOutlinedIcon","keyword","Search","breakpoints","isLgUp","setQuery","setRefetch","setIsLoading","bool","Trending","trending","console","log","TV","tvAiringToday","onTV","topRatedTV","TVAiringToday","OnTV","PopularTV","TopRatedTV","sidebarWidth","expanded","collapsed","Breadcrumb","breadcrumbs","breadcrumbItem","breadcrumbLink","textDecoration","breadcrumbActive","setstate","separator","ChevronRightOutlinedIcon","breadcrumb","isCurrentPage","Link","navItems","HomeTwoToneIcon","HomeOutlinedIcon","SearchTwoToneIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","renderChild","TheatersTwoToneIcon","Logo","minHeight","alignSelf","paddingTop","paddingBottom","paddingLeft","paddingRight","NavItemChild","isLastChild","child","link","RRDLink","borderLeft","borderLeftColor","parts","initials","part","handleGetInitials","NavItem","isChildActive","renderChildren","every","isExpanded","main","delay","enter","exit","pl","NavItems","navItem","Menu","MenuOutlinedIcon","isModalOpen","onModalOpen","onModalClose","UserLink","User","userLinks","PaletteTwoToneIcon","PaletteOutlinedIcon","userLink","isMdUp","isLgDown","useTransitionsStyle","zIndex","DescriptionModal","BackgroundItem","backgrounds","WbSunnyOutlinedIcon","Brightness2OutlinedIcon","Background","watch","ColorItem","Color","minChildWidth","toggleColorMode","newTheme","schema","yup","shape","required","CreateList","reValidateMode","resolver","yupResolver","fieldState","isRequired","errorBorderColor","focusBorderColor","isInvalid","message","isFullWidthname","List","isSelected","CheckBoxTwoToneIcon","CheckBoxOutlineBlankOutlinedIcon","ListsModal","isListsOpen","onListsOpen","onListsClose","isCreateListOpen","onCreateListOpen","onCreateListClose","selected","setSelected","handleIsSelected","updatedLists","updatedList","handleSaveItem","MotionBox","motion","Box","Splashscreen","closeOnEsc","closeOnOverlayClick","m","animate","backgroundPosition","ease","repeat","repeatType","repeatDelay","bgSize","bgGradient","bgClip","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","setWidth","setLeft","queries","useQueries","useQueriesTyped","queryKey","queryFn","DefaultRoute","Component","component","sessionStorage","setItem","JSON","Router","home","basename","exact","queryClient","QueryClient","App","QueryClientProvider","client","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.77aca452.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\n\r\nexport default instance;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, HStack, Text } from '@chakra-ui/react';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { HeaderProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { title, isLoading = false, reset = false, scrollButtons, handleScrollClick } = props;\r\n\r\n  const [direction, setDirection] = useState<'left' | 'right' | ''>('');\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (direction === 'left' || direction === 'right') {\r\n      handleScrollClick(direction);\r\n    }\r\n  }, [direction, handleScrollClick]);\r\n\r\n  const handleIsOpen = useCallback(() => {\r\n    if (isOpen) {\r\n      interval = setInterval(() => {\r\n        handleScroll();\r\n      }, 25);\r\n    }\r\n  }, [isOpen, interval]);\r\n\r\n  const handleClose = () => {\r\n    setDirection('');\r\n    clearInterval(interval);\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsOpen();\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleClose();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <HStack justify='space-between' p={2}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='2xl'\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n\r\n      {/* Scroll buttons */}\r\n      {!utils.handleIsTouchDevice() && (\r\n        <HStack spacing={2}>\r\n          {/* Maybe add an auto scroll button */}\r\n          <Tooltip\r\n            aria-label='Scroll left'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll left (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.left}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll left'\r\n              isDisabled={isLoading || scrollButtons.left}\r\n              icon={ArrowBackOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isOpen) {\r\n                  onOpen();\r\n                  setDirection('left');\r\n                }\r\n              }}\r\n              onClick={() => handleClose()}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n          <Tooltip\r\n            aria-label='Scroll right'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll right (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.right}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll right'\r\n              isDisabled={isLoading || scrollButtons.right}\r\n              icon={ArrowForwardOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isOpen) {\r\n                  onOpen();\r\n                  setDirection('right');\r\n                }\r\n              }}\r\n              onClick={() => handleClose()}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n        </HStack>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItem, ListModal, DescriptionModal, List, Theme } from './types';\r\n\r\nexport const defaultListsModal = {\r\n  open: false,\r\n  item: undefined\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: [],\r\n    liked: [],\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        date: moment(new Date()).toISOString(),\r\n        results: []\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultListsModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: false,\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItem[]>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItem[]>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    },\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setTheme,\r\n  setRecentSearches,\r\n  setRecentlyViewed,\r\n  setLiked,\r\n  setLists,\r\n  toggleList,\r\n  toggleDescription,\r\n  toggleDisplay,\r\n  toggleSplashscreen\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Genre, MediaType } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @param mediaType - Type of genres\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  handleIsTouchDevice: (): boolean => {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param section - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (section === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleParseDurationForFramer: (time: number): number => {\r\n    return time / 1000;\r\n  },\r\n\r\n  /**\r\n   * This method will return the proper typed button color depending on the color passed\r\n   *\r\n   * @param color - Current user selected color from display modal\r\n   * @returns - Proper typed color to be used in IconButton/Button\r\n   */\r\n  handleReturnColor: (color: unknown): ButtonProps['color'] => {\r\n    switch (color) {\r\n      case 'orange':\r\n        return 'orange';\r\n      case 'yellow':\r\n        return 'yellow';\r\n      case 'green':\r\n        return 'green';\r\n      case 'teal':\r\n        return 'teal';\r\n      case 'cyan':\r\n        return 'cyan';\r\n      case 'purple':\r\n        return 'purple';\r\n      case 'pink':\r\n        return 'pink';\r\n      default:\r\n        return 'blue';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will return a url that will fetch an img from boringavatars\r\n   * boringavatars - https://boringavatars.com/\r\n   *\r\n   * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n   * @param size - Size of poster\r\n   * @param alt - Image alt\r\n   * @returns - boringavatars URL\r\n   */\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`;\r\n    const colors: string = [\r\n      theme.colors.red[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.orange[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.yellow[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.green[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.teal[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.blue[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.cyan[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.purple[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.pink[mediaType === 'person' ? 400 : 200]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param type - Type of image\r\n   * @param breakpoint - Size of user's device\r\n   * @returns - The appropriate size for image poster\r\n   */\r\n  // Set type of breakpoint from theme\r\n  handleReturnImageSize: (\r\n    type: 'poster' | 'backdrop',\r\n    // orientation: 'vertical' | 'horizontal',\r\n    breakpoint: 'xs' | 'sm'\r\n  ): string => {\r\n    switch (type) {\r\n      case 'poster': {\r\n        switch (breakpoint) {\r\n          default:\r\n            return '342';\r\n        }\r\n      }\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from the 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = (props: ButtonProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[colorMode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[colorMode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[colorMode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'xs' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': size === 'md' ? '44px' : 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'base',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n      willChange: 'transform',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'xs' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'xs'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? 'translateY(-2px)' : 'none',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'xs' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.200`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.300`,\r\n            backgroundColor: `${color}.300`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.300`,\r\n            backgroundColor: `${color}.300`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.200`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: `${color}.500`,\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, handleScrollChange } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={2}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        p={2}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { icon, isDisabled = false, isLoading = false, size = 'md', variant = 'contained', ...rest } = props;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[colorMode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[colorMode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[colorMode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'xs' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isLoading = false }: IconButtonProps\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': size === 'xs' ? 'sm' : size === 'lg' ? 'md' : 'base',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n      willChange: 'transform',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: size === 'xs' ? '1px' : '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'xs' || size === 'md' ? theme.space[1] : theme.space[2],\r\n\r\n      transform: variant !== 'icon' ? 'translateY(-2px)' : 'none',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'xs' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes['2xl'] : theme.fontSizes['3xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.200`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.300`,\r\n            backgroundColor: `${color}.300`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.300`,\r\n            backgroundColor: `${color}.300`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.200`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: `${color}.500`,\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, width, closeDelay, openDelay, gutter = 12, span = false, ...rest } = props;\r\n\r\n  return !utils.handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms')}\r\n      hasArrow\r\n      gutter={gutter}\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${colorMode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {span ? <span style={{ width: width || 'auto' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { ReactElement, useState, useCallback, UIEvent } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../Clickable/Button';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport { HorizontalGridProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, title, footer, isLoading, path, onFooterClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [gridRef, setGridRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled = ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setGridRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, UIEvent>) => {\r\n    handleGridRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (gridRef) {\r\n        if (direction === 'left') {\r\n          gridRef.scrollLeft = gridRef.scrollLeft - 10;\r\n        } else {\r\n          gridRef.scrollLeft = gridRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  return (\r\n    <VStack width='100%' align='stretch' backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} spacing={0}>\r\n      {/* Header */}\r\n      <Header\r\n        title={title}\r\n        isLoading={isLoading}\r\n        reset={resetScrollButtons}\r\n        scrollButtons={scrollButtons}\r\n        handleScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Grid */}\r\n      <Grid gridRef={handleGridRef} handleScrollChange={handleScrollChange}>\r\n        {children}\r\n      </Grid>\r\n\r\n      {/* Footer */}\r\n      {path ? (\r\n        <Link to={!isLoading ? path : {}}>\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isFullWidth\r\n            isDisabled={isLoading}\r\n            onClick={onFooterClick ? () => onFooterClick() : undefined}\r\n            variant='text'>\r\n            {footer || `View all ${title}`}\r\n          </Button>\r\n        </Link>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";","export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";","export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";","export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";","export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";","export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";","export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";","export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { children, variant = 'outlined', ...rest } = props;\r\n\r\n  return (\r\n    <Box {...rest} sx={{ ..._.merge(style.card, style[colorMode][variant]) }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: Style;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    width: isFullWidth ? '100%' : 'auto',\r\n    height: 'auto',\r\n\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px',\r\n    borderRadius: 'lg'\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          <VStack spacing={0}>\r\n            <Text\r\n              align='center'\r\n              fontSize='md'\r\n              fontWeight='semibold'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              {label}\r\n            </Text>\r\n            {description ? (\r\n              <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                {description}\r\n              </Text>\r\n            ) : null}\r\n          </VStack>\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";","export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";","export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";","export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";","export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";","export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";","export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";","export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          <VStack spacing={0}>\r\n            <Text\r\n              align='center'\r\n              fontSize='md'\r\n              fontWeight='semibold'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              {label}\r\n            </Text>\r\n            {description ? (\r\n              <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                {description}\r\n              </Text>\r\n            ) : null}\r\n          </VStack>\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { children, isDisabled = false, variant = 'outlined', ...rest } = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(\r\n                style.card.back,\r\n                style.card.disabled,\r\n                style[colorMode].back[variant],\r\n                style[colorMode].disabled[variant]\r\n              )\r\n            }\r\n          : { ..._.merge(style.card.back, style[colorMode].back[variant]) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[colorMode].front[variant]) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false, isLightGray = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'center',\r\n\r\n      willChange: 'transform',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-3px)',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      outlined: {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      outlined: {\r\n        borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n      transparent: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      outlined: {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      outlined: {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      outlined: {\r\n        borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      transparent: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      outlined: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport { setLists, toggleList } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = ({ isDisabled = false, mediaItem, size = 'xs' }: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const list = lists.find((list) => list.results.some((result) => result.id === mediaItem.id));\r\n  const isBookmarked: boolean = list ? list.results.some((result) => result.id === mediaItem.id) : false;\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${mediaItem.title}\" ${mediaItem.mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n          : `Add \"${mediaItem.title}\" ${mediaItem.mediaType} to a list (tooltip)`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${mediaItem.title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n          : `Add \"${mediaItem.title}\" to a list`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${mediaItem.title}\" ${mediaItem.mediaType} from ${\r\n                list?.label ? `\"${list.label}\"` : ''\r\n              } (tooltip)`\r\n            : `Add \"${mediaItem.title}\" ${mediaItem.mediaType} to a list (tooltip)`\r\n        }\r\n        color={isBookmarked ? utils.handleReturnColor(color) : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={\r\n          isBookmarked && list\r\n            ? () =>\r\n                dispatch(\r\n                  setLists(\r\n                    lists.map((paramList) =>\r\n                      paramList.id === list.id\r\n                        ? {\r\n                            ...paramList,\r\n                            results: paramList.results.filter((result) => result.id !== mediaItem.id)\r\n                          }\r\n                        : paramList\r\n                    )\r\n                  )\r\n                )\r\n            : () =>\r\n                dispatch(\r\n                  toggleList({\r\n                    open: true,\r\n                    item: { id: mediaItem.id, title: mediaItem.title || '', mediaType: mediaItem.mediaType }\r\n                  })\r\n                )\r\n        }\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 1000\r\n};\r\n","import { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color): string => {\r\n    switch (color) {\r\n      default:\r\n        return type === 'start' ? 'gray.200' : 'gray.400';\r\n    }\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio, Image as CUIImage } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport Skeleton from '../Skeleton';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoaded, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio\r\n      width={width || '100%'}\r\n      minWidth={width || '100%'}\r\n      maxWidth={width || '100%'}\r\n      ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={isLoaded} borderRadius='base'>\r\n        <CUIImage\r\n          {...rest}\r\n          alt={alt}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/w${size}${src}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc(mediaType, size, alt)}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = ({ isDisabled = false, mediaItem, size = 'xs' }: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const isLiked: boolean = liked.some((like) => like.id === mediaItem.id && like.mediaType === mediaItem.mediaType);\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isLiked\r\n          ? `Dislike \"${mediaItem.title}\" ${mediaItem.mediaType} (tooltip)`\r\n          : `Like \"${mediaItem.title}\" ${mediaItem.mediaType} (tooltip)`\r\n      }\r\n      label={isLiked ? `Dislike \"${mediaItem.title}\"` : `Like \"${mediaItem.title}\"`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isLiked\r\n            ? `Dislike \"${mediaItem.title}\" ${mediaItem.mediaType} (tooltip)`\r\n            : `Like \"${mediaItem.title}\" ${mediaItem.mediaType} (tooltip)`\r\n        }\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={\r\n          isLiked\r\n            ? () => dispatch(setLiked(liked.filter((like) => like.id !== mediaItem.id)))\r\n            : () => dispatch(setLiked([...liked, { id: mediaItem.id, mediaType: mediaItem.mediaType }]))\r\n        }\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { SkeletonText as CUISkeletonText } from '@chakra-ui/react';\r\n\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { children, color = 'gray', noOfLines = 1, ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeletonText\r\n      {...rest}\r\n      {...commonProps}\r\n      noOfLines={noOfLines}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeletonText>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = ({ rating = defaultRating, isLoaded = false }: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['xl'],\r\n    'sm': theme.fontSizes['xl'],\r\n    'md': theme.fontSizes['2xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  // const handleRatingColor = (): 'red' | 'yellow' | 'blue' => {\r\n  //   if (rating.rating) {\r\n  //     if (rating.rating < 4) {\r\n  //       return 'red';\r\n  //     } else if (rating.rating < 7) {\r\n  //       return 'yellow';\r\n  //     } else {\r\n  //       return 'blue';\r\n  //     }\r\n  //   } else return 'yellow';\r\n  // };\r\n\r\n  return (\r\n    // <Tooltip\r\n    //   aria-label='Showing rating information'\r\n    //   label={\r\n    //     <Center>\r\n    //       <VStack spacing={1}>\r\n    //         <CircularProgress\r\n    //           color={`${handleRatingColor()}.400`}\r\n    //           value={rating.rating ? rating.rating * 10 : 0}\r\n    //           size='54px'>\r\n    //           <CircularProgressLabel color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>{`${\r\n    //             rating.rating ? rating.rating * 10 : 'N/A'\r\n    //           }%`}</CircularProgressLabel>\r\n    //         </CircularProgress>\r\n    //         {rating.count ? (\r\n    //           <Text color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n    //             {rating.count}\r\n    //           </Text>\r\n    //         ) : null}\r\n    //       </VStack>\r\n    //     </Center>\r\n    //   }\r\n    //   placement='top'\r\n    //   isDisabled={!rating.rating || !isLoaded}>\r\n    <Center\r\n      backgroundColor='transparent'\r\n      // borderRadius='sm'\r\n      // border='solid2'\r\n      // borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      // py='0.5'\r\n      // px='1'\r\n      p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${iconSize} !important`\r\n        }}\r\n      />\r\n      <SkeletonText isLoaded={isLoaded} ml='0.5'>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['sm', 'sm', 'md', 'md', 'md', 'lg']}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n    // </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mt={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='xs'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='sm'\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBreakpointValue, VStack, HStack } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = (props: VerticalPosterProps): ReactElement => {\r\n  const size = useBreakpointValue({\r\n    'base': 'xs',\r\n    'sm': 'xs',\r\n    'md': 'xs',\r\n    'lg': 'md',\r\n    'xl': 'md',\r\n    '2xl': 'md'\r\n  });\r\n\r\n  const { width, mediaItemID, mediaType, image, rating, title, subtitle, isLoaded } = props;\r\n\r\n  return (\r\n    <Card isDisabled={!isLoaded} isLightGray>\r\n      <VStack\r\n        width={width}\r\n        position='relative'\r\n        spacing={mediaType !== 'person' ? (size === 'sm' ? 0.25 : 0.5) : 1}\r\n        p={1}>\r\n        {/* Image */}\r\n        <Image\r\n          orientation='vertical'\r\n          mediaType={mediaType}\r\n          alt={image.alt}\r\n          src={image.src}\r\n          size={image.size}\r\n          isLoaded={isLoaded}\r\n        />\r\n        <VStack width='100%' spacing={mediaType === 'person' ? 1 : 0}>\r\n          {/* Header */}\r\n          {mediaType !== 'person' ? (\r\n            <HStack width='100%' justify='space-between' spacing={0}>\r\n              {/* Rating component */}\r\n              <Rating rating={rating} isLoaded={isLoaded} />\r\n\r\n              <HStack spacing={0}>\r\n                {/* Like component */}\r\n                <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n                {/* List component */}\r\n                <Bookmark isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n              </HStack>\r\n            </HStack>\r\n          ) : null}\r\n          {/* Text */}\r\n          <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n            <Title title={title} isLoaded={isLoaded} />\r\n            <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n          </VStack>\r\n        </VStack>\r\n\r\n        {/* Like component */}\r\n        {mediaType === 'person' ? (\r\n          <HStack\r\n            spacing={0}\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              right: 1\r\n            }}>\r\n            <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n          </HStack>\r\n        ) : null}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={movie.id}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={-1}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalMovie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n","export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport utils from '../../../../common/utils/utils';\r\n// eslint-disable-next-line import/order\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return !isLoading && person ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={person.id}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={-1}\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={show.id}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItemID={-1}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending movies'\r\n        isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n        path={{ pathname: '/trending/movie' }}>\r\n        <HorizontalMovies\r\n          isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n          isError={trendingMovies.isError}\r\n          isSuccess={trendingMovies.isSuccess}\r\n          movies={trendingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Popular TV'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending TV'\r\n        isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n        path={{ pathname: '/trending/tv' }}>\r\n        <HorizontalTV\r\n          isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n          isError={trendingTV.isError}\r\n          isSuccess={trendingTV.isSuccess}\r\n          tv={trendingTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending People'\r\n        isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n        path={{ pathname: '/trending/person' }}>\r\n        <HorizontalPeople\r\n          isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n          isError={trendingPeople.isError}\r\n          isSuccess={trendingPeople.isSuccess}\r\n          people={trendingPeople.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport { toggleDisplayMode } from '../../store/slices/App';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\n\r\nconst DisplayMode = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HStack spacing={1}>\r\n      <Tooltip label='Set display-mode to Grid' placement='bottom'>\r\n        <IconButton\r\n          aria-label='Toggle grid display-mode'\r\n          color={displayMode === 'grid' ? utils.handleReturnColor(color) : 'gray'}\r\n          icon={displayMode === 'grid' ? GridOnTwoToneIcon : GridOnOutlinedIcon}\r\n          onClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\r\n          variant='outlined'\r\n        />\r\n      </Tooltip>\r\n      <Tooltip label='Set display-mode to List' placement='bottom'>\r\n        <IconButton\r\n          aria-label='Toggle list display-mode'\r\n          color={displayMode === 'list' ? utils.handleReturnColor(color) : 'gray'}\r\n          icon={displayMode === 'list' ? ListAltTwoToneIcon : ListAltOutlinedIcon}\r\n          onClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\r\n          variant='outlined'\r\n        />\r\n      </Tooltip>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Collapse in={Boolean(title || header)} style={{ width: '100%' }} unmountOnExit>\r\n      <HStack width='100%' justify={title ? 'space-between' : 'flex-end'} p={[2]}>\r\n        {title ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {title}\r\n          </Text>\r\n        ) : null}\r\n\r\n        {header}\r\n      </HStack>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      <Header title={title} header={header} />\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useMediaQuery,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { children, actions, title, isOpen, onClose, size, ...rest } = props;\r\n\r\n  return (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isXs ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' ? 'none' : 'xl'}\r\n        mx={0}>\r\n        <ModalHeader\r\n          px={3}\r\n          py={1}\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}>\r\n          <HStack justifyContent='space-between'>\r\n            <Text\r\n              align='left'\r\n              fontSize='xl'\r\n              fontWeight='semibold'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              {title}\r\n            </Text>\r\n\r\n            <IconButton aria-label='Close modal?' icon={CloseOutlinedIcon} onClick={() => onClose()} variant='icon' />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            px={3}\r\n            py={1.5}\r\n            borderTop='solid2'\r\n            borderTopColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}>\r\n            <Button onClick={() => onClose()} size='xs' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card color={isActive ? utils.handleReturnColor(color) : 'gray'} isFullWidth onClick={() => onClick(value)} p={4}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { mediaTypes, mediaType, onSetType } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n  };\r\n\r\n  return isXs ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={2}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/User';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, description, isLoaded = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              item: {\r\n                title,\r\n                description\r\n              }\r\n            })\r\n          )\r\n        }>\r\n        {description}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['md', 'lg', 'xl', '2xl']}\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = (props: HorizontalPosterProps): ReactElement => {\r\n  const { mediaItemID, mediaType, image, rating, title, subtitle, description, isLoaded } = props;\r\n\r\n  return (\r\n    <Card isFullWidth isDisabled={!isLoaded} isLightGray>\r\n      <HStack width='100%' position='relative' spacing={[1, 1, 1.5, 1.5, 2, 2]} p={[1, 1, 1.5, 1.5, 2, 2]}>\r\n        {/* Image */}\r\n        <Image\r\n          width={['96px', '120px', '144px', '168px']}\r\n          orientation='vertical'\r\n          mediaType={mediaType}\r\n          alt={image.alt}\r\n          src={image.src}\r\n          size={image.size}\r\n          isLoaded={isLoaded}\r\n        />\r\n        <VStack\r\n          width={['calc(100% - 96px)', 'calc(100% - 120px)', 'calc(100% - 144px)', 'calc(100% - 168px)']}\r\n          alignItems='flex-start'\r\n          spacing={[0.5, 0.5, 1, 1.5, 1.5, 2]}>\r\n          {/* Rating component */}\r\n          {mediaType !== 'person' ? <Rating rating={rating} isLoaded={isLoaded} /> : null}\r\n\r\n          {/* Text */}\r\n          <VStack width='100%' alignItems='flex-start' spacing={isLoaded ? 0 : 1}>\r\n            <Title title={title} isLoaded={isLoaded} />\r\n            <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n          </VStack>\r\n\r\n          <Box width='100%'>\r\n            <Description title={title} description={description} isLoaded={isLoaded} />\r\n          </Box>\r\n        </VStack>\r\n\r\n        {/* Like / List Icon buttons */}\r\n        <HStack\r\n          spacing={0}\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 1,\r\n            right: 1\r\n          }}>\r\n          {/* Like component */}\r\n          <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='md' />\r\n          {/* List component */}\r\n          {mediaType !== 'person' ? (\r\n            <Bookmark isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='md' />\r\n          ) : null}\r\n        </HStack>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <HorizontalPoster\r\n      mediaItemID={movie.id}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      description={movie?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport HorizontalMoviePoster from '../../../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\n\r\nconst Movie = ({ id }: { id: PartialMovie['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  // Fetching movie\r\n  const movie = useQuery(`movie-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialMovie>(`/movie/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalMoviePoster isLoading={movie.isFetching || movie.isLoading} movie={movie.data} />\r\n  ) : (\r\n    <VerticalMoviePoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={movie.isFetching || movie.isLoading}\r\n      movie={movie.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const handleKnownFor = (): string => {\r\n    const knownFor = arraySort(person?.known_for || [], 'vote_average');\r\n    const names: string[] = knownFor.map((item) => item.title || item.name || '');\r\n\r\n    return names.join(', ');\r\n  };\r\n\r\n  return !isLoading && person ? (\r\n    <HorizontalPoster\r\n      mediaItemID={person.id}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      description={handleKnownFor()} // TODO: Add a Link component and on click open item page\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport HorizontalPersonPoster from '../../../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\n\r\nconst Person = ({ id }: { id: PartialPerson['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  // Fetching person\r\n  const person = useQuery(`person-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalPersonPoster isLoading={person.isFetching || person.isLoading} person={person.data} />\r\n  ) : (\r\n    <VerticalPersonPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={person.isFetching || person.isLoading}\r\n      person={person.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <HorizontalPoster\r\n      mediaItemID={show.id}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      description={show?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport HorizontalTVPoster from '../../../../components/TV/Poster/Horizontal';\r\nimport VerticalTVPoster from '../../../../components/TV/Poster/Vertical';\r\n\r\nconst Show = ({ id }: { id: PartialTV['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  // Fetching tv-show\r\n  const show = useQuery(`show-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialTV>(`/tv/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalTVPoster isLoading={show.isFetching || show.isLoading} show={show.data} />\r\n  ) : (\r\n    <VerticalTVPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={show.isFetching || show.isLoading}\r\n      show={show.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport Movie from '../Movie';\r\nimport Person from '../Person';\r\nimport Show from '../Show';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade\r\n      in={(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) || false}\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n            }`}\r\n            footer={`View all ${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/movie' }}>\r\n            <>{movies.map((movie, index) => (index < 20 ? <Movie key={movie.id} id={movie.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/tv' }}>\r\n            <>{tv.map((show, index) => (index < 20 ? <Show key={show.id} id={show.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            footer={`View all ${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/person' }}>\r\n            <>{people.map((person, index) => (index < 20 ? <Person key={person.id} id={person.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, HStack, SimpleGrid, Box } from '@chakra-ui/react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { MediaType } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport DisplayMode from '../../components/DisplayMode';\r\nimport Empty from '../../components/Empty';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport Movie from './components/Movie';\r\nimport Person from './components/Person';\r\nimport Show from './components/Show';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const movies: MediaItem[] = liked.filter((like) => like.mediaType === 'movie') || [];\r\n  const tv: MediaItem[] = liked.filter((like) => like.mediaType === 'tv') || [];\r\n  const people: MediaItem[] = liked.filter((like) => like.mediaType === 'person') || [];\r\n\r\n  useEffect(() => {\r\n    setMediaType(null);\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType === 'movie'\r\n            ? `${movies.length || 0} liked movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`\r\n            : mediaType === 'tv'\r\n            ? `${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`\r\n            : mediaType === 'person'\r\n            ? `${people.length || 0} liked ${\r\n                (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n              }`\r\n            : ''\r\n        }\r\n        header={\r\n          mediaType ? (\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              <DisplayMode />\r\n            </HStack>\r\n          ) : null\r\n        }>\r\n        {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n          mediaType === 'movie' ? (\r\n            movies.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {movies.map((movie) => (\r\n                  <Movie key={movie.id} id={movie.id} />\r\n                ))}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2}>\r\n                <Empty label='You have liked no movie!' variant='outlined' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'tv' ? (\r\n            tv.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {tv.map((show) => (\r\n                  <Show key={show.id} id={show.id} />\r\n                ))}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2}>\r\n                <Empty label='You have no liked no tv show!' variant='outlined' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'person' ? (\r\n            people.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {people.map((person) => (\r\n                  <Person key={person.id} id={person.id} />\r\n                ))}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2}>\r\n                <Empty label='You have no liked nobody!' variant='outlined' />\r\n              </Box>\r\n            )\r\n          ) : (\r\n            <All movies={movies} tv={tv} people={people} />\r\n          )\r\n        ) : (\r\n          <Box width='100%' px={2}>\r\n            <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport HorizontalMoviePoster from '../../../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\n\r\nconst Movie = ({ id }: { id: PartialMovie['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  // Fetching movie\r\n  const movie = useQuery(`movie-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialMovie>(`/movie/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalMoviePoster isLoading={movie.isFetching || movie.isLoading} movie={movie.data} />\r\n  ) : (\r\n    <VerticalMoviePoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={movie.isFetching || movie.isLoading}\r\n      movie={movie.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport HorizontalTVPoster from '../../../../components/TV/Poster/Horizontal';\r\nimport VerticalTVPoster from '../../../../components/TV/Poster/Vertical';\r\n\r\nconst Show = ({ id }: { id: PartialTV['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  // Fetching tv-show\r\n  const show = useQuery(`show-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialTV>(`/tv/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalTVPoster isLoading={show.isFetching || show.isLoading} show={show.data} />\r\n  ) : (\r\n    <VerticalTVPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={show.isFetching || show.isLoading}\r\n      show={show.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport Movie from '../Movie';\r\nimport Show from '../Show';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`}\r\n            footer={`View all ${movies.length || 0} movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            } `}\r\n            isLoading={false}\r\n            path={{ pathname: `/lists/${list.id}/movie` }}>\r\n            <>\r\n              {movies.map((movie) => (\r\n                <Movie key={movie.id} id={movie.id} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: `/lists/${list.id}/tv` }}>\r\n            <>\r\n              {tv.map((show) => (\r\n                <Show key={show.id} id={show.id} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { id, label, results, isActive = false, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const movies = results.filter((result) => result.mediaType === 'movie').length;\r\n  const tv = results.filter((result) => result.mediaType === 'tv').length;\r\n\r\n  return (\r\n    <Card\r\n      color={location.pathname.includes(id) ? utils.handleReturnColor(color) : 'gray'}\r\n      onClick={!isActive && onClick ? () => onClick(id) : undefined}\r\n      variant='outlined'\r\n      p={4}>\r\n      <VStack spacing={0}>\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {label}\r\n        </Text>\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='xs'\r\n          fontWeight='400'\r\n          textTransform='capitalize'>\r\n          {`${[\r\n            `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n            `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n          ].join(' • ')}`}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../components/Modal';\r\nimport { List } from '../../../../store/slices/User/types';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const handleClick = (id: List['id']): void => {\r\n    history.push({\r\n      pathname: `/lists/${id}`,\r\n      search: queryString.stringify({ ...queryString.parse(history.location.search) })\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, SimpleGrid, Box, ScaleFade } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { MediaType } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport DisplayMode from '../../components/DisplayMode';\r\nimport Empty from '../../components/Empty';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Movie from './components/Movie';\r\nimport Show from './components/Show';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem[]>([]);\r\n  const [tv, setTV] = useState<MediaItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies(activeList.results.filter((like) => like.mediaType === 'movie'));\r\n      setTV(activeList.results.filter((like) => like.mediaType === 'tv'));\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n        <VerticalGrid\r\n          title={\r\n            list\r\n              ? mediaType\r\n                ? mediaType === 'movie'\r\n                  ? `${movies.length || 0} movie${\r\n                      movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n                    } in \"${list.label}\" list`\r\n                  : mediaType === 'tv'\r\n                  ? `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')} in \"${\r\n                      list.label\r\n                    }\" list`\r\n                  : `${[\r\n                      `${movies.length} movie${movies.length === 0 || movies.length > 1 ? 's' : ''}`,\r\n                      `${tv.length} TV show${tv.length === 0 || tv.length > 1 ? 's' : ''}`\r\n                    ].join(' • ')} results in \"${list.label}\" list`\r\n                : `\"${list.label}\" list • Updated ${moment(list.date).fromNow()}`\r\n              : `${lists.length} list${lists.length === 0 || lists.length > 1 ? 's' : ''}`\r\n          }\r\n          header={\r\n            mediaType || (list && lists.length > 1) ? (\r\n              <HStack spacing={2}>\r\n                <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n                  <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                    Change list\r\n                  </Button>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!mediaType} unmountOnExit>\r\n                  <HStack spacing={2}>\r\n                    <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                      Change media-type\r\n                    </Button>\r\n                    <DisplayMode />\r\n                  </HStack>\r\n                </ScaleFade>\r\n              </HStack>\r\n            ) : null\r\n          }>\r\n          {list ? (\r\n            movies.length > 0 || tv.length > 0 ? (\r\n              mediaType === 'movie' ? (\r\n                movies.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {movies.map((movie) => (\r\n                      <Movie key={movie.id} id={movie.id} />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      label={`You have no items in \"${list.label}\" list!`}\r\n                      description={`No movies found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : mediaType === 'tv' ? (\r\n                tv.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {tv.map((show) => (\r\n                      <Show key={show.id} id={show.id} />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      label={`You have no items in \"${list.label}\" list!`}\r\n                      description={`No tv shows found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : (\r\n                <All list={list} movies={movies} tv={tv} />\r\n              )\r\n            ) : (\r\n              <Box width='100%' p={2}>\r\n                <Empty label={`You have no items in \"${list.label}\" list!`} variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : lists && lists.length > 0 ? (\r\n            <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 4]} spacing={2} px={2}>\r\n              {lists.map((list) => (\r\n                <List\r\n                  key={list.id}\r\n                  {...list}\r\n                  onClick={(id: ListType['id']) => history.push({ pathname: `/lists/${id}` })}\r\n                />\r\n              ))}\r\n            </SimpleGrid>\r\n          ) : (\r\n            <Box width='100%' p={2}>\r\n              <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n            </Box>\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={['movie', 'tv']}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/lists' ? '/lists/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular Movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Upcoming Movies'\r\n        isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n        path={{ pathname: '/movies/upcoming' }}>\r\n        <HorizontalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={upcomingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Movies Now Playing'\r\n        isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n        path={{ pathname: '/movies/now-playing' }}>\r\n        <HorizontalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={moviesNowPlaying.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated Movies'\r\n        isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n        path={{ pathname: '/movies/top-rated' }}>\r\n        <HorizontalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={topRatedMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import { Response } from '../types/types';\r\n\r\nconst defaultResponse: Response<any[]> = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0\r\n};\r\n\r\nexport default defaultResponse;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../Card';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title, actions }: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Card isFullWidth variant='outlined' p={2} pt={actions ? 0.75 : 1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          justifyContent='space-between'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          spacing={2}\r\n          pb={actions ? 0.75 : 1.5}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n          {actions}\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='xs'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Departments'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='xs' variant='text'>\r\n              {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {departments.map((department) => (\r\n              <WrapItem key={department.id}>\r\n                <Genre\r\n                  key={department.id}\r\n                  {...department}\r\n                  isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                  onClick={handleDepartmentClick}\r\n                />\r\n              </WrapItem>\r\n            ))}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      px={3}\r\n      py={1.5}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Display Mode'>\r\n          <HStack width='100%' spacing={2}>\r\n            {displayModes.map((displayMode) => (\r\n              <DisplayModeItem\r\n                key={displayMode.value}\r\n                {...displayMode}\r\n                isActive={value === displayMode.value}\r\n                onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='xs'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Container from '../Container';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Genres'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='xs' variant='text'>\r\n              {handleAllLabel()}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {mediaType === 'movie'\r\n              ? movieGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : mediaType === 'tv'\r\n              ? tvGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : null}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Sort by'>\r\n          <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n            {value.sortBy.map((sort) => (\r\n              <SortByItem\r\n                key={sort.value}\r\n                {...sort}\r\n                direction={value.direction}\r\n                onSortChange={handleSortChange}\r\n                onDirectionChange={handleDirectionChange}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack, HStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = ({ mediaType, onFilter }: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: mediaType === 'movie' ? [...movieSortBy] : mediaType === 'tv' ? [...tvSortBy] : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleReset = (): void => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n    dispatch(toggleSortDirection('asc'));\r\n\r\n    onFilter(mediaType === 'movie' ? movieSortBy : mediaType === 'tv' ? tvSortBy : peopleSortBy, [], []);\r\n\r\n    form.reset({ ...defaultValues });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? utils.handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <HStack spacing={2}>\r\n            <Button variant='outlined' isDisabled={!isDirty} onClick={() => handleReset()} size='xs'>\r\n              Reset\r\n            </Button>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isDisabled={!isDirty}\r\n              onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n              size='xs'>\r\n              Submit\r\n            </Button>\r\n          </HStack>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={3} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount, total, mediaType, isLoading, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${utils.handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n        Load more\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Movies Now Playing' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {moviesNowPlaying.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n            onFetch={moviesNowPlaying.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {popularMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n            onFetch={popularMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {topRatedMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n            onFetch={topRatedMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Upcoming Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {upcomingMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n            onFetch={upcomingMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport defaultResponse from '../../common/data/response';\r\nimport { movieSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>(defaultResponse);\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'People' : ''} header={<Filters mediaType='person' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalPeople\r\n          isLoading={popularPeople.isLoading || popularPeople.isFetching}\r\n          isError={popularPeople.isError}\r\n          isSuccess={popularPeople.isSuccess}\r\n          people={people.results || []}\r\n        />\r\n\r\n        {popularPeople.hasNextPage && people ? (\r\n          <LoadMore\r\n            amount={people.results.length}\r\n            total={people.total_results}\r\n            mediaType='people'\r\n            isLoading={popularPeople.isLoading || popularPeople.isFetching}\r\n            onFetch={popularPeople.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, ListItem, Badge, Text, Kbd, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, label, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isHoveringDelete, setIsHoveringDelete] = useState<boolean>(false);\r\n\r\n  const handleSearch = (): void => {\r\n    if (type === 'isKeyword' && onSearch) {\r\n      onSearch(label);\r\n    } else {\r\n      const search = { query: label, page: 1, mediaType };\r\n\r\n      history.push({\r\n        pathname: history.location.pathname,\r\n        search: queryString.stringify(_.omit(search, 'page'))\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 0.25}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' ? () => handleSearch() : undefined}\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        isLoaded={state === 'isLoaded'}>\r\n        <HStack spacing={1}>\r\n          {mediaType ? (\r\n            <Badge colorScheme={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}>\r\n              {mediaType}\r\n            </Badge>\r\n          ) : null}\r\n          <Text align='left' fontSize='md'>\r\n            {label}\r\n          </Text>\r\n        </HStack>\r\n      </SkeletonText>\r\n\r\n      <HStack spacing={1}>\r\n        <ScaleFade in={state === 'isFocused'} unmountOnExit>\r\n          <span>\r\n            To select<Kbd>enter</Kbd>\r\n          </span>\r\n        </ScaleFade>\r\n        {type !== 'isKeyword' ? (\r\n          <ScaleFade in={isHovering}>\r\n            <Tooltip label={`Remove \"${label}\"`} placement='top'>\r\n              <IconButton\r\n                aria-label='Remove search'\r\n                icon={ClearOutlinedIcon}\r\n                onClick={() => handleDelete()}\r\n                onMouseEnter={() => setIsHoveringDelete(true)}\r\n                onMouseLeave={() => setIsHoveringDelete(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </ScaleFade>\r\n        ) : null}\r\n      </HStack>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Empty from '../../../Empty';\r\nimport Row from '../Row';\r\n\r\nconst Default = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <VStack\r\n      ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n      alignItems='flex-start'\r\n      spacing={2}\r\n      maxHeight='35vh'\r\n      overflowY='auto'>\r\n      <VStack width='100%' alignItems='flex-start' spacing={1} pr={isOverflown ? 2 : 0}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          Recent searches\r\n        </Text>\r\n        {recentSearches.length > 0 ? (\r\n          _.sortBy(recentSearches, 'date').map((search) => (\r\n            <Row key={search.id} id={search.id} label={search.label} mediaType={search.mediaType} state='isLoaded' />\r\n          ))\r\n        ) : (\r\n          <Empty hasIllustration={false} label='No recent searches' size='xs' />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\n\r\ntype DisplayProps = {\r\n  query: string;\r\n  totalResults?: number;\r\n};\r\n\r\nconst Display = ({ query = '', totalResults = 0 }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'>{`${totalResults} result${totalResults > 1 ? 's' : ''} found`}</Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { ReactElement, useRef, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useOutsideClick,\r\n  VStack,\r\n  Box,\r\n  HStack,\r\n  Input,\r\n  List,\r\n  Icon,\r\n  Collapse,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport Default from './components/Default';\r\nimport Display from './components/Display';\r\nimport Row from './components/Row';\r\nimport { SearchFormProps, Keyword } from './types';\r\n\r\nconst SearchForm = (props: SearchFormProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    query,\r\n    sortBy = undefined,\r\n    genres = undefined,\r\n    departments = undefined,\r\n    refetch = false,\r\n    onQueryChange,\r\n    onMoviesChange,\r\n    onTVChange,\r\n    onPeopleChange,\r\n    onIsLoading,\r\n    onIsFetched\r\n  } = props;\r\n\r\n  const [isLocked, setIsLocked] = useState<boolean>(false);\r\n  const [isHoveringLock, setIsHoveringLock] = useState<boolean>(false);\r\n\r\n  const [isFocused, setIsFocused] = useState<boolean>(false);\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\r\n\r\n  const [localQuery, setLocalQuery] = useState<string>('');\r\n  const [totalResults, setTotalResults] = useState<number | undefined>(undefined);\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', localQuery],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query: localQuery },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: localQuery.length > 0 }\r\n  );\r\n\r\n  const searchMovies = useInfiniteQuery(\r\n    'searchMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onMoviesChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchTV = useInfiniteQuery(\r\n    'searchTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onTVChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchPeople = useInfiniteQuery(\r\n    'searchPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onPeopleChange({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFocus = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleSearchQuery = (query: string): void => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    setLocalQuery(query);\r\n    onQueryChange(query.trim());\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          searchPeople.refetch();\r\n          break;\r\n        case 'tv':\r\n          searchTV.refetch();\r\n          break;\r\n        case 'movie':\r\n          searchMovies.refetch();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  };\r\n\r\n  const handleResetSearch = (): void => {\r\n    setIsLocked(false);\r\n    setIsHoveringLock(false);\r\n    setIsFocused(false);\r\n    setIsHovering(false);\r\n    setHasSubmitted(false);\r\n    setTotalResults(undefined);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: inputRef,\r\n    handler: !isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if ((localQuery && localQuery.length > 0) || (query && query.length > 0)) {\r\n      if (params && params.page && params.mediaType) {\r\n        switch (params.mediaType) {\r\n          case 'person': {\r\n            if (searchPeople.hasNextPage) {\r\n              searchPeople.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'tv': {\r\n            if (searchTV.hasNextPage) {\r\n              searchTV.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'movie': {\r\n            if (searchMovies.hasNextPage) {\r\n              searchMovies.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        handleSearchQuery(localQuery || query);\r\n      }\r\n    } else if (params && params.query && typeof params.query === 'string') {\r\n      handleSearchQuery(params.query);\r\n    }\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'movie' && onIsLoading) {\r\n      onIsLoading(searchMovies.isFetching || searchMovies.isLoading);\r\n    }\r\n  }, [searchMovies.isFetching, searchMovies.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'tv' && onIsLoading) {\r\n      onIsLoading(searchTV.isFetching || searchTV.isLoading);\r\n    }\r\n  }, [searchTV.isFetching, searchTV.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'person' && onIsLoading) {\r\n      onIsLoading(searchPeople.isFetching || searchPeople.isLoading);\r\n    }\r\n  }, [searchPeople.isFetching, searchPeople.isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && (localQuery || query)) {\r\n      const totalMovies =\r\n        searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n          ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalTV =\r\n        searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n          ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalPeople =\r\n        searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n          ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n          : 0;\r\n\r\n      setHasSubmitted(true);\r\n      setTotalResults(totalMovies + totalTV + totalPeople);\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: localQuery || query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess, searchTV.isSuccess, searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    handleResetSearch();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (refetch) {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  }, [refetch]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={1}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        pt={1}\r\n        pb={isFocused || isLocked ? 2 : 1}\r\n        onClick={() => handleSetFocus()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}>\r\n        <HStack\r\n          borderBottom={isFocused || isLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFocused || isLocked ? 1 : 0}\r\n          mb={isFocused || isLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder='Try \"The Godfather\"'\r\n            onFocus={!isHoveringLock && !isLocked ? () => setIsFocused(true) : undefined}\r\n            onBlur={!isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined}\r\n            onKeyPress={(event) => {\r\n              if (event.key === 'Enter' && !hasSubmitted) {\r\n                history.push({\r\n                  pathname: history.location.pathname,\r\n                  search: queryString.stringify({ query: localQuery })\r\n                });\r\n              }\r\n            }}\r\n            onChange={(event) => {\r\n              setLocalQuery(event.target.value);\r\n              setHasSubmitted(false);\r\n\r\n              if (hasSubmitted) {\r\n                searchMovies.remove();\r\n                searchTV.remove();\r\n                searchPeople.remove();\r\n              }\r\n            }}\r\n            variant='unstyled'\r\n            value={localQuery}\r\n          />\r\n          <HStack spacing={0}>\r\n            <ScaleFade in={localQuery.length > 0} unmountOnExit>\r\n              <Tooltip label='Clear search' placement='top' gutter={4}>\r\n                <IconButton\r\n                  aria-label='Clear search'\r\n                  icon={ClearOutlinedIcon}\r\n                  onClick={() => setLocalQuery('')}\r\n                  size='xs'\r\n                  variant='icon'\r\n                />\r\n              </Tooltip>\r\n            </ScaleFade>\r\n            <Tooltip\r\n              label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n              placement='top'\r\n              closeOnClick={false}\r\n              closeOnMouseDown={false}\r\n              gutter={4}\r\n              span>\r\n              <IconButton\r\n                aria-label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n                icon={isLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n                onClick={() => setIsLocked(!isLocked)}\r\n                onMouseEnter={() => setIsHoveringLock(true)}\r\n                onMouseLeave={() => setIsHoveringLock(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </HStack>\r\n        </HStack>\r\n        <Collapse in={isFocused || isLocked} unmountOnExit>\r\n          <List spacing={0}>\r\n            {keywords.isFetching || keywords.isLoading ? (\r\n              [...Array(5)].map((_dummy, index) => (\r\n                <Row key={index} id={`${index}`} label='' state='isLoading' type='isKeyword' />\r\n              ))\r\n            ) : keywords.isSuccess && keywords.data.length > 0 && !hasSubmitted ? (\r\n              keywords.data.map((keyword, index) =>\r\n                index < 5 ? (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={`${keyword.id}`}\r\n                    label={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => {\r\n                      setLocalQuery(query);\r\n\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({ query })\r\n                      });\r\n                    }}\r\n                  />\r\n                ) : null\r\n              )\r\n            ) : (\r\n              <Default />\r\n            )}\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <ScaleFade in={Boolean(totalResults) || hasSubmitted} unmountOnExit style={{ width: '100%' }}>\r\n        <Display query={query} totalResults={totalResults} />\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../components/TV/Grid/Horizontal';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, isLoading = false, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <Fade\r\n      in={\r\n        (movies && movies.results && movies.results.length > 0) ||\r\n        (tv && tv.results && tv.results.length > 0) ||\r\n        (people && people.results && people.results.length > 0) ||\r\n        false\r\n      }\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse\r\n          in={(movies && movies.results && movies.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}>\r\n            <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.results && tv.results.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}>\r\n            <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse\r\n          in={(people && people.results && people.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}>\r\n            <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\n\r\nconst Search = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(\r\n    mediaType === 'movie'\r\n      ? movieSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'tv'\r\n      ? tvSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'person'\r\n      ? peopleSortBy.find((sort) => sort.isActive)\r\n      : undefined\r\n  );\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [refetch, setRefetch] = useState<boolean>(false);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setRefetch(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else {\r\n          setMediaType(null);\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0}>\r\n        <Box width='100%' backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} px={2} pt={4} pb={2}>\r\n          <SearchForm\r\n            query={query}\r\n            sortBy={sortBy}\r\n            genres={genres}\r\n            departments={departments}\r\n            refetch={refetch}\r\n            onQueryChange={(query: string) => setQuery(query)}\r\n            onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n            onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n            onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n            onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            onIsFetched={() => setRefetch(false)}\r\n          />\r\n        </Box>\r\n\r\n        <VerticalGrid\r\n          title={\r\n            query\r\n              ? mediaType === 'movie'\r\n                ? `Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'tv'\r\n                ? `Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'person'\r\n                ? `Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : ''\r\n              : ''\r\n          }\r\n          header={\r\n            <Fade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </Fade>\r\n          }>\r\n          {mediaType === 'movie' && movies ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalMovies isLoading={isLoading} isError={false} isSuccess={true} movies={movies.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType={`movies for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: movies.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'tv' && tv ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalTV isLoading={isLoading} isError={false} isSuccess={true} tv={tv.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType={`tv shows for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: tv.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'person' && people ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalPeople isLoading={isLoading} isError={false} isSuccess={true} people={people.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={people.results.length}\r\n                  total={people.total_results}\r\n                  mediaType={`people for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: people.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : (\r\n            <All query={query} isLoading={isLoading} movies={movies} tv={tv} people={people} />\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          const search = { ...queryString.parse(history.location.search), page: 1, mediaType };\r\n\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(_.omit(search, 'page'))\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport defaultResponse from '../../common/data/response';\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(\r\n    mediaType === 'movie'\r\n      ? movieSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'tv'\r\n      ? tvSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'person'\r\n      ? peopleSortBy.find((sort) => sort.isActive)\r\n      : undefined\r\n  );\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>(defaultResponse);\r\n\r\n  // Fetching trending\r\n  const trending = useInfiniteQuery(\r\n    'trending',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<any[]>>(`/trending/${mediaType}/day`, {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0) || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        switch (mediaType) {\r\n          case 'person': {\r\n            let people: PartialPerson[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              people = [...people, ...page.results];\r\n            });\r\n\r\n            setPeople({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(\r\n                departments && departments.length > 0\r\n                  ? people.filter((person) =>\r\n                      departments.some((department) => person.known_for_department === department.value)\r\n                    )\r\n                  : [...people],\r\n                sortBy?.value || '',\r\n                { reverse: sortDirection === 'desc' }\r\n              ),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n          case 'tv': {\r\n            let tv: PartialTV[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              tv = [...tv, ...page.results];\r\n            });\r\n\r\n            setTV({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(\r\n                genres && genres.length > 0\r\n                  ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                  : [...tv],\r\n                sortBy?.value || '',\r\n                { reverse: sortDirection === 'desc' }\r\n              ),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n          default: {\r\n            let movies: PartialMovie[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              movies = [...movies, ...page.results];\r\n            });\r\n\r\n            setMovies({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(\r\n                genres && genres.length > 0\r\n                  ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                  : [...movies],\r\n                sortBy?.value || '',\r\n                { reverse: sortDirection === 'desc' }\r\n              ),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => {\r\n      trending.refetch();\r\n    }, 0);\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(null);\r\n    setMovies(defaultResponse);\r\n    setTV(defaultResponse);\r\n    setPeople(defaultResponse);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      trending.remove();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  console.log(trending);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Select media-type'\r\n        }\r\n        header={\r\n          <Fade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n            </HStack>\r\n          </Fade>\r\n        }>\r\n        {mediaType ? (\r\n          <VStack width='100%' spacing={4} px={2}>\r\n            {mediaType === 'movie' ? (\r\n              <>\r\n                <VerticalMovies\r\n                  isLoading={trending.isFetching || trending.isLoading}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  movies={movies.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && movies ? (\r\n                  <LoadMore\r\n                    amount={movies.results.length}\r\n                    total={movies.total_results}\r\n                    mediaType='movies'\r\n                    isLoading={trending.isFetching || trending.isLoading}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'tv' ? (\r\n              <>\r\n                <VerticalTV\r\n                  isLoading={trending.isFetching || trending.isLoading}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  tv={tv.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && tv ? (\r\n                  <LoadMore\r\n                    amount={tv.results.length}\r\n                    total={tv.total_results}\r\n                    mediaType='tv shows'\r\n                    isLoading={trending.isFetching || trending.isLoading}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'person' ? (\r\n              <>\r\n                <VerticalPeople\r\n                  isLoading={trending.isFetching || trending.isLoading}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  people={people.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && people ? (\r\n                  <LoadMore\r\n                    amount={people.results.length}\r\n                    total={people.total_results}\r\n                    mediaType='people'\r\n                    isLoading={trending.isFetching || trending.isLoading}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </VStack>\r\n        ) : (\r\n          <Box width='100%' px={2}>\r\n            <Empty\r\n              button={\r\n                <MediaTypes\r\n                  mediaType={mediaType}\r\n                  onSetType={(mediaType: MediaType) =>\r\n                    history.push({\r\n                      pathname: `${history.location.pathname === '/trending' ? '/trending/' : ''}${mediaType}`\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              hasIllustration={false}\r\n              label='Select media type to view data!'\r\n              size='xl'\r\n              variant='outlined'\r\n            />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/trending' ? '/trending/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular TV Shows'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows Airing Today'\r\n        isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n        path={{ pathname: '/tv/airing-today' }}>\r\n        <HorizontalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tvAiringToday.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows on at the moment'\r\n        isLoading={onTV.isLoading || onTV.isFetching}\r\n        path={{ pathname: '/tv/on-tv' }}>\r\n        <HorizontalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={onTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated TV Shows'\r\n        isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n        path={{ pathname: '/tv/top-rated' }}>\r\n        <HorizontalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={topRatedTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows Airing Today' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {tvAiringToday.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n            onFetch={tvAiringToday.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows On At The Moment' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {onTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={onTV.isLoading || onTV.isFetching}\r\n            onFetch={onTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular TV Shows' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {popularTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={popularTV.isLoading || popularTV.isFetching}\r\n            onFetch={popularTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated TV Shows' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {topRatedTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n            onFetch={topRatedTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 64\r\n};\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, useParams, Link } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Params } from './types';\r\n\r\nconst Breadcrumb = ({ breadcrumbs }: { breadcrumbs: BreadcrumbType[] }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme);\r\n\r\n  const { id, mediaType } = useParams<Params>();\r\n  const location = useLocation();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const [state, setstate] = useState<BreadcrumbType[]>([]);\r\n\r\n  useEffect(() => {\r\n    setstate([]);\r\n\r\n    if (location.pathname.includes('lists')) {\r\n      if (id && mediaType) {\r\n        const label =\r\n          mediaType === 'movie'\r\n            ? 'Movies'\r\n            : mediaType === 'tv'\r\n            ? 'TV Shows'\r\n            : mediaType === 'person'\r\n            ? 'People'\r\n            : 'Media-Type';\r\n\r\n        setstate([\r\n          {\r\n            label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n            path: `/lists/${id}`\r\n          },\r\n          {\r\n            label,\r\n            path: `/lists/${id}/${mediaType}`\r\n          }\r\n        ]);\r\n      } else if (id) {\r\n        setstate([\r\n          {\r\n            label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n            path: `/lists/${id}`\r\n          }\r\n        ]);\r\n      }\r\n    } else if (mediaType) {\r\n      const label =\r\n        mediaType === 'movie'\r\n          ? 'Movies'\r\n          : mediaType === 'tv'\r\n          ? 'TV Shows'\r\n          : mediaType === 'person'\r\n          ? 'People'\r\n          : 'Media-Type';\r\n\r\n      setstate([\r\n        {\r\n          label,\r\n          path: location.pathname.includes('trending')\r\n            ? `/trending/${mediaType}`\r\n            : location.pathname.includes('liked')\r\n            ? `/liked/${mediaType}`\r\n            : ''\r\n        }\r\n      ]);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${theme.fontSizes.xl} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {[...breadcrumbs, ...state].map((breadcrumb) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={location.pathname === breadcrumb.path}\r\n          fontSize={['xl']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          {location.pathname === breadcrumb.path ? (\r\n            <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n              {breadcrumb.label}\r\n            </Text>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              as={Link}\r\n              to={breadcrumb.path}\r\n              sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n              {breadcrumb.label}\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium'\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']} !important`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900',\r\n      fontWeight: 'semibold'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TheatersTwoToneIcon from '@material-ui/icons/TheatersTwoTone';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\nimport WhatshotOutlinedIcon from '@material-ui/icons/WhatshotOutlined';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\n\r\nimport { NavItem } from '../../components/NavItems/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    minWidth: '46px',\r\n    minHeight: '46px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n    backgroundColor: `${color}.400`,\r\n    borderColor: `${color}.400`,\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '23px' : size === 'md' ? '45px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n  },\r\n  light: {\r\n    color: 'gray.50'\r\n  },\r\n  dark: {\r\n    color: 'gray.900'\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = ({ label, path, isLastChild = false }: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const location = useLocation();\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack width='100%' spacing='15px'>\r\n        {sidebarMode === 'expanded' ? (\r\n          <Box height='44px' borderLeft='solid2' borderLeftColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n        ) : null}\r\n        <Tooltip\r\n          aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n          width='100%'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={sidebarMode === 'collapsed' ? label : ''}\r\n          placement='right'\r\n          span>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </Tooltip>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useDisclosure,\r\n  VStack,\r\n  HStack,\r\n  Collapse,\r\n  Icon,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { NavItem as NavItemType } from '../../types';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, icon, iconActive, children } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isOpen : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        closeOnClick={false}\r\n        closeOnMouseDown={false}\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        placement='right'\r\n        span>\r\n        <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onClick={isOpen ? () => onClose() : () => onOpen()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='lg' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes['2xl']} !important`,\r\n                    transform: `rotate(${isOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? '31px' : '0px'}\r\n            pr={sidebarMode === 'expanded' ? 2 : '0px'}\r\n            mb={sidebarMode === 'expanded' ? 1 : '0px'}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Logo from '../Logo';\r\nimport NavItem from './components/NavItem';\r\nimport { NavItemsProps, NavItem as NavItemType } from './types';\r\n\r\nconst NavItems = ({ navItems }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      <Box width='100%' height='2px' border='solid1' borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem: NavItemType) => (\r\n          <NavItem key={navItem.label} {...navItem} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack, Box, Fade, Collapse } from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon } from '@material-ui/icons/';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { PartialMovie } from '../../../../../../common/types/movie';\r\nimport { PartialPerson } from '../../../../../../common/types/person';\r\nimport { PartialTV } from '../../../../../../common/types/tv';\r\nimport { Response } from '../../../../../../common/types/types';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport Modal from '../../../../../../components/Modal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport SearchForm from '../../../../../../components/SearchForm';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\n\r\nconst Search = (): ReactElement => {\r\n  const { isOpen: isModalOpen, onOpen: onModalOpen, onClose: onModalClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleResetModal = (): void => {\r\n    setQuery('');\r\n\r\n    setMovies(null);\r\n    setTV(null);\r\n    setPeople(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalOpen) {\r\n      setTimeout(() => {\r\n        handleResetModal();\r\n      }, 500);\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open Search'\r\n        disabled={location.pathname.includes('search')}\r\n        icon={SearchOutlinedIcon}\r\n        onClick={() => onModalOpen()}\r\n        variant='icon'\r\n        style={{ cursor: location.pathname.includes('search') ? 'default' : 'pointer' }}\r\n      />\r\n\r\n      <Modal title='Search' isOpen={isModalOpen} onClose={onModalClose} isCentered scrollBehavior='inside' size='full'>\r\n        <VStack width='100%' spacing={0}>\r\n          <Box width='100%' px={2} pt={4} pb={2}>\r\n            <SearchForm\r\n              query={query}\r\n              onQueryChange={(query: string) => setQuery(query)}\r\n              onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n              onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n              onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n              onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            />\r\n          </Box>\r\n\r\n          <Fade\r\n            in={\r\n              (movies && movies.results && movies.results.length > 0) ||\r\n              (tv && tv.results && tv.results.length > 0) ||\r\n              (people && people.results && people.results.length > 0) ||\r\n              false\r\n            }\r\n            unmountOnExit\r\n            style={{ width: '100%' }}>\r\n            <VStack width='100%' spacing={6} pb={4}>\r\n              {/* Movies */}\r\n              <Collapse\r\n                in={(movies && movies.results && movies.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* TV */}\r\n              <Collapse\r\n                in={(tv && tv.results && tv.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* People */}\r\n              <Collapse\r\n                in={(people && people.results && people.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n            </VStack>\r\n          </Fade>\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon, Text, Link } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { UserLink as UserLinkType } from '../../types';\r\nimport useStyles from './styles';\r\n\r\nconst UserLink = (props: UserLinkType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { label, path, icon, iconActive, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return path ? (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='flex-start'\r\n        px={2}\r\n        py={1}\r\n        spacing={1}\r\n        sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Link>\r\n  ) : (\r\n    <HStack\r\n      width='100%'\r\n      justifyContent='flex-start'\r\n      px={2}\r\n      py={1}\r\n      spacing={1}\r\n      onClick={onClick ? () => onClick() : undefined}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n      <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n        {label}\r\n      </Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default UserLink;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    link: Style;\r\n    container: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): NavItemStyle => ({\r\n  common: {\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    },\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { toggleDisplay } from '../../../../../../store/slices/User';\r\nimport UserLink from './components/UserLink';\r\nimport { UserLink as UserLinkType } from './types';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLinks: UserLinkType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink: UserLinkType) => (\r\n                <UserLink key={userLink.label} {...userLink} />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, Fade } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Breadcrumb from './components/Breadcrumb';\r\nimport Menu from './components/Menu';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\n\r\ntype HeaderProps = { width: string; left: string; breadcrumbs: BreadcrumbType[] };\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMdUp] = useMediaQuery('(min-width: 600px)');\r\n  const [isLgDown] = useMediaQuery(`(max-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  const { width, left, breadcrumbs } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      <HStack spacing={1}>\r\n        {isLgDown ? <Menu /> : null}\r\n        {isMdUp ? <Breadcrumb breadcrumbs={breadcrumbs} /> : null}\r\n      </HStack>\r\n      <HStack spacing={1}>\r\n        <Fade in={!location.pathname.includes('search')}>\r\n          <Search />\r\n        </Fade>\r\n        <User />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, toggleDescription } from '../../../../../store/slices/User';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.user.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleDescription({ ...defaultListsModal }));\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (descriptionModal.open) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [descriptionModal.open]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.item ? `\"${descriptionModal.item.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        // TODO: Add Link to view item\r\n        <Button color={utils.handleReturnColor(color)} onClick={() => handleClose()} size='xs'>\r\n          {`View \"${descriptionModal.item?.title || ''}\"`}\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.item?.description || ''}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title }: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Card isFullWidth variant='outlined' p={2} pt={1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={1.5}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Background'>\r\n          <HStack width='100%' spacing={2}>\r\n            {backgrounds.map((background) => (\r\n              <BackgroundItem\r\n                key={background.value}\r\n                {...background}\r\n                color={color}\r\n                isActive={value === background.value}\r\n                onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, value, isActive, onClick } = props;\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      span>\r\n      <Card\r\n        color={isActive ? utils.handleReturnColor(value) : 'gray'}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        variant='outlined'\r\n        p={2}>\r\n        <VStack spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: colorMode === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Color'>\r\n          <SimpleGrid width='100%' minChildWidth='20%' spacing={2}>\r\n            {colors.map((color, index) => (\r\n              <ColorItem\r\n                key={index}\r\n                {...color}\r\n                isActive={color.value === value}\r\n                onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </SimpleGrid>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { setTheme, toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.user.ui.isDisplayModalOpen);\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    setTimeout(() => {\r\n      handleClose();\r\n\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n\r\n      dispatch(toggleSplashscreen(false));\r\n    }, 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDisplayModalOpen) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [isDisplayModalOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='xs'>\r\n          Save\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../../../components/Modal';\r\nimport { setLists } from '../../../../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: []\r\n        }\r\n      ])\r\n    );\r\n\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    if (!isDirty) {\r\n      form.reset({ ...defaultValues });\r\n      onClose();\r\n    }\r\n\r\n    // Toggle alert if has unsaved data!\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='xs'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${results.length > 0 ? `${results.length} items  • ` : ''}${\r\n              results.length > 0 ? 'Updated' : 'Created'\r\n            } ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, setLists, toggleList } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\nimport CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isListsOpen, onOpen: onListsOpen, onClose: onListsClose } = useDisclosure();\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal = useSelector((state) => state.user.ui.listsModal);\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.item && listsModal.item.id && listsModal.item.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      const id = listsModal.item.id;\r\n      const mediaType = listsModal.item.mediaType;\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) =>\r\n          updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: [...updatedList.results, { id, mediaType }]\r\n              }\r\n            : updatedList\r\n        );\r\n      });\r\n\r\n      setSelected([]);\r\n      dispatch(setLists([...updatedLists]));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleList({ ...defaultListsModal }));\r\n    onListsClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listsModal.open) {\r\n      onListsOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [listsModal.open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add ${listsModal.item ? `\"${listsModal.item.title}\"` : 'this item'} to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleSaveItem()} size='xs'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => onCreateListOpen()} size='xs'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={isListsOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Modal as CUIModal, ModalContent, ModalBody, Center, Box } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/User';\r\nimport useStyles from './styles';\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.user.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleSplashscreen(false));\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <CUIModal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody p={0}>\r\n          <Center width='100%' height='100vh' p={3}>\r\n            <MotionBox\r\n              animate={{ backgroundPosition: ['0%', '25%', '50%', '75%', '100%', '75%', '50%', '25%', '0%'] }}\r\n              transition={{\r\n                duration: 10,\r\n                ease: 'easeInOut',\r\n                repeat: 'Infinity',\r\n                repeatType: 'loop',\r\n                repeatDelay: 1\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n          </Center>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n","import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Center, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth } from './common/data/sidebar';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Header from './components/Header';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Sidebar from './components/Sidebar';\r\nimport { LayoutProps, GenreResponse } from './types';\r\n\r\nconst Layout = ({ children, breadcrumbs }: LayoutProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>('266px');\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return (\r\n    <>\r\n      <Center overflow='hidden'>\r\n        {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n        <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n          <Header width={width} left={left} breadcrumbs={breadcrumbs} />\r\n          <Box width='100%' maxWidth='100%' position='relative' top='66px' left='0px' pb={4} sx={{ ...transition }}>\r\n            {children}\r\n          </Box>\r\n        </Box>\r\n      </Center>\r\n\r\n      <SplashscreenModal />\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n\r\n      <DescriptionModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport default function useQueriesTyped<TQueries extends readonly UseQueryOptions[]>(\r\n  queries: [...TQueries]\r\n): {\r\n  [ArrayElement in keyof TQueries]: UseQueryResult<\r\n    TQueries[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<TQueries[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n} {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n}\r\n\r\n// Using John Reilly code: https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n","import React, { ComponentType, ReactElement } from 'react';\r\n\r\nimport { useLocation, RouteComponentProps, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport { Breadcrumb } from '../common/types/types';\r\nimport Layout from '../containers/Layout';\r\n\r\ninterface DefaultRouteProps extends RouteProps {\r\n  component: ComponentType<RouteComponentProps | ComponentType>;\r\n  breadcrumbs: Breadcrumb[];\r\n}\r\n\r\nconst DefaultRoute = ({ component: Component, breadcrumbs, ...rest }: DefaultRouteProps): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  sessionStorage.setItem('redirect_to', JSON.stringify(location));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <Layout {...props} breadcrumbs={breadcrumbs}>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Liked from '../pages/Liked';\r\nimport Lists from '../pages/Lists';\r\nimport Movies from '../pages/Movies';\r\nimport MoviesNowPlaying from '../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../pages/Movies/Popular';\r\nimport TopRatedMovies from '../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../pages/Movies/Upcoming';\r\nimport People from '../pages/People';\r\nimport Search from '../pages/Search';\r\nimport Trending from '../pages/Trending';\r\nimport TV from '../pages/TV';\r\nimport TVAiringToday from '../pages/TV/AiringToday';\r\nimport OnTV from '../pages/TV/OnTV';\r\nimport PopularTV from '../pages/TV/Popular';\r\nimport TopRatedTV from '../pages/TV/TopRated';\r\nimport DefaultRoute from './DefaultRoute';\r\n\r\nconst Router = (): ReactElement => {\r\n  const breadcrumbs = {\r\n    home: { label: 'Home', path: '/' },\r\n    liked: { label: 'Liked', path: '/liked' },\r\n    lists: { label: 'Lists', path: '/lists' },\r\n    trending: { label: 'Trending', path: '/trending' },\r\n    movies: { label: 'Movies', path: '/movies' },\r\n    tv: { label: 'TV Shows', path: '/tv' }\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        {/* Home Route */}\r\n        <DefaultRoute exact path='/' component={Home} breadcrumbs={[breadcrumbs.home]} />\r\n\r\n        {/* Liked Routes */}\r\n        <DefaultRoute exact path='/liked' component={Liked} breadcrumbs={[breadcrumbs.home, breadcrumbs.liked]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/liked/:mediaType'\r\n          component={Liked}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.liked]}\r\n        />\r\n\r\n        {/* Lists Routes */}\r\n        <DefaultRoute exact path='/lists' component={Lists} breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]} />\r\n        <DefaultRoute exact path='/lists/:id' component={Lists} breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/lists/:id/:mediaType'\r\n          component={Lists}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]}\r\n        />\r\n\r\n        {/* Search Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/search'\r\n          component={Search}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Search', path: '/search' }]}\r\n        />\r\n\r\n        {/* Trending Routes */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending/:mediaType'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending]}\r\n        />\r\n\r\n        {/* Movies Routes */}\r\n        <DefaultRoute exact path='/movies' component={Movies} breadcrumbs={[breadcrumbs.home, breadcrumbs.movies]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/popular'\r\n          component={PopularMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Popular', path: '/movies/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/upcoming'\r\n          component={UpcomingMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Upcoming', path: '/movies/upcoming' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/now-playing'\r\n          component={MoviesNowPlaying}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Now Playing', path: '/movies/now-playing' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/top-rated'\r\n          component={TopRatedMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Top Rated', path: '/movies/top-rated' }]}\r\n        />\r\n\r\n        {/* TV Routes */}\r\n        <DefaultRoute exact path='/tv' component={TV} breadcrumbs={[breadcrumbs.home, breadcrumbs.tv]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/popular'\r\n          component={PopularTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Popular', path: '/tv/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/airing-today'\r\n          component={TVAiringToday}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Airing Today', path: '/tv/airing-today' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/on-tv'\r\n          component={OnTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'On at the moment', path: '/tv/on-tv' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/top-rated'\r\n          component={TopRatedTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Top Rated', path: '/tv/top-rated' }]}\r\n        />\r\n\r\n        {/* People Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/people'\r\n          component={People}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'People', path: '/people' }]}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Router from '../../routes';\r\nimport theme from '../../theme';\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Router />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}