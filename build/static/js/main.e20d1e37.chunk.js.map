{"version":3,"sources":["common/hooks/useEventListener.ts","common/hooks/useElementSize.ts","common/hooks/useImageOnLoad.ts","common/hooks/useInterval.ts","common/hooks/useQueriesTyped.ts","common/hooks/useSelectorTyped.ts","common/hooks/useTimeout.ts","common/hooks/useWindowSize.ts","common/scripts/axios.ts","store/slices/App/index.ts","store/slices/Options/index.ts","containers/Layout/common/data/dimensions.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/common/data/navItems.ts","components/Clickable/Link/index.tsx","components/Clickable/Link/styles.ts","containers/Layout/components/Footer/components/NavItem/index.tsx","containers/Layout/components/Footer/index.tsx","components/Clickable/IconButton/index.tsx","components/Clickable/IconButton/styles.ts","components/Clickable/Button/index.tsx","components/Clickable/Button/styles.ts","store/slices/Modals/index.tsx","store/slices/User/index.ts","store/rootReducer.ts","store/index.ts","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/sizes.ts","theme/foundations/spacing.ts","theme/foundations/transition.ts","theme/foundations/typography.ts","theme/foundations/z-index.ts","theme/foundations/index.ts","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/utils.ts","components/Tooltip/index.tsx","components/NavItem/components/NavItemChild/index.tsx","components/NavItem/components/NavItemChild/styles.ts","components/NavItem/index.tsx","components/NavItem/styles.ts","containers/Layout/components/Logo/index.tsx","containers/Layout/components/Logo/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","components/Modal/index.tsx","containers/Layout/components/Modals/Confirm/index.tsx","containers/Layout/components/Modals/Description/index.tsx","components/Card/components/Divider/index.tsx","components/Card/components/Footer/index.tsx","components/Card/components/Header/index.tsx","components/Card/index.tsx","components/Card/styles.ts","components/Clickable/Card/index.tsx","components/Clickable/Card/styles.ts","containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx","containers/Layout/components/Modals/Display/components/Background/index.tsx","containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx","containers/Layout/components/Modals/Display/components/Color/index.tsx","containers/Layout/components/Modals/Display/index.tsx","pages/Lists/components/CreateList/validation.ts","pages/Lists/components/CreateList/index.tsx","containers/Layout/components/Modals/Lists/components/List/index.tsx","containers/Layout/components/Modals/Lists/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/utils.ts","components/Skeleton/index.tsx","components/Skeleton/Text/index.tsx","pages/Person/components/Bio/index.tsx","components/Like/index.tsx","pages/Person/components/Details/components/Background/index.tsx","pages/Person/components/Details/components/Date/index.tsx","components/HorizontalScroll/components/Arrow/index.tsx","components/HorizontalScroll/components/Arrow/styles.ts","components/HorizontalScroll/index.tsx","pages/Person/components/Details/components/Departments/index.tsx","components/Image/index.tsx","pages/Person/components/Details/components/Poster/index.tsx","pages/Person/components/Details/components/Socials/components/Link/index.tsx","pages/Person/components/Details/components/Socials/components/Link/styles.ts","pages/Person/components/Details/components/Socials/components/Links/index.tsx","pages/Person/components/Details/components/Socials/index.tsx","pages/Person/components/Details/index.tsx","common/assets/illustrations/empty/blue.svg","common/assets/illustrations/empty/cyan.svg","common/assets/illustrations/empty/green.svg","common/assets/illustrations/empty/orange.svg","common/assets/illustrations/empty/pink.svg","common/assets/illustrations/empty/purple.svg","common/assets/illustrations/empty/teal.svg","common/assets/illustrations/empty/yellow.svg","common/assets/illustrations/empty/index.ts","components/Empty/index.tsx","common/assets/illustrations/error/blue.svg","common/assets/illustrations/error/cyan.svg","common/assets/illustrations/error/green.svg","common/assets/illustrations/error/orange.svg","common/assets/illustrations/error/pink.svg","common/assets/illustrations/error/purple.svg","common/assets/illustrations/error/teal.svg","common/assets/illustrations/error/yellow.svg","common/assets/illustrations/error/index.ts","components/Error/index.tsx","components/Badge/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/MediaItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/Panel/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/index.tsx","pages/Person/components/Filmography/components/QuickToggles/index.tsx","pages/Person/components/Filmography/index.tsx","components/Grid/Horizontal/components/Arrow/index.tsx","components/Grid/Horizontal/components/Grid/index.tsx","components/Grid/Horizontal/index.tsx","components/Bookmark/index.tsx","components/Rating/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","pages/Person/components/KnownFor/index.tsx","pages/Person/components/MediaViewer/components/Actions/index.tsx","pages/Person/components/MediaViewer/components/Gallery/components/Grid/index.tsx","pages/Person/components/MediaViewer/components/Gallery/components/Image/index.tsx","pages/Person/components/MediaViewer/components/Gallery/index.tsx","pages/Person/components/MediaViewer/components/Navigation/index.tsx","pages/Person/components/MediaViewer/components/Viewer/index.tsx","pages/Person/components/MediaViewer/index.tsx","pages/Person/components/Photos/components/Image/index.tsx","pages/Person/components/Photos/index.tsx","pages/Person/index.tsx","containers/Layout/components/Modals/QuickView/components/Poster/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/components/Stats/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/components/Container/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/index.tsx","containers/Layout/components/Modals/QuickView/index.tsx","containers/Layout/components/Modals/Splashscreen/index.tsx","containers/Layout/components/Modals/Splashscreen/styles.ts","pages/Error/components/Code/index.tsx","pages/Error/components/Description/index.tsx","pages/Error/index.tsx","components/Movies/Poster/Vertical/index.tsx","components/Movies/Grid/Horizontal/index.tsx","common/data/departments.ts","components/People/Poster/Vertical/index.tsx","components/People/Grid/Horizontal/index.tsx","components/TV/Poster/Vertical/index.tsx","components/TV/Grid/Horizontal/index.tsx","containers/Page/components/Divider/index.tsx","containers/Page/components/Breadcrumbs/index.tsx","containers/Page/components/Breadcrumbs/styles.ts","containers/Page/components/Title/index.tsx","containers/Page/index.tsx","pages/Home/index.tsx","common/data/sort.ts","components/Filters/components/Departments/components/Department/index.tsx","components/Filters/components/Departments/index.tsx","components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx","components/Filters/components/DisplayMode/index.tsx","components/Filters/components/Genres/components/Genre/index.tsx","components/Filters/components/Genres/index.tsx","components/Filters/components/SortBy/components/SortByItem/index.tsx","components/Filters/components/SortBy/components/SortByItem/styles.ts","components/Filters/components/SortBy/index.tsx","components/Filters/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/MediaTypePicker/components/MediaTypeItem/index.tsx","components/MediaTypePicker/components/MediaTypes/index.tsx","components/MediaTypePicker/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","components/Movies/Poster/Horizontal/index.tsx","components/People/Poster/Horizontal/index.tsx","components/TV/Poster/Horizontal/index.tsx","containers/Page/common/data/breadcrumbs.ts","pages/Liked/components/All/index.tsx","pages/Liked/index.tsx","pages/Lists/components/All/index.tsx","pages/Lists/components/EditList/validation.ts","pages/Lists/components/EditList/index.tsx","pages/Lists/components/Empty/index.tsx","pages/Lists/components/ListInfo/components/Stats/index.tsx","pages/Lists/components/ListInfo/index.tsx","components/Clickable/Radio/index.tsx","components/Clickable/Radio/styles.ts","pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/Lists/components/ListPicker/index.tsx","pages/Lists/components/Toast/index.tsx","pages/Lists/index.tsx","pages/Movies/index.tsx","components/LoadMore/index.tsx","components/Movies/Grid/Vertical/index.tsx","pages/Movies/NowPlaying/index.tsx","pages/Movies/Popular/index.tsx","pages/Movies/TopRated/index.tsx","pages/Movies/Upcoming/index.tsx","components/People/Grid/Vertical/index.tsx","pages/People/index.tsx","components/TV/Grid/Vertical/index.tsx","pages/Search/components/All/components/Movies/index.tsx","pages/Search/components/All/components/People/index.tsx","pages/Search/components/All/components/TV/index.tsx","pages/Search/components/All/index.tsx","pages/Search/components/Form/components/Actions/index.tsx","pages/Search/components/Form/components/Display/index.tsx","pages/Search/components/Form/components/List/index.tsx","pages/Search/components/Form/components/Row/index.tsx","pages/Search/components/Form/components/Row/styles.ts","pages/Search/components/Form/index.tsx","pages/Search/index.tsx","pages/Trending/index.tsx","pages/TV/index.tsx","pages/TV/AiringToday/index.tsx","pages/TV/OnTV/index.tsx","pages/TV/Popular/index.tsx","pages/TV/TopRated/index.tsx","containers/Layout/components/Routes/index.tsx","containers/Layout/components/ScrollToTop/index.tsx","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","containers/App/index.tsx","index.tsx"],"names":["useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useElementSize","elementRef","useState","width","height","size","setSize","updateSize","useCallback","node","offsetWidth","offsetHeight","useImageOnLoad","theme","isLoaded","setIsLoaded","css","thumbnail","filter","opacity","visibility","transition","duration","slower","easing","fullSize","handleIsLoaded","bool","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","useQueriesTyped","queries","useQueries","useSelectorTyped","useSelector","useTimeout","setTimeout","clearTimeout","useWindowSize","windowSize","setWindowSize","innerWidth","innerHeight","handleDelay","response","a","Promise","resolve","_","instance","axios","create","baseURL","process","interceptors","request","use","headers","appSlice","createSlice","name","initialState","data","sortDirection","ui","displayMode","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","sidebarWidth","expanded","collapsed","navItems","label","path","iconActive","HomeTwoToneIcon","icon","HomeOutlinedIcon","SearchTwoToneIcon","SearchOutlinedIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","children","renderChild","TheatersTwoToneIcon","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","Link","props","useTheme","to","isDisabled","isFullWidth","rest","style","faster","textDecoration","boxShadow","useStyles","as","RRDLink","onClick","preventDefault","undefined","sx","NavItem","colorMode","useColorMode","location","useLocation","color","user","isActive","pathname","renderChildren","every","child","alignItems","justifyContent","cursor","align","fontSize","fontWeight","textTransform","_hover","length","map","index","Footer","useMediaQuery","isSm","backgroundColor","spacing","p","mt","navItem","moment","format","IconButton","forwardRef","ref","variant","isLoading","button","back","transform","front","display","borderStyle","borderWidth","borderRadius","padding","space","disabled","fontSizes","xl","light","contained","borderColor","outlined","dark","colorModeProp","mode","merge","_disabled","className","thickness","speed","slow","Button","whiteSpace","sm","md","lg","text","leftIcon","rightIcon","handleReturnSpacing","mr","ml","defaultListsModal","open","title","mediaType","mediaItem","defaultDescriptionModal","defaultConfirmModal","description","submitButton","defaultQuickViewModal","listsModal","descriptionModal","confirmModal","quickViewModal","isDisplayModalOpen","isSplashscreenOpen","modalsSlice","toggleList","toggleDescription","toggleConfirm","toggleQuickView","toggleDisplay","toggleSplashscreen","recentSearches","recentlyViewed","movies","people","liked","lists","uuid","date","Date","toISOString","results","background","userSlice","setTheme","setRecentSearches","setRecentlyViewed","setLiked","setLists","rootReducer","combineReducers","app","appReducer","options","optionsReducer","modals","modalsReducer","userReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","base","full","sizes","container","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","property","common","colors","dimensions","position","typography","fonts","body","heading","mono","zIndices","hide","auto","docked","dropdown","sticky","banner","overlay","toast","modal","popover","skipLink","tooltip","radius","styles","global","fontFamily","bg","overflowX","lineHeight","wordWrap","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","number","string","parseInt","replace","getState","genre","includes","join","navigator","maxTouchPoints","msMaxTouchPoints","section","split","month","find","time","sortBy","departments","hasFilters","isEmpty","alt","Math","floor","random","toString","substring","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","overflow","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","range","amount","Tooltip","closeDelay","openDelay","shouldWrapChildren","utils","arrowSize","normal","hasArrow","gray","NavItemChild","sidebarModeState","isLastChild","sidebarModeProp","useBoolean","isHoveringChild","setIsHoveringChild","link","aria-label","isOpen","placement","gutter","px","py","onMouseEnter","on","onMouseLeave","off","parts","initials","forEach","part","handleGetInitials","isChildrenOpen","setIsChildrenOpen","isHoveringNav","setIsHoveringNav","isHoveringIcon","setIsHoveringIcon","isChildActive","some","isExpanded","main","handleToggleChildren","debounce","toggle","in","unmountOnExit","enter","exit","ChevronRightOutlinedIcon","pl","pr","mb","Logo","minHeight","alignSelf","border","paddingTop","paddingBottom","paddingLeft","paddingRight","NavItems","Menu","useDisclosure","onOpen","onClose","MenuOutlinedIcon","blockScrollOnMount","User","dispatch","useDispatch","userLinks","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","PaletteTwoToneIcon","PaletteOutlinedIcon","minWidth","userLink","Header","isLgUp","useTransitionsStyle","left","maxWidth","top","zIndex","borderBottom","borderBottomColor","Modal","isXs","isMounted","setIsMounted","preserveScrollBarGap","motionPreset","scrollBehavior","m","CloseOutlinedIcon","borderTop","borderTopColor","ConfirmModal","isCentered","DescriptionModal","Divider","footer","Card","box","hasDivider","card","transparent","divider","header","isLightGray","isClickable","omit","BackgroundItem","backgrounds","WbSunnyOutlinedIcon","Brightness2OutlinedIcon","Background","form","watch","control","render","field","pb","pt","setValue","shouldDirty","ColorItem","isHovering","setIsHovering","CheckOutlinedIcon","Color","columns","Display","toggleColorMode","useForm","defaultValues","useFormState","isDirty","dirtyFields","handleClose","reset","handleSubmit","values","newTheme","schema","yup","shape","required","CreateList","reValidateMode","resolver","yupResolver","handleKeyDown","onChange","error","fieldState","isRequired","autoComplete","errorBorderColor","focusBorderColor","isInvalid","Boolean","placeholder","onKeyDown","message","isFullWidthname","List","isSelected","isTruncated","fromNow","CheckBoxTwoToneIcon","CheckBoxOutlineBlankOutlinedIcon","ListsModal","isCreateListOpen","onCreateListOpen","onCreateListClose","selected","setSelected","handleIsSelected","list","handleCloseLists","updatedLists","updatedList","movieMediaItem","dateAdded","showMediaItem","handleSaveItem","fadeDuration","type","Skeleton","commonProps","startColor","endColor","SkeletonText","offsetY","Bio","biography","biographyRef","setIsExpanded","windowWidth","elementHeight","setHeight","handleBiographyRef","handleResize","_dummy","startingHeight","paragraph","Like","buttonType","isHoveringIconButton","setIsHoveringIconButton","isLiked","show","person","handleRemoveLike","updatedLiked","handleLike","personMediaItem","gradient","setGradient","handleReturnGradient","bgGradient","right","socials","bottom","poster","PersonDate","birthday","place_of_birth","deathday","isError","diff","Arrow","arrow","content","pointerEvents","direction","onScrollClick","isMouseDown","setIsMouseDown","_after","_before","ChevronLeftOutlinedIcon","handleOnClick","onMouseDown","handleIsMouseDown","onMouseUp","handleIsMouseUp","defaultScrollButtonsState","HorizontalScroll","containerRef","containerWidth","scrollButtons","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleContainerRef","maxScroll","scrollLeft","isLeftDisabled","isRightDisabled","handleScrollClick","onLoad","onScroll","dummyTextWidths","Departments","department","Image","imageRef","elementWidth","src","fallbackSrc","setFallbackSrc","handleReturnFallbackSrc","String","onError","Poster","useBreakpointValue","onClickPoster","isImageError","setIsImageError","ratio","href","iconComponent","isExternal","ImdbIcon","xmlns","aria-hidden","role","preserveAspectRatio","viewBox","d","fill","Links","facebook_id","FacebookIcon","twitter_id","TwitterIcon","instagram_id","InstagramIcon","imdb_id","Socials","isMd","orientation","orientationProp","Details","profile_path","known_for_department","gender","popularity","adult","Empty","hasIllustration","handleReturnPadding","empty","handleReturnIllustration","Error","Badge","handleReturnColor","handleReturnBackground","MediaItem","subtitle","isBefore","handleIfDateIsFuture","CastMovies","withDate","arraySort","release_date","reverse","withoutDate","handleSort","character","CastTV","first_air_date","episode_count","CrewMovies","job","CrewTV","Panel","total","AccordionItem","accordion","panel","credits","toLowerCase","textAlign","cast","crew","KeyboardArrowDownOutlinedIcon","DummyAccordion","Accordion","DummyAccordionItem","allowMultiple","allowToggle","defaultIndex","indexes","Array","isArray","QuickToggles","onToggleAccordion","spy","smooth","offset","Filmography","isSuccess","expandedAccordions","setExpandedAccordions","_department","handleToggleAccordions","findIndex","paramDepartment","closeOnClick","closeOnMouseDown","ArrowBackOutlinedIcon","ArrowForwardOutlinedIcon","Grid","gridRef","handleScrollChange","HorizontalGrid","handleGridRef","Bookmark","isBookmarked","paramList","handleRemoveBookmark","defaultRating","rating","count","Rating","isHorizontal","iconSize","StarOutlinedIcon","Subtitle","setIsTruncated","handleIsTruncated","Title","VerticalPoster","image","isHoveringPoster","setIsHoveringPoster","isHoveringQuickView","setIsHoveringQuickView","isHoveringLiked","setIsHoveringLiked","isHoveringBookmark","setIsHoveringBookmark","justify","KnownFor","knownFor","Horizontal","Vertical","poster_path","vote_average","vote_count","Actions","onGalleryClick","isFullscreen","setIsFullscreen","isfullscreenNotSupported","setIsfullscreenNotSupported","handleCloseFullscreen","doc","document","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","console","DashboardOutlinedIcon","FullscreenExitOutlinedIcon","FullscreenOutlinedIcon","documentElement","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","handleOpenFullscreen","isSmallMob","GalleryImage","onClickImage","file_path","Gallery","activeIndex","images","Navigation","onNavigation","Viewer","onSwiper","onSlideChange","allowSlideNext","allowSlidePrev","spaceBetween","slidesPerView","swiper","onKeyPress","log","MediaViewer","isGalleryOpen","onGalleryOpen","onGalleryClose","selectedImage","setSwiper","setActiveIndex","handleSlideTo","slideTo","PhotoImage","Photos","_image","handleGetDepartments","push","Person","source","CancelToken","isMediaViewerOpen","onMediaViewerOpen","onMediaViewerClose","useParams","selectedPhoto","setSelectedPhoto","personQuery","useQuery","axiosInstance","get","cancelToken","token","creditsQuery","movieCreditsQuery","tvCreditsQuery","externalIdsQuery","imagesQuery","taggedImagesQuery","handleOnImageClick","filtered","Set","duplicate","has","add","_item","handleGetKnownFor","cancel","isFetching","profiles","Stats","totalMovieCredits","totalTvCredits","totalCrewCredits","stats","wrap","stat","Container","QuickView","MotionBox","motion","Box","Splashscreen","closeOnEsc","closeOnOverlayClick","animate","backgroundPosition","ease","repeat","Infinity","bgSize","bgClip","Code","code","Description","descriptionRef","headerHeight","VerticalMovie","genre_ids","HorizontalMovies","VerticalPerson","HorizontalPeople","VerticalTV","HorizontalTV","Breadcrumbs","iconFontSize","breadcrumbItem","breadcrumbLink","breadcrumbActive","breadcrumbs","separator","breadcrumb","isCurrentPage","Page","Home","popularMovies","trendingMovies","popularTV","trendingTV","trendingPeople","handleRenderTitle","likedListsSortBy","movieSortBy","likedListsMovieSortBy","tvSortBy","likedListsTvSortBy","peopleSortBy","likedListsPeopleSortBy","Department","handleDepartmentClick","getValues","activeDepartment","DisplayModeItem","displayModes","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","DisplayMode","Genre","Genres","movieGenres","tvGenres","handleGenreClick","activeGenre","handleAllLabel","handleAllClick","SortByItem","onSortChange","onDirectionChange","ArrowDownwardOutlinedIcon","SortBy","handleSortChange","paramSort","sort","next","handleDirectionChange","Filters","isLikedLists","onFilter","VisibilityOutlinedIcon","handleSubmitFilters","headerTotal","VerticalGrid","MediaTypeItem","mediaTypesList","MediaTypes","mediaTypes","onSetType","handleClick","mediaTypeItem","MediaTypePicker","HorizontalPoster","isHoveringDescription","setIsHoveringDescription","HorizontalMovie","overview","HorizontalPerson","known_for","home","search","trending","All","Liked","isMediaTypePickerOpen","onMediaTypePickerOpen","onMediaTypePickerClose","history","useHistory","paramMediaType","setMediaType","setMovies","setTV","setPeople","likedBreadcrumb","handleReturnBreadcrumbs","handleHasMediaTypes","filteredMovies","handleFilterMovies","filteredTV","handleFilterTV","filteredPeople","handleFilterPeople","handleReturnMediaTypes","EditList","EmptyList","mediaTypeLabel","totalMovies","totalTvs","ListInfo","isSame","Radio","isChecked","radio","ListItem","isSelectable","onSelected","isHoveringRadio","setIsHoveringRadio","activeList","Toast","onInfo","onEdit","onDelete","InfoTwoToneIcon","EditOutlinedIcon","DeleteOutlineOutlinedIcon","Lists","isListPickerOpen","onListPickerOpen","onListPickerClose","isEditListOpen","onEditListOpen","onEditListClose","isListInfoOpen","onListInfoOpen","onListInfoClose","useToast","setList","handleSetFilters","handleSelectList","handleCloseToast","closeAll","isClosable","listsBreadcrumb","ListPicker","Movies","upcomingMovies","moviesNowPlaying","topRatedMovies","LoadMore","hasNextPage","onFetch","max","round","VerticalMovies","MoviesNowPlaying","setSortBy","setGenres","useInfiniteQuery","pageParam","params","page","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","total_results","moviesBreadcrumb","active","refetch","fetchNextPage","PopularMovies","TopRatedMovies","UpcomingMovies","VerticalPeople","People","setDepartments","popularPeople","peopleBreadcrumb","_genres","stringify","TV","hasQuery","isFormLocked","isHoveringLock","onToggleLock","onHoverLock","onClearQuery","isHoveringClear","setIsHoveringClear","ClearOutlinedIcon","LockOutlinedIcon","LockOpenOutlinedIcon","hasUnsubmitted","totalResults","handleMultiply","handleReturnMediaTypeResults","handleReturnMediaTypeLabel","isOverflown","setIsOverflown","handleIsOverflown","maxHeight","overflowY","Row","onSearch","isHoveringRow","setIsHoveringRow","isHoveringDelete","setIsHoveringDelete","placeholders","Form","inputRef","keywords","submittedQuery","isInputDisabled","onInputKeyPress","onInputChange","onSubmitQuery","setIsFormLocked","setIsHoveringLock","isHoveringForm","setIsHoveringForm","isFormFocused","setIsFormFocused","focus","onFocus","onBlur","keyword","Search","setQuery","setSubmittedQuery","setHasUnsubmitted","setTotalResults","enabled","searchMovies","parse","cacheTime","searchTV","searchPeople","handleSetLocation","Object","assign","handleSubmitQuery","remove","handleClearQuery","target","Trending","handleRefetch","handleDisabledFilters","tvAiringToday","onTV","topRatedTV","TVAiringToday","tvBreadcrumb","OnTV","PopularTV","TopRatedTV","ComponentBox","initial","Routes","scrollingElement","scrollTo","AnimatePresence","exitBeforeEnter","exact","Popular","Upcoming","TopRated","reload","ScrollToTop","setScrollHeight","handleScroll","scroll","scrollTop","screen","ArrowUpwardOutlinedIcon","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","breakpoints","setWidth","setLeft","queryKey","queryFn","basename","Confirm","queryClient","QueryClient","defaultOptions","refetchOnWindowFocus","refetchOnReconnect","retry","App","QueryClientProvider","client","persistor","persistStore","ReactDOM","loading","getElementById"],"mappings":"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","file":"static/js/main.e20d1e37.chunk.js","sourcesContent":["import { RefObject, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-event-listener\r\n */\r\nconst useEventListener = <T extends HTMLElement = HTMLDivElement>(\r\n  eventName: keyof WindowEventMap,\r\n  handler: (event: Event) => void,\r\n  element?: RefObject<T>\r\n): void => {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<(event: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: Event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => targetElement.removeEventListener(eventName, eventListener);\r\n  }, [eventName, element, handler]);\r\n};\r\n\r\nexport default useEventListener;\r\n","import { RefObject, useCallback, useEffect, useState } from 'react';\r\n\r\nimport useEventListener from './useEventListener';\r\n\r\ntype Size = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-element-size\r\n */\r\nconst useElementSize = <T extends HTMLElement = HTMLDivElement>(elementRef: RefObject<T>): Size => {\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const updateSize = useCallback(() => {\r\n    const node = elementRef?.current;\r\n\r\n    if (node) {\r\n      setSize({\r\n        width: node.offsetWidth || 0,\r\n        height: node.offsetHeight || 0\r\n      });\r\n    }\r\n  }, [elementRef]);\r\n\r\n  // Initial size on mount\r\n  useEffect(() => updateSize(), []);\r\n\r\n  useEventListener('resize', updateSize);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useElementSize;\r\n","import { CSSProperties, useState } from 'react';\r\n\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype ImageStyle = {\r\n  thumbnail: CSSProperties;\r\n  fullSize: CSSProperties;\r\n};\r\n\r\ntype ImageOnLoadType = {\r\n  css: ImageStyle;\r\n  isLoaded: boolean;\r\n  handleIsLoaded: (bool: boolean) => void;\r\n};\r\n\r\n/**\r\n * Based on: https://usehooks-typescript.com/react-hook/use-image-on-load\r\n */\r\nconst useImageOnLoad = (theme: Theme): ImageOnLoadType => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const handleIsLoaded = (bool: boolean) => {\r\n    setIsLoaded(bool);\r\n  };\r\n\r\n  const css: ImageStyle = {\r\n    // Thumbnail style.\r\n    thumbnail: {\r\n      filter: 'blur(2.5px)',\r\n      opacity: isLoaded ? 0 : 1,\r\n      visibility: isLoaded ? 'hidden' : 'visible',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    // Full image style.\r\n    fullSize: {\r\n      opacity: isLoaded ? 1 : 0,\r\n      visibility: isLoaded ? 'visible' : 'hidden',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    }\r\n  };\r\n\r\n  return { css, isLoaded, handleIsLoaded };\r\n};\r\n\r\nexport default useImageOnLoad;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-interval\r\n */\r\nconst useInterval = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\ntype Return<T> = {\r\n  [ArrayElement in keyof T]: UseQueryResult<\r\n    T[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<T[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n};\r\n\r\n/**\r\n * https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n */\r\nconst useQueriesTyped = <T extends readonly UseQueryOptions[]>(queries: [...T]): Return<T> => {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n};\r\n\r\nexport default useQueriesTyped;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-timeout\r\n */\r\nconst useTimeout = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the timeout.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useTimeout;\r\n","import { useEffect, useState } from 'react';\r\n\r\ntype WindowSize = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-window-size\r\n */\r\nconst useWindowSize = (): WindowSize => {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n\r\n    // Set size at the first client-side load\r\n    handler();\r\n\r\n    window.addEventListener('resize', handler);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handler);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst handleDelay = async (response: AxiosResponse): Promise<AxiosResponse> => {\r\n  await new Promise((resolve) => _.delay(resolve, 1000));\r\n\r\n  return response;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\ninstance.interceptors.response.use(handleDelay);\r\n\r\nexport default instance;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 58\r\n};\r\n\r\nexport const headerHeight = 66;\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import {\r\n  HomeTwoTone as HomeTwoToneIcon,\r\n  HomeOutlined as HomeOutlinedIcon,\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  SearchTwoTone as SearchTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TheatersTwoTone as TheatersTwoToneIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon,\r\n  WhatshotOutlined as WhatshotOutlinedIcon,\r\n  WhatshotTwoTone as WhatshotTwoToneIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport { NavItem } from '../../../../components/NavItem/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Link as CUILink, useTheme } from '@chakra-ui/react';\r\nimport { Link as RRDLink } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { children, to, isDisabled = false, isFullWidth = false, ...rest } = props;\r\n\r\n  const style = useStyles(theme, isFullWidth);\r\n\r\n  return (\r\n    <CUILink\r\n      {...rest}\r\n      as={RRDLink}\r\n      to={{ ...to }}\r\n      onClick={isDisabled ? (event) => event.preventDefault() : undefined}\r\n      sx={{ ...style }}>\r\n      {children}\r\n    </CUILink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\n\r\nexport default (theme: Theme, isFullWidth = false): Style => ({\r\n  'width': isFullWidth ? '100%' : 'auto',\r\n\r\n  'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n  '&:hover': {\r\n    textDecoration: 'none'\r\n  },\r\n\r\n  '&:focus': {\r\n    boxShadow: 'none'\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, useTheme } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport { NavItem as NavItemProps } from '../../../../../../components/NavItem/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\nconst NavItem = (props: NavItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  return (\r\n    <VStack alignItems='flex-start' justifyContent='flex-start'>\r\n      <Link to={{ pathname: path }} isDisabled={isActive}>\r\n        <Text\r\n          cursor={isActive ? 'default' : 'pointer'}\r\n          align='left'\r\n          color={\r\n            isActive ? `${color}.${colorMode === 'light' ? 400 : 500}` : colorMode === 'light' ? 'gray.400' : 'gray.500'\r\n          }\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='uppercase'\r\n          sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n          _hover={{\r\n            color: isActive\r\n              ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n              : colorMode === 'light'\r\n              ? 'gray.900'\r\n              : 'gray.50'\r\n          }}>\r\n          {label}\r\n        </Text>\r\n      </Link>\r\n\r\n      {children && children.length > 0 && renderChildren\r\n        ? children.map((child, index) => (\r\n            <Link key={index} to={{ pathname: child.path }} isDisabled={location.pathname === child.path}>\r\n              <Text\r\n                cursor={location.pathname === child.path ? 'default' : 'pointer'}\r\n                align='left'\r\n                color={\r\n                  location.pathname === child.path\r\n                    ? `${color}.${colorMode === 'light' ? 400 : 500}`\r\n                    : colorMode === 'light'\r\n                    ? 'gray.400'\r\n                    : 'gray.500'\r\n                }\r\n                fontSize='md'\r\n                fontWeight='medium'\r\n                textTransform='capitalize'\r\n                sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n                _hover={{\r\n                  color:\r\n                    location.pathname === child.path\r\n                      ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n                      : colorMode === 'light'\r\n                      ? 'gray.900'\r\n                      : 'gray.50'\r\n                }}>\r\n                {child.label}\r\n              </Text>\r\n            </Link>\r\n          ))\r\n        : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, HStack, Box, Center, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport navItems from '../../common/data/navItems';\r\nimport NavItem from './components/NavItem';\r\n\r\nconst Footer = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  return (\r\n    <VStack width='100%' backgroundColor={colorMode === 'light' ? 'gray.100' : 'gray.800'} spacing={4} p={4} mt={4}>\r\n      {isSm ? (\r\n        <VStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={4}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={2}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </HStack>\r\n      )}\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <Center width='100%'>\r\n        <Text align='center' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          {`© ${moment().format('YYYY')} EDB, All rights reserved.`}\r\n        </Text>\r\n      </Center>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonRef, IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef<IconButtonRef, IconButtonProps>(function IconButton(props, ref): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    colorMode: colorModeProp,\r\n    icon,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  {\r\n    color = 'gray',\r\n    size = 'md',\r\n    variant = 'contained',\r\n    isLoading = false\r\n  }: Omit<IconButtonProps, 'aria-label' | 'icon'>\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'icon' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'sm' ? theme.space[0.5] : size === 'md' ? theme.space[1] : theme.space[2],\r\n\r\n      transform: variant !== 'icon' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes['2xl'] : theme.fontSizes['3xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonRef, ButtonProps } from './types';\r\n\r\nconst Button = forwardRef<ButtonRef, ButtonProps>(function Button(props, ref): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n      whiteSpace: 'nowrap',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'text' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'sm'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport Button from '../../../components/Clickable/Button';\r\nimport { StateProps, ListModal, DescriptionModal, ConfirmModal, QuickViewModal } from './types';\r\n\r\nexport const defaultListsModal: ListModal = {\r\n  open: false,\r\n  title: '',\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultDescriptionModal: DescriptionModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultConfirmModal: ConfirmModal = {\r\n  open: false,\r\n  title: 'Lorem ipsum',\r\n  description:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n  submitButton: (\r\n    <Button isDisabled size='sm'>\r\n      Close\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport const defaultQuickViewModal: QuickViewModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultDescriptionModal },\r\n    confirmModal: { ...defaultConfirmModal },\r\n    quickViewModal: { ...defaultQuickViewModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: true\r\n  }\r\n};\r\n\r\nconst modalsSlice = createSlice({\r\n  name: 'modals',\r\n  initialState,\r\n  reducers: {\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleConfirm: (state: StateProps, action: PayloadAction<ConfirmModal>) => {\r\n      state.ui.confirmModal = action.payload;\r\n    },\r\n    toggleQuickView: (state: StateProps, action: PayloadAction<QuickViewModal>) => {\r\n      state.ui.quickViewModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleList, toggleDescription, toggleConfirm, toggleQuickView, toggleDisplay, toggleSplashscreen } =\r\n  modalsSlice.actions;\r\n\r\nexport default modalsSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItems, List, Theme } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    liked: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        description:\r\n          \"A collection of movies and tv shows that I'm looking forward to watching and hopefully re-watch 🥳 🤓\",\r\n        date: moment(new Date()).toISOString(),\r\n        results: {\r\n          movies: [],\r\n          tv: []\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTheme, setRecentSearches, setRecentlyViewed, setLiked, setLists } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport modalsReducer from './slices/Modals';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  modals: modalsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['modals']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '640px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","const zIndices = {\r\n  hide: -1,\r\n  auto: 'auto',\r\n  base: 0,\r\n  docked: 10,\r\n  dropdown: 1000,\r\n  sticky: 1100,\r\n  banner: 1200,\r\n  overlay: 1300,\r\n  toast: 1350,\r\n  modal: 1400,\r\n  popover: 1500,\r\n  skipLink: 1600,\r\n  tooltip: 1800\r\n};\r\n\r\nexport default zIndices;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\nimport zIndices from './z-index';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  zIndices,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Department } from '../data/departments';\r\nimport { Genre, MediaType, SortBy } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @param mediaType - Type of genres\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  handleIsTouchDevice: (): boolean => {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param section - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (section === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleParseDurationForFramer: (time: number): number => {\r\n    return time / 1000;\r\n  },\r\n\r\n  handleCheckHasFilters: (sortBy?: SortBy, genres?: Genre[], departments?: Department[]): boolean => {\r\n    let hasFilters = false;\r\n\r\n    if (!hasFilters && sortBy && sortBy.isActive) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(genres)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(departments)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    return hasFilters;\r\n  },\r\n\r\n  /**\r\n   * This method will return the proper typed button color depending on the color passed\r\n   *\r\n   * @param color - Current user selected color from display modal\r\n   * @returns - Proper typed color to be used in IconButton/Button\r\n   */\r\n  handleReturnColor: (color: unknown): ButtonProps['color'] => {\r\n    switch (color) {\r\n      case 'orange':\r\n        return 'orange';\r\n      case 'yellow':\r\n        return 'yellow';\r\n      case 'green':\r\n        return 'green';\r\n      case 'teal':\r\n        return 'teal';\r\n      case 'cyan':\r\n        return 'cyan';\r\n      case 'purple':\r\n        return 'purple';\r\n      case 'pink':\r\n        return 'pink';\r\n      default:\r\n        return 'blue';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will return a url that will fetch an img from boringavatars\r\n   * boringavatars - https://boringavatars.com/\r\n   *\r\n   * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n   * @param size - Size of poster\r\n   * @param alt - Image alt\r\n   * @returns - boringavatars URL\r\n   */\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`.replace(/ /g, '');\r\n    const colors: string = [\r\n      theme.colors.red[400],\r\n      theme.colors.orange[400],\r\n      theme.colors.yellow[400],\r\n      theme.colors.green[400],\r\n      theme.colors.teal[400],\r\n      theme.colors.blue[400],\r\n      theme.colors.cyan[400],\r\n      theme.colors.purple[400],\r\n      theme.colors.pink[400]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, colorMode: colorModeProp, closeDelay, openDelay, shouldWrapChildren = false, ...rest } = props;\r\n\r\n  const mode = colorModeProp || colorMode;\r\n\r\n  return !utils.handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={mode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      hasArrow\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${mode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {shouldWrapChildren ? <span style={{ width: '100%' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = (props: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, isLastChild = false, sidebarMode: sidebarModeProp } = props;\r\n\r\n  const [isHoveringChild, setIsHoveringChild] = useBoolean();\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link to={{ pathname: path || '' }} isFullWidth isDisabled={!path} sx={{ ...style.common.link }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringChild}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        gutter={16}>\r\n        <HStack width='100%' spacing='12px'>\r\n          {sidebarMode === 'expanded' ? (\r\n            <Box width='2px' height='42px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n          ) : null}\r\n\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            onMouseEnter={() => setIsHoveringChild.on()}\r\n            onMouseLeave={() => setIsHoveringChild.off()}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </Tooltip>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useCallback, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  VStack,\r\n  HStack,\r\n  Icon,\r\n  Text,\r\n  Box,\r\n  ScaleFade,\r\n  Collapse\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Link from '../../components/Clickable/Link';\r\nimport { Theme } from '../../theme/types';\r\nimport Tooltip from '../Tooltip';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\nimport { NavItem as NavItemType } from './types';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path, icon, iconActive, sidebarMode, onClick } = props;\r\n\r\n  const [isChildrenOpen, setIsChildrenOpen] = useBoolean();\r\n\r\n  const [isHoveringNav, setIsHoveringNav] = useBoolean();\r\n  const [isHoveringIcon, setIsHoveringIcon] = useBoolean();\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isChildrenOpen : false\r\n  );\r\n\r\n  const handleToggleChildren = useCallback(\r\n    _.debounce(() => {\r\n      setIsChildrenOpen.toggle();\r\n    }, 250),\r\n    [setIsChildrenOpen]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if ((isActive || isChildActive) && !isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [isActive, isChildActive, isChildrenOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      onClick={onClick ? () => onClick() : undefined}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringNav}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        shouldWrapChildren\r\n        gutter={16}>\r\n        <Link\r\n          to={{ pathname: path || '' }}\r\n          isFullWidth\r\n          isDisabled={!path || isHoveringIcon}\r\n          sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onMouseEnter={() => setIsHoveringNav.on()}\r\n            onMouseLeave={() => setIsHoveringNav.off()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='xl' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes.xl} !important`,\r\n                    transform: `rotate(${isChildrenOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                  onClick={() => setIsChildrenOpen.toggle()}\r\n                  onMouseEnter={() => setIsHoveringIcon.on()}\r\n                  onMouseLeave={() => setIsHoveringIcon.off()}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isChildrenOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? 3.5 : 0}\r\n            pr={sidebarMode === 'expanded' ? 2 : 0}\r\n            mb={sidebarMode === 'expanded' ? 1 : 0}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../common/types/types';\r\nimport { Theme as UserTheme } from '../../store/slices/User/types';\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    cursor: 'pointer',\r\n\r\n    width: size === 'sm' ? '40px' : '100px',\r\n    minHeight: '40px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '20px' : size === 'md' ? '40px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: [\r\n      `width, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `padding, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `font-size, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `background-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `border-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    ].join(', ')\r\n  },\r\n  light: {\r\n    'backgroundColor': `${color}.400`,\r\n    'borderColor': `${color}.400`,\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.500`,\r\n      borderColor: `${color}.500`,\r\n      color: 'gray.50'\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': `${color}.500`,\r\n    'borderColor': `${color}.500`,\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.400`,\r\n      borderColor: `${color}.400`,\r\n      color: 'gray.900'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport NavItem from '../../../../components/NavItem';\r\nimport Logo from '../Logo';\r\nimport { NavItemsProps } from './types';\r\n\r\nconst NavItems = ({ navItems, sidebarMode: sidebarModeProp }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Link to={{ pathname: '/' }} style={{ alignSelf: 'flex-start' }}>\r\n        <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      </Link>\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem) => (\r\n          <NavItem key={navItem.label} {...navItem} sidebarMode={sidebarMode} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} blockScrollOnMount={false} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} sidebarMode='expanded' />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport NavItem from '../../../../../../components/NavItem';\r\nimport { NavItem as NavItemType } from '../../../../../../components/NavItem/types';\r\nimport { toggleDisplay } from '../../../../../../store/slices/Modals';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const userLinks: NavItemType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink) => (\r\n                <NavItem key={userLink.label} {...userLink} sidebarMode='expanded' />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Menu from './components/Menu';\r\nimport User from './components/User';\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isLgUp] = useMediaQuery('(min-width: 1280px)');\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const { width, left } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent={isLgUp ? 'flex-end' : 'space-between'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      {!isLgUp ? <Menu /> : null}\r\n\r\n      <User />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  useBoolean,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport useTimeout from '../../common/hooks/useTimeout';\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement | null => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { children, actions, title, colorMode: colorModeProp, isOpen, onClose, size, ...rest } = props;\r\n\r\n  const [isMounted, setIsMounted] = useBoolean();\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n  const transition = `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`;\r\n\r\n  useTimeout(() => setIsMounted.off(), !isOpen ? 1000 : null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsMounted.on();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return isMounted ? (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isXs ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' || isXs ? 'none' : 'xl'}\r\n        m={0}\r\n        sx={{ transition }}>\r\n        <ModalHeader\r\n          px={2}\r\n          py={1.25}\r\n          borderBottom='solid2'\r\n          borderBottomColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n          sx={{ transition }}>\r\n          <HStack justifyContent='space-between'>\r\n            {typeof title !== 'string' ? (\r\n              title\r\n            ) : (\r\n              <Text align='left' fontSize='xl' fontWeight='semibold' color={mode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                {title}\r\n              </Text>\r\n            )}\r\n\r\n            <IconButton\r\n              aria-label='Close modal?'\r\n              colorMode={mode}\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            p={2}\r\n            borderTop='solid2'\r\n            borderTopColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n            sx={{ transition }}>\r\n            <Button colorMode={mode} onClick={() => onClose()} size='sm' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../store/slices/Modals';\r\n\r\nconst ConfirmModal = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  return (\r\n    <Modal\r\n      title={confirmModal.title}\r\n      actions={confirmModal.submitButton}\r\n      isOpen={confirmModal.open}\r\n      isCentered\r\n      onClose={() => dispatch(toggleConfirm({ ...confirmModal, open: false }))}\r\n      size='md'>\r\n      <Text align='left' fontSize='md' fontWeight='normal' p={2}>\r\n        {confirmModal.description}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultDescriptionModal, toggleDescription } from '../../../../../store/slices/Modals';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        <Link to={{ pathname: `/${defaultDescriptionModal.mediaType}/${descriptionModal.mediaItem?.id}` }}>\r\n          <Button color={utils.handleReturnColor(color)} size='sm'>\r\n            {`View ${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : ''}`}\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen={descriptionModal.open}\r\n      onClose={() => dispatch(toggleDescription({ ...defaultDescriptionModal }))}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.mediaItem ? descriptionModal.mediaItem.description : 'N/A'}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport { DividerProps } from './types';\r\n\r\nconst Divider = ({ colorMode }: DividerProps): ReactElement => {\r\n  return <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />;\r\n};\r\n\r\nexport default Divider;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\n\r\nimport { FooterProps } from './types';\r\n\r\nconst Footer = (props: FooterProps): ReactElement => {\r\n  const { footer, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' alignItems='stretch' justifyContent='stretch'>\r\n      {footer}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack, Text } from '@chakra-ui/react';\r\n\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { actions, colorMode, title, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' justifyContent='space-between'>\r\n      {title ? (\r\n        typeof title === 'string' ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n            fontSize='md'\r\n            fontWeight='semibold'>\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          title\r\n        )\r\n      ) : null}\r\n\r\n      {actions ? actions : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Box, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport Divider from './components/Divider';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    children,\r\n    box,\r\n    color,\r\n    colorMode: colorModeProp,\r\n    isFullWidth,\r\n    hasDivider = true,\r\n    variant = 'outlined',\r\n    ...rest\r\n  } = props;\r\n\r\n  const style = useStyles(color, isFullWidth);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <VStack\r\n      {...rest}\r\n      divider={hasDivider ? <Divider colorMode={mode} /> : undefined}\r\n      spacing={0}\r\n      sx={{ ..._.merge(style.card[variant], style[mode][variant]) }}>\r\n      {children.header?.title || children.header?.actions ? (\r\n        <Header {...box?.header} actions={children.header.actions} colorMode={mode} title={children.header.title} />\r\n      ) : null}\r\n\r\n      <Box {...box?.body} width='100%'>\r\n        {children.body}\r\n      </Box>\r\n\r\n      {children.footer ? <Footer {...box?.footer} footer={children.footer} /> : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../common/types/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: VariantStyle;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (color: CardProps['color'] = 'gray', isFullWidth = false): CardStyle => ({\r\n  card: {\r\n    outlined: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'lg',\r\n\r\n      transition: 'none'\r\n    },\r\n    transparent: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      transition: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    isDisabled = false,\r\n    ...rest\r\n  } = _.omit(props, ['color', 'isFullWidth', 'isLightGray', 'isClickable']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(style.card.back, style.card.disabled, style[mode].back, style[mode].disabled)\r\n            }\r\n          : { ..._.merge(style.card.back, style[mode].back) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[mode].front) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype CommonStyle = {\r\n  back: Style;\r\n  front: Style;\r\n  disabled: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle;\r\n  light: Omit<CommonStyle, 'icon'>;\r\n  dark: Omit<CommonStyle, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', isFullWidth = false, isLightGray = false, isClickable = true }: CardProps\r\n): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: isClickable ? 'translateY(0)' : 'translateY(-2px)'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'stretch',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-2px)',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n      backgroundColor: 'gray.50',\r\n      color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'gray.50',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.200',\r\n        backgroundColor: 'gray.50',\r\n        color: 'gray.200'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n      backgroundColor: 'gray.900',\r\n      color: `${color}.500`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.700',\r\n        backgroundColor: 'gray.900',\r\n        color: 'gray.700'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, background, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      colorMode={background}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} colorMode={value} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Background'\r\n            },\r\n\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {backgrounds.map((background) => (\r\n                  <BackgroundItem\r\n                    key={background.value}\r\n                    {...background}\r\n                    color={color}\r\n                    background={value}\r\n                    isActive={value === background.value}\r\n                    onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useBoolean, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, background, isActive, onClick } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      colorMode={background}\r\n      isOpen={isHovering}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      shouldWrapChildren\r\n      gutter={8}>\r\n      <Card\r\n        color={isActive ? utils.handleReturnColor(value) : 'gray'}\r\n        colorMode={background}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        p={2}>\r\n        <VStack width='100%' spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: background === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const background = form.watch('background');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Card\r\n          box={{\r\n            header: { pb: 2 },\r\n            body: { pt: 2 }\r\n          }}\r\n          colorMode={background}\r\n          isFullWidth\r\n          p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Color'\r\n            },\r\n            body: (\r\n              <SimpleGrid width='100%' columns={isSm ? 2 : 4} spacing={2}>\r\n                {colors.map((color, index) => (\r\n                  <ColorItem\r\n                    key={index}\r\n                    {...color}\r\n                    background={background}\r\n                    isActive={color.value === value}\r\n                    onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </SimpleGrid>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport { setTheme } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.modals.ui.isDisplayModalOpen);\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n  const background = form.watch('background');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    handleClose();\r\n\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n    }, 2500);\r\n    setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          colorMode={background}\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Save\r\n        </Button>\r\n      }\r\n      colorMode={background}\r\n      isOpen={isDisplayModalOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement, KeyboardEvent } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    const id = uuid();\r\n\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id,\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose(id);\r\n  };\r\n\r\n  const handleClose = (id?: string): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose(id);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      form.handleSubmit((values) => handleSubmit(values));\r\n    }\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                onKeyDown={handleKeyDown}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack width='calc(100% - 46px)' alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text\r\n              width='auto'\r\n              maxWidth='100%'\r\n              align='left'\r\n              fontSize='xs'\r\n              fontWeight='400'\r\n              textTransform='capitalize'\r\n              isTruncated>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${\r\n              results.movies.length + results.tv.length > 0\r\n                ? `${results.movies.length + results.tv.length} items  • `\r\n                : ''\r\n            }${results.movies.length + results.tv.length > 0 ? 'Updated' : 'Created'} ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport CreateList from '../../../../../pages/Lists/components/CreateList';\r\nimport { defaultListsModal, toggleList } from '../../../../../store/slices/Modals';\r\nimport { ListModal as ListModalType } from '../../../../../store/slices/Modals/types';\r\nimport { setLists } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\n// import CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal: ListModalType = useSelector((state) => state.modals.ui.listsModal);\r\n  const lists: ListType[] = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.mediaItem && listsModal.mediaItem.id && listsModal.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) => {\r\n          const results = { ...updatedList.results };\r\n\r\n          switch (listsModal.mediaType) {\r\n            case 'movie': {\r\n              const movieMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.movies = [...results.movies, movieMediaItem];\r\n              break;\r\n            }\r\n            case 'tv': {\r\n              const showMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.tv = [...results.tv, showMediaItem];\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n\r\n          return updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: { ...results }\r\n              }\r\n            : updatedList;\r\n        });\r\n      });\r\n\r\n      dispatch(setLists([...updatedLists]));\r\n\r\n      handleCloseLists();\r\n    }\r\n  };\r\n\r\n  const handleCloseLists = (): void => {\r\n    setSelected([]);\r\n    dispatch(toggleList({ ...defaultListsModal }));\r\n  };\r\n\r\n  const handleCloseCreateList = (id?: string): void => {\r\n    onCreateListClose();\r\n\r\n    if (id) {\r\n      handleIsSelected(id, false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!listsModal.open) {\r\n      handleCloseLists();\r\n    }\r\n  }, [listsModal.open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add \"${listsModal.title}\" to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleSaveItem()} size='sm'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => onCreateListOpen()} size='sm'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={listsModal.open}\r\n        onClose={() => dispatch(toggleList({ ...defaultListsModal }))}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={handleCloseCreateList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n","import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  // fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  fadeDuration: 0,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 750\r\n};\r\n","import { ColorMode } from '../../../../common/types/types';\r\nimport { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color, colorMode: ColorMode): string => {\r\n    switch (color) {\r\n      default:\r\n        return colorMode === 'light'\r\n          ? type === 'start'\r\n            ? 'gray.200'\r\n            : 'gray.400'\r\n          : type === 'start'\r\n          ? 'gray.700'\r\n          : 'gray.500';\r\n    }\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color, colorMode)}\r\n      endColor={utils.handleReturnColors('end', color, colorMode)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, SlideFade } from '@chakra-ui/react';\r\n\r\nimport Skeleton from '../../Skeleton';\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', isLoaded = false, offsetY, ...rest } = props;\r\n\r\n  return (\r\n    <Skeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      isLoaded={isLoaded}\r\n      startColor={utils.handleReturnColors('start', color, colorMode)}\r\n      endColor={utils.handleReturnColors('end', color, colorMode)}>\r\n      <SlideFade in={isLoaded} offsetY={offsetY}>\r\n        {children}\r\n      </SlideFade>\r\n    </Skeleton>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useBoolean, VStack, Text, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useWindowSize, useElementSize } from '../../../../common/hooks';\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { BioProps } from './types';\r\n\r\nconst Bio = ({ biography, isLoading = false }: BioProps): ReactElement => {\r\n  const biographyRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [isExpanded, setIsExpanded] = useBoolean();\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { height: elementHeight } = useElementSize(biographyRef);\r\n\r\n  const [height, setHeight] = useState<number>();\r\n\r\n  const handleBiographyRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        setHeight(ref.offsetHeight);\r\n      } else {\r\n        handleBiographyRef(biographyRef.current);\r\n      }\r\n    }, 250),\r\n    [biographyRef]\r\n  );\r\n\r\n  const handleResize = useCallback(() => handleBiographyRef(biographyRef.current), [biographyRef, handleBiographyRef]);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { pb: 2 },\r\n        body: { pt: 2 }\r\n      }}\r\n      isFullWidth\r\n      p={2}>\r\n      {{\r\n        header: {\r\n          title: 'Biography',\r\n          actions: (\r\n            <ScaleFade in={(height || 0) > 44} unmountOnExit>\r\n              <Button\r\n                isDisabled={isLoading}\r\n                isFullWidth\r\n                onClick={() => setIsExpanded.toggle()}\r\n                size='sm'\r\n                variant='text'>\r\n                {isExpanded ? 'Collapse' : 'Expand'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: !isLoading ? (\r\n          <Collapse startingHeight={(height || 44) >= 44 ? 44 : elementHeight} in={isExpanded}>\r\n            <VStack ref={biographyRef} width='100%' spacing={2}>\r\n              {biography.split('\\n'[0]).map((paragraph, index) => (\r\n                <Text\r\n                  key={index}\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                  fontSize='md'\r\n                  fontWeight='medium'>\r\n                  {paragraph}\r\n                </Text>\r\n              ))}\r\n            </VStack>\r\n          </Collapse>\r\n        ) : (\r\n          <VStack width='100%' spacing={2}>\r\n            {_.range(0, 3).map((_dummy, index) => (\r\n              <SkeletonText key={index} width='100%' offsetY={6} isLoaded={!isLoading}>\r\n                <Text align='left' fontSize='xs'>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                  dolore magna aliqua.\r\n                </Text>\r\n              </SkeletonText>\r\n            ))}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = (props: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const { buttonType = 'iconButton', isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHoveringIconButton, setIsHoveringIconButton] = useBoolean();\r\n\r\n  const isLiked: boolean =\r\n    liked && mediaItem\r\n      ? mediaType === 'movie'\r\n        ? liked.movies.some((movie) => movie.id === mediaItem.id)\r\n        : mediaType === 'tv'\r\n        ? liked.tv.some((show) => show.id === mediaItem.id)\r\n        : liked.people.some((person) => person.id === mediaItem.id)\r\n      : false;\r\n\r\n  const handleRemoveLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        updatedLiked.movies = updatedLiked.movies.filter((movie) => movie.id !== mediaItem?.id);\r\n        break;\r\n      case 'tv':\r\n        updatedLiked.tv = updatedLiked.tv.filter((show) => show.id !== mediaItem?.id);\r\n        break;\r\n      case 'person':\r\n        updatedLiked.people = updatedLiked.people.filter((person) => person.id !== mediaItem?.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  const handleLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie': {\r\n        const movieMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.movies = [...updatedLiked.movies, movieMediaItem];\r\n        break;\r\n      }\r\n      case 'tv': {\r\n        const showMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.tv = [...updatedLiked.tv, showMediaItem];\r\n        break;\r\n      }\r\n      case 'person': {\r\n        const personMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.people = [...updatedLiked.people, personMediaItem];\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  return buttonType === 'iconButton' ? (\r\n    <Tooltip\r\n      aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n      label={isLiked ? `Dislike \"${title}\"` : `Like \"${title}\"`}\r\n      placement='top'\r\n      isOpen={isHoveringIconButton}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={8}>\r\n      <IconButton\r\n        aria-label={isLiked ? `Dislike \"${title}\" ${mediaType}` : `Like \"${title}\" ${mediaType}`}\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n        onMouseEnter={() => setIsHoveringIconButton.on()}\r\n        onMouseLeave={() => setIsHoveringIconButton.off()}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    <Button\r\n      color={isLiked ? 'red' : 'gray'}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      leftIcon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n      onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n      size={size}\r\n      variant='outlined'>\r\n      Like\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { BackgroundProps } from './types';\r\n\r\nconst Background = ({ children }: BackgroundProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const location = useLocation();\r\n\r\n  const [gradient, setGradient] = useState<string>();\r\n\r\n  /**\r\n   * This method will return 2 colors to be used in a gradient\r\n   */\r\n  const handleReturnGradient = useCallback(\r\n    _.debounce(() => {\r\n      const random: number = Math.floor(Math.random() * 9);\r\n      let gradient = '';\r\n\r\n      switch (random) {\r\n        case 0:\r\n          gradient = 'red.200, red.500';\r\n          break;\r\n        case 1:\r\n          gradient = 'orange.200, orange.500';\r\n          break;\r\n        case 2:\r\n          gradient = 'yellow.200, yellow.500';\r\n          break;\r\n        case 3:\r\n          gradient = 'green.200, green.500';\r\n          break;\r\n        case 4:\r\n          gradient = 'teal.200, teal.500';\r\n          break;\r\n        case 5:\r\n          gradient = 'blue.200, blue.500';\r\n          break;\r\n        case 6:\r\n          gradient = 'cyan.200, cyan.500';\r\n          break;\r\n        case 7:\r\n          gradient = 'purple.200, purple.500';\r\n          break;\r\n        default:\r\n          gradient = 'pink.200, pink.500';\r\n          break;\r\n      }\r\n\r\n      setGradient(gradient);\r\n    }, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleReturnGradient(), [location]);\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height={['150px', '150px', '200px', '250px', '300px', '350px']}\r\n      position='relative'\r\n      bgGradient={`linear(to-r, ${gradient})`}\r\n      borderRadius='md'>\r\n      <Box position='absolute' top={theme.space[2]} right={theme.space[2]}>\r\n        {children.socials}\r\n      </Box>\r\n      <Box\r\n        position='absolute'\r\n        bottom={['-37.5px', '-37.5px', '-50px', '-62.5px', '-75px', '-87.5px']}\r\n        left={['37.5px', '37.5px', '50px', '62.5px', '75px', '87.5px']}>\r\n        {children.poster}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text, ScaleFade } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { DateProps } from './types';\r\n\r\nconst PersonDate = (props: DateProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { birthday, place_of_birth, deathday, isLoading = false, isError = false } = props;\r\n\r\n  return (\r\n    <ScaleFade in={isLoading ? true : !isError && (birthday || '')?.length > 0} unmountOnExit>\r\n      <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n          {`Born on ${moment(birthday || '', 'YYYY-MM-DD').format('LL')}${\r\n            place_of_birth ? ` in ${place_of_birth}` : ''\r\n          }${deathday ? ` - ${moment(deathday || '', 'YYYY-MM-DD').format('LL')}` : ''} (${moment(\r\n            deathday || new Date()\r\n          ).diff(moment(birthday || '', 'YYYY-MM-DD'), 'years')} years old)`}\r\n        </Text>\r\n      </SkeletonText>\r\n    </ScaleFade>\r\n  );\r\n};\r\n\r\nexport default PersonDate;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ChevronLeftOutlined as ChevronLeftOutlinedIcon,\r\n  ChevronRightOutlined as ChevronRightOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport _ from 'lodash';\r\n\r\nimport useInterval from '../../../../common/hooks/useInterval';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport useStyles from './styles';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { direction, isDisabled = false, reset = false, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Center\r\n      width='auto'\r\n      position='absolute'\r\n      left={direction === 'left' ? 0 : undefined}\r\n      right={direction === 'right' ? 0 : undefined}\r\n      zIndex={1}\r\n      backgroundColor='transparent'\r\n      _after={direction === 'left' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}\r\n      _before={direction === 'right' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}>\r\n      <ScaleFade in={!isDisabled} unmountOnExit>\r\n        <Center backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <IconButton\r\n            aria-label={`Scroll ${direction}`}\r\n            icon={direction === 'left' ? ChevronLeftOutlinedIcon : ChevronRightOutlinedIcon}\r\n            onClick={(event: Event) => handleOnClick(event)}\r\n            onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n            onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Center>\r\n      </ScaleFade>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { ArrowProps } from './types';\r\n\r\ntype DirectionStyle = {\r\n  left: Style;\r\n  right: Style;\r\n};\r\n\r\ntype ArrowStyle = {\r\n  arrow: Style;\r\n  light: DirectionStyle;\r\n  dark: DirectionStyle;\r\n};\r\n\r\nexport default (theme: Theme, { isDisabled = false }: ArrowProps): ArrowStyle => ({\r\n  arrow: {\r\n    content: '\"\"',\r\n\r\n    width: '30px',\r\n    height: '30px',\r\n\r\n    display: 'block',\r\n\r\n    pointerEvents: 'none'\r\n  },\r\n  light: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize, useElementSize } from '../../common/hooks';\r\nimport Arrow from './components/Arrow';\r\nimport { HorizontalScrollProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalScroll = (props: HorizontalScrollProps): ReactElement => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { width: containerWidth } = useElementSize(containerRef);\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, width, spacing } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleContainerRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleContainerRef(containerRef.current);\r\n      }\r\n    }, 50),\r\n    [containerRef]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (containerRef && containerRef.current) {\r\n        if (direction === 'left') {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft - 10;\r\n        } else {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [containerRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleContainerRef(containerRef.current);\r\n  }, [windowWidth, containerWidth]);\r\n\r\n  return (\r\n    <HStack width={width || '100%'} maxWidth={width || '100%'} position='relative' spacing={0}>\r\n      {/* Left Arrow Button */}\r\n      <Arrow\r\n        direction='left'\r\n        isDisabled={scrollButtons.left}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Scrollable content */}\r\n      <HStack\r\n        ref={containerRef}\r\n        width='100%'\r\n        maxWidth='100%'\r\n        overflowX='auto'\r\n        spacing={spacing ? spacing : 1}\r\n        onLoad={() => handleContainerRef(containerRef.current)}\r\n        onScroll={() => handleContainerRef(containerRef.current)}\r\n        sx={{\r\n          // CSS to hide scrollbar\r\n          'scrollbarWidth': 'none',\r\n          '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n          }\r\n        }}>\r\n        {children}\r\n      </HStack>\r\n\r\n      {/* Right Arrow Button */}\r\n      <Arrow\r\n        direction='right'\r\n        isDisabled={scrollButtons.right}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalScroll;\r\n","import React, { ReactElement, Fragment } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { DepartmentsProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst Departments = (props: DepartmentsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { departments, isLoading = false } = props;\r\n\r\n  return (\r\n    <HStack maxWidth='100%' spacing={isLoading ? 1 : 0}>\r\n      {!isLoading ? (\r\n        <HorizontalScroll>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Text\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                  fontSize='md'\r\n                  whiteSpace='nowrap'>\r\n                  {department}\r\n                </Text>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <SkeletonText\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='19px'\r\n              offsetY={9.5}\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Image as CUIImage } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useElementSize, useImageOnLoad } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport { Theme } from '../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const imageRef = useRef<HTMLImageElement | null>(null);\r\n\r\n  const { width: elementWidth } = useElementSize(imageRef);\r\n  const { css, handleIsLoaded } = useImageOnLoad(theme);\r\n\r\n  const { width, mediaType, alt, src, size, ...rest } = props;\r\n\r\n  const [fallbackSrc, setFallbackSrc] = useState<string>('');\r\n\r\n  /**\r\n   * This method will return the url for the fallback src\r\n   */\r\n  const handleReturnFallbackSrc = useCallback(\r\n    _.debounce(() => {\r\n      const fallbackSrc: string = utils.handleReturnFallbackSrc(mediaType, String(elementWidth || 780), alt);\r\n\r\n      setFallbackSrc(fallbackSrc);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleReturnFallbackSrc(), []);\r\n\r\n  return (\r\n    <>\r\n      {/* Thumbnail to load faster */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        width={width}\r\n        position='absolute'\r\n        alt={`${alt} thumbnail`}\r\n        onError={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.thumbnail}${src}`}\r\n        fallbackSrc={fallbackSrc}\r\n        sx={{ ...css.thumbnail }}\r\n      />\r\n\r\n      {/* Full size image */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        width={width}\r\n        position='absolute'\r\n        alt={alt}\r\n        onLoad={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.full}${src}`}\r\n        fallbackSrc={fallbackSrc}\r\n        sx={{ ...css.fullSize }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  useBreakpointValue,\r\n  useBoolean,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['6xl'],\r\n    'sm': theme.fontSizes['4xl'],\r\n    'md': theme.fontSizes['5xl'],\r\n    'lg': theme.fontSizes['5xl'],\r\n    'xl': theme.fontSizes['6xl'],\r\n    '2xl': theme.fontSizes['6xl']\r\n  });\r\n\r\n  const { name, path, isLoading = false, isError = false, onClickPoster } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={isSm ? '100%' : ['125px', '125px', '175px', '225px', '275px', '325px']}\r\n      border={isSm ? 'none' : '4px'}\r\n      borderColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRadius={isSm ? 'base' : 'full'}\r\n      onClick={!isLoading && !isError && path ? () => onClickPoster(path) : undefined}\r\n      onMouseEnter={!isLoading && !isError && path ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={!isLoading && !isError && path ? () => setIsHovering.off() : undefined}>\r\n      <AspectRatio ratio={1 / 1}>\r\n        <>\r\n          <Fade in={!isImageError} unmountOnExit>\r\n            <Center\r\n              width='100%'\r\n              height='100%'\r\n              position='absolute'\r\n              zIndex={1}\r\n              borderRadius={isSm ? 'base' : 'full'}\r\n              sx={{\r\n                cursor: 'pointer',\r\n                backgroundColor: isHovering\r\n                  ? colorMode === 'light'\r\n                    ? 'rgba(0, 0, 0, 0.25)'\r\n                    : 'rgba(255, 255, 255, 0.25)'\r\n                  : 'transparent',\r\n                transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n              }}>\r\n              <Fade in={isHovering} unmountOnExit>\r\n                <Icon\r\n                  as={SearchOutlinedIcon}\r\n                  color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n                  sx={{\r\n                    fontSize: `${fontSize} !important`\r\n                  }}\r\n                />\r\n              </Fade>\r\n            </Center>\r\n          </Fade>\r\n          <Skeleton isLoaded={!isLoading} borderRadius={isSm ? 'base' : 'full'}>\r\n            <Image\r\n              width='100%'\r\n              alt={`${name ? `\"${name}\"` : ''} profile poster`}\r\n              mediaType='person'\r\n              onError={() => setIsImageError.on()}\r\n              onLoad={() => setIsImageError.off()}\r\n              src={path || ''}\r\n              size={{\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }}\r\n            />\r\n          </Skeleton>\r\n        </>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link as CUILink, Box, Icon } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { name, type, href, icon, isDisabled = false } = props;\r\n\r\n  const iconComponent = (\r\n    <Skeleton isLoaded={!isDisabled}>\r\n      <Icon as={icon} sx={{ ..._.merge(style.common.icon) }} />\r\n    </Skeleton>\r\n  );\r\n\r\n  return !isDisabled ? (\r\n    <CUILink\r\n      aria-label={`${name ? `\"${name}\"` : ''} ${type} link`}\r\n      href={!isDisabled ? href : ''}\r\n      isExternal\r\n      sx={{ ..._.merge(style.common.link, style[colorMode]) }}>\r\n      {iconComponent}\r\n    </CUILink>\r\n  ) : (\r\n    <Box p={1}>{iconComponent}</Box>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { LinkProps } from './types';\r\n\r\ntype LinkStyle = {\r\n  common: {\r\n    link: Style;\r\n    icon: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color, isDisabled = false }: LinkProps): LinkStyle => ({\r\n  common: {\r\n    link: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'display': 'flex',\r\n      'alignItems': 'center',\r\n      'justifyContent': 'center',\r\n\r\n      'padding': theme.space[1],\r\n\r\n      'opacity': !isDisabled ? 1 : 0.5,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${theme.fontSizes['2xl']} !important`\r\n    }\r\n  },\r\n  light: {\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  },\r\n  dark: {\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useTheme } from '@chakra-ui/react';\r\nimport { Facebook as FacebookIcon, Twitter as TwitterIcon, Instagram as InstagramIcon } from '@material-ui/icons';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Link from '../Link';\r\nimport { LinksProps } from './types';\r\n\r\nconst ImdbIcon = (): ReactElement => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      aria-hidden='true'\r\n      role='img'\r\n      width='24px'\r\n      height='24px'\r\n      preserveAspectRatio='xMidYMid meet'\r\n      viewBox='0 0 448 512'>\r\n      <path\r\n        d='M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9c1.7 7.6 1.4 16.3 1.4 24.4c0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9c-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2c21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7c-6 0-4.9 8.9-4.9 12.7c0 .6-1.1 39.6 1.1 44.7c.8 1.6 2.2 2.4 3.8 2.4c7.8 0 6.2-9 6.2-14.4z'\r\n        fill='currentColor'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Links = (props: LinksProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { socials, name, isLoading = false } = props;\r\n\r\n  return (\r\n    <>\r\n      {/* Facebook */}\r\n      {socials?.facebook_id ? (\r\n        <Link\r\n          color='#4267B2'\r\n          name={name}\r\n          href={`https://www.facebook.com/${socials.facebook_id}`}\r\n          type='Facebook'\r\n          icon={FacebookIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Twitter */}\r\n      {socials?.twitter_id ? (\r\n        <Link\r\n          color='#1DA1F2'\r\n          name={name}\r\n          href={`https://www.twitter.com/${socials.twitter_id}`}\r\n          type='Twitter'\r\n          icon={TwitterIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Instagram */}\r\n      {socials?.instagram_id ? (\r\n        <Link\r\n          color={colorMode === 'light' ? theme.colors.gray[900] : theme.colors.gray[50]}\r\n          name={name}\r\n          href={`https://www.instagram.com/${socials.instagram_id}`}\r\n          type='Instagram'\r\n          icon={InstagramIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* IMDB */}\r\n      {socials?.imdb_id ? (\r\n        <Link\r\n          color='#F5C518'\r\n          name={name}\r\n          href={`https://www.imdb.com/name/${socials.imdb_id}`}\r\n          type='IMDB'\r\n          icon={ImdbIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, HStack, VStack } from '@chakra-ui/react';\r\n\r\nimport Links from './components/Links';\r\nimport { SocialsProps } from './types';\r\n\r\nconst Socials = (props: SocialsProps): ReactElement => {\r\n  const [isMd] = useMediaQuery('(max-width: 768px)');\r\n  const { orientation: orientationProp = 'vertical', ...rest } = props;\r\n\r\n  const orientation = isMd ? 'horizontal' : orientationProp;\r\n\r\n  return orientation === 'vertical' ? (\r\n    <VStack spacing={0}>\r\n      <Links {...rest} />\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' spacing={0}>\r\n      <Links {...rest} />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Like from '../../../../components/Like';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport Background from './components/Background';\r\nimport Date from './components/Date';\r\nimport Departments from './components/Departments';\r\nimport Poster from './components/Poster';\r\nimport Socials from './components/Socials';\r\nimport { DetailsProps } from './types';\r\n\r\nconst width = [\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 225px)',\r\n  'calc(100% - 287.5px)',\r\n  'calc(100% - 350px)',\r\n  'calc(100% - 412.5px)'\r\n];\r\nconst left = ['162.5px', '162.5px', '225px', '287.5px', '350px', '412.5px'];\r\n\r\nconst Details = (props: DetailsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { person, departments, socials, isLoading = false, isError = false, onClickPoster } = props;\r\n\r\n  return (\r\n    <Card isFullWidth p={2}>\r\n      {{\r\n        body: (\r\n          <VStack width='100%' alignItems='stretch' spacing={2}>\r\n            {isSm ? (\r\n              <Poster\r\n                name={person?.name}\r\n                path={person?.profile_path}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n                onClickPoster={onClickPoster}\r\n              />\r\n            ) : (\r\n              <Background alt={`${person?.name || ''} background`} size='780'>\r\n                {{\r\n                  poster: (\r\n                    <Poster\r\n                      name={person?.name}\r\n                      path={person?.profile_path}\r\n                      isLoading={isLoading}\r\n                      isError={isError}\r\n                      onClickPoster={onClickPoster}\r\n                    />\r\n                  ),\r\n\r\n                  socials: <Socials socials={socials} name={person?.name} isLoading={isLoading} />\r\n                }}\r\n              </Background>\r\n            )}\r\n\r\n            <VStack\r\n              width={isSm ? '100%' : width}\r\n              maxWidth={isSm ? '100%' : width}\r\n              position='relative'\r\n              left={isSm ? 0 : left}\r\n              alignItems='flex-start'\r\n              spacing={2}>\r\n              <VStack width='100%' maxWidth='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n                <SkeletonText offsetY={isSm ? 12 : 18} isLoaded={!isLoading}>\r\n                  <Text\r\n                    align='left'\r\n                    color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                    fontSize={isSm ? '2xl' : '4xl'}\r\n                    fontWeight='bold'>\r\n                    {person?.name || 'Unknown'}\r\n                  </Text>\r\n                </SkeletonText>\r\n\r\n                <Departments departments={departments} isLoading={isLoading} />\r\n              </VStack>\r\n\r\n              <Date\r\n                birthday={person?.birthday}\r\n                place_of_birth={person?.place_of_birth}\r\n                deathday={person?.deathday}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n              />\r\n\r\n              <ScaleFade in={!isError} unmountOnExit>\r\n                <Like\r\n                  buttonType='button'\r\n                  isDisabled={isLoading}\r\n                  title={person?.name || ''}\r\n                  mediaType='person'\r\n                  mediaItem={\r\n                    person\r\n                      ? {\r\n                          known_for_department: person.known_for_department,\r\n                          id: person.id,\r\n                          name: person.name,\r\n                          gender: person.gender,\r\n                          popularity: person.popularity,\r\n                          profile_path: person.profile_path,\r\n                          adult: person.adult\r\n                        }\r\n                      : undefined\r\n                  }\r\n                  size='md'\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";","export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";","export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";","export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";","export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";","export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";","export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";","export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";","export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";","export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";","export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";","export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";","export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";","export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";","export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Badge as CUIBadge } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport { BadgeProps } from './types';\r\n\r\nconst Badge = (props: BadgeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, color = 'gray', size = 'sm', ...rest } = props;\r\n\r\n  const handleReturnColor = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '900' : '50'}`;\r\n      default:\r\n        return `${color}.600`;\r\n    }\r\n  };\r\n\r\n  const handleReturnBackground = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '200' : '700'}`;\r\n      default:\r\n        return `${color}.50`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIBadge\r\n      {...rest}\r\n      color={handleReturnColor()}\r\n      background={handleReturnBackground()}\r\n      variant='subtle'\r\n      fontSize={size === 'xs' ? '10px' : size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'lg'}\r\n      fontWeight='bold'\r\n      lineHeight='none'\r\n      px={size === 'xs' || size === 'sm' ? 0.5 : size === 'md' ? 0.75 : 1}\r\n      py={size === 'xs' || size === 'sm' ? 0.25 : size === 'md' ? 0.5 : 0.5}\r\n      sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n      {label}\r\n    </CUIBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, VStack, Center, Link as CUILink, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Link from '../../../../../../../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\nimport { MediaItemProps } from './types';\r\n\r\nconst MediaItem = (props: MediaItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, mediaType, title, subtitle, date } = props;\r\n\r\n  /**\r\n   * This method will check if the media item's date is in the future or its already passed\r\n   *\r\n   * @param date - String\r\n   * @returns - Boolean if media item's date is in the future\r\n   */\r\n  const handleIfDateIsFuture = (date: string): boolean => {\r\n    return moment(new Date()).isBefore(moment(date, 'YYYY-MM-DD'));\r\n  };\r\n\r\n  return (\r\n    <HStack justifyContent='space-between' width='100%' spacing={2}>\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <HStack spacing={2}>\r\n          <Link to={{ pathname: `/${mediaType}/${id}` }}>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={isSm ? 'sm' : 'md'}\r\n              fontWeight='semibold'\r\n              sx={{\r\n                transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n              }}\r\n              _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n              {isSm ? `${title} ` : title}\r\n              {!date ? (\r\n                <Badge\r\n                  label='Announced'\r\n                  color={utils.handleReturnColor(color)}\r\n                  size={isSm ? 'xs' : 'sm'}\r\n                  ml={isSm ? 0 : 1}\r\n                />\r\n              ) : date && handleIfDateIsFuture(date) ? (\r\n                <Badge\r\n                  label='In Production'\r\n                  color={utils.handleReturnColor(color)}\r\n                  size={isSm ? 'xs' : 'sm'}\r\n                  ml={isSm ? 0 : 1}\r\n                />\r\n              ) : null}\r\n            </Text>\r\n          </Link>\r\n        </HStack>\r\n\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n\r\n      {date ? (\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {utils.handleReturnDate(date || '', 'year')}\r\n        </Text>\r\n      ) : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastMovies = ({ movies }: { movies: CastMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CastMovieCredit[] => {\r\n    const withDate: CastMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CastMovieCredit[] = arraySort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.character ? `As ${movie.character}` : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastTV = ({ tv }: { tv: CastTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CastTVCredit[] => {\r\n    const withoutDate: CastTVCredit[] = arraySort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CastTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${\r\n            show.character ? show.character : 'Unknown'\r\n          }`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewMovies = ({ movies }: { movies: CrewMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CrewMovieCredit[] => {\r\n    const withDate: CrewMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CrewMovieCredit[] = arraySort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.job ? movie.job : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewTV = ({ tv }: { tv: CrewTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CrewTVCredit[] => {\r\n    const withoutDate: CrewTVCredit[] = arraySort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CrewTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${show.job}`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\n\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Card from '../../../../../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst Panel = ({ children, title, total }: ListProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth variant='transparent'>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: <Badge label={String(total)} size={isSm ? 'sm' : 'md'} />\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            {children}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  AccordionItem as CUIAccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  VStack,\r\n  Center,\r\n  VisuallyHidden,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../../../components/Badge';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport CastMovies from './components/CastMovies';\r\nimport CastTV from './components/CastTV';\r\nimport CrewMovies from './components/CrewMovies';\r\nimport CrewTV from './components/CrewTV';\r\nimport Panel from './components/Panel';\r\nimport useStyles from './styles';\r\nimport { AccordionItemProps } from './types';\r\n\r\nconst AccordionItem = (props: AccordionItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, credits, isExpanded } = props;\r\n\r\n  return (\r\n    <CUIAccordionItem sx={{ ..._.merge(style.common.accordion, style[colorMode].accordion) }}>\r\n      <VisuallyHidden>\r\n        <span id={`${label.toLowerCase()}-accordion`} />\r\n      </VisuallyHidden>\r\n\r\n      <AccordionButton sx={{ ..._.merge(style.common.button) }}>\r\n        <Text\r\n          textAlign='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={isSm ? 'xl' : '2xl'}\r\n          fontWeight='semibold'>\r\n          {isSm ? `${label} ` : label}\r\n          <Badge\r\n            label={`${\r\n              (credits.cast?.movie?.length || 0) +\r\n              (credits.cast?.tv?.length || 0) +\r\n              (credits.crew?.movie?.length || 0) +\r\n              (credits.crew?.tv?.length || 0)\r\n            }`}\r\n            color={isExpanded ? utils.handleReturnColor(color) : 'gray'}\r\n            size={isSm ? 'md' : 'lg'}\r\n            ml={isSm ? 0 : 2}\r\n          />\r\n        </Text>\r\n        <Icon\r\n          as={KeyboardArrowDownOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ ..._.merge(style.common.icon) }}\r\n        />\r\n      </AccordionButton>\r\n\r\n      <AccordionPanel sx={{ ..._.merge(style.common.panel) }}>\r\n        <VStack width='100%' spacing={6}>\r\n          {label === 'Actor' ? (\r\n            <>\r\n              {credits.cast?.movie && credits.cast?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.cast.movie.length}>\r\n                  <CastMovies movies={credits.cast.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.cast?.tv && credits.cast?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.cast.tv.length}>\r\n                  <CastTV tv={credits.cast.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {credits.crew?.movie && credits.crew?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.crew.movie.length}>\r\n                  <CrewMovies movies={credits.crew.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.crew?.tv && credits.crew?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.crew.tv.length}>\r\n                  <CrewTV tv={credits.crew.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </VStack>\r\n      </AccordionPanel>\r\n    </CUIAccordionItem>\r\n  );\r\n};\r\n\r\nexport default AccordionItem;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { AccordionItemProps } from './types';\r\n\r\ntype Components = {\r\n  accordion: Style;\r\n  button: Style;\r\n  icon: Style;\r\n  panel: Style;\r\n};\r\n\r\ntype AccordionItemStyle = {\r\n  common: Components;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { isExpanded = false }: AccordionItemProps): AccordionItemStyle => ({\r\n  common: {\r\n    accordion: {\r\n      width: '100%',\r\n\r\n      border: 'none',\r\n      borderRadius: 'lg',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n\r\n      'padding': `${theme.space[1.5]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': isExpanded ? 'rotate(360deg)' : 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    panel: {\r\n      padding: `${theme.space[0.5]} ${theme.space[2]} ${theme.space[2]} ${theme.space[2]}`,\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.100' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.100',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.800' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.800',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon } from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(300, 5);\r\n\r\nconst DummyAccordion = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme);\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between' sx={{ ..._.merge(style.common.button) }}>\r\n      <Skeleton width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`} height='16px' />\r\n\r\n      <Icon\r\n        as={KeyboardArrowDownOutlinedIcon}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        sx={{ ..._.merge(style.common.icon) }}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DummyAccordion;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype DummyAccordionItemStyle = {\r\n  common: { button: Style; icon: Style };\r\n};\r\n\r\nexport default (theme: Theme): DummyAccordionItemStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Accordion as CUIAccordion, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport AccordionItem from './components/AccordionItem';\r\nimport DummyAccordionItem from './components/DummyAccordionItem';\r\nimport { AccordionProps } from './types';\r\n\r\nconst Accordion = (props: AccordionProps): ReactElement => {\r\n  const { departments, expanded, isLoading = false, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <CUIAccordion\r\n          width='100%'\r\n          allowMultiple\r\n          allowToggle\r\n          defaultIndex={[]}\r\n          index={expanded}\r\n          onChange={(indexes) => onChange(indexes)}>\r\n          <VStack width='100%' spacing={2}>\r\n            {departments.map((department, index) => (\r\n              <AccordionItem\r\n                key={`${department.label.toLowerCase()}-accordion`}\r\n                {...department}\r\n                isExpanded={Array.isArray(expanded) ? expanded.includes(index) : false}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </CUIAccordion>\r\n      ) : (\r\n        _.range(0, 5).map((_dummy, index) => <DummyAccordionItem key={index} />)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React, { Fragment, ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { QuickTogglesProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst QuickToggles = (props: QuickTogglesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { departments, isLoading = false, onToggleAccordion } = props;\r\n\r\n  return (\r\n    <HStack justifyContent='stretch' spacing={isLoading ? 1 : 0}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        whiteSpace='nowrap'\r\n        py={0.75}>\r\n        Jump to:\r\n      </Text>\r\n\r\n      {!isLoading ? (\r\n        <HorizontalScroll width='calc(100% - 61.47px)' spacing='0'>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Link to={`${department.toLowerCase()}-accordion`} spy={true} smooth={true} offset={-81}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => onToggleAccordion(department)}\r\n                    size='sm'\r\n                    variant='text'>\r\n                    {department}\r\n                  </Button>\r\n                </Link>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <SkeletonText\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='28px'\r\n              offsetY={14}\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default QuickToggles;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { ExpandedIndex, VStack, Collapse, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport Accordion from './components/Accordion';\r\nimport QuickToggles from './components/QuickToggles';\r\nimport { FilmographyProps } from './types';\r\n\r\nconst Filmography = (props: FilmographyProps): ReactElement => {\r\n  const { departments, name, isSuccess = false, isLoading = false, isError = false } = props;\r\n\r\n  const [expandedAccordions, setExpandedAccordions] = useState<ExpandedIndex>([]);\r\n\r\n  /**\r\n   * This method will either expand/collapse all accordions at once\r\n   */\r\n  const handleToggleAccordions = (): void => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    setExpandedAccordions(expanded === departments.length ? [] : departments.map((_department, index) => index));\r\n  };\r\n\r\n  /**\r\n   * This method will check if all the accordions are either expanded or collapsed\r\n   *\r\n   * @returns Boolean - If expanded or collapsed\r\n   */\r\n  const handleCheckisAccordionsExpanded = (): boolean => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    return expanded === departments.length;\r\n  };\r\n\r\n  /**\r\n   * This method will either expand/collapse the accordion passed as param\r\n   *\r\n   * @param department String - The accordion clicked\r\n   */\r\n  const handleToggleAccordion = (department: string): void => {\r\n    const expanded: number[] = Array.isArray(expandedAccordions) ? expandedAccordions : [];\r\n    const index: number = departments.findIndex((paramDepartment) => paramDepartment.label === department);\r\n\r\n    if (!expanded.includes(index)) {\r\n      setExpandedAccordions([...expanded, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth variant='outlined' p={2}>\r\n      {{\r\n        header: {\r\n          title: 'Filmography',\r\n          actions: (\r\n            <ScaleFade in={!isError} unmountOnExit>\r\n              <Button isDisabled={isLoading} onClick={() => handleToggleAccordions()} size='sm' variant='text'>\r\n                {handleCheckisAccordionsExpanded() ? 'Hide all' : 'Show all'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            <Collapse in={!isError} unmountOnExit style={{ width: '100%' }}>\r\n              <QuickToggles\r\n                departments={departments.map((department) => department.label)}\r\n                isLoading={isLoading}\r\n                onToggleAccordion={handleToggleAccordion}\r\n              />\r\n            </Collapse>\r\n\r\n            {isError ? (\r\n              <Error\r\n                label='Oh no! Something went wrong'\r\n                description={`Failed to fetch ${name ? `\"${name}\"` : ''} filmography credits list!`}\r\n                variant='transparent'\r\n              />\r\n            ) : isSuccess && departments && departments.length === 0 ? (\r\n              <Empty label={`${name ? `\"${name}\"` : ''} has no credits`} variant='transparent' />\r\n            ) : (\r\n              <Accordion\r\n                departments={departments}\r\n                expanded={expandedAccordions}\r\n                isLoading={isLoading}\r\n                onChange={(indexes: ExpandedIndex) => setExpandedAccordions(indexes)}\r\n              />\r\n            )}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Filmography;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport useInterval from '../../../../../common/hooks/useInterval';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const { direction, isLoading = false, isDisabled = false, reset = false, variant, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={`Scroll ${direction.toLowerCase()}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      label={`Scroll ${direction.toLowerCase()} (${!isMouseDown ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isLoading || isDisabled}\r\n      gutter={isMouseDown ? 8 : 10}>\r\n      <IconButton\r\n        aria-label='Scroll left'\r\n        isDisabled={isLoading || isDisabled}\r\n        icon={direction === 'left' ? ArrowBackOutlinedIcon : ArrowForwardOutlinedIcon}\r\n        onClick={(event: Event) => handleOnClick(event)}\r\n        onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n        onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        size={variant === 'transparent' ? 'md' : 'sm'}\r\n        variant='outlined'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, hasDivider = false, handleScrollChange, variant = 'transparent' } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={variant === 'transparent' ? 2 : 0}\r\n      py={hasDivider ? 2 : 0}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border={variant === 'transparent' ? 'solid2' : 'none'}\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        px={variant === 'transparent' ? 2 : 0}\r\n        py={variant === 'transparent' ? 2 : 0}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize } from '../../../common/hooks';\r\nimport utils from '../../../common/utils/utils';\r\nimport Card from '../../Card';\r\nimport Arrow from './components/Arrow';\r\nimport Grid from './components/Grid';\r\nimport { HorizontalGridProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const gridRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width } = useWindowSize();\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, title, footer, isLoading = true, hasDivider = false, variant = 'transparent' } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleGridRef(gridRef.current);\r\n      }\r\n    }, 50),\r\n    [gridRef]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (gridRef && gridRef.current) {\r\n        if (direction === 'left') {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft - 10;\r\n        } else {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleGridRef(gridRef.current);\r\n  }, [width]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { px: variant === 'transparent' ? 2 : 0, py: 2 },\r\n        footer: { px: variant === 'transparent' ? 2 : 0, py: 1 }\r\n      }}\r\n      isFullWidth\r\n      hasDivider={hasDivider}\r\n      variant={variant}\r\n      px={variant === 'outlined' ? 2 : 0}>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: !utils.handleIsTouchDevice() ? (\r\n            <HStack spacing={variant === 'transparent' ? 2 : 1.25}>\r\n              <Arrow\r\n                direction='left'\r\n                isDisabled={scrollButtons.left}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n              <Arrow\r\n                direction='right'\r\n                isDisabled={scrollButtons.right}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n            </HStack>\r\n          ) : undefined\r\n        },\r\n        body: (\r\n          <Grid\r\n            gridRef={gridRef}\r\n            hasDivider={hasDivider}\r\n            handleScrollChange={() => handleGridRef(gridRef.current)}\r\n            variant={variant}>\r\n            {children}\r\n          </Grid>\r\n        ),\r\n        footer\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport { toggleList } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List } from '../../store/slices/User/types';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = (props: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const list = mediaItem\r\n    ? lists.find((list) => {\r\n        switch (mediaType) {\r\n          case 'movie':\r\n            return list.results.movies.some((movie) => movie.id === mediaItem.id);\r\n          case 'tv':\r\n            return list.results.tv.some((show) => show.id === mediaItem.id);\r\n          default:\r\n            return;\r\n        }\r\n      })\r\n    : undefined;\r\n  const isBookmarked: boolean = list\r\n    ? mediaType === 'movie'\r\n      ? list.results.movies.some((movie) => movie.id === mediaItem?.id)\r\n      : list.results.tv.some((show) => show.id === mediaItem?.id)\r\n    : false;\r\n\r\n  const handleRemoveBookmark = (list: List): void => {\r\n    const results = { ...list.results };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        results.movies = results.movies.filter((movie) => movie.id !== mediaItem?.id) || [];\r\n        break;\r\n      case 'tv':\r\n        results.tv = results.tv.filter((show) => show.id !== mediaItem?.id) || [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      setLists(\r\n        lists.map((paramList) =>\r\n          paramList.id === list.id\r\n            ? {\r\n                ...paramList,\r\n                results: { ...results }\r\n              }\r\n            : paramList\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleOpenListsModal = (): void => {\r\n    if (mediaItem) {\r\n      dispatch(\r\n        toggleList({\r\n          open: true,\r\n          title,\r\n          mediaType,\r\n          mediaItem: {\r\n            ...mediaItem\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n          : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n          : `Add \"${title}\" to a list`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={8}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n            : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n        }\r\n        color={isBookmarked ? utils.handleReturnColor(color) : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={isBookmarked && list ? () => handleRemoveBookmark(list) : () => handleOpenListsModal()}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = (props: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { rating = defaultRating, isLoading = false, isHorizontal = false } = props;\r\n\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['lg'],\r\n    'sm': theme.fontSizes['lg'],\r\n    'md': theme.fontSizes['xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  return (\r\n    <Center backgroundColor='transparent' p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${isHorizontal ? iconSize : theme.fontSizes.xl} !important`\r\n        }}\r\n      />\r\n      <SkeletonText offsetY={8} isLoaded={!isLoading} ml={0.5}>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={isHorizontal ? ['sm', 'sm', 'md', 'lg', 'lg', 'xl'] : 'md'}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={6}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='xs'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={7}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='sm'\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean, VStack, HStack, Box, AspectRatio, ScaleFade, useTheme } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Skeleton from '../../../components/Skeleton';\r\nimport { toggleQuickView } from '../../../store/slices/Modals';\r\nimport { Theme } from '../../../theme/types';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = <MT extends MediaType>(props: VerticalPosterProps<MT>): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    width,\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringPoster, setIsHoveringPoster] = useBoolean();\r\n\r\n  const [isHoveringQuickView, setIsHoveringQuickView] = useBoolean();\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useBoolean();\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        isDisabled={isLoading || isHoveringQuickView || isHoveringLiked || isHoveringBookmark}\r\n        to={{ pathname: `/${mediaType}/${mediaItem?.id || ''}` }}\r\n        onMouseEnter={() => setIsHoveringPoster.on()}\r\n        onMouseLeave={() => setIsHoveringPoster.off()}>\r\n        <Card\r\n          isDisabled={isLoading}\r\n          isClickable={!isHoveringQuickView && !isHoveringLiked && !isHoveringBookmark}\r\n          isLightGray>\r\n          <VStack width={width} position='relative' spacing={1} p={1}>\r\n            {/* Image */}\r\n            <Box position='relative' width='100%' minWidth='100%' maxWidth='100%'>\r\n              <AspectRatio width='100%' minWidth='100%' maxWidth='100%' ratio={2 / 3}>\r\n                <>\r\n                  <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n                    <Image\r\n                      alt={image.alt}\r\n                      mediaType={mediaType}\r\n                      maxWidth='none'\r\n                      height='100%'\r\n                      borderRadius='base'\r\n                      src={image.src}\r\n                      size={image.size}\r\n                    />\r\n                  </Skeleton>\r\n\r\n                  {/* Quick View component */}\r\n                  {mediaItem && !utils.handleIsTouchDevice() ? (\r\n                    <ScaleFade in={isHoveringPoster && !isLoading} unmountOnExit>\r\n                      <Box\r\n                        position='absolute'\r\n                        bottom={theme.space[1]}\r\n                        width='100%'\r\n                        onMouseEnter={() => setIsHoveringQuickView.on()}\r\n                        onMouseLeave={() => setIsHoveringQuickView.off()}\r\n                        px={1}>\r\n                        <Button\r\n                          isFullWidth\r\n                          onClick={() =>\r\n                            dispatch(toggleQuickView({ open: true, mediaType, mediaItem: { id: mediaItem.id, title } }))\r\n                          }\r\n                          size='sm'>\r\n                          Quick view\r\n                        </Button>\r\n                      </Box>\r\n                    </ScaleFade>\r\n                  ) : null}\r\n                </>\r\n              </AspectRatio>\r\n            </Box>\r\n\r\n            <VStack width='100%' spacing={mediaType !== 'person' ? 0.5 : 1}>\r\n              {/* Header */}\r\n              {mediaType !== 'person' ? (\r\n                <HStack width='100%' justify='space-between' spacing={0}>\r\n                  {/* Rating component */}\r\n                  <Rating rating={rating} isLoading={isLoading} />\r\n\r\n                  <HStack spacing={0}>\r\n                    {/* Like component */}\r\n                    <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                      <Like\r\n                        isDisabled={isLoading}\r\n                        title={title}\r\n                        mediaType={mediaType}\r\n                        mediaItem={mediaItem}\r\n                        size='sm'\r\n                      />\r\n                    </Box>\r\n                    {/* List component */}\r\n                    <Box\r\n                      onMouseEnter={() => setIsHoveringBookmark.on()}\r\n                      onMouseLeave={() => setIsHoveringBookmark.off()}>\r\n                      <Bookmark\r\n                        isDisabled={isLoading}\r\n                        title={title}\r\n                        mediaType={mediaType}\r\n                        mediaItem={mediaItem}\r\n                        size='sm'\r\n                      />\r\n                    </Box>\r\n                  </HStack>\r\n                </HStack>\r\n              ) : null}\r\n              {/* Text */}\r\n              <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n                <Title title={title} isLoading={isLoading} />\r\n                <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n              </VStack>\r\n            </VStack>\r\n\r\n            {/* Like component */}\r\n            {mediaType === 'person' ? (\r\n              <HStack\r\n                spacing={0}\r\n                sx={{\r\n                  position: 'absolute',\r\n                  top: 1,\r\n                  right: 2\r\n                }}>\r\n                <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                  <Like isDisabled={isLoading} title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' />\r\n                </Box>\r\n              </HStack>\r\n            ) : null}\r\n          </VStack>\r\n        </Card>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { KnownForProps } from './types';\r\n\r\nconst KnownFor = (props: KnownForProps): ReactElement => {\r\n  const { knownFor, name, isError = false, isSuccess = false, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalGrid title='Known for' isLoading={isLoading} hasDivider variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} known for list!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && knownFor && knownFor.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no known for credits`} variant='transparent' />\r\n      ) : isSuccess && knownFor && knownFor.length > 0 ? (\r\n        <>\r\n          {knownFor.map((mediaItem) => (\r\n            <VerticalPoster\r\n              key={mediaItem.id}\r\n              width={['185px', '205px', '230px']}\r\n              mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n              mediaType={mediaItem ? 'movie' : 'tv'}\r\n              image={{\r\n                alt: `${mediaItem?.title || mediaItem?.name || ''} ${mediaItem?.title ? 'movie' : 'tv'} poster`,\r\n                src: mediaItem?.poster_path || '',\r\n                size: {\r\n                  thumbnail: '45',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              rating={{\r\n                rating: mediaItem?.vote_average || null,\r\n                count: mediaItem?.vote_count || null\r\n              }}\r\n              title={mediaItem?.title || mediaItem?.name || ''}\r\n              subtitle={`${utils.handleReturnDate(mediaItem?.release_date || mediaItem?.first_air_date || '', 'year')}`}\r\n              isLoading={false}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {[...Array(knownFor ? knownFor.length : 10)].map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='movie'\r\n              image={{\r\n                alt: 'Movie poster',\r\n                src: '',\r\n                size: {\r\n                  thumbnail: '45',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              title='Lorem ipsum'\r\n              subtitle='Lorem ipsum'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default KnownFor;\r\n","import React, { ReactElement, MouseEvent } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  CloseOutlined as CloseOutlinedIcon,\r\n  DashboardOutlined as DashboardOutlinedIcon,\r\n  FullscreenOutlined as FullscreenOutlinedIcon,\r\n  FullscreenExitOutlined as FullscreenExitOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { ActionsProps, HTMLFullscreenElement, FullscreenDocument } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { onClose, onGalleryClick } = props;\r\n\r\n  const [isFullscreen, setIsFullscreen] = useBoolean();\r\n  const [isfullscreenNotSupported, setIsfullscreenNotSupported] = useBoolean();\r\n\r\n  /**\r\n   * This method will open fullscreen mode\r\n   */\r\n  const handleOpenFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const element: HTMLFullscreenElement = document.documentElement;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.on();\r\n  };\r\n\r\n  /**\r\n   * This method will close fullscreen mode\r\n   */\r\n  const handleCloseFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const doc: FullscreenDocument = document;\r\n\r\n    if (doc.exitFullscreen) {\r\n      doc.exitFullscreen();\r\n    } else if (doc.webkitExitFullscreen) {\r\n      doc.webkitExitFullscreen();\r\n    } else if (doc.mozCancelFullScreen) {\r\n      doc.mozCancelFullScreen();\r\n    } else if (doc.msExitFullscreen) {\r\n      doc.msExitFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.off();\r\n  };\r\n\r\n  /**\r\n   * This method will close the modal and will close fullscreen if fullscreen is open\r\n   */\r\n  const handleClose = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    if (isFullscreen) {\r\n      handleCloseFullscreen(event);\r\n    }\r\n\r\n    onClose();\r\n  };\r\n\r\n  const actions = [\r\n    // Close button\r\n    <IconButton\r\n      key='close_button'\r\n      aria-label='Close modal'\r\n      icon={CloseOutlinedIcon}\r\n      onClick={(event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => handleClose(event)}\r\n      variant='icon'\r\n    />,\r\n\r\n    // Gallery button\r\n    <IconButton\r\n      key='gallery_button'\r\n      aria-label='Open Gallery'\r\n      icon={DashboardOutlinedIcon}\r\n      onClick={() => onGalleryClick()}\r\n      variant='icon'\r\n    />,\r\n\r\n    //  Fullscreen button\r\n    !isfullscreenNotSupported ? (\r\n      <IconButton\r\n        key='fullscreen_button'\r\n        aria-label={isFullscreen ? 'Exit fullscreen ' : 'Enter fullscreen'}\r\n        icon={isFullscreen ? FullscreenExitOutlinedIcon : FullscreenOutlinedIcon}\r\n        onClick={isFullscreen ? (event) => handleCloseFullscreen(event) : (event) => handleOpenFullscreen(event)}\r\n        variant='icon'\r\n      />\r\n    ) : null\r\n  ].filter((action) => action);\r\n\r\n  return isSm ? (\r\n    <HStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions.reverse()}\r\n    </HStack>\r\n  ) : (\r\n    <VStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, SimpleGrid, Text } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = ({ children, title }: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 340px)');\r\n\r\n  return (\r\n    <VStack width='100%' justifyContent='stretch' spacing={2}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='xl'\r\n        fontWeight='semibold'>\r\n        {title}\r\n      </Text>\r\n\r\n      <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 5, 6]} spacing={2}>\r\n        {children}\r\n      </SimpleGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon, CheckOutlined as CheckOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport Image from '../../../../../../../../components/Image';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst GalleryImage = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['5xl'],\r\n    'sm': theme.fontSizes['5xl'],\r\n    'md': theme.fontSizes['6xl'],\r\n    'lg': theme.fontSizes['6xl'],\r\n    'xl': theme.fontSizes['7xl'],\r\n    '2xl': theme.fontSizes['7xl']\r\n  });\r\n\r\n  const { image, index, name, isActive = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height='100%'\r\n      position='relative'\r\n      onClick={() => onClickImage(index)}\r\n      onMouseEnter={() => setIsHovering.on()}\r\n      onMouseLeave={() => setIsHovering.off()}>\r\n      <AspectRatio borderRadius='base' ratio={1 / 1}>\r\n        <>\r\n          <Center\r\n            width='100%'\r\n            height='100%'\r\n            position='absolute'\r\n            zIndex={1}\r\n            borderRadius='base'\r\n            sx={{\r\n              cursor: 'pointer',\r\n              backgroundColor:\r\n                isHovering || isActive\r\n                  ? colorMode === 'light'\r\n                    ? 'rgba(0, 0, 0, 0.25)'\r\n                    : 'rgba(255, 255, 255, 0.25)'\r\n                  : 'transparent',\r\n              transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n            }}>\r\n            <Fade in={isHovering || isActive} unmountOnExit>\r\n              <Icon\r\n                as={isActive ? CheckOutlinedIcon : SearchOutlinedIcon}\r\n                color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n                sx={{\r\n                  fontSize: `${fontSize} !important`\r\n                }}\r\n              />\r\n            </Fade>\r\n          </Center>\r\n          <Image\r\n            alt={`${name ? `\"${name}\"` : ''} image`}\r\n            maxWidth='none'\r\n            height='100%'\r\n            borderRadius='base'\r\n            mediaType='person'\r\n            src={image.file_path}\r\n            size={{\r\n              thumbnail: 'w45',\r\n              full: 'original'\r\n            }}\r\n          />\r\n        </>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GalleryImage;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Modal, ModalContent, ModalHeader, ModalBody, VStack } from '@chakra-ui/react';\r\nimport { CloseOutlined as CloseOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Grid from './components/Grid';\r\nimport Image from './components/Image';\r\nimport { GalleryProps } from './types';\r\n\r\nconst Gallery = (props: GalleryProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { isOpen, name, activeIndex, images, onClick, onClose } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalHeader display='flex' justifyContent='flex-end' p={2}>\r\n          {/* Close button */}\r\n          <IconButton aria-label='Close modal' icon={CloseOutlinedIcon} onClick={() => onClose()} variant='icon' />\r\n        </ModalHeader>\r\n        <ModalBody p={0}>\r\n          <VStack width='100%' px={isSm ? 3 : 6} pb={isSm ? 3 : 6}>\r\n            {/* Photos Section */}\r\n            <Grid title='Photos'>\r\n              <>\r\n                {images.map((image, index) => (\r\n                  <Image\r\n                    key={index}\r\n                    image={image}\r\n                    index={index}\r\n                    name={name}\r\n                    isActive={index === activeIndex}\r\n                    onClickImage={onClick}\r\n                  />\r\n                ))}\r\n              </>\r\n            </Grid>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { NavigationProps } from './types';\r\n\r\nconst Navigation = (props: NavigationProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { current, total, onNavigation } = props;\r\n\r\n  return (\r\n    <HStack position='absolute' bottom={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {/* Left button */}\r\n      <IconButton\r\n        aria-label='Previous photo'\r\n        icon={ArrowBackOutlinedIcon}\r\n        isDisabled={current <= 1}\r\n        onClick={() => onNavigation('prev')}\r\n        variant='icon'\r\n      />\r\n\r\n      <Text\r\n        align='center'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='md'>{`${current} / ${total}`}</Text>\r\n\r\n      {/* Right button */}\r\n      <IconButton\r\n        aria-label='Next photo'\r\n        icon={ArrowForwardOutlinedIcon}\r\n        isDisabled={current >= total}\r\n        onClick={() => onNavigation('next')}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Center } from '@chakra-ui/react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport { ViewerProps } from './types';\r\n\r\nconst Viewer = (props: ViewerProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { current, name, images, onSwiper, onSlideChange } = props;\r\n\r\n  return (\r\n    <Swiper\r\n      allowSlideNext={current <= images.length}\r\n      allowSlidePrev={current >= 1}\r\n      spaceBetween={96}\r\n      slidesPerView={1}\r\n      onSwiper={(swiper) => onSwiper(swiper)}\r\n      onSlideChange={(swiper) => onSlideChange(swiper)}\r\n      onKeyPress={(event) => console.log(event)}>\r\n      {images.map((image, index) => (\r\n        <SwiperSlide key={index}>\r\n          <Center width='100vw' height='100vh' py={2}>\r\n            <Image\r\n              alt={`${name ? `\"${name}\"` : ''} image`}\r\n              width={isSm ? 'calc(100% - 64px)' : 'auto'}\r\n              maxWidth='none'\r\n              height={isSm ? 'auto' : 'calc(100% - 128px)'}\r\n              mediaType='person'\r\n              borderRadius='xl'\r\n              src={image.file_path}\r\n              size={{\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }}\r\n            />\r\n          </Center>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Viewer;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Modal, ModalContent, ModalBody } from '@chakra-ui/react';\r\nimport { Swiper } from 'swiper';\r\n\r\nimport Actions from './components/Actions';\r\nimport Gallery from './components/Gallery';\r\nimport Navigation from './components/Navigation';\r\nimport Viewer from './components/Viewer';\r\nimport { MediaViewerProps, NavigationDirection } from './types';\r\n\r\nconst MediaViewer = (props: MediaViewerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isGalleryOpen, onOpen: onGalleryOpen, onClose: onGalleryClose } = useDisclosure();\r\n\r\n  const { isOpen, name, selectedImage, images, onClose } = props;\r\n\r\n  const [swiper, setSwiper] = useState<Swiper | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n\r\n  /**\r\n   * This method will slide to the image\r\n   *\r\n   * @param index Number - The index of the image in the list\r\n   * @param speed Number - The speed of the slide transition\r\n   */\r\n  const handleSlideTo = useCallback(\r\n    (index: number, speed: number) => {\r\n      if (swiper) {\r\n        swiper.slideTo(index, speed);\r\n        setActiveIndex(index);\r\n      }\r\n    },\r\n    [swiper]\r\n  );\r\n\r\n  /**\r\n   * This method will either slide to the previous slide or to the next slide depending on the direction passed\r\n   *\r\n   * @param direction - Either 'prev' or 'next'\r\n   */\r\n  const handleNavigationClick = (direction: NavigationDirection): void => {\r\n    handleSlideTo(direction === 'prev' ? activeIndex - 1 : activeIndex + 1, 500);\r\n  };\r\n\r\n  /**\r\n   * This method will close the gallery and will slide to the index passed\r\n   *\r\n   * @param index Number - The slide index\r\n   */\r\n  const handleGalleryClick = (index: number): void => {\r\n    onGalleryClose();\r\n    handleSlideTo(index, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiper && selectedImage) {\r\n      handleSlideTo(images.findIndex((image) => image.file_path === selectedImage.file_path) || 0, 0);\r\n    }\r\n  }, [swiper, selectedImage]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        blockScrollOnMount\r\n        preserveScrollBarGap\r\n        motionPreset='scale'\r\n        scrollBehavior='inside'\r\n        size='full'>\r\n        <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n          <ModalBody position='relative' p={0}>\r\n            <Actions onClose={onClose} onGalleryClick={() => onGalleryOpen()} />\r\n\r\n            <Viewer\r\n              current={activeIndex + 1}\r\n              name={name}\r\n              images={images}\r\n              onSwiper={(swiper) => setSwiper(swiper)}\r\n              onSlideChange={(swiper) => setActiveIndex(swiper.activeIndex)}\r\n            />\r\n\r\n            <Navigation current={activeIndex + 1} total={images.length} onNavigation={handleNavigationClick} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Gallery\r\n        isOpen={isGalleryOpen}\r\n        name={name}\r\n        activeIndex={activeIndex}\r\n        images={images}\r\n        onClick={handleGalleryClick}\r\n        onClose={onGalleryClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaViewer;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst PhotoImage = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['5xl'],\r\n    'sm': theme.fontSizes['5xl'],\r\n    'md': theme.fontSizes['6xl'],\r\n    'lg': theme.fontSizes['6xl'],\r\n    'xl': theme.fontSizes['7xl'],\r\n    '2xl': theme.fontSizes['7xl']\r\n  });\r\n\r\n  const { image, name, isLoading = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={width}\r\n      minWidth={width}\r\n      maxWidth={width}\r\n      onClick={image ? () => onClickImage(image) : undefined}\r\n      onMouseEnter={image ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={image ? () => setIsHovering.off() : undefined}>\r\n      <AspectRatio ratio={2 / 3}>\r\n        <>\r\n          <Fade in={!isLoading} unmountOnExit>\r\n            <Center\r\n              width={width}\r\n              height='100%'\r\n              position='absolute'\r\n              zIndex={1}\r\n              borderRadius='base'\r\n              sx={{\r\n                cursor: 'pointer',\r\n                backgroundColor: isHovering\r\n                  ? colorMode === 'light'\r\n                    ? 'rgba(0, 0, 0, 0.25)'\r\n                    : 'rgba(255, 255, 255, 0.25)'\r\n                  : 'transparent',\r\n                transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n              }}>\r\n              <Fade in={isHovering} unmountOnExit>\r\n                <Icon\r\n                  as={SearchOutlinedIcon}\r\n                  color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n                  sx={{\r\n                    fontSize: `${fontSize} !important`\r\n                  }}\r\n                />\r\n              </Fade>\r\n            </Center>\r\n          </Fade>\r\n          <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n            <Image\r\n              alt={`${name ? `\"${name}\"` : ''} image`}\r\n              maxWidth='none'\r\n              height='100%'\r\n              borderRadius='base'\r\n              mediaType='person'\r\n              src={image?.file_path || ''}\r\n              size={{\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }}\r\n            />\r\n          </Skeleton>\r\n        </>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PhotoImage;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Image as ImageType } from '../../../../common/types/person';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport Image from './components/Image';\r\nimport { PhotosProps } from './types';\r\n\r\nconst Photos = (props: PhotosProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { images, name, isError = false, isSuccess = false, isLoading = false, onClickImage } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title='Photos'\r\n      footer={\r\n        images.length > 7 ? (\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isFullWidth\r\n            isDisabled={isLoading || isError}\r\n            onClick={() => onClickImage()}\r\n            size={isSm ? 'sm' : 'md'}\r\n            variant='text'>\r\n            {`View all ${name ? `\"${name}\"` : ''} photos`}\r\n          </Button>\r\n        ) : undefined\r\n      }\r\n      isLoading={isLoading}\r\n      hasDivider\r\n      variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} photos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && images && images.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no photos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(images && images.length > 0 ? images : Array(5))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: ImageType | number, index) => (\r\n              <Image\r\n                key={index}\r\n                image={typeof image !== 'number' && image ? image : undefined}\r\n                name={name}\r\n                isLoading={isLoading}\r\n                onClickImage={onClickImage}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport {\r\n  FullPerson,\r\n  Credits,\r\n  MovieCredits,\r\n  TVCredits,\r\n  ExternalIDs,\r\n  ImageResponse,\r\n  Image\r\n} from '../../common/types/person';\r\nimport { Response } from '../../common/types/types';\r\nimport Bio from './components/Bio';\r\nimport Details from './components/Details';\r\nimport Filmography from './components/Filmography';\r\nimport KnownFor from './components/KnownFor';\r\nimport MediaViewer from './components/MediaViewer';\r\nimport Photos from './components/Photos';\r\nimport { Department, KnownFor as KnownForType } from './types';\r\n\r\n/**\r\n * This method will take all the credits and place them in their respective object\r\n *\r\n * @returns Array of Objects - Of Departments containing all credits\r\n */\r\n\r\nexport const handleGetDepartments = (movies: MovieCredits, tv: TVCredits): Department[] => {\r\n  let departments: Department[] = [];\r\n\r\n  if ((movies?.cast.length || 0) > 0 || (tv.cast.length || 0) > 0) {\r\n    departments.push({\r\n      label: 'Actor',\r\n      credits: {\r\n        cast: {\r\n          movie: movies?.cast || [],\r\n          tv: tv.cast || []\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  movies?.crew.forEach((mediaItem) => {\r\n    if (departments.some((department) => department.label === mediaItem.job)) {\r\n      departments = departments.map((department) =>\r\n        department.label === mediaItem.job\r\n          ? {\r\n              ...department,\r\n              credits: {\r\n                ...department.credits,\r\n                crew: {\r\n                  ...department.credits.crew,\r\n                  movie: [...(department.credits.crew?.movie || []), { ...mediaItem }]\r\n                }\r\n              }\r\n            }\r\n          : department\r\n      );\r\n    } else {\r\n      departments.push({\r\n        label: mediaItem.job,\r\n        credits: {\r\n          crew: {\r\n            movie: [{ ...mediaItem }],\r\n            tv: []\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  tv.crew.forEach((mediaItem) => {\r\n    if (departments.some((department) => department.label === mediaItem.job)) {\r\n      departments = departments.map((department) =>\r\n        department.label === mediaItem.job\r\n          ? {\r\n              ...department,\r\n              credits: {\r\n                ...department.credits,\r\n                crew: {\r\n                  ...department.credits.crew,\r\n                  tv: [...(department.credits.crew?.tv || []), { ...mediaItem }]\r\n                }\r\n              }\r\n            }\r\n          : department\r\n      );\r\n    } else {\r\n      departments.push({\r\n        label: mediaItem.job,\r\n        credits: {\r\n          crew: {\r\n            movie: [],\r\n            tv: [{ ...mediaItem }]\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return arraySort([...departments], 'label');\r\n};\r\n\r\nconst Person = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState<Image | undefined>();\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person known for list\r\n  const creditsQuery = useQuery([`person-combined_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Credits>(`/person/${id}/combined_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person external ids\r\n  const externalIdsQuery = useQuery([`person-external_ids-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ExternalIDs>(`/person/${id}/external_ids`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person images\r\n  const imagesQuery = useQuery([`person-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/person/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tagged images\r\n  const taggedImagesQuery = useQuery([`person-tagged_images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<ImageResponse>>(`/person/${id}/tagged_images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  /**\r\n   * This method will filter from known for list and will return the 8 most voted movies/tv shows\r\n   *\r\n   * @returns Array of Objects - Known for list\r\n   */\r\n  const handleGetKnownFor = (): KnownForType => {\r\n    const filtered = new Set();\r\n    const credits = [...(creditsQuery.data?.cast || []), ...(creditsQuery.data?.crew || [])];\r\n    const knownFor = arraySort(\r\n      credits.filter((mediaItem) => {\r\n        const duplicate = filtered.has(mediaItem.id);\r\n        filtered.add(mediaItem.id);\r\n        return !duplicate;\r\n      }),\r\n      'vote_count',\r\n      { reverse: true }\r\n    ).filter((_item, index) => index < 8);\r\n\r\n    return [...knownFor];\r\n  };\r\n\r\n  /**\r\n   * This method will open the image passed in the media modal\r\n   *\r\n   * @param image - Image object\r\n   */\r\n  const handleOnImageClick = (image?: Image): void => {\r\n    setSelectedPhoto(image || undefined);\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  /**\r\n   * This method will find the image object from images and then it will open the media modal\r\n   *\r\n   * @param path - Image path\r\n   */\r\n  const handleOnPosterClick = (path: string): void => {\r\n    handleOnImageClick(imagesQuery.data?.profiles.find((image) => image.file_path === path));\r\n  };\r\n\r\n  const knownFor = creditsQuery.isSuccess ? handleGetKnownFor() : [];\r\n  const departments =\r\n    movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess\r\n      ? handleGetDepartments(movieCreditsQuery.data, tvCreditsQuery.data)\r\n      : [];\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={4} p={2}>\r\n      <Details\r\n        person={personQuery.data}\r\n        departments={departments.map((department) => department.label)}\r\n        socials={externalIdsQuery.data}\r\n        isLoading={\r\n          personQuery.isFetching || personQuery.isLoading || externalIdsQuery.isFetching || externalIdsQuery.isLoading\r\n        }\r\n        isError={personQuery.isError || personQuery.isError}\r\n        onClickPoster={handleOnPosterClick}\r\n      />\r\n\r\n      {personQuery.data?.biography || personQuery.isFetching || personQuery.isLoading ? (\r\n        <Bio\r\n          biography={personQuery.data?.biography || ''}\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      <KnownFor\r\n        knownFor={knownFor}\r\n        name={personQuery.data?.name}\r\n        isError={creditsQuery.isError}\r\n        isSuccess={creditsQuery.isSuccess}\r\n        isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n      />\r\n\r\n      <Filmography\r\n        departments={departments}\r\n        isLoading={\r\n          movieCreditsQuery.isFetching ||\r\n          movieCreditsQuery.isLoading ||\r\n          tvCreditsQuery.isFetching ||\r\n          tvCreditsQuery.isLoading\r\n        }\r\n        isError={movieCreditsQuery.isError || tvCreditsQuery.isError}\r\n      />\r\n\r\n      <Photos\r\n        images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n        name={personQuery.data?.name}\r\n        isError={imagesQuery.isError || taggedImagesQuery.isError}\r\n        isSuccess={imagesQuery.isSuccess && taggedImagesQuery.isSuccess}\r\n        isLoading={\r\n          imagesQuery.isFetching || imagesQuery.isLoading || taggedImagesQuery.isFetching || taggedImagesQuery.isLoading\r\n        }\r\n        onClickImage={handleOnImageClick}\r\n      />\r\n\r\n      {imagesQuery.isSuccess || taggedImagesQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selectedImage={selectedPhoto}\r\n          images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, AspectRatio } from '@chakra-ui/react';\r\n\r\nimport Image from '../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../components/Skeleton';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { name, path, mediaType, isLoading = false } = props;\r\n\r\n  return (\r\n    <AspectRatio width='100%' borderRadius='lg' ratio={isSm ? 1 / 1 : 2 / 3}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius='lg'>\r\n        <Image\r\n          alt={`${name ? `\"${name}\"` : ''} ${\r\n            mediaType === 'movie' ? 'movie' : mediaType === 'tv' ? 'tv show' : 'profile'\r\n          } poster`}\r\n          mediaType={mediaType}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='lg'\r\n          src={path || ''}\r\n          size={{\r\n            thumbnail: mediaType === 'person' ? 'w45' : 'w92',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, StatGroup, Stat, StatLabel, StatNumber, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport SkeletonText from '../../../../../../../../../components/Skeleton/Text';\r\nimport { StatsProps, Stat as StatType } from './types';\r\n\r\nconst Stats = (props: StatsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { totalMovieCredits, totalTvCredits, totalCrewCredits, isLoading = false } = props;\r\n\r\n  const stats: StatType[] = [\r\n    {\r\n      label: 'Total',\r\n      number: totalMovieCredits + totalTvCredits + totalCrewCredits\r\n    },\r\n    {\r\n      label: 'Movies',\r\n      number: totalMovieCredits\r\n    },\r\n    {\r\n      label: 'TV Shows',\r\n      number: totalTvCredits\r\n    },\r\n    {\r\n      label: 'Crew',\r\n      number: totalCrewCredits\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <StatGroup\r\n      width='100%'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      borderRadius='base'\r\n      p={1}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='space-between'\r\n        wrap='wrap'\r\n        divider={<Box width='2px' height='44px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />}\r\n        spacing={1}>\r\n        {stats.map((stat: StatType, index: number) => (\r\n          <Stat key={index} justifyContent='center'>\r\n            <VStack spacing={0}>\r\n              <SkeletonText offsetY='14px' isLoaded={!isLoading}>\r\n                <StatNumber color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='3xl' lineHeight='normal'>\r\n                  {!isLoading ? stat.number || 0 : '12'}\r\n                </StatNumber>\r\n              </SkeletonText>\r\n              <StatLabel\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                fontSize='xs'\r\n                whiteSpace='nowrap'\r\n                textTransform='uppercase'>\r\n                {stat.label}\r\n              </StatLabel>\r\n            </VStack>\r\n          </Stat>\r\n        ))}\r\n      </HStack>\r\n    </StatGroup>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Like from '../../../../../../../../../components/Like';\r\nimport SkeletonText from '../../../../../../../../../components/Skeleton/Text';\r\nimport Date from '../../../../../../../../../pages/Person/components/Details/components/Date';\r\nimport Departments from '../../../../../../../../../pages/Person/components/Details/components/Departments';\r\nimport Stats from '../Stats';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = (props: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const {\r\n    person,\r\n    departments,\r\n    totalMovieCredits,\r\n    totalTvCredits,\r\n    totalCrewCredits,\r\n    isLoading = false,\r\n    isError = false\r\n  } = props;\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' spacing={6}>\r\n      <VStack width='100%' alignItems='flex-start' spacing={2}>\r\n        <VStack width='100%' maxWidth='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n          <SkeletonText offsetY={isSm ? 12 : 18} isLoaded={!isLoading}>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={isSm ? '2xl' : '4xl'}\r\n              fontWeight='bold'>\r\n              {person?.name || 'Unknown'}\r\n            </Text>\r\n          </SkeletonText>\r\n\r\n          <Departments departments={departments} isLoading={isLoading} />\r\n        </VStack>\r\n\r\n        <Date\r\n          birthday={person?.birthday}\r\n          place_of_birth={person?.place_of_birth}\r\n          deathday={person?.deathday}\r\n          isLoading={isLoading}\r\n          isError={isError}\r\n        />\r\n\r\n        <ScaleFade in={!isError} unmountOnExit>\r\n          <Like\r\n            buttonType='button'\r\n            isDisabled={isLoading}\r\n            title={person?.name || ''}\r\n            mediaType='person'\r\n            mediaItem={\r\n              person\r\n                ? {\r\n                    known_for_department: person.known_for_department,\r\n                    id: person.id,\r\n                    name: person.name,\r\n                    gender: person.gender,\r\n                    popularity: person.popularity,\r\n                    profile_path: person.profile_path,\r\n                    adult: person.adult\r\n                  }\r\n                : undefined\r\n            }\r\n            size='md'\r\n          />\r\n        </ScaleFade>\r\n      </VStack>\r\n\r\n      <Stats\r\n        totalMovieCredits={totalMovieCredits}\r\n        totalTvCredits={totalTvCredits}\r\n        totalCrewCredits={totalCrewCredits}\r\n        isLoading={isLoading}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack, Box } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../../../../../../common/scripts/axios';\r\nimport { FullPerson, MovieCredits, TVCredits } from '../../../../../../../common/types/person';\r\nimport { handleGetDepartments } from '../../../../../../../pages/Person';\r\nimport Poster from '../Poster';\r\nimport Container from './components/Container';\r\nimport { PersonProps } from './types';\r\n\r\nconst Person = (props: PersonProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { id } = props;\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  const departments =\r\n    movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess\r\n      ? handleGetDepartments(movieCreditsQuery.data, tvCreditsQuery.data)\r\n      : [];\r\n\r\n  return isSm ? (\r\n    <VStack maxWidth='100%' spacing={2} p={2}>\r\n      <Poster\r\n        name={personQuery.data?.name || ''}\r\n        path={personQuery.data?.profile_path || ''}\r\n        mediaType='person'\r\n        isLoading={personQuery.isFetching || personQuery.isLoading}\r\n      />\r\n      <Container\r\n        person={personQuery.data}\r\n        departments={departments.map((department) => department.label)}\r\n        totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n        totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n        totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n        isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        isError={personQuery.isError || personQuery.isError}\r\n      />\r\n    </VStack>\r\n  ) : (\r\n    <HStack maxWidth='100%' spacing={2} p={2}>\r\n      <Box width='40%'>\r\n        <Poster\r\n          name={personQuery.data?.name || ''}\r\n          path={personQuery.data?.profile_path || ''}\r\n          mediaType='person'\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        />\r\n      </Box>\r\n      <Box width='60%'>\r\n        <Container\r\n          person={personQuery.data}\r\n          departments={departments.map((department) => department.label)}\r\n          totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n          totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n          totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n          isError={personQuery.isError || personQuery.isError}\r\n        />\r\n      </Box>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultQuickViewModal, toggleQuickView } from '../../../../../store/slices/Modals';\r\nimport Person from './components/Person';\r\n\r\nconst QuickView = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const quickViewModal = useSelector((state) => state.modals.ui.quickViewModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleQuickView({ ...defaultQuickViewModal }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`Quick View ${quickViewModal.mediaItem ? `\"${quickViewModal.mediaItem.title}\"` : 'Unknown'}`}\r\n      actions={\r\n        <Link to={{ pathname: `/${quickViewModal.mediaType}/${quickViewModal.mediaItem?.id}` }}>\r\n          <Button color={utils.handleReturnColor(color)} onClick={() => handleClose()} size='sm'>\r\n            View full details\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen={quickViewModal.open}\r\n      onClose={() => handleClose()}\r\n      isCentered\r\n      size='2xl'>\r\n      {quickViewModal.mediaType === 'movie' ? (\r\n        <h1>Hello Movies</h1>\r\n      ) : quickViewModal.mediaType === 'tv' ? (\r\n        <h1>Hello TV Shows</h1>\r\n      ) : quickViewModal.mediaType === 'person' ? (\r\n        <Person id={quickViewModal.mediaItem?.id} />\r\n      ) : (\r\n        <h1>Hello Movies</h1>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuickView;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, Modal, ModalContent, ModalBody, VStack, Box, Text } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport useStyles from './styles';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen={isSplashscreenOpen}\r\n      onClose={() => dispatch(toggleSplashscreen(false))}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody zIndex={10000} p={0}>\r\n          <VStack width='100%' height='100vh' justifyContent='space-between' p={3}>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Entertainment database\r\n            </Text>\r\n            <MotionBox\r\n              animate={{\r\n                backgroundPosition: [\r\n                  ..._.range(0, 101, 1).map((number) => `${number}%`),\r\n                  ..._.reverse(_.range(0, 101, 1).map((number) => `${number}%`))\r\n                ]\r\n              }}\r\n              transition={{\r\n                duration: 10,\r\n                ease: [0.76, 0, 0.24, 1],\r\n                repeat: Infinity\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Loading...\r\n            </Text>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n","import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { CodeProps } from './types';\r\n\r\nconst Code = ({ code }: CodeProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Text\r\n      align='right'\r\n      color={`${color}.${colorMode === 'light' ? 400 : 500}`}\r\n      fontSize='6xl'\r\n      fontWeight='bold'\r\n      lineHeight='normal'>\r\n      {code}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import React, { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport { DescriptionRef } from '../../types';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst Description = forwardRef<DescriptionRef, DescriptionProps>(function Description(props, ref): ReactElement {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, subtitle } = props;\r\n\r\n  return (\r\n    <VStack ref={ref} alignItems='flex-start' spacing={0}>\r\n      <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='4xl' fontWeight='bold'>\r\n        {title}\r\n      </Text>\r\n      <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n        {subtitle}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n});\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useRef } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Center, HStack, Box, VStack } from '@chakra-ui/react';\r\n\r\nimport { useElementSize } from '../../common/hooks';\r\nimport { headerHeight } from '../../containers/Layout/common/data/dimensions';\r\nimport Code from './components/Code';\r\nimport Description from './components/Description';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const descriptionRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { height } = useElementSize(descriptionRef);\r\n\r\n  const { code = 404, title, subtitle, actions } = props;\r\n\r\n  return (\r\n    <Center width='100%' minHeight={`calc(100vh - ${headerHeight + 32}px)`}>\r\n      <VStack spacing={4} p={isSm ? 2 : 4}>\r\n        {isSm ? (\r\n          <VStack alignItems='flex-start' spacing={1}>\r\n            <Code code={code} />\r\n            <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            <Description ref={descriptionRef} title={title} subtitle={subtitle} />\r\n          </VStack>\r\n        ) : (\r\n          <HStack spacing={2}>\r\n            <Code code={code} />\r\n            <Box width='2px' height={height} backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            <Description ref={descriptionRef} title={title} subtitle={subtitle} />\r\n          </HStack>\r\n        )}\r\n\r\n        <HStack alignItems='flex-start' spacing={2}>\r\n          {actions}\r\n        </HStack>\r\n      </VStack>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalMovie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n","export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Cinematography',\r\n    value: 'Camera'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: {\r\n          thumbnail: 'w45',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={\r\n        departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n        person?.known_for_department ||\r\n        ''\r\n      }\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst Divider = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      width={`calc(100% - ${theme.space[4]})`}\r\n      height='2px'\r\n      backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Text,\r\n  Icon\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { BreadcrumbsProps } from './types';\r\n\r\nconst Breadcrumbs = (props: BreadcrumbsProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const iconFontSize = useBreakpointValue({\r\n    'base': theme.fontSizes.md,\r\n    'sm': theme.fontSizes.md,\r\n    'md': theme.fontSizes.lg,\r\n    'lg': theme.fontSizes.lg,\r\n    'xl': theme.fontSizes.lg,\r\n    '2xl': theme.fontSizes.lg\r\n  });\r\n\r\n  const style = useStyles(theme);\r\n\r\n  // const { id, mediaType } = useParams<Params>();\r\n  // const location = useLocation();\r\n  // const history = useHistory();\r\n\r\n  // const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const { breadcrumbs } = props;\r\n\r\n  // const [state, setstate] = useState<BreadcrumbType[]>([]);\r\n\r\n  // const handleCheckBreadcrumb = (): boolean => {\r\n  //   const splitLocation = location.pathname.split('/');\r\n\r\n  //   console.log(splitLocation);\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // const handleGenericBreadcrumbLabel = (): string => {\r\n  //   return '';\r\n  // };\r\n\r\n  // const handleReturnBreadcrumbs = (): string[] => {\r\n  //   if (breadcrumbs[location.pathname]) {\r\n  //     return breadcrumbs[location.pathname].consistsOf;\r\n  //   } else {\r\n  //     // const splitLocation = location.pathname.split('/').filter((item) => item);\r\n  //     // const breadcrumb = breadcrumbs[`/${splitLocation[0]}`];\r\n  //     // console.log(breadcrumb);\r\n\r\n  //     return [];\r\n  //   }\r\n  // };\r\n\r\n  // handleReturnBreadcrumbs();\r\n\r\n  // useEffect(() => {\r\n  //   setstate([]);\r\n\r\n  //   if (location.pathname.includes('lists')) {\r\n  //     if (id && mediaType) {\r\n  //       const label =\r\n  //         mediaType === 'movie'\r\n  //           ? 'Movies'\r\n  //           : mediaType === 'tv'\r\n  //           ? 'TV Shows'\r\n  //           : mediaType === 'person'\r\n  //           ? 'People'\r\n  //           : 'Media-Type';\r\n\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         },\r\n  //         {\r\n  //           label,\r\n  //           path: `/lists/${id}/${mediaType}`\r\n  //         }\r\n  //       ]);\r\n  //     } else if (id) {\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         }\r\n  //       ]);\r\n  //     }\r\n  //   } else if (mediaType) {\r\n  //     const label =\r\n  //       mediaType === 'movie'\r\n  //         ? 'Movies'\r\n  //         : mediaType === 'tv'\r\n  //         ? 'TV Shows'\r\n  //         : mediaType === 'person'\r\n  //         ? 'People'\r\n  //         : 'Media-Type';\r\n\r\n  //     setstate([\r\n  //       {\r\n  //         label,\r\n  //         path: location.pathname.includes('trending')\r\n  //           ? `/trending/${mediaType}`\r\n  //           : location.pathname.includes('liked')\r\n  //           ? `/liked/${mediaType}`\r\n  //           : ''\r\n  //       }\r\n  //     ]);\r\n  //   }\r\n  // }, [location]);\r\n\r\n  // console.log(history);\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${iconFontSize} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {breadcrumbs.map((breadcrumb, index) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={index === breadcrumbs.length - 1}\r\n          fontSize={['sm', 'sm', 'md', 'md', 'md', 'md']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          <SkeletonText offsetY={8} isLoaded={!breadcrumb.isLoading}>\r\n            {index === breadcrumbs.length - 1 ? (\r\n              <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n                {breadcrumb.label || ''}\r\n              </Text>\r\n            ) : (\r\n              <BreadcrumbLink\r\n                as={Link}\r\n                to={{ ...breadcrumb.to }}\r\n                sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n                {breadcrumb.label || ''}\r\n              </BreadcrumbLink>\r\n            )}\r\n          </SkeletonText>\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport { TitleProps } from './types';\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, breadcrumbs } = props;\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n      <Breadcrumbs breadcrumbs={breadcrumbs} />\r\n      {typeof title === 'string' ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n          fontWeight='bold'>\r\n          {title || 'Page title'}\r\n        </Text>\r\n      ) : (\r\n        title\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport Divider from './components/Divider';\r\nimport Title from './components/Title';\r\nimport { PageProps } from './types';\r\n\r\nconst Page = (props: PageProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { children, title, breadcrumbs } = props;\r\n\r\n  return (\r\n    <VStack width='100%' divider={<Divider />} spacing={0}>\r\n      {/* Header */}\r\n      {isSm ? (\r\n        <VStack width='100%' p={2} spacing={2}>\r\n          <Title title={title} breadcrumbs={breadcrumbs} />\r\n\r\n          {children?.actions || null}\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' justifyContent='space-between' p={2}>\r\n          <Title title={title} breadcrumbs={breadcrumbs} />\r\n\r\n          {children?.actions || null}\r\n        </HStack>\r\n      )}\r\n\r\n      <Box width='100%'>{children.body}</Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Home' breadcrumbs={[]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularMovies.isFetching || popularMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={popularMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/movie' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingMovies.isFetching || trendingMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingMovies.isFetching || trendingMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={trendingMovies.isError}\r\n                isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n                movies={trendingMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular TV shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularTV.isFetching || popularTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular TV\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={popularTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending TV shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/tv' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingTV.isFetching || trendingTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingTV.isFetching || trendingTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending TV\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingTV.isFetching || trendingTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={trendingTV.isError}\r\n                isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n                tv={trendingTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending People')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/person' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingPeople.isFetching || trendingPeople.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending People\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingPeople.isFetching || trendingPeople.isLoading}>\r\n              <HorizontalPeople\r\n                isError={trendingPeople.isError}\r\n                isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n                people={trendingPeople.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const likedListsSortBy: SortBy[] = [\r\n  {\r\n    label: 'Date Added',\r\n    value: 'dateAdded',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsMovieSortBy: SortBy[] = [...movieSortBy, ...likedListsSortBy];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsTvSortBy: SortBy[] = [...tvSortBy, ...likedListsSortBy];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsPeopleSortBy: SortBy[] = [...peopleSortBy, ...likedListsSortBy];\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n                </Button>\r\n              ),\r\n              title: 'Departments'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {departments.map((department) => (\r\n                  <WrapItem key={department.id}>\r\n                    <Genre\r\n                      key={department.id}\r\n                      {...department}\r\n                      isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                      onClick={handleDepartmentClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: { title: 'Display Mode' },\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {displayModes.map((displayMode) => (\r\n                  <DisplayModeItem\r\n                    key={displayMode.value}\r\n                    {...displayMode}\r\n                    isActive={value === displayMode.value}\r\n                    onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {handleAllLabel()}\r\n                </Button>\r\n              ),\r\n              title: 'Genres'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {mediaType === 'movie'\r\n                  ? movieGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : mediaType === 'tv'\r\n                  ? tvGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : null}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Sort by'\r\n            },\r\n            body: (\r\n              <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n                {value.sortBy.map((sort) => (\r\n                  <SortByItem\r\n                    key={sort.value}\r\n                    {...sort}\r\n                    direction={value.direction}\r\n                    onSortChange={handleSortChange}\r\n                    onDirectionChange={handleDirectionChange}\r\n                  />\r\n                ))}\r\n              </VStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  movieSortBy,\r\n  likedListsMovieSortBy,\r\n  tvSortBy,\r\n  likedListsTvSortBy,\r\n  peopleSortBy,\r\n  likedListsPeopleSortBy\r\n} from '../../common/data/sort';\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = (props: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { mediaType, isLikedLists = false, isDisabled = false, onFilter } = props;\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: isLikedLists\r\n        ? mediaType === 'movie'\r\n          ? [...likedListsMovieSortBy]\r\n          : mediaType === 'tv'\r\n          ? [...likedListsTvSortBy]\r\n          : [...likedListsPeopleSortBy]\r\n        : mediaType === 'movie'\r\n        ? [...movieSortBy]\r\n        : mediaType === 'tv'\r\n        ? [...tvSortBy]\r\n        : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: isLikedLists\r\n            ? pathname.includes('movie')\r\n              ? [...likedListsMovieSortBy]\r\n              : pathname.includes('tv')\r\n              ? [...likedListsTvSortBy]\r\n              : [...likedListsPeopleSortBy]\r\n            : pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? utils.handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        isDisabled={isDisabled}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isDisabled={!isDirty}\r\n            onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n            size='sm'>\r\n            Submit\r\n          </Button>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='3xl'>\r\n        <VStack spacing={2} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, Text } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const headerTotal = header?.props?.children?.props?.children?.length || 0;\r\n\r\n  return (\r\n    <Stack\r\n      width='100%'\r\n      direction={isSm && headerTotal > 1 ? 'column' : 'row'}\r\n      alignItems={isSm && headerTotal > 1 ? 'stretch' : 'center'}\r\n      justify={title ? 'space-between' : 'flex-end'}\r\n      wrap='wrap'\r\n      spacing={2}\r\n      p={[2]}>\r\n      {title ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='2xl'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n      ) : null}\r\n\r\n      {header}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      {title || header ? <Header title={title} header={header} /> : null}\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(value)}\r\n      px={2}\r\n      py={6}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { mediaTypes, mediaType, onSetType } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n  };\r\n\r\n  return isXs ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  useEffect(() => {\r\n    onClose();\r\n  }, [location]);\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/Modals';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, mediaItem, isLoading = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              mediaType,\r\n              mediaItem\r\n            })\r\n          )\r\n        }>\r\n        {!isLoading\r\n          ? mediaItem.description\r\n          : 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={11.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['lg', 'xl', '2xl', '3xl']}\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean, HStack, VStack, Box, AspectRatio } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Skeleton from '../../Skeleton';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\r\n\r\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const {\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    description = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useBoolean();\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useBoolean();\r\n  const [isHoveringDescription, setIsHoveringDescription] = useBoolean();\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isHoveringLiked || isHoveringBookmark || isHoveringDescription}\r\n      to={{ pathname: `${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card\r\n        isFullWidth\r\n        isDisabled={isLoading}\r\n        isClickable={!isHoveringLiked && !isHoveringBookmark && !isHoveringDescription}\r\n        isLightGray>\r\n        <HStack width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\r\n          {/* Image */}\r\n          <AspectRatio width={width || '100%'} minWidth={width || '100%'} maxWidth={width || '100%'} ratio={16 / 9}>\r\n            <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n              <Image\r\n                alt={image.alt}\r\n                mediaType={mediaType}\r\n                maxWidth='none'\r\n                height='100%'\r\n                borderRadius='base'\r\n                src={image.src}\r\n                size={image.size}\r\n              />\r\n            </Skeleton>\r\n          </AspectRatio>\r\n\r\n          <VStack\r\n            width={[\r\n              'calc(100% - 108px)',\r\n              'calc(100% - 124px)',\r\n              'calc(100% - 168px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 240px)'\r\n            ]}\r\n            alignItems='flex-start'\r\n            spacing={[1, 1, 2, 2, 2, 2]}>\r\n            {/* Rating component */}\r\n            {mediaType !== 'person' ? <Rating rating={rating} isLoading={isLoading} isHorizontal /> : null}\r\n\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n\r\n            <Box\r\n              width='100%'\r\n              onMouseEnter={() => setIsHoveringDescription.on()}\r\n              onMouseLeave={() => setIsHoveringDescription.off()}>\r\n              {typeof description === 'string' ? (\r\n                <Description\r\n                  mediaType={mediaType}\r\n                  mediaItem={{ id: mediaItem?.id || -1, title, description }}\r\n                  isLoading={isLoading}\r\n                />\r\n              ) : (\r\n                description\r\n              )}\r\n            </Box>\r\n          </VStack>\r\n\r\n          {/* Like / List Icon buttons */}\r\n          {mediaItem ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 1\r\n              }}>\r\n              {/* Like component */}\r\n              <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                <Like\r\n                  isDisabled={isLoading}\r\n                  title={title}\r\n                  mediaType={mediaType}\r\n                  mediaItem={mediaItem}\r\n                  size={isSm ? 'sm' : 'md'}\r\n                />\r\n              </Box>\r\n              {/* List component */}\r\n              {mediaType !== 'person' ? (\r\n                <Box onMouseEnter={() => setIsHoveringBookmark.on()} onMouseLeave={() => setIsHoveringBookmark.off()}>\r\n                  <Bookmark\r\n                    isDisabled={isLoading}\r\n                    title={title}\r\n                    mediaType={mediaType}\r\n                    mediaItem={mediaItem}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </HStack>\r\n          ) : null}\r\n        </HStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      description={movie?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text, useTheme, HStack } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Link from '../../../Clickable/Link';\r\nimport HorizontalScroll from '../../../HorizontalScroll';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport { PosterProps } from '../types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: {\r\n          thumbnail: 'w45',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={\r\n        departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n        person?.known_for_department ||\r\n        ''\r\n      }\r\n      description={\r\n        <HorizontalScroll>\r\n          <HStack\r\n            divider={\r\n              <Text\r\n                align='left'\r\n                fontSize={['sm', 'md', 'lg', 'xl']}\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                pr={0.75}>\r\n                ,\r\n              </Text>\r\n            }>\r\n            {arraySort(person?.known_for || [], 'vote_average').map((mediaItem) => (\r\n              <Link\r\n                key={mediaItem.id}\r\n                to={{ pathname: `/${mediaItem?.title ? 'movie' : mediaItem?.name ? 'tv' : ''}/${mediaItem.id}` }}>\r\n                <SkeletonText\r\n                  width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n                  offsetY={8.5}\r\n                  isLoaded={!isLoading}>\r\n                  <Text\r\n                    align='left'\r\n                    fontSize={['sm', 'md', 'lg', 'xl']}\r\n                    color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                    isTruncated\r\n                    overflow='hidden'\r\n                    whiteSpace='nowrap'\r\n                    sx={{\r\n                      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n                    }}\r\n                    _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n                    {!isLoading ? mediaItem?.title || mediaItem?.name || '' : 'Lorem ipsum dolor'}\r\n                  </Text>\r\n                </SkeletonText>\r\n              </Link>\r\n            ))}\r\n          </HStack>\r\n        </HorizontalScroll>\r\n      }\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      description={show?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import { Breadcrumb } from '../../types';\r\n\r\nconst home: Breadcrumb = {\r\n  label: 'Home',\r\n  to: { pathname: '/' }\r\n};\r\n\r\nconst search = {\r\n  label: 'Search',\r\n  to: { pathname: '/search' }\r\n};\r\n\r\nconst trending = {\r\n  label: 'Trending',\r\n  to: { pathname: '/trending' }\r\n};\r\n\r\nconst movies: Breadcrumb = {\r\n  label: 'Movies',\r\n  to: { pathname: '/movies' }\r\n};\r\n\r\nconst tv: Breadcrumb = {\r\n  label: 'TV Shows',\r\n  to: { pathname: '/tv' }\r\n};\r\n\r\nconst people: Breadcrumb = {\r\n  label: 'People',\r\n  to: { pathname: '/people' }\r\n};\r\n\r\nconst liked = {\r\n  label: 'Liked',\r\n  to: { pathname: '/liked' }\r\n};\r\n\r\nconst lists = {\r\n  label: 'Lists',\r\n  to: { pathname: '/lists' }\r\n};\r\n\r\n// '/person/:id': {\r\n//   label: 'Person',\r\n//   consistsOf: ['/', '/people', '/person/:id']\r\n// }\r\n\r\nexport { home, search, trending, movies, tv, people, liked, lists };\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n          <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n        </Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('Movies', movies.length)}\r\n          footer={\r\n            movies.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/movie' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${movies.length || 0} liked movie${\r\n                    movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {movies.map((movie, index) =>\r\n              index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* TV */}\r\n      <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('TV shows', tv.length)}\r\n          footer={\r\n            tv.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/tv' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {tv.map((show, index) =>\r\n              index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* People */}\r\n      <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('People', people.length)}\r\n          footer={\r\n            people.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/person' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${people.length || 0} liked ${\r\n                    (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {people.map((person, index) =>\r\n              index < 20 ? <VerticalPersonPoster key={person.id} isLoading={false} person={person} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  HStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Center,\r\n  Text,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalPersonPoster from '../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../components/People/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, liked as likedBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([...liked.movies]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([...liked.tv]);\r\n  const [people, setPeople] = useState<MediaItem<'person'>[]>([...liked.people]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredMovies: MediaItem<'movie'>[] = [...liked.movies];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setMovies([...filteredMovies]);\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredTV: MediaItem<'tv'>[] = [...liked.tv];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setTV([...filteredTV]);\r\n  };\r\n\r\n  const handleFilterPeople = (sortBy: SortBy[], departments: Department[]): void => {\r\n    let filteredPeople: MediaItem<'person'>[] = [...liked.people];\r\n\r\n    if (departments && departments.length > 0) {\r\n      filteredPeople = filteredPeople.filter((person) =>\r\n        departments.some((department) => person.known_for_department === department.value)\r\n      );\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredPeople = arraySort(filteredPeople, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setPeople([...filteredPeople]);\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      case 'person':\r\n        handleFilterPeople(sortBy, departments);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleHasMediaTypes = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return (tv && tv.length > 0) || (people && people.length > 0);\r\n      case 'tv':\r\n        return (movies && movies.length > 0) || (people && people.length > 0);\r\n      case 'person':\r\n        return (movies && movies.length > 0) || (tv && tv.length > 0);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypes = (): MediaType[] => {\r\n    const mediaTypes: MediaType[] = [];\r\n\r\n    if (movies && movies.length > 0) {\r\n      mediaTypes.push('movie');\r\n    }\r\n    if (tv && tv.length > 0) {\r\n      mediaTypes.push('tv');\r\n    }\r\n    if (people && people.length > 0) {\r\n      mediaTypes.push('person');\r\n    }\r\n\r\n    return mediaTypes;\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, likedBreadcrumb];\r\n\r\n    switch (mediaType) {\r\n      case 'person':\r\n        breadcrumbs.push({\r\n          label: 'People',\r\n          to: { pathname: '/liked/person' }\r\n        });\r\n        break;\r\n      case 'tv':\r\n        breadcrumbs.push({\r\n          label: 'TV Shows',\r\n          to: { pathname: '/liked/tv' }\r\n        });\r\n        break;\r\n      case 'movie':\r\n        breadcrumbs.push({\r\n          label: 'Movies',\r\n          to: { pathname: '/liked/movie' }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(null);\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {mediaType === 'movie'\r\n                ? 'Movies'\r\n                : mediaType === 'tv'\r\n                ? 'TV shows'\r\n                : mediaType === 'person'\r\n                ? 'People'\r\n                : 'Liked'}\r\n              <Badge\r\n                label={\r\n                  mediaType === 'movie'\r\n                    ? String(movies.length)\r\n                    : mediaType === 'tv'\r\n                    ? String(tv.length)\r\n                    : mediaType === 'person'\r\n                    ? String(people.length)\r\n                    : String(movies.length + tv.length + people.length)\r\n                }\r\n                color={mediaType ? utils.handleReturnColor(color) : 'gray'}\r\n                size='lg'\r\n                ml={2}\r\n              />\r\n            </Text>\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType} unmountOnExit style={{ width: isSm ? '100%' : 'auto' }}>\r\n              <HStack width={isSm ? '100%' : 'auto'} spacing={2}>\r\n                <ScaleFade in={handleHasMediaTypes()} unmountOnExit style={{ width: isSm ? '100%' : 'auto' }}>\r\n                  <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                    Change media type\r\n                  </Button>\r\n                </ScaleFade>\r\n                {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n                mediaType === 'movie' ? (\r\n                  movies.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {movies.map((movie) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                        ) : (\r\n                          <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} py={0}>\r\n                      <Empty label='You have liked no movie!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : mediaType === 'tv' ? (\r\n                  tv.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {tv.map((show) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                        ) : (\r\n                          <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} py={0}>\r\n                      <Empty label='You have no liked no tv show!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : mediaType === 'person' ? (\r\n                  people.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {people.map((person) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalPersonPoster key={person.id} isLoading={false} person={person} />\r\n                        ) : (\r\n                          <VerticalPersonPoster key={person.id} width='100%' isLoading={false} person={person} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} pt={2}>\r\n                      <Empty label='You have no liked nobody!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : (\r\n                  <All movies={movies} tv={tv} people={people} />\r\n                )\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={handleReturnMediaTypes()}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Fade, Collapse } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n        <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('Movies', movies.length)}\r\n            footer={\r\n              movies.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/movie` }} isFullWidth>\r\n                  <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${movies.length || 0} movie${\r\n                      movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                    }`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {movies.map((movie, index) =>\r\n                index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('TV shows', tv.length)}\r\n            footer={\r\n              tv.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/tv` }} isFullWidth>\r\n                  <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {tv.map((show, index) =>\r\n                index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { EditListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst EditList = ({ list, isOpen, onClose }: EditListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    if (list) {\r\n      dispatch(\r\n        setLists(\r\n          lists.map((paramList) =>\r\n            paramList.id === list.id\r\n              ? {\r\n                  ...list,\r\n                  label: values.label,\r\n                  description: values?.description || '',\r\n                  date: moment(new Date()).toISOString(),\r\n                  results: {\r\n                    ...list.results\r\n                  }\r\n                }\r\n              : { ...paramList }\r\n          )\r\n        )\r\n      );\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && list) {\r\n      form.reset({\r\n        label: list.label,\r\n        description: list.description\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`Edit ${list?.label ? `\"${list.label}\"` : ''} List`}\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Box, HStack, Text } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport { EmptyListProps } from './types';\r\n\r\nconst EmptyList = (props: EmptyListProps): ReactElement => {\r\n  const history = useHistory();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, label, mediaTypeLabel } = props;\r\n\r\n  return (\r\n    <Box width='100%' px={2} pt={2}>\r\n      <Empty\r\n        button={\r\n          <HStack spacing={1}>\r\n            {mediaTypeLabel ? (\r\n              <>\r\n                <Button\r\n                  color={utils.handleReturnColor(color)}\r\n                  onClick={() => history.push({ pathname: `/lists/${id}` })}\r\n                  size='sm'\r\n                  variant='outlined'>\r\n                  {`Back to \"${label}\" list`}\r\n                </Button>\r\n                <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                  OR\r\n                </Text>\r\n              </>\r\n            ) : null}\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => history.push({ pathname: '/lists' })}\r\n              size='sm'\r\n              variant='outlined'>\r\n              Back to lists\r\n            </Button>\r\n          </HStack>\r\n        }\r\n        label={\r\n          mediaTypeLabel ? `No ${mediaTypeLabel} found in \"${label}\" list!` : `You have no items in \"${label}\" list!`\r\n        }\r\n        variant='outlined'\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, StatGroup, Stat, StatLabel, StatNumber, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { StatsProps, Stat as StatType } from './types';\r\n\r\nconst Stats = (props: StatsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { totalMovies, totalTvs } = props;\r\n\r\n  const stats: StatType[] = [\r\n    {\r\n      label: 'Total',\r\n      number: totalMovies + totalTvs\r\n    },\r\n    {\r\n      label: 'Movies',\r\n      number: totalMovies\r\n    },\r\n    {\r\n      label: 'TV Shows',\r\n      number: totalTvs\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <StatGroup\r\n      width='100%'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      borderRadius='base'\r\n      p={1}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='space-between'\r\n        divider={<Box width='2px' height='44px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />}\r\n        spacing={1}>\r\n        {stats.map((stat: StatType, index: number) => (\r\n          <Stat key={index} justifyContent='center'>\r\n            <VStack spacing={0}>\r\n              <StatNumber color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='2xl' lineHeight='normal'>\r\n                {stat.number}\r\n              </StatNumber>\r\n              <StatLabel\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                fontSize='xs'\r\n                whiteSpace='nowrap'\r\n                textTransform='uppercase'>\r\n                {stat.label}\r\n              </StatLabel>\r\n            </VStack>\r\n          </Stat>\r\n        ))}\r\n      </HStack>\r\n    </StatGroup>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Modal from '../../../../components/Modal';\r\nimport Stats from './components/Stats';\r\nimport { ListInfoProps } from './types';\r\n\r\nconst ListInfo = ({ list, isOpen, onClose }: ListInfoProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {`${list?.label ? `\"${list.label}\"` : ''} List`}\r\n          </Text>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs' fontWeight='normal'>\r\n            {`${(list ? list?.results.movies.length + list?.results.tv.length : 0) > 0 ? 'Updated' : 'Created'} ${\r\n              moment(list?.date).isSame(moment(), 'day')\r\n                ? moment(list?.date).fromNow()\r\n                : moment(list?.date).format('LL')\r\n            }`}\r\n          </Text>\r\n        </VStack>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      isCentered\r\n      size='md'>\r\n      <VStack width='100%' spacing={2} p={2}>\r\n        {list?.description ? (\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='lg' fontWeight='normal'>\r\n            {list.description}\r\n          </Text>\r\n        ) : null}\r\n\r\n        <Stats totalMovies={list?.results.movies.length || 0} totalTvs={list?.results.tv.length || 0} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ListInfo;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Radio as CUIRadio } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RadioProps } from './types';\r\n\r\nconst Radio = (props: RadioProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { colorMode: colorModeProp, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return <CUIRadio {...rest} sx={{ ..._.merge(style.radio, style[mode]) }} />;\r\n};\r\n\r\nexport default Radio;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { RadioProps } from './types';\r\n\r\ntype RadioStyle = {\r\n  radio: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isChecked = false, isDisabled = false }: RadioProps): RadioStyle => ({\r\n  radio: {\r\n    'opacity': isDisabled ? 0.5 : 1,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none !important'\r\n    },\r\n\r\n    '&.chakra-radio__control': {\r\n      width: theme.space[3],\r\n      height: theme.space[3],\r\n\r\n      boxShadow: 'none !important',\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '& svg': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n      borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n      color: isChecked ? 'gray.50' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.500` : 'transparent',\r\n        borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n        color: isChecked ? 'gray.50' : 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.500` : 'transparent',\r\n      borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n      color: isChecked ? 'gray.900' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.400` : 'transparent',\r\n        borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n        color: isChecked ? 'gray.900' : 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Text, Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport Radio from '../../../../../../components/Clickable/Radio';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { id, label, results, isActive = false, isSelectable = false, isSelected = false, onSelected } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isHoveringRadio, setIsHoveringRadio] = useBoolean();\r\n\r\n  const movies = results.movies.length;\r\n  const tv = results.tv.length;\r\n\r\n  return (\r\n    <Link isFullWidth isDisabled={isHoveringRadio} to={{ pathname: `/lists/${id}` }}>\r\n      <Card\r\n        color={location.pathname.includes(id) || isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n        isFullWidth\r\n        isClickable={!isHoveringRadio}>\r\n        <VStack position='relative' width='100%' spacing={0} px={2} py={6}>\r\n          {isSelectable && onSelected ? (\r\n            <Box position='absolute' top={theme.space[2]} left={theme.space[2]}>\r\n              <Radio\r\n                color={utils.handleReturnColor(color)}\r\n                isChecked={isSelected}\r\n                onMouseEnter={() => setIsHoveringRadio.on()}\r\n                onMouseLeave={() => setIsHoveringRadio.off()}\r\n                onClick={() => onSelected(id)}\r\n              />\r\n            </Box>\r\n          ) : null}\r\n          <Text\r\n            align='center'\r\n            color={\r\n              isActive || isSelected\r\n                ? `${utils.handleReturnColor(color)}.400`\r\n                : colorMode === 'light'\r\n                ? 'gray.900'\r\n                : 'gray.50'\r\n            }\r\n            fontSize='md'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'\r\n            sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n            {label}\r\n          </Text>\r\n          <Text\r\n            align='center'\r\n            color={\r\n              isActive || isSelected\r\n                ? `${utils.handleReturnColor(color)}.400`\r\n                : colorMode === 'light'\r\n                ? 'gray.400'\r\n                : 'gray.500'\r\n            }\r\n            fontSize='xs'\r\n            fontWeight='400'\r\n            textTransform='capitalize'\r\n            sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n            {`${[\r\n              `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n              `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n            ].join(' • ')}`}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Modal from '../../../../components/Modal';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const location = useLocation();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  InfoTwoTone as InfoTwoToneIcon,\r\n  EditOutlined as EditOutlinedIcon,\r\n  DeleteOutlineOutlined as DeleteOutlineOutlinedIcon,\r\n  CloseOutlined as CloseOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport store from '../../../../store';\r\nimport { ToastProps } from './types';\r\n\r\nconst Toast = (props: ToastProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = store.getState().user.ui.theme.color;\r\n\r\n  const { selected, onInfo, onEdit, onDelete, onClose } = props;\r\n\r\n  return (\r\n    <HStack\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      borderRadius='full'\r\n      boxShadow='lg'\r\n      spacing={2}\r\n      px={2}\r\n      py={1.5}\r\n      mb={1.5}>\r\n      <HStack spacing={0.25}>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          fontSize={isSm ? 'sm' : 'md'}\r\n          fontWeight='normal'\r\n          whiteSpace='nowrap'>\r\n          {`\"${selected.label}\" list`}\r\n        </Text>\r\n      </HStack>\r\n\r\n      <HStack spacing={1}>\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Information related to selected list'\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}>\r\n            Info\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Edit selected list'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Delete selected list'\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}>\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n\r\n      <IconButton\r\n        aria-label='Close'\r\n        colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n        icon={CloseOutlinedIcon}\r\n        onClick={() => onClose()}\r\n        size={isSm ? 'sm' : 'md'}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  useToast,\r\n  VStack,\r\n  HStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Center,\r\n  Text,\r\n  Fade,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport IconButton from '../../components/Clickable/IconButton';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, lists as listsBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { toggleConfirm } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport CreateList from './components/CreateList';\r\nimport EditList from './components/EditList';\r\nimport EmptyList from './components/Empty';\r\nimport ListInfo from './components/ListInfo';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Toast from './components/Toast';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n  const { isOpen: isEditListOpen, onOpen: onEditListOpen, onClose: onEditListClose } = useDisclosure();\r\n  const { isOpen: isListInfoOpen, onOpen: onListInfoOpen, onClose: onListInfoClose } = useDisclosure();\r\n\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const toast = useToast();\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([]);\r\n\r\n  const [selected, setSelected] = useState<ListType>();\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.movies) {\r\n      let filteredMovies: MediaItem<'movie'>[] = [...list.results.movies];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n      }\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setMovies([...filteredMovies]);\r\n    }\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.tv) {\r\n      let filteredTV: MediaItem<'tv'>[] = [...list.results.tv];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n      }\r\n\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setTV([...filteredTV]);\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, listsBreadcrumb];\r\n\r\n    if (list) {\r\n      breadcrumbs.push({\r\n        label: list.label,\r\n        to: { pathname: `/lists/${list.id}` }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: { pathname: `/lists/${list.id}/tv` }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: { pathname: `/lists/${list.id}/movie` }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  const handleSelectList = (id: ListType['id']): void => {\r\n    if (selected?.id === id) {\r\n      setSelected(undefined);\r\n    } else {\r\n      setSelected(lists.find((list) => list.id === id));\r\n    }\r\n  };\r\n\r\n  const handleCloseToast = (): void => {\r\n    toast.closeAll();\r\n    setSelected(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies([...activeList.results.movies]);\r\n      setTV([...activeList.results.tv]);\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    toast.closeAll();\r\n\r\n    if (selected) {\r\n      toast({\r\n        duration: null,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n        variant: 'solid',\r\n        render: function RenderToast() {\r\n          return (\r\n            <Toast\r\n              selected={selected}\r\n              onInfo={() => onListInfoOpen()}\r\n              onEdit={() => onEditListOpen()}\r\n              onDelete={() =>\r\n                dispatch(\r\n                  toggleConfirm({\r\n                    open: true,\r\n                    title: isSm ? 'Delete' : `Delete ${selected?.label ? `\"${selected.label}\"` : ''} list`,\r\n                    description: `Are you sure you want to delete the ${\r\n                      selected?.label ? `\"${selected.label}\"` : ''\r\n                    } list? You will not be able to retrieve this list back!`,\r\n                    submitButton: (\r\n                      <Button\r\n                        color='red'\r\n                        onClick={() => {\r\n                          dispatch(setLists(lists.filter((paramList) => paramList.id !== selected?.id)));\r\n                          dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                          handleCloseToast();\r\n                        }}\r\n                        size='sm'>\r\n                        Delete\r\n                      </Button>\r\n                    )\r\n                  })\r\n                )\r\n              }\r\n              onClose={() => handleCloseToast()}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {list\r\n                ? `\"${list.label}\" list ${mediaType === 'movie' ? 'Movies' : mediaType === 'tv' ? 'TV shows' : ''}`\r\n                : 'Lists'}\r\n            </Text>\r\n            <Badge\r\n              label={\r\n                list\r\n                  ? mediaType === 'movie'\r\n                    ? String(movies.length)\r\n                    : mediaType === 'tv'\r\n                    ? String(tv.length)\r\n                    : String(movies.length + tv.length)\r\n                  : String(lists.length)\r\n              }\r\n              size='lg'\r\n              ml={2}\r\n            />\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions:\r\n            mediaType || (list && lists.length > 0) ? (\r\n              isSm ? (\r\n                <Fade in={!!mediaType || (!!list && lists.length > 1)} unmountOnExit style={{ width: '100%' }}>\r\n                  <VStack width='100%' spacing={2}>\r\n                    {mediaType ? (\r\n                      <HStack width='100%' spacing={2}>\r\n                        {movies.length > 0 && tv.length > 0 ? (\r\n                          <Button onClick={() => onMediaTypePickerOpen()} isFullWidth variant='outlined'>\r\n                            Change media-type\r\n                          </Button>\r\n                        ) : null}\r\n                        {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n                      </HStack>\r\n                    ) : null}\r\n                    {!!list && lists.length > 1 ? (\r\n                      <Button onClick={() => onListPickerOpen()} isFullWidth variant='outlined'>\r\n                        Change list\r\n                      </Button>\r\n                    ) : null}\r\n                  </VStack>\r\n                </Fade>\r\n              ) : (\r\n                <HStack spacing={2}>\r\n                  <ScaleFade in={!!mediaType} unmountOnExit>\r\n                    <HStack spacing={2}>\r\n                      {movies.length > 0 && tv.length > 0 ? (\r\n                        <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                          Change media-type\r\n                        </Button>\r\n                      ) : null}\r\n                      {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n                    </HStack>\r\n                  </ScaleFade>\r\n                  <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n                    <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                      Change list\r\n                    </Button>\r\n                  </ScaleFade>\r\n                  <ScaleFade in={!!list} unmountOnExit>\r\n                    <IconButton\r\n                      aria-label='Open Information modal'\r\n                      icon={InfoTwoToneIcon}\r\n                      onClick={() => onListInfoOpen()}\r\n                      variant='outlined'\r\n                    />\r\n                  </ScaleFade>\r\n                </HStack>\r\n              )\r\n            ) : (\r\n              <Button onClick={() => onCreateListOpen()} isFullWidth={isSm} variant='outlined'>\r\n                Create new list\r\n              </Button>\r\n            ),\r\n          body: (\r\n            <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n              <VerticalGrid>\r\n                {list ? (\r\n                  movies.length > 0 || tv.length > 0 ? (\r\n                    mediaType === 'movie' ? (\r\n                      movies.length > 0 ? (\r\n                        <SimpleGrid\r\n                          width='100%'\r\n                          columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                          spacing={2}\r\n                          px={2}\r\n                          pt={2}>\r\n                          {movies.map((movie) =>\r\n                            displayMode === 'list' ? (\r\n                              <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                            ) : (\r\n                              <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                            )\r\n                          )}\r\n                        </SimpleGrid>\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='movies' />\r\n                      )\r\n                    ) : mediaType === 'tv' ? (\r\n                      tv.length > 0 ? (\r\n                        <SimpleGrid\r\n                          width='100%'\r\n                          columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                          spacing={2}\r\n                          px={2}\r\n                          pt={2}>\r\n                          {tv.map((show) =>\r\n                            displayMode === 'list' ? (\r\n                              <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                            ) : (\r\n                              <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                            )\r\n                          )}\r\n                        </SimpleGrid>\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='tv shows' />\r\n                      )\r\n                    ) : (\r\n                      <All list={list} movies={movies} tv={tv} />\r\n                    )\r\n                  ) : (\r\n                    <EmptyList id={list.id} label={list.label} />\r\n                  )\r\n                ) : lists && lists.length > 0 ? (\r\n                  <SimpleGrid width='100%' columns={[1, 2, 3, 4, 4]} spacing={2} px={2} pt={2}>\r\n                    {lists.map((list) => (\r\n                      <List\r\n                        {...list}\r\n                        key={list.id}\r\n                        isSelectable\r\n                        isSelected={selected?.id === list.id || false}\r\n                        onSelected={handleSelectList}\r\n                      />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' p={2}>\r\n                    <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n                  </Box>\r\n                )}\r\n              </VerticalGrid>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n\r\n      <EditList list={selected} isOpen={isEditListOpen} onClose={() => onEditListClose()} />\r\n\r\n      <ListInfo list={list || selected} isOpen={isListInfoOpen} onClose={onListInfoClose} />\r\n\r\n      {!!mediaType && list ? (\r\n        <MediaTypePicker\r\n          mediaTypes={['movie', 'tv']}\r\n          mediaType={mediaType}\r\n          isOpen={isMediaTypePickerOpen}\r\n          onClose={onMediaTypePickerClose}\r\n          onSetType={(mediaType: MediaType) => history.push({ pathname: `/lists/${list.id}/${mediaType}` })}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\nimport { home, movies } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Movies' breadcrumbs={[home, movies]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularMovies.isFetching || popularMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular Movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={popularMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Upcoming Movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/upcoming' }}\r\n                  isFullWidth\r\n                  isDisabled={upcomingMovies.isFetching || upcomingMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Upcoming Movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={upcomingMovies.isError}\r\n                isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n                movies={upcomingMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Movies Now Playing')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/now-playing' }}\r\n                  isFullWidth\r\n                  isDisabled={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Movies Now Playing\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}>\r\n              <HorizontalMovies\r\n                isError={moviesNowPlaying.isError}\r\n                isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n                movies={moviesNowPlaying.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Top Rated Movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/top-rated' }}\r\n                  isFullWidth\r\n                  isDisabled={topRatedMovies.isFetching || topRatedMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Movies Now Playing\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={topRatedMovies.isError}\r\n                isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n                movies={topRatedMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount = 0, total = 0, mediaType, isLoading = false, isError = false, hasNextPage = true, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${utils.handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      <ScaleFade in={hasNextPage && !isError && amount < total} unmountOnExit>\r\n        <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n          Load more\r\n        </Button>\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Movies Now Playing'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Now Playing', to: { pathname: '/movies/now-playing' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!moviesNowPlaying.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={moviesNowPlaying.isError}\r\n                isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n                  isError={moviesNowPlaying.isError}\r\n                  hasNextPage={moviesNowPlaying.hasNextPage || true}\r\n                  onFetch={moviesNowPlaying.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Popular', to: { pathname: '/movies/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!popularMovies.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={popularMovies.isFetching || popularMovies.isLoading}\r\n                  isError={popularMovies.isError}\r\n                  hasNextPage={popularMovies.hasNextPage || true}\r\n                  onFetch={popularMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Top Rated', to: { pathname: '/movies/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!topRatedMovies.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={topRatedMovies.isError}\r\n                isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n                  isError={topRatedMovies.isError}\r\n                  hasNextPage={topRatedMovies.hasNextPage || true}\r\n                  onFetch={topRatedMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Upcoming Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Upcoming', to: { pathname: '/movies/upcoming' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={upcomingMovies.isError}\r\n                isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n                  isError={upcomingMovies.isError}\r\n                  hasNextPage={upcomingMovies.hasNextPage || true}\r\n                  onFetch={upcomingMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, people as peopleBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='People' breadcrumbs={[home, peopleBreadcrumb]}>\r\n      {{\r\n        actions: <Filters mediaType='person' isDisabled={!popularPeople.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalPeople\r\n                isError={popularPeople.isError}\r\n                isSuccess={popularPeople.isSuccess && !popularPeople.isFetching && !popularPeople.isLoading}\r\n                people={people?.results || []}\r\n              />\r\n\r\n              {people ? (\r\n                <LoadMore\r\n                  amount={people.results.length}\r\n                  total={people.total_results}\r\n                  mediaType='people'\r\n                  isLoading={popularPeople.isFetching || popularPeople.isLoading}\r\n                  isError={popularPeople.isError}\r\n                  hasNextPage={popularPeople.hasNextPage || true}\r\n                  onFetch={popularPeople.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport { MoviesProps } from './types';\r\n\r\nconst Movies = (props: MoviesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} movie${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} movie${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalMovies isError={isError} isSuccess={isSuccess} movies={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport { PeopleProps } from './types';\r\n\r\nconst People = (props: PeopleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} ${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'person' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} ${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalPeople isError={isError} isSuccess={isSuccess} people={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\nimport { TVProps } from './types';\r\n\r\nconst TV = (props: TVProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} TV show${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'tv' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} TV show${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalTV isError={isError} isSuccess={isSuccess} tv={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade } from '@chakra-ui/react';\r\n\r\nimport Movies from './components/Movies';\r\nimport People from './components/People';\r\nimport TV from './components/TV';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Fade\r\n        in={(movies.data?.pages[movies.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <Movies\r\n          query={query}\r\n          results={movies.data?.pages[movies.data?.pages.length - 1].results || []}\r\n          total_results={movies.data?.pages[movies.data?.pages.length - 1].total_results || 0}\r\n          isFetching={movies.isFetching}\r\n          isLoading={movies.isLoading}\r\n          isError={movies.isError}\r\n          isSuccess={movies.isSuccess}\r\n          refetch={movies.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* TV */}\r\n      <Fade\r\n        in={(tv.data?.pages[tv.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <TV\r\n          query={query}\r\n          results={tv.data?.pages[tv.data?.pages.length - 1].results || []}\r\n          total_results={tv.data?.pages[tv.data?.pages.length - 1].total_results || 0}\r\n          isFetching={tv.isFetching}\r\n          isLoading={tv.isLoading}\r\n          isError={tv.isError}\r\n          isSuccess={tv.isSuccess}\r\n          refetch={tv.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* People */}\r\n      <Fade\r\n        in={(people.data?.pages[people.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <People\r\n          query={query}\r\n          results={people.data?.pages[people.data?.pages.length - 1].results || []}\r\n          total_results={people.data?.pages[people.data?.pages.length - 1].total_results || 0}\r\n          isFetching={people.isFetching}\r\n          isLoading={people.isLoading}\r\n          isError={people.isError}\r\n          isSuccess={people.isSuccess}\r\n          refetch={people.refetch}\r\n        />\r\n      </Fade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const {\r\n    hasQuery = false,\r\n    isFormLocked = false,\r\n    isHoveringLock = false,\r\n    onToggleLock,\r\n    onHoverLock,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isHoveringClear, setIsHoveringClear] = useBoolean();\r\n\r\n  return (\r\n    <Center>\r\n      <ScaleFade in={hasQuery} unmountOnExit>\r\n        <Tooltip\r\n          aria-label='Clear search'\r\n          label='Clear search'\r\n          isOpen={isHoveringClear}\r\n          isDisabled={!hasQuery}\r\n          placement='top'>\r\n          <IconButton\r\n            aria-label='Clear search'\r\n            icon={ClearOutlinedIcon}\r\n            isDisabled={!hasQuery}\r\n            onClick={() => onClearQuery()}\r\n            onMouseEnter={() => setIsHoveringClear.on()}\r\n            onMouseLeave={() => setIsHoveringClear.off()}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Tooltip>\r\n      </ScaleFade>\r\n      <Tooltip\r\n        aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        isOpen={isHoveringLock}\r\n        placement='top'>\r\n        <IconButton\r\n          aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n          icon={isFormLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n          onClick={() => onToggleLock()}\r\n          onMouseEnter={() => onHoverLock(true)}\r\n          onMouseLeave={() => onHoverLock(false)}\r\n          size='sm'\r\n          variant='icon'\r\n        />\r\n      </Tooltip>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text, SlideFade } from '@chakra-ui/react';\r\n\r\nimport { DisplayProps } from './types';\r\n\r\nconst Display = ({ query = '', mediaType, hasUnsubmitted, totalResults }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const handleMultiply = (): number => {\r\n    return (totalResults?.movies || 0) + (totalResults?.tv || 0) + (totalResults?.people || 0);\r\n  };\r\n\r\n  const handleReturnMediaTypeResults = (): number => {\r\n    switch (mediaType) {\r\n      case 'person':\r\n        return totalResults?.people || 0;\r\n      case 'tv':\r\n        return totalResults?.tv || 0;\r\n      case 'movie':\r\n        return totalResults?.movies || 0;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypeLabel = (): string => {\r\n    if (mediaType) {\r\n      const total = handleReturnMediaTypeResults();\r\n\r\n      switch (mediaType) {\r\n        case 'person':\r\n          return `${total > 1 ? 'People' : 'Person'}`;\r\n        case 'tv':\r\n          return `TV Show${total > 1 ? 's' : ''}`;\r\n        case 'movie':\r\n          return `Movie${total > 1 ? 's' : ''}`;\r\n        default:\r\n          return '';\r\n      }\r\n    } else {\r\n      const total = handleMultiply();\r\n\r\n      return `result${total > 1 ? 's' : ''}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SlideFade in={Boolean(totalResults) && !hasUnsubmitted} offsetY={-7} unmountOnExit style={{ width: '100%' }}>\r\n      <HStack width='100%' justifyContent='space-between'>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>{`${\r\n          mediaType ? handleReturnMediaTypeResults() : handleMultiply()\r\n        } ${handleReturnMediaTypeLabel()} found`}</Text>\r\n      </HStack>\r\n    </SlideFade>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { VStack, List as CUIList } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst List = (props: ListProps): ReactElement => {\r\n  const { children, title, actions } = props;\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CUIList spacing={0}>\r\n      <Card\r\n        box={{\r\n          header: { pb: 1 }\r\n        }}\r\n        isFullWidth\r\n        hasDivider={false}\r\n        variant='transparent'>\r\n        {{\r\n          header: {\r\n            title,\r\n            actions\r\n          },\r\n          body: (\r\n            <VStack\r\n              ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n              width='100%'\r\n              alignItems='flex-start'\r\n              spacing={0}\r\n              maxHeight='35vh'\r\n              overflowY='auto'\r\n              pr={isOverflown ? 2 : 0}>\r\n              {children}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </CUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Center, ListItem, Text, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../components/Badge';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { setRecentSearches } from '../../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, title, subtitle, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHoveringRow, setIsHoveringRow] = useBoolean();\r\n  const [isHoveringDelete, setIsHoveringDelete] = useBoolean();\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 1}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' && onSearch ? () => onSearch(title) : undefined}\r\n      onMouseEnter={state !== 'isLoading' ? () => setIsHoveringRow.on() : undefined}\r\n      onMouseLeave={state !== 'isLoading' ? () => setIsHoveringRow.off() : undefined}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        height={state === 'isLoading' ? '22px' : 'auto'}\r\n        offsetY='11px'\r\n        isLoaded={state === 'isLoaded'}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Center>\r\n            <Text align='left' fontSize='md'>\r\n              {title}\r\n            </Text>\r\n            {mediaType ? (\r\n              <Badge\r\n                color={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}\r\n                label={mediaType}\r\n                ml={1}\r\n              />\r\n            ) : null}\r\n          </Center>\r\n          {type === 'default' && subtitle ? (\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs'>\r\n              {subtitle}\r\n            </Text>\r\n          ) : null}\r\n        </VStack>\r\n      </SkeletonText>\r\n\r\n      {type !== 'isKeyword' ? (\r\n        <ScaleFade in={isHoveringRow}>\r\n          <Tooltip aria-label='Remove search' label={`Remove \"${title}\"`} isOpen={isHoveringDelete} placement='top'>\r\n            <IconButton\r\n              aria-label='Remove search'\r\n              icon={ClearOutlinedIcon}\r\n              onClick={() => handleDelete()}\r\n              onMouseEnter={state !== 'isLoading' ? () => setIsHoveringDelete.on() : undefined}\r\n              onMouseLeave={state !== 'isLoading' ? () => setIsHoveringDelete.off() : undefined}\r\n              size='sm'\r\n              variant='icon'\r\n            />\r\n          </Tooltip>\r\n        </ScaleFade>\r\n      ) : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useRef } from 'react';\r\n\r\nimport { useBoolean, useColorMode, VStack, Box, HStack, Icon, Input, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { InputKeyboardEvent, InputChangeEvent } from '../../types';\r\nimport Actions from './components/Actions';\r\nimport Display from './components/Display';\r\nimport List from './components/List';\r\nimport Row from './components/Row';\r\nimport { FormProps } from './types';\r\n\r\nconst placeholders = [\r\n  'The Godfather',\r\n  'Seinfeld',\r\n  'The Dark Knight',\r\n  'I Love Lucy',\r\n  'Pulp Fiction',\r\n  'The Sopranos',\r\n  'Fight Club',\r\n  'The Simpsons',\r\n  'The Matrix',\r\n  'Friends',\r\n  'GoodFellas',\r\n  'South Park',\r\n  'Hamilton',\r\n  'Family Guy',\r\n  'Star Wars',\r\n  'Breaking Bad',\r\n  'Parasite',\r\n  'Game of Thrones',\r\n  'Gladiator',\r\n  'Star Trek'\r\n];\r\nconst placeholder = placeholders[Math.floor(Math.random() * placeholders.length)];\r\n\r\nconst Form = (props: FormProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const {\r\n    keywords,\r\n    query,\r\n    mediaType,\r\n    submittedQuery,\r\n    hasUnsubmitted = false,\r\n    totalResults,\r\n    isInputDisabled = false,\r\n    onInputKeyPress,\r\n    onInputChange,\r\n    onSubmitQuery,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isFormLocked, setIsFormLocked] = useBoolean();\r\n  const [isHoveringLock, setIsHoveringLock] = useBoolean();\r\n\r\n  const [isHoveringForm, setIsHoveringForm] = useBoolean();\r\n  const [isFormFocused, setIsFormFocused] = useBoolean();\r\n\r\n  const handleFocusOnInput = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleOnHoverLock = (bool: boolean) => {\r\n    if (bool) {\r\n      setIsHoveringLock.on();\r\n    } else {\r\n      setIsHoveringLock.off();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={1} p={2}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        py={1.5}\r\n        onClick={() => handleFocusOnInput()}\r\n        onMouseEnter={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.on() : undefined}\r\n        onMouseLeave={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.off() : undefined}>\r\n        <HStack\r\n          borderBottom={isFormFocused || isFormLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFormFocused || isFormLocked ? 1.5 : 0}\r\n          mb={isFormFocused || isFormLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder={`Try \"${placeholder}\"`}\r\n            isDisabled={isInputDisabled}\r\n            onFocus={!isHoveringLock && !isFormLocked ? () => setIsFormFocused.on() : undefined}\r\n            onBlur={!isHoveringLock && !isFormLocked && !isHoveringForm ? () => setIsFormFocused.off() : undefined}\r\n            onKeyPress={(event: InputKeyboardEvent) => onInputKeyPress(event)}\r\n            onChange={(event: InputChangeEvent) => onInputChange(event)}\r\n            variant='unstyled'\r\n            value={query}\r\n          />\r\n          <Actions\r\n            hasQuery={query.length > 0}\r\n            isFormLocked={isFormLocked}\r\n            isHoveringLock={isHoveringLock}\r\n            onToggleLock={() => setIsFormLocked.toggle()}\r\n            onHoverLock={handleOnHoverLock}\r\n            onClearQuery={onClearQuery}\r\n          />\r\n        </HStack>\r\n\r\n        <Collapse in={isFormFocused || isFormLocked} unmountOnExit>\r\n          <List\r\n            title={!hasUnsubmitted ? 'Recent searches' : ''}\r\n            actions={\r\n              !hasUnsubmitted ? (\r\n                <ScaleFade in={recentSearches.length > 0}>\r\n                  <Button onClick={() => dispatch(setRecentSearches([]))} size='sm' variant='text'>\r\n                    Clear\r\n                  </Button>\r\n                </ScaleFade>\r\n              ) : undefined\r\n            }>\r\n            <>\r\n              {!hasUnsubmitted ? (\r\n                recentSearches.length > 0 ? (\r\n                  _.sortBy(recentSearches, 'date').map((search) => (\r\n                    <Row\r\n                      key={search.id}\r\n                      id={search.id}\r\n                      title={search.label}\r\n                      subtitle={moment(search.date).fromNow()}\r\n                      mediaType={search.mediaType}\r\n                      state='isLoaded'\r\n                      onSearch={(query: string) => onSubmitQuery(query, search.mediaType)}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <Empty hasIllustration={false} label='No recent searches!' size='xs' />\r\n                )\r\n              ) : keywords.isError ? (\r\n                <Error\r\n                  hasIllustration={false}\r\n                  label='Oh no! Something went wrong'\r\n                  description='Failed to fetch keywords!'\r\n                  size='xs'\r\n                />\r\n              ) : keywords.isSuccess && keywords.data?.length === 0 ? (\r\n                <Empty hasIllustration={false} label='No keywords found!' size='xs' />\r\n              ) : keywords.isSuccess && keywords.data?.length > 0 ? (\r\n                keywords.data.map((keyword) => (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={String(keyword.id)}\r\n                    title={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => onSubmitQuery(query)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                [...Array(7)].map((_dummy, index) => (\r\n                  <Row key={index} id={String(index)} title='Lorem Ipsum' state='isLoading' type='isKeyword' />\r\n                ))\r\n              )}\r\n            </>\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <Display\r\n        query={submittedQuery}\r\n        mediaType={mediaType}\r\n        hasUnsubmitted={hasUnsubmitted}\r\n        totalResults={totalResults}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, useBoolean, VStack, HStack, Box, ScaleFade, SlideFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, search } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport All from './components/All';\r\nimport Form from './components/Form';\r\nimport { Keyword, InputKeyboardEvent, InputChangeEvent, TotalResults } from './types';\r\n\r\nconst Search = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n  const [submittedQuery, setSubmittedQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [hasUnsubmitted, setHasUnsubmitted] = useBoolean();\r\n\r\n  const [totalResults, setTotalResults] = useState<TotalResults>();\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', query],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: query.length > 0 }\r\n  );\r\n\r\n  // Searching movies by query\r\n  const searchMovies = useInfiniteQuery(\r\n    ['searchMovies', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'movie') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setMovies({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, movies: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching tv shows by query\r\n  const searchTV = useInfiniteQuery(\r\n    ['searchTV', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'tv') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setTV({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, tv: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching people by query\r\n  const searchPeople = useInfiniteQuery(\r\n    ['searchPeople', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'person') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setPeople({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, people: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    handleSetLocation(query, mediaType || undefined);\r\n  };\r\n\r\n  const handleSetLocation = useCallback(\r\n    (query: string, mediaType?: MediaType, page?: number): void => {\r\n      const search = { query };\r\n\r\n      if (mediaType) {\r\n        Object.assign(search, { mediaType });\r\n      }\r\n\r\n      if (page) {\r\n        Object.assign(search, { page });\r\n      }\r\n\r\n      history.push({\r\n        pathname: '/search',\r\n        search: queryString.stringify({ ...search })\r\n      });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleSubmitQuery = useCallback(\r\n    (query: string, mediaType?: MediaType): void => {\r\n      setQuery(query);\r\n      setSubmittedQuery(query);\r\n\r\n      setHasUnsubmitted.off();\r\n\r\n      searchMovies.remove();\r\n      searchTV.remove();\r\n      searchPeople.remove();\r\n\r\n      handleSetLocation(query, mediaType);\r\n    },\r\n    [\r\n      setQuery,\r\n      setSubmittedQuery,\r\n      setHasUnsubmitted,\r\n      searchMovies,\r\n      searchTV,\r\n      searchPeople,\r\n      handleSetLocation,\r\n      setMediaType\r\n    ]\r\n  );\r\n\r\n  const handleOnKeyPress = (event: InputKeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      handleSubmitQuery(query);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event: InputChangeEvent): void => {\r\n    setQuery(event.target.value);\r\n\r\n    setHasUnsubmitted.on();\r\n  };\r\n\r\n  const handleClearQuery = (): void => {\r\n    setQuery('');\r\n    setSubmittedQuery('');\r\n    setTotalResults(undefined);\r\n    setMediaType(undefined);\r\n\r\n    setHasUnsubmitted.off();\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, search];\r\n\r\n    if (submittedQuery) {\r\n      breadcrumbs.push({\r\n        label: submittedQuery,\r\n        to: { pathname: '/search', search: queryString.stringify({ query: submittedQuery }) }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'person':\r\n            breadcrumbs.push({\r\n              label: 'People',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'person' })\r\n              }\r\n            });\r\n            break;\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'tv' })\r\n              }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'movie' })\r\n              }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(undefined);\r\n    }\r\n\r\n    if (params && params.page && params.mediaType) {\r\n      const page = typeof params.page === 'string' ? params.page : 1;\r\n\r\n      if (page > 1) {\r\n        switch (params.mediaType) {\r\n          case 'person':\r\n            searchPeople.fetchNextPage();\r\n            break;\r\n          case 'tv':\r\n            searchTV.fetchNextPage();\r\n            break;\r\n          case 'movie':\r\n            searchMovies.fetchNextPage();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (params && params.query && typeof params.query === 'string' && !submittedQuery) {\r\n      handleSubmitQuery(params.query || submittedQuery || query);\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && query) {\r\n      setHasUnsubmitted.off();\r\n\r\n      setTotalResults({\r\n        movies:\r\n          searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n            ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n            : 0,\r\n        tv:\r\n          searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n            ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n            : 0,\r\n        people:\r\n          searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n            ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n            : 0\r\n      });\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      source.cancel();\r\n\r\n      handleClearQuery();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page title='Search' breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VStack width='100%' spacing={0}>\r\n              {/* Search Form */}\r\n              <Form\r\n                keywords={keywords}\r\n                query={query}\r\n                mediaType={mediaType}\r\n                submittedQuery={submittedQuery}\r\n                hasUnsubmitted={hasUnsubmitted}\r\n                totalResults={totalResults}\r\n                isInputDisabled={\r\n                  searchMovies.isFetching ||\r\n                  searchMovies.isLoading ||\r\n                  searchTV.isFetching ||\r\n                  searchTV.isLoading ||\r\n                  searchPeople.isFetching ||\r\n                  searchPeople.isLoading\r\n                }\r\n                onInputKeyPress={handleOnKeyPress}\r\n                onInputChange={handleOnChange}\r\n                onSubmitQuery={handleSubmitQuery}\r\n                onClearQuery={handleClearQuery}\r\n              />\r\n\r\n              <Box width='100%'>\r\n                <SlideFade in={!hasUnsubmitted && submittedQuery.length > 0} offsetY={100} unmountOnExit>\r\n                  {mediaType ? (\r\n                    <VerticalGrid>\r\n                      <VStack width='100%' spacing={4} px={2}>\r\n                        {mediaType === 'movie' ? (\r\n                          <VerticalMovies\r\n                            isError={searchMovies.isError}\r\n                            isSuccess={searchMovies.isSuccess}\r\n                            movies={movies?.results || []}\r\n                          />\r\n                        ) : mediaType === 'tv' ? (\r\n                          <VerticalTV\r\n                            isError={searchTV.isError}\r\n                            isSuccess={searchTV.isSuccess}\r\n                            tv={tv?.results || []}\r\n                          />\r\n                        ) : mediaType === 'person' ? (\r\n                          <VerticalPeople\r\n                            isError={searchPeople.isError}\r\n                            isSuccess={searchPeople.isSuccess}\r\n                            people={people?.results || []}\r\n                          />\r\n                        ) : undefined}\r\n\r\n                        <LoadMore\r\n                          amount={\r\n                            mediaType === 'movie'\r\n                              ? movies?.results.length || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.results.length || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.results.length || 0\r\n                              : 0\r\n                          }\r\n                          total={\r\n                            mediaType === 'movie'\r\n                              ? movies?.total_results || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.total_results || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.total_results || 0\r\n                              : 0\r\n                          }\r\n                          mediaType={`${\r\n                            mediaType === 'movie'\r\n                              ? 'Movies'\r\n                              : mediaType === 'tv'\r\n                              ? 'TV Shows'\r\n                              : mediaType === 'person'\r\n                              ? 'People'\r\n                              : ''\r\n                          } for \"${query}\"`}\r\n                          isLoading={\r\n                            mediaType === 'movie'\r\n                              ? searchMovies.isFetching || searchMovies.isLoading\r\n                              : mediaType === 'tv'\r\n                              ? searchTV.isFetching || searchTV.isLoading\r\n                              : mediaType === 'person'\r\n                              ? searchPeople.isFetching || searchPeople.isLoading\r\n                              : false\r\n                          }\r\n                          onFetch={() =>\r\n                            handleSetLocation(\r\n                              submittedQuery,\r\n                              mediaType,\r\n                              mediaType === 'movie'\r\n                                ? (movies?.page || 0) + 1\r\n                                : mediaType === 'tv'\r\n                                ? (tv?.page || 0) + 1\r\n                                : mediaType === 'person'\r\n                                ? (people?.page || 0) + 1\r\n                                : 1\r\n                            )\r\n                          }\r\n                        />\r\n                      </VStack>\r\n                    </VerticalGrid>\r\n                  ) : (\r\n                    <All query={submittedQuery} movies={searchMovies} tv={searchTV} people={searchPeople} />\r\n                  )}\r\n                </SlideFade>\r\n              </Box>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => handleSetLocation(submittedQuery, mediaType, 1)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, trending } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useInfiniteQuery(\r\n    'trendingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'movie') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending tv shows\r\n  const trendingTV = useInfiniteQuery(\r\n    'trendingTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'tv') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending people\r\n  const trendingPeople = useInfiniteQuery(\r\n    'trendingPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'person') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleRefetch = (): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        trendingMovies.refetch();\r\n        break;\r\n      case 'tv':\r\n        trendingTV.refetch();\r\n        break;\r\n      case 'person':\r\n        trendingPeople.refetch();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => handleRefetch(), 0);\r\n  };\r\n\r\n  const handleDisabledFilters = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return !trendingMovies.isSuccess;\r\n      case 'tv':\r\n        return !trendingTV.isSuccess;\r\n      case 'person':\r\n        return !trendingPeople.isSuccess;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(undefined);\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, trending];\r\n\r\n    if (mediaType) {\r\n      switch (mediaType) {\r\n        case 'person':\r\n          breadcrumbs.push({\r\n            label: 'People',\r\n            to: { pathname: '/search/person' }\r\n          });\r\n          break;\r\n        case 'tv':\r\n          breadcrumbs.push({\r\n            label: 'TV Shows',\r\n            to: { pathname: '/search/tv' }\r\n          });\r\n          break;\r\n        case 'movie':\r\n          breadcrumbs.push({\r\n            label: 'Movies',\r\n            to: { pathname: '/search/movie' }\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      handleRefetch();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Trending'\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <Fade in={!!mediaType} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? (\r\n                  <Filters mediaType={mediaType} isDisabled={handleDisabledFilters()} onFilter={handleSetFilters} />\r\n                ) : null}\r\n              </HStack>\r\n            </Fade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {mediaType ? (\r\n                <VStack width='100%' spacing={4} px={2} pt={2}>\r\n                  {mediaType === 'movie' ? (\r\n                    <>\r\n                      <VerticalMovies\r\n                        isError={trendingMovies.isError}\r\n                        isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n                        movies={movies?.results || []}\r\n                      />\r\n\r\n                      {movies ? (\r\n                        <LoadMore\r\n                          amount={movies.results.length}\r\n                          total={movies.total_results}\r\n                          mediaType='movies'\r\n                          isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                          isError={trendingMovies.isError}\r\n                          hasNextPage={trendingMovies.hasNextPage || true}\r\n                          onFetch={trendingMovies.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : mediaType === 'tv' ? (\r\n                    <>\r\n                      <VerticalTV\r\n                        isError={trendingTV.isError}\r\n                        isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n                        tv={tv?.results || []}\r\n                      />\r\n\r\n                      {tv ? (\r\n                        <LoadMore\r\n                          amount={tv.results.length}\r\n                          total={tv.total_results}\r\n                          mediaType='tv shows'\r\n                          isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                          isError={trendingTV.isError}\r\n                          hasNextPage={trendingTV.hasNextPage || true}\r\n                          onFetch={trendingTV.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : mediaType === 'person' ? (\r\n                    <>\r\n                      <VerticalPeople\r\n                        isError={trendingPeople.isError}\r\n                        isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n                        people={people?.results || []}\r\n                      />\r\n\r\n                      {people ? (\r\n                        <LoadMore\r\n                          amount={people.results.length}\r\n                          total={people.total_results}\r\n                          mediaType='people'\r\n                          isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                          isError={trendingPeople.isError}\r\n                          hasNextPage={trendingPeople.hasNextPage || true}\r\n                          onFetch={trendingPeople.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty\r\n                    button={\r\n                      <MediaTypes\r\n                        mediaType={mediaType}\r\n                        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n                      />\r\n                    }\r\n                    hasIllustration={false}\r\n                    label=''\r\n                    size='xl'\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\nimport { home, tv } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='TV Shows' breadcrumbs={[home, tv]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular TV Shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularTV.isFetching || popularTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular TV Shows\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={popularTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('TV Shows Airing Today')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/airing-today' }}\r\n                  isFullWidth\r\n                  isDisabled={tvAiringToday.isFetching || tvAiringToday.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all TV Shows Airing Today\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}>\r\n              <HorizontalTV\r\n                isError={tvAiringToday.isError}\r\n                isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n                tv={tvAiringToday.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('TV Shows on at the moment')}\r\n              footer={\r\n                <Link to={{ pathname: '/tv/on-tv' }} isFullWidth isDisabled={onTV.isFetching || onTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={onTV.isFetching || onTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all TV Shows on at the moment\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={onTV.isFetching || onTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={onTV.isError}\r\n                isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n                tv={onTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Top Rated TV Shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/top-rated' }}\r\n                  isFullWidth\r\n                  isDisabled={topRatedTV.isFetching || topRatedTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={topRatedTV.isFetching || topRatedTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Top Rated TV Shows\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={topRatedTV.isFetching || topRatedTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={topRatedTV.isError}\r\n                isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n                tv={topRatedTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      tvAiringToday.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      tvAiringToday.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows Airing Today'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Airing Today,', to: { pathname: '/tv/airing-today' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!tvAiringToday.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={tvAiringToday.isError}\r\n                isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n                  isError={tvAiringToday.isError}\r\n                  hasNextPage={tvAiringToday.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      onTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      onTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows On At The Moment'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'On At The Moment', to: { pathname: '/tv/on-tv' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!onTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={onTV.isError}\r\n                isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={onTV.isFetching || onTV.isLoading}\r\n                  isError={onTV.isError}\r\n                  hasNextPage={onTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      popularTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      popularTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Popular', to: { pathname: '/tv/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!popularTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={popularTV.isFetching || popularTV.isLoading}\r\n                  isError={popularTV.isError}\r\n                  hasNextPage={popularTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      topRatedTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      topRatedTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Top Rated', to: { pathname: '/tv/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!topRatedTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={topRatedTV.isError}\r\n                isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={topRatedTV.isFetching || topRatedTV.isLoading}\r\n                  isError={topRatedTV.isError}\r\n                  hasNextPage={topRatedTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { useHistory, useLocation, Switch, Route } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Error from '../../../../pages/Error';\r\nimport Home from '../../../../pages/Home';\r\nimport Liked from '../../../../pages/Liked';\r\nimport Lists from '../../../../pages/Lists';\r\nimport Movies from '../../../../pages/Movies';\r\nimport MoviesNowPlaying from '../../../../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../../../../pages/Movies/Popular';\r\nimport TopRatedMovies from '../../../../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../../../../pages/Movies/Upcoming';\r\nimport People from '../../../../pages/People';\r\nimport Person from '../../../../pages/Person';\r\nimport Search from '../../../../pages/Search';\r\nimport Trending from '../../../../pages/Trending';\r\nimport TV from '../../../../pages/TV';\r\nimport TVAiringToday from '../../../../pages/TV/AiringToday';\r\nimport OnTV from '../../../../pages/TV/OnTV';\r\nimport PopularTV from '../../../../pages/TV/Popular';\r\nimport TopRatedTV from '../../../../pages/TV/TopRated';\r\n\r\nconst ComponentBox = motion(Box);\r\n\r\nconst Page = ({ children }: { children: ReactElement }): ReactElement => {\r\n  return (\r\n    <ComponentBox\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{\r\n        duration: 1,\r\n        ease: [0.76, 0, 0.24, 1]\r\n      }}>\r\n      {children}\r\n    </ComponentBox>\r\n  );\r\n};\r\n\r\nconst Routes = (): ReactElement => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  useEffect(() => {\r\n    if (!location.pathname.includes('search')) {\r\n      document.scrollingElement?.scrollTo(0, 0);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location} key={location.pathname}>\r\n        {/* Home Route */}\r\n        <Route exact path='/'>\r\n          <Page>\r\n            <Home />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Liked Routes */}\r\n        <Route exact path='/liked'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/liked/:mediaType'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Lists Routes */}\r\n        <Route exact path='/lists'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id/:mediaType'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Search Route */}\r\n        <Route exact path='/search'>\r\n          <Page>\r\n            <Search />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Trending Routes */}\r\n        <Route exact path='/trending'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/trending/:mediaType'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Movies Routes */}\r\n        <Route exact path='/movies'>\r\n          <Page>\r\n            <Movies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/popular'>\r\n          <Page>\r\n            <PopularMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/upcoming'>\r\n          <Page>\r\n            <UpcomingMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/now-playing'>\r\n          <Page>\r\n            <MoviesNowPlaying />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/top-rated'>\r\n          <Page>\r\n            <TopRatedMovies />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* TV Routes */}\r\n        <Route exact path='/tv'>\r\n          <Page>\r\n            <TV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/popular'>\r\n          <Page>\r\n            <PopularTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/airing-today'>\r\n          <Page>\r\n            <TVAiringToday />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/on-tv'>\r\n          <Page>\r\n            <OnTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/top-rated'>\r\n          <Page>\r\n            <TopRatedTV />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* People Route */}\r\n        <Route exact path='/people'>\r\n          <Page>\r\n            <People />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/person/:id'>\r\n          <Page>\r\n            <Person />\r\n          </Page>\r\n        </Route>\r\n\r\n        <Route>\r\n          <Page>\r\n            <Error\r\n              code={404}\r\n              title='Page not found!'\r\n              subtitle='Please check the URL in the address bar and try again.'\r\n              actions={\r\n                <>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => history.push({ pathname: '/' })}\r\n                    variant='outlined'>\r\n                    Go back home\r\n                  </Button>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                      return false;\r\n                    }}>\r\n                    Try again\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n          </Page>\r\n        </Route>\r\n      </Switch>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, useBoolean, Box, SlideFade } from '@chakra-ui/react';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector, useWindowSize } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../components/Tooltip';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst ScrollToTop = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { height } = useWindowSize();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [scrollHeight, setScrollHeight] = useState<number>(0);\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleScroll = useCallback(\r\n    _.debounce(() => {\r\n      const scroll = document?.scrollingElement?.scrollTop || 0;\r\n\r\n      if (scroll <= height) {\r\n        setIsHovering.off();\r\n      }\r\n\r\n      setScrollHeight(scroll);\r\n    }, 250),\r\n    [document, setScrollHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleScroll();\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      position='fixed'\r\n      bottom={theme.space[2]}\r\n      right={theme.space[2]}\r\n      borderRadius='lg'\r\n      boxShadow='lg'\r\n      backgroundColor='transparent'>\r\n      <SlideFade in={scrollHeight > screen.height} unmountOnExit offsetY={theme.space[2]}>\r\n        <Tooltip aria-label='Scroll to top' label='Scroll to the top' placement='left' isOpen={isHovering} gutter={6}>\r\n          <IconButton\r\n            aria-label='Scroll to top'\r\n            color={utils.handleReturnColor(color)}\r\n            icon={ArrowUpwardOutlinedIcon}\r\n            onClick={() => document.scrollingElement?.scrollTo(0, 0)}\r\n            onMouseEnter={() => setIsHovering.on()}\r\n            onMouseLeave={() => setIsHovering.off()}\r\n          />\r\n        </Tooltip>\r\n      </SlideFade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth, headerHeight } from './common/data/dimensions';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport ConfirmModal from './components/Modals/Confirm';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport QuickView from './components/Modals/QuickView';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Routes from './components/Routes';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Sidebar from './components/Sidebar';\r\nimport { GenreResponse } from './types';\r\n\r\nconst Layout = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>(`${sidebarWidth[sidebarMode]}px`);\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return isSplashscreenOpen ? (\r\n    <SplashscreenModal />\r\n  ) : (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n      <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n        <Header width={width} left={left} />\r\n\r\n        <Box\r\n          width='100%'\r\n          maxWidth='100%'\r\n          position='relative'\r\n          top={`${headerHeight}px`}\r\n          left='0px'\r\n          sx={{ ...transition }}>\r\n          <Box width='100%' minHeight={`calc(100vh - ${headerHeight + 32}px)`} sx={{ ...transition }}>\r\n            <Routes />\r\n          </Box>\r\n\r\n          <Footer />\r\n        </Box>\r\n\r\n        <ScrollToTop />\r\n      </Box>\r\n\r\n      <ConfirmModal />\r\n\r\n      <QuickView />\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n\r\n      <DescriptionModal />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Layout from '../../containers/Layout';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      refetchOnReconnect: false,\r\n      retry: false\r\n    }\r\n  }\r\n});\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Layout />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nimport './index.css';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}