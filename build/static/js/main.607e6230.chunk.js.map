{
  "version": 3,
  "sources": [
    "common/scripts/axios.ts",
    "components/Grid/Horizontal/components/Header/index.tsx",
    "common/hooks/useSelectorTyped.ts",
    "store/slices/App/index.ts",
    "store/slices/Modals/index.tsx",
    "store/slices/Options/index.ts",
    "store/slices/User/index.ts",
    "store/rootReducer.ts",
    "store/index.ts",
    "theme/foundations/borders.ts",
    "theme/foundations/radius.ts",
    "theme/foundations/sizes.ts",
    "theme/foundations/spacing.ts",
    "theme/foundations/transition.ts",
    "theme/foundations/typography.ts",
    "theme/foundations/index.tsx",
    "theme/styles.ts",
    "theme/index.ts",
    "common/data/date.ts",
    "common/utils/utils.ts",
    "components/Clickable/Button/index.tsx",
    "components/Clickable/Button/styles.ts",
    "components/Grid/Horizontal/components/Grid/index.tsx",
    "components/Clickable/IconButton/index.tsx",
    "components/Clickable/IconButton/styles.ts",
    "components/Tooltip/index.tsx",
    "components/Grid/Horizontal/index.tsx",
    "common/assets/illustrations/empty/blue.svg",
    "common/assets/illustrations/empty/cyan.svg",
    "common/assets/illustrations/empty/green.svg",
    "common/assets/illustrations/empty/orange.svg",
    "common/assets/illustrations/empty/pink.svg",
    "common/assets/illustrations/empty/purple.svg",
    "common/assets/illustrations/empty/teal.svg",
    "common/assets/illustrations/empty/yellow.svg",
    "common/assets/illustrations/empty/index.ts",
    "components/Card/index.tsx",
    "components/Card/styles.ts",
    "components/Empty/index.tsx",
    "common/assets/illustrations/error/blue.svg",
    "common/assets/illustrations/error/cyan.svg",
    "common/assets/illustrations/error/green.svg",
    "common/assets/illustrations/error/orange.svg",
    "common/assets/illustrations/error/pink.svg",
    "common/assets/illustrations/error/purple.svg",
    "common/assets/illustrations/error/teal.svg",
    "common/assets/illustrations/error/yellow.svg",
    "common/assets/illustrations/error/index.ts",
    "components/Error/index.tsx",
    "components/Clickable/Card/index.tsx",
    "components/Clickable/Card/styles.ts",
    "components/Bookmark/index.tsx",
    "components/Skeleton/common/props/index.ts",
    "components/Skeleton/common/utils/utils.ts",
    "components/Skeleton/index.tsx",
    "components/Image/index.tsx",
    "components/Like/index.tsx",
    "components/Skeleton/Text/index.tsx",
    "components/Rating/index.tsx",
    "components/Poster/Vertical/components/Subtitle/index.tsx",
    "components/Poster/Vertical/components/Title/index.tsx",
    "components/Poster/Vertical/index.tsx",
    "components/Movies/Poster/Vertical/index.tsx",
    "components/Movies/Grid/Horizontal/index.tsx",
    "common/data/departments.ts",
    "components/People/Poster/Vertical/index.tsx",
    "components/People/Grid/Horizontal/index.tsx",
    "components/TV/Poster/Vertical/index.tsx",
    "components/TV/Grid/Horizontal/index.tsx",
    "pages/Home/index.tsx",
    "common/data/sort.ts",
    "components/Modal/index.tsx",
    "components/Filters/components/Container/index.tsx",
    "components/Filters/components/Departments/components/Department/index.tsx",
    "components/Filters/components/Departments/index.tsx",
    "components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx",
    "components/Filters/components/DisplayMode/index.tsx",
    "components/Filters/components/Genres/components/Genre/index.tsx",
    "components/Filters/components/Genres/index.tsx",
    "components/Filters/components/SortBy/components/SortByItem/index.tsx",
    "components/Filters/components/SortBy/components/SortByItem/styles.ts",
    "components/Filters/components/SortBy/index.tsx",
    "components/Filters/index.tsx",
    "components/Grid/Vertical/components/Header/index.tsx",
    "components/Grid/Vertical/index.tsx",
    "components/MediaTypePicker/components/MediaTypeItem/index.tsx",
    "components/MediaTypePicker/components/MediaTypes/index.tsx",
    "components/MediaTypePicker/index.tsx",
    "components/Poster/Horizontal/components/Description/index.tsx",
    "components/Poster/Horizontal/components/Subtitle/index.tsx",
    "components/Poster/Horizontal/components/Title/index.tsx",
    "components/Poster/Horizontal/index.tsx",
    "components/Movies/Poster/Horizontal/index.tsx",
    "components/People/Poster/Horizontal/index.tsx",
    "components/TV/Poster/Horizontal/index.tsx",
    "pages/Liked/components/All/index.tsx",
    "pages/Liked/index.tsx",
    "pages/Lists/components/All/index.tsx",
    "pages/Lists/components/ListPicker/components/ListItem/index.tsx",
    "pages/Lists/components/ListPicker/index.tsx",
    "pages/Lists/index.tsx",
    "pages/Movies/index.tsx",
    "components/LoadMore/index.tsx",
    "components/Movies/Grid/Vertical/index.tsx",
    "pages/Movies/NowPlaying/index.tsx",
    "pages/Movies/Popular/index.tsx",
    "pages/Movies/TopRated/index.tsx",
    "pages/Movies/Upcoming/index.tsx",
    "components/People/Grid/Vertical/index.tsx",
    "pages/People/index.tsx",
    "components/SearchForm/components/Row/index.tsx",
    "components/SearchForm/components/Row/styles.ts",
    "components/SearchForm/components/Default/index.tsx",
    "components/SearchForm/components/Display/index.tsx",
    "components/SearchForm/index.tsx",
    "components/TV/Grid/Vertical/index.tsx",
    "pages/Search/components/All/index.tsx",
    "pages/Search/index.tsx",
    "pages/Trending/index.tsx",
    "pages/TV/index.tsx",
    "pages/TV/AiringToday/index.tsx",
    "pages/TV/OnTV/index.tsx",
    "pages/TV/Popular/index.tsx",
    "pages/TV/TopRated/index.tsx",
    "containers/Layout/common/data/sidebar.ts",
    "containers/Layout/common/styles/transitions.ts",
    "containers/Layout/components/Header/components/Breadcrumb/index.tsx",
    "containers/Layout/components/Header/components/Breadcrumb/styles.ts",
    "containers/Layout/common/data/navItems.ts",
    "containers/Layout/components/Logo/index.tsx",
    "containers/Layout/components/Logo/styles.ts",
    "containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/index.tsx",
    "containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/styles.ts",
    "containers/Layout/components/NavItems/components/NavItem/index.tsx",
    "containers/Layout/components/NavItems/components/NavItem/styles.ts",
    "containers/Layout/components/NavItems/index.tsx",
    "containers/Layout/components/Header/components/Menu/index.tsx",
    "containers/Layout/components/Header/components/Search/index.tsx",
    "containers/Layout/components/Header/components/User/components/UserLink/index.tsx",
    "containers/Layout/components/Header/components/User/components/UserLink/styles.ts",
    "containers/Layout/components/Header/components/User/index.tsx",
    "containers/Layout/components/Header/index.tsx",
    "containers/Layout/components/Modals/Confirm/index.tsx",
    "containers/Layout/components/Modals/Description/index.tsx",
    "containers/Layout/components/Modals/Display/components/Container/index.tsx",
    "containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx",
    "containers/Layout/components/Modals/Display/components/Background/index.tsx",
    "containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx",
    "containers/Layout/components/Modals/Display/components/Color/index.tsx",
    "containers/Layout/components/Modals/Display/index.tsx",
    "containers/Layout/components/Modals/Lists/components/CreateList/validation.ts",
    "containers/Layout/components/Modals/Lists/components/CreateList/index.tsx",
    "containers/Layout/components/Modals/Lists/components/List/index.tsx",
    "containers/Layout/components/Modals/Lists/index.tsx",
    "containers/Layout/components/Modals/Splashscreen/index.tsx",
    "containers/Layout/components/Modals/Splashscreen/styles.ts",
    "containers/Layout/components/Sidebar/index.tsx",
    "containers/Layout/index.tsx",
    "common/hooks/useQueriesTyped.ts",
    "routes/components/DefaultRoute/index.tsx",
    "routes/index.tsx",
    "containers/App/index.tsx",
    "index.tsx"
  ],
  "names": [
    "instance",
    "axios",
    "create",
    "baseURL",
    "process",
    "interceptors",
    "request",
    "use",
    "headers",
    "interval",
    "useSelectorTyped",
    "useSelector",
    "appSlice",
    "createSlice",
    "name",
    "initialState",
    "data",
    "sortDirection",
    "ui",
    "displayMode",
    "sidebarMode",
    "reducers",
    "toggleDisplayMode",
    "state",
    "action",
    "payload",
    "toggleSortDirection",
    "toggleSidebarMode",
    "actions",
    "defaultListsModal",
    "open",
    "title",
    "mediaType",
    "mediaItem",
    "undefined",
    "defaultDescriptionModal",
    "defaultConfirmModal",
    "description",
    "listsModal",
    "descriptionModal",
    "confirmModal",
    "isDisplayModalOpen",
    "isSplashscreenOpen",
    "modalsSlice",
    "toggleList",
    "toggleDescription",
    "toggleConfirm",
    "toggleDisplay",
    "toggleSplashscreen",
    "optionsSlice",
    "genres",
    "movie",
    "tv",
    "hasDownloaded",
    "setMovieGenres",
    "setTVGenres",
    "toggleHasDownloaded",
    "recentSearches",
    "recentlyViewed",
    "movies",
    "people",
    "liked",
    "lists",
    "id",
    "uuid",
    "label",
    "date",
    "moment",
    "Date",
    "toISOString",
    "results",
    "theme",
    "color",
    "background",
    "userSlice",
    "setTheme",
    "setRecentSearches",
    "setRecentlyViewed",
    "setLiked",
    "setLists",
    "rootReducer",
    "combineReducers",
    "app",
    "appReducer",
    "options",
    "optionsReducer",
    "modals",
    "modalsReducer",
    "user",
    "userReducer",
    "persistConfig",
    "key",
    "storage",
    "blacklist",
    "persistedReducer",
    "persistReducer",
    "store",
    "configureStore",
    "reducer",
    "devTools",
    "borders",
    "none",
    "solid",
    "dashed",
    "solid1",
    "solid2",
    "dashed1",
    "dashed2",
    "radii",
    "sm",
    "base",
    "md",
    "lg",
    "xl",
    "full",
    "sizes",
    "container",
    "spacing",
    "0",
    "0.25",
    "0.5",
    "0.75",
    "1",
    "1.25",
    "1.5",
    "1.75",
    "2",
    "2.25",
    "2.5",
    "2.75",
    "3",
    "3.25",
    "3.5",
    "3.75",
    "4",
    "4.25",
    "4.5",
    "4.75",
    "5",
    "5.25",
    "5.5",
    "5.75",
    "6",
    "6.25",
    "6.5",
    "6.75",
    "7",
    "7.25",
    "7.5",
    "7.75",
    "8",
    "8.25",
    "8.5",
    "8.75",
    "9",
    "9.25",
    "9.5",
    "9.75",
    "10",
    "10.25",
    "10.5",
    "10.75",
    "11",
    "11.25",
    "11.5",
    "11.75",
    "12",
    "12.25",
    "12.5",
    "12.75",
    "13",
    "13.25",
    "13.5",
    "13.75",
    "14",
    "14.25",
    "14.5",
    "14.75",
    "15",
    "15.25",
    "15.5",
    "15.75",
    "transition",
    "property",
    "common",
    "colors",
    "dimensions",
    "position",
    "easing",
    "duration",
    "typography",
    "fonts",
    "body",
    "heading",
    "mono",
    "fontSizes",
    "radius",
    "space",
    "styles",
    "global",
    "props",
    "fontFamily",
    "mode",
    "bg",
    "slower",
    "overflowX",
    "lineHeight",
    "borderColor",
    "wordWrap",
    "config",
    "cssVarPrefix",
    "initialColorMode",
    "useSystemColorMode",
    "foundations",
    "extendTheme",
    "months",
    "value",
    "number",
    "string",
    "parseInt",
    "_",
    "replace",
    "getState",
    "filter",
    "genre",
    "includes",
    "map",
    "join",
    "window",
    "navigator",
    "maxTouchPoints",
    "msMaxTouchPoints",
    "section",
    "split",
    "month",
    "find",
    "time",
    "sortBy",
    "departments",
    "hasFilters",
    "isActive",
    "isEmpty",
    "size",
    "alt",
    "Math",
    "floor",
    "random",
    "toString",
    "substring",
    "red",
    "orange",
    "yellow",
    "green",
    "teal",
    "blue",
    "cyan",
    "purple",
    "pink",
    "queryString",
    "stringifyUrl",
    "url",
    "query",
    "square",
    "type",
    "breakpoint",
    "element",
    "overflow",
    "style",
    "isOverflowing",
    "clientWidth",
    "scrollWidth",
    "clientHeight",
    "scrollHeight",
    "range",
    "amount",
    "Button",
    "useTheme",
    "colorMode",
    "useColorMode",
    "variant",
    "isFullWidth",
    "isLoading",
    "button",
    "back",
    "normal",
    "boxShadow",
    "transform",
    "front",
    "cursor",
    "width",
    "height",
    "display",
    "justifyContent",
    "fontWeight",
    "fontSize",
    "textTransform",
    "borderStyle",
    "borderWidth",
    "borderRadius",
    "padding",
    "disabled",
    "opacity",
    "icon",
    "light",
    "contained",
    "backgroundColor",
    "outlined",
    "text",
    "dark",
    "useStyles",
    "children",
    "colorModeProp",
    "leftIcon",
    "rightIcon",
    "isDisabled",
    "rest",
    "handleReturnSpacing",
    "sx",
    "merge",
    "_disabled",
    "className",
    "thickness",
    "speed",
    "slow",
    "as",
    "mr",
    "ml",
    "Grid",
    "gridRef",
    "handleScrollChange",
    "ref",
    "px",
    "onLoad",
    "event",
    "onScroll",
    "minWidth",
    "border",
    "p",
    "IconButton",
    "forwardRef",
    "Tooltip",
    "closeDelay",
    "openDelay",
    "gutter",
    "span",
    "utils",
    "arrowSize",
    "fast",
    "hasArrow",
    "gray",
    "Header",
    "useDisclosure",
    "isOpen",
    "onOpen",
    "onClose",
    "reset",
    "scrollButtons",
    "handleScrollClick",
    "useState",
    "direction",
    "setDirection",
    "handleScroll",
    "useCallback",
    "handleIsOpen",
    "setInterval",
    "handleClose",
    "clearInterval",
    "useEffect",
    "justify",
    "align",
    "aria-label",
    "closeOnClick",
    "closeOnMouseDown",
    "placement",
    "left",
    "ArrowBackOutlinedIcon",
    "onMouseDown",
    "onClick",
    "right",
    "ArrowForwardOutlinedIcon",
    "defaultScrollButtonsState",
    "HorizontalGrid",
    "footer",
    "path",
    "onFooterClick",
    "setGridRef",
    "setScrollButtons",
    "resetScrollButtons",
    "setResetScrollButtons",
    "handleGridRef",
    "maxScroll",
    "scrollLeft",
    "offsetWidth",
    "isLeftDisabled",
    "isRightDisabled",
    "currentTarget",
    "to",
    "Card",
    "card",
    "alignItems",
    "transparent",
    "omit",
    "Empty",
    "maxWidth",
    "useBreakpointValue",
    "hasIllustration",
    "in",
    "handleReturnPadding",
    "src",
    "empty",
    "handleReturnIllustration",
    "Error",
    "error",
    "isLightGray",
    "Bookmark",
    "dispatch",
    "useDispatch",
    "isHovering",
    "setIsHovering",
    "list",
    "some",
    "show",
    "isBookmarked",
    "BookmarkOutlinedIcon",
    "BookmarkBorderOutlinedIcon",
    "paramList",
    "handleRemoveBookmark",
    "onMouseEnter",
    "onMouseLeave",
    "fadeDuration",
    "Skeleton",
    "commonProps",
    "startColor",
    "endColor",
    "Image",
    "orientation",
    "isLoaded",
    "ratio",
    "fallbackSrc",
    "Like",
    "isLiked",
    "person",
    "FavoriteOutlinedIcon",
    "FavoriteBorderOutlinedIcon",
    "updatedLiked",
    "handleRemoveLike",
    "movieMediaItem",
    "dateAdded",
    "showMediaItem",
    "personMediaItem",
    "handleLike",
    "SkeletonText",
    "noOfLines",
    "defaultRating",
    "rating",
    "count",
    "Rating",
    "iconSize",
    "StarOutlinedIcon",
    "dummyTextWidths",
    "Subtitle",
    "subtitle",
    "isTruncated",
    "setIsTruncated",
    "handleIsTruncated",
    "length",
    "mt",
    "whiteSpace",
    "setTimeout",
    "Title",
    "mb",
    "VerticalPoster",
    "image",
    "top",
    "VerticalMovie",
    "Vertical",
    "poster_path",
    "vote_average",
    "vote_count",
    "release_date",
    "genre_ids",
    "HorizontalMovies",
    "isError",
    "isSuccess",
    "Array",
    "_dummy",
    "index",
    "VerticalPerson",
    "profile_path",
    "department",
    "known_for_department",
    "HorizontalPeople",
    "VerticalTV",
    "first_air_date",
    "HorizontalTV",
    "Home",
    "source",
    "CancelToken",
    "popularMovies",
    "useQuery",
    "a",
    "axiosInstance",
    "get",
    "cancelToken",
    "token",
    "trendingMovies",
    "popularTV",
    "trendingTV",
    "trendingPeople",
    "cancel",
    "Horizontal",
    "isFetching",
    "pathname",
    "likedListsSortBy",
    "movieSortBy",
    "likedListsMovieSortBy",
    "tvSortBy",
    "likedListsTvSortBy",
    "peopleSortBy",
    "likedListsPeopleSortBy",
    "Modal",
    "useMediaQuery",
    "isXs",
    "blockScrollOnMount",
    "preserveScrollBarGap",
    "motionPreset",
    "scrollBehavior",
    "mx",
    "py",
    "borderBottom",
    "borderBottomColor",
    "CloseOutlinedIcon",
    "borderTop",
    "borderTopColor",
    "Container",
    "pt",
    "pb",
    "Department",
    "CheckOutlinedIcon",
    "Departments",
    "form",
    "handleDepartmentClick",
    "getValues",
    "activeDepartment",
    "setValue",
    "shouldDirty",
    "control",
    "render",
    "field",
    "DisplayModeItem",
    "displayModes",
    "iconActive",
    "GridOnTwoToneIcon",
    "GridOnOutlinedIcon",
    "ListAltTwoToneIcon",
    "ListAltOutlinedIcon",
    "DisplayMode",
    "Genre",
    "Genres",
    "movieGenres",
    "tvGenres",
    "handleGenreClick",
    "activeGenre",
    "handleAllLabel",
    "handleAllClick",
    "SortByItem",
    "onSortChange",
    "onDirectionChange",
    "unmountOnExit",
    "ArrowDownwardOutlinedIcon",
    "SortBy",
    "handleSortChange",
    "paramSort",
    "sort",
    "current",
    "findIndex",
    "next",
    "handleDirectionChange",
    "Filters",
    "isLikedLists",
    "onFilter",
    "location",
    "useLocation",
    "defaultValues",
    "useForm",
    "useFormState",
    "isDirty",
    "dirtyFields",
    "VisibilityOutlinedIcon",
    "handleSubmit",
    "values",
    "handleSubmitFilters",
    "isCentered",
    "header",
    "isSm",
    "headerTotal",
    "Boolean",
    "wrap",
    "VerticalGrid",
    "MediaTypeItem",
    "mediaTypesList",
    "TheatersOutlinedIcon",
    "TvTwoToneIcon",
    "TvOutlinedIcon",
    "PeopleAltTwoToneIcon",
    "PeopleAltOutlinedIcon",
    "MediaTypes",
    "mediaTypes",
    "onSetType",
    "handleClick",
    "mediaTypeItem",
    "MediaTypePicker",
    "Description",
    "HorizontalPoster",
    "HorizontalMovie",
    "overview",
    "HorizontalPerson",
    "arraySort",
    "known_for",
    "item",
    "All",
    "Liked",
    "isMediaTypePickerOpen",
    "onMediaTypePickerOpen",
    "onMediaTypePickerClose",
    "isSmallMob",
    "history",
    "useHistory",
    "paramMediaType",
    "useParams",
    "setMediaType",
    "setMovies",
    "setTV",
    "setPeople",
    "handleHasMediaTypes",
    "filteredMovies",
    "reverse",
    "handleFilterMovies",
    "filteredTV",
    "handleFilterTV",
    "filteredPeople",
    "handleFilterPeople",
    "columns",
    "push",
    "handleReturnMediaTypes",
    "ListItem",
    "activeList",
    "search",
    "stringify",
    "parse",
    "Lists",
    "isListPickerOpen",
    "onListPickerOpen",
    "onListPickerClose",
    "setList",
    "fromNow",
    "ListPicker",
    "Movies",
    "upcomingMovies",
    "moviesNowPlaying",
    "topRatedMovies",
    "LoadMore",
    "total",
    "hasNextPage",
    "onFetch",
    "max",
    "round",
    "VerticalMovies",
    "MoviesNowPlaying",
    "isMob",
    "setSortBy",
    "setGenres",
    "useInfiniteQuery",
    "pageParam",
    "params",
    "page",
    "getPreviousPageParam",
    "firstPage",
    "getNextPageParam",
    "lastPage",
    "total_pages",
    "onSuccess",
    "pages",
    "forEach",
    "total_results",
    "active",
    "refetch",
    "fetchNextPage",
    "PopularMovies",
    "TopRatedMovies",
    "UpcomingMovies",
    "VerticalPeople",
    "People",
    "setDepartments",
    "popularPeople",
    "_genres",
    "Row",
    "onSearch",
    "isHoveringDelete",
    "setIsHoveringDelete",
    "handleSearch",
    "colorScheme",
    "ClearOutlinedIcon",
    "Default",
    "isOverflown",
    "setIsOverflown",
    "handleIsOverflown",
    "offsetHeight",
    "maxHeight",
    "overflowY",
    "pr",
    "Display",
    "totalResults",
    "SearchForm",
    "inputRef",
    "useRef",
    "onQueryChange",
    "onMoviesChange",
    "onTVChange",
    "onPeopleChange",
    "onIsLoading",
    "onIsFetched",
    "isLocked",
    "setIsLocked",
    "isHoveringLock",
    "setIsHoveringLock",
    "isFocused",
    "setIsFocused",
    "hasSubmitted",
    "setHasSubmitted",
    "localQuery",
    "setLocalQuery",
    "setTotalResults",
    "keywords",
    "enabled",
    "searchMovies",
    "cacheTime",
    "searchTV",
    "searchPeople",
    "handleSearchQuery",
    "trim",
    "useOutsideClick",
    "handler",
    "parseNumbers",
    "totalMovies",
    "totalTV",
    "totalPeople",
    "focus",
    "SearchOutlinedIcon",
    "placeholder",
    "onFocus",
    "onBlur",
    "onKeyPress",
    "onChange",
    "target",
    "remove",
    "LockOutlinedIcon",
    "LockOpenOutlinedIcon",
    "keyword",
    "Search",
    "breakpoints",
    "isLgUp",
    "setQuery",
    "setRefetch",
    "setIsLoading",
    "bool",
    "Trending",
    "handleRefetch",
    "TV",
    "tvAiringToday",
    "onTV",
    "topRatedTV",
    "TVAiringToday",
    "ReportProblemTwoToneIcon",
    "submitButton",
    "OnTV",
    "PopularTV",
    "TopRatedTV",
    "sidebarWidth",
    "expanded",
    "collapsed",
    "Breadcrumb",
    "breadcrumbs",
    "breadcrumbItem",
    "breadcrumbLink",
    "textDecoration",
    "breadcrumbActive",
    "setstate",
    "separator",
    "ChevronRightOutlinedIcon",
    "breadcrumb",
    "isCurrentPage",
    "Link",
    "navItems",
    "HomeTwoToneIcon",
    "HomeOutlinedIcon",
    "SearchTwoToneIcon",
    "WhatshotTwoToneIcon",
    "WhatshotOutlinedIcon",
    "renderChild",
    "TheatersTwoToneIcon",
    "Logo",
    "minHeight",
    "alignSelf",
    "paddingTop",
    "paddingBottom",
    "paddingLeft",
    "paddingRight",
    "NavItemChild",
    "isLastChild",
    "child",
    "link",
    "RRDLink",
    "borderLeft",
    "borderLeftColor",
    "parts",
    "initials",
    "part",
    "handleGetInitials",
    "NavItem",
    "isChildActive",
    "renderChildren",
    "every",
    "isExpanded",
    "main",
    "delay",
    "enter",
    "exit",
    "pl",
    "NavItems",
    "navItem",
    "Menu",
    "MenuOutlinedIcon",
    "isModalOpen",
    "onModalOpen",
    "onModalClose",
    "UserLink",
    "User",
    "userLinks",
    "PaletteTwoToneIcon",
    "PaletteOutlinedIcon",
    "userLink",
    "isMdUp",
    "useTransitionsStyle",
    "zIndex",
    "ConfirmModal",
    "DescriptionModal",
    "BackgroundItem",
    "backgrounds",
    "WbSunnyOutlinedIcon",
    "Brightness2OutlinedIcon",
    "Background",
    "watch",
    "ColorItem",
    "Color",
    "minChildWidth",
    "toggleColorMode",
    "newTheme",
    "schema",
    "yup",
    "shape",
    "required",
    "CreateList",
    "reValidateMode",
    "resolver",
    "yupResolver",
    "fieldState",
    "isRequired",
    "errorBorderColor",
    "focusBorderColor",
    "isInvalid",
    "message",
    "isFullWidthname",
    "List",
    "isSelected",
    "CheckBoxTwoToneIcon",
    "CheckBoxOutlineBlankOutlinedIcon",
    "ListsModal",
    "isListsOpen",
    "onListsOpen",
    "onListsClose",
    "isCreateListOpen",
    "onCreateListOpen",
    "onCreateListClose",
    "selected",
    "setSelected",
    "handleIsSelected",
    "updatedLists",
    "updatedList",
    "handleSaveItem",
    "MotionBox",
    "motion",
    "Box",
    "Splashscreen",
    "hasSplashscreenRendered",
    "JSON",
    "sessionStorage",
    "getItem",
    "setItem",
    "closeOnEsc",
    "closeOnOverlayClick",
    "m",
    "animate",
    "backgroundPosition",
    "ease",
    "repeat",
    "repeatType",
    "repeatDelay",
    "bgSize",
    "bgGradient",
    "bgClip",
    "Sidebar",
    "borderRight",
    "borderRightColor",
    "RemoveOutlinedIcon",
    "AddOutlinedIcon",
    "Layout",
    "setWidth",
    "setLeft",
    "queries",
    "useQueries",
    "useQueriesTyped",
    "queryKey",
    "queryFn",
    "Confirm",
    "ComponentBox",
    "DefaultRoute",
    "Component",
    "component",
    "initial",
    "Router",
    "home",
    "trending",
    "AnimatePresence",
    "exitBeforeEnter",
    "exact",
    "queryClient",
    "QueryClient",
    "App",
    "QueryClientProvider",
    "client",
    "basename",
    "persistor",
    "persistStore",
    "ReactDOM",
    "loading",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.607e6230.chunk.js",
  "sourcesContent": [
    "import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\n\r\nexport default instance;\r\n",
    "import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, HStack, Text } from '@chakra-ui/react';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { HeaderProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { title, isLoading = false, reset = false, scrollButtons, handleScrollClick } = props;\r\n\r\n  const [direction, setDirection] = useState<'left' | 'right' | ''>('');\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (direction === 'left' || direction === 'right') {\r\n      handleScrollClick(direction);\r\n    }\r\n  }, [direction, handleScrollClick]);\r\n\r\n  const handleIsOpen = useCallback(() => {\r\n    if (isOpen) {\r\n      interval = setInterval(() => {\r\n        handleScroll();\r\n      }, 25);\r\n    }\r\n  }, [isOpen, interval]);\r\n\r\n  const handleClose = () => {\r\n    setDirection('');\r\n    clearInterval(interval);\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsOpen();\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleClose();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <HStack justify='space-between' p={2}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='2xl'\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n\r\n      {/* Scroll buttons */}\r\n      {!utils.handleIsTouchDevice() && (\r\n        <HStack spacing={2}>\r\n          {/* Maybe add an auto scroll button */}\r\n          <Tooltip\r\n            aria-label='Scroll left'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll left (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.left}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll left'\r\n              isDisabled={isLoading || scrollButtons.left}\r\n              icon={ArrowBackOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isOpen) {\r\n                  onOpen();\r\n                  setDirection('left');\r\n                }\r\n              }}\r\n              onClick={() => handleClose()}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n          <Tooltip\r\n            aria-label='Scroll right'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll right (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.right}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll right'\r\n              isDisabled={isLoading || scrollButtons.right}\r\n              icon={ArrowForwardOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isOpen) {\r\n                  onOpen();\r\n                  setDirection('right');\r\n                }\r\n              }}\r\n              onClick={() => handleClose()}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n        </HStack>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, ListModal, DescriptionModal, ConfirmModal } from './types';\r\n\r\nexport const defaultListsModal: ListModal = {\r\n  open: false,\r\n  title: '',\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultDescriptionModal: DescriptionModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultConfirmModal: ConfirmModal = {\r\n  open: false,\r\n  title: '',\r\n  description: ''\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultDescriptionModal },\r\n    confirmModal: { ...defaultConfirmModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: true\r\n  }\r\n};\r\n\r\nconst modalsSlice = createSlice({\r\n  name: 'modals',\r\n  initialState,\r\n  reducers: {\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleConfirm: (state: StateProps, action: PayloadAction<ConfirmModal>) => {\r\n      state.ui.confirmModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleList, toggleDescription, toggleConfirm, toggleDisplay, toggleSplashscreen } = modalsSlice.actions;\r\n\r\nexport default modalsSlice.reducer;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItems, List, Theme } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    liked: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        date: moment(new Date()).toISOString(),\r\n        results: {\r\n          movies: [],\r\n          tv: []\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTheme, setRecentSearches, setRecentlyViewed, setLiked, setLists } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n",
    "import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport modalsReducer from './slices/Modals';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  modals: modalsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n",
    "import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['modals']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n",
    "const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n",
    "const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n",
    "const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '640px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n",
    "const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n",
    "const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n",
    "const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n",
    "import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n",
    "import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n",
    "// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n",
    "type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n",
    "import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Department } from '../data/departments';\r\nimport { Genre, MediaType, SortBy } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @param mediaType - Type of genres\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  handleIsTouchDevice: (): boolean => {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param section - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (section === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleParseDurationForFramer: (time: number): number => {\r\n    return time / 1000;\r\n  },\r\n\r\n  handleCheckHasFilters: (sortBy?: SortBy, genres?: Genre[], departments?: Department[]): boolean => {\r\n    let hasFilters = false;\r\n\r\n    if (!hasFilters && sortBy && sortBy.isActive) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(genres)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(departments)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    return hasFilters;\r\n  },\r\n\r\n  /**\r\n   * This method will return the proper typed button color depending on the color passed\r\n   *\r\n   * @param color - Current user selected color from display modal\r\n   * @returns - Proper typed color to be used in IconButton/Button\r\n   */\r\n  handleReturnColor: (color: unknown): ButtonProps['color'] => {\r\n    switch (color) {\r\n      case 'orange':\r\n        return 'orange';\r\n      case 'yellow':\r\n        return 'yellow';\r\n      case 'green':\r\n        return 'green';\r\n      case 'teal':\r\n        return 'teal';\r\n      case 'cyan':\r\n        return 'cyan';\r\n      case 'purple':\r\n        return 'purple';\r\n      case 'pink':\r\n        return 'pink';\r\n      default:\r\n        return 'blue';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will return a url that will fetch an img from boringavatars\r\n   * boringavatars - https://boringavatars.com/\r\n   *\r\n   * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n   * @param size - Size of poster\r\n   * @param alt - Image alt\r\n   * @returns - boringavatars URL\r\n   */\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`;\r\n    const colors: string = [\r\n      theme.colors.red[400],\r\n      theme.colors.orange[400],\r\n      theme.colors.yellow[400],\r\n      theme.colors.green[400],\r\n      theme.colors.teal[400],\r\n      theme.colors.blue[400],\r\n      theme.colors.cyan[400],\r\n      theme.colors.purple[400],\r\n      theme.colors.pink[400]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param type - Type of image\r\n   * @param breakpoint - Size of user's device\r\n   * @returns - The appropriate size for image poster\r\n   */\r\n  // Set type of breakpoint from theme\r\n  handleReturnImageSize: (\r\n    type: 'poster' | 'backdrop',\r\n    // orientation: 'vertical' | 'horizontal',\r\n    breakpoint: 'xs' | 'sm'\r\n  ): string => {\r\n    switch (type) {\r\n      case 'poster': {\r\n        switch (breakpoint) {\r\n          default:\r\n            return '342';\r\n        }\r\n      }\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from the 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = (props: ButtonProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'xs' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': size === 'md' ? '44px' : 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'base',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'xs' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'xs'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? 'translateY(-2px)' : 'none',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'xs' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, handleScrollChange } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={2}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        p={2}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n",
    "import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    colorMode: colorModeProp,\r\n    icon,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'xs' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isLoading = false }: IconButtonProps\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': size === 'xs' ? 'sm' : size === 'lg' ? 'md' : 'base',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: size === 'xs' ? '1px' : '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'xs' || size === 'md' ? theme.space[1] : theme.space[2],\r\n\r\n      transform: variant !== 'icon' ? 'translateY(-2px)' : 'none',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'xs' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes['2xl'] : theme.fontSizes['3xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.200`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.400`,\r\n          backgroundColor: `${color}.400`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, width, closeDelay, openDelay, gutter = 12, span = false, ...rest } = props;\r\n\r\n  return !utils.handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms')}\r\n      hasArrow\r\n      gutter={gutter}\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${colorMode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {span ? <span style={{ width: width || 'auto' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n",
    "import React, { ReactElement, useState, useCallback, UIEvent } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../Clickable/Button';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport { HorizontalGridProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, title, footer, isLoading, path, onFooterClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [gridRef, setGridRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled = ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setGridRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, UIEvent>) => {\r\n    handleGridRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (gridRef) {\r\n        if (direction === 'left') {\r\n          gridRef.scrollLeft = gridRef.scrollLeft - 10;\r\n        } else {\r\n          gridRef.scrollLeft = gridRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  return (\r\n    <VStack width='100%' align='stretch' backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} spacing={0}>\r\n      {/* Header */}\r\n      <Header\r\n        title={title}\r\n        isLoading={isLoading}\r\n        reset={resetScrollButtons}\r\n        scrollButtons={scrollButtons}\r\n        handleScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Grid */}\r\n      <Grid gridRef={handleGridRef} handleScrollChange={handleScrollChange}>\r\n        {children}\r\n      </Grid>\r\n\r\n      {/* Footer */}\r\n      {path ? (\r\n        <Link to={!isLoading ? path : {}}>\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isFullWidth\r\n            isDisabled={isLoading}\r\n            onClick={onFooterClick ? () => onFooterClick() : undefined}\r\n            variant='text'>\r\n            {footer || `View all ${title}`}\r\n          </Button>\r\n        </Link>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n",
    "export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";",
    "export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";",
    "export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";",
    "export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";",
    "export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";",
    "export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";",
    "export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";",
    "export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";",
    "import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { children, colorMode: colorModeProp, variant = 'outlined', ...rest } = _.omit(props, ['color', 'isFullWidth']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box {...rest} sx={{ ..._.merge(style.card, style[mode][variant]) }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",
    "import { Style } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: Style;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    width: isFullWidth ? '100%' : 'auto',\r\n    height: 'auto',\r\n\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px',\r\n    borderRadius: 'lg',\r\n\r\n    transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          {label || description ? (\r\n            <VStack spacing={0}>\r\n              {label ? (\r\n                <Text\r\n                  align='center'\r\n                  fontSize='md'\r\n                  fontWeight='semibold'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                  {label}\r\n                </Text>\r\n              ) : null}\r\n              {description ? (\r\n                <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                  {description}\r\n                </Text>\r\n              ) : null}\r\n            </VStack>\r\n          ) : null}\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n",
    "export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";",
    "export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";",
    "export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";",
    "export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";",
    "export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";",
    "export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";",
    "export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";",
    "export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";",
    "import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          {label || description ? (\r\n            <VStack spacing={0}>\r\n              {label ? (\r\n                <Text\r\n                  align='center'\r\n                  fontSize='md'\r\n                  fontWeight='semibold'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                  {label}\r\n                </Text>\r\n              ) : null}\r\n              {description ? (\r\n                <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                  {description}\r\n                </Text>\r\n              ) : null}\r\n            </VStack>\r\n          ) : null}\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    isDisabled = false,\r\n    variant = 'outlined',\r\n    ...rest\r\n  } = _.omit(props, ['color', 'isFullWidth', 'isLightGray']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(style.card.back, style.card.disabled, style[mode].back[variant], style[mode].disabled[variant])\r\n            }\r\n          : { ..._.merge(style.card.back, style[mode].back[variant]) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[mode].front[variant]) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false, isLightGray = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: 'translateY(0px)'\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-4px)',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0px)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      outlined: {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.400' : `${color}.600`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      outlined: {\r\n        borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n      transparent: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      outlined: {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.50',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n            backgroundColor: 'gray.50',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      outlined: {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.500' : `${color}.200`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      outlined: {\r\n        borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      transparent: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      outlined: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n            backgroundColor: 'gray.900',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      transparent: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '& .card_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .card_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport { toggleList } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List } from '../../store/slices/User/types';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = (props: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'xs' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const list = lists.find((list) => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return list.results.movies.some((movie) => movie.id === mediaItem.id);\r\n      case 'tv':\r\n        return list.results.tv.some((show) => show.id === mediaItem.id);\r\n      default:\r\n        return;\r\n    }\r\n  });\r\n  const isBookmarked: boolean = list\r\n    ? mediaType === 'movie'\r\n      ? list.results.movies.some((movie) => movie.id === mediaItem.id)\r\n      : list.results.tv.some((show) => show.id === mediaItem.id)\r\n    : false;\r\n\r\n  const handleRemoveBookmark = (list: List): void => {\r\n    const results = { ...list.results };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        results.movies = results.movies.filter((movie) => movie.id !== mediaItem.id) || [];\r\n        break;\r\n      case 'tv':\r\n        results.tv = results.tv.filter((show) => show.id !== mediaItem.id) || [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      setLists(\r\n        lists.map((paramList) =>\r\n          paramList.id === list.id\r\n            ? {\r\n                ...paramList,\r\n                results: { ...results }\r\n              }\r\n            : paramList\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleOpenListsModal = (): void => {\r\n    dispatch(\r\n      toggleList({\r\n        open: true,\r\n        title,\r\n        mediaType,\r\n        mediaItem: {\r\n          ...mediaItem\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n          : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n          : `Add \"${title}\" to a list`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n            : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n        }\r\n        color={isBookmarked ? utils.handleReturnColor(color) : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={isBookmarked && list ? () => handleRemoveBookmark(list) : () => handleOpenListsModal()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n",
    "import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 1000\r\n};\r\n",
    "import { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color): string => {\r\n    switch (color) {\r\n      default:\r\n        return type === 'start' ? 'gray.200' : 'gray.400';\r\n    }\r\n  }\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio, Image as CUIImage } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport Skeleton from '../Skeleton';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoaded, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio\r\n      width={width || '100%'}\r\n      minWidth={width || '100%'}\r\n      maxWidth={width || '100%'}\r\n      ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={isLoaded} borderRadius='base'>\r\n        <CUIImage\r\n          {...rest}\r\n          alt={alt}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/w${size}${src}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc(mediaType, size, alt)}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = (props: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'xs' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const isLiked: boolean = liked\r\n    ? mediaType === 'movie'\r\n      ? liked.movies.some((movie) => movie.id === mediaItem.id)\r\n      : mediaType === 'tv'\r\n      ? liked.tv.some((show) => show.id === mediaItem.id)\r\n      : liked.people.some((person) => person.id === mediaItem.id)\r\n    : false;\r\n\r\n  const handleRemoveLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        updatedLiked.movies = updatedLiked.movies.filter((movie) => movie.id !== mediaItem.id);\r\n        break;\r\n      case 'tv':\r\n        updatedLiked.tv = updatedLiked.tv.filter((show) => show.id !== mediaItem.id);\r\n        break;\r\n      case 'person':\r\n        updatedLiked.people = updatedLiked.people.filter((person) => person.id !== mediaItem.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  const handleLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie': {\r\n        const movieMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.movies = [...updatedLiked.movies, movieMediaItem];\r\n        break;\r\n      }\r\n      case 'tv': {\r\n        const showMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.tv = [...updatedLiked.tv, showMediaItem];\r\n        break;\r\n      }\r\n      case 'person': {\r\n        const personMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.people = [...updatedLiked.people, personMediaItem];\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n      label={isLiked ? `Dislike \"${title}\"` : `Like \"${title}\"`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { SkeletonText as CUISkeletonText } from '@chakra-ui/react';\r\n\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { children, color = 'gray', noOfLines = 1, ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeletonText\r\n      {...rest}\r\n      {...commonProps}\r\n      noOfLines={noOfLines}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeletonText>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = ({ rating = defaultRating, isLoaded = false }: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['xl'],\r\n    'sm': theme.fontSizes['xl'],\r\n    'md': theme.fontSizes['2xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  // const handleRatingColor = (): 'red' | 'yellow' | 'blue' => {\r\n  //   if (rating.rating) {\r\n  //     if (rating.rating < 4) {\r\n  //       return 'red';\r\n  //     } else if (rating.rating < 7) {\r\n  //       return 'yellow';\r\n  //     } else {\r\n  //       return 'blue';\r\n  //     }\r\n  //   } else return 'yellow';\r\n  // };\r\n\r\n  return (\r\n    // <Tooltip\r\n    //   aria-label='Showing rating information'\r\n    //   label={\r\n    //     <Center>\r\n    //       <VStack spacing={1}>\r\n    //         <CircularProgress\r\n    //           color={`${handleRatingColor()}.400`}\r\n    //           value={rating.rating ? rating.rating * 10 : 0}\r\n    //           size='54px'>\r\n    //           <CircularProgressLabel color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>{`${\r\n    //             rating.rating ? rating.rating * 10 : 'N/A'\r\n    //           }%`}</CircularProgressLabel>\r\n    //         </CircularProgress>\r\n    //         {rating.count ? (\r\n    //           <Text color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n    //             {rating.count}\r\n    //           </Text>\r\n    //         ) : null}\r\n    //       </VStack>\r\n    //     </Center>\r\n    //   }\r\n    //   placement='top'\r\n    //   isDisabled={!rating.rating || !isLoaded}>\r\n    <Center\r\n      backgroundColor='transparent'\r\n      // borderRadius='sm'\r\n      // border='solid2'\r\n      // borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      // py='0.5'\r\n      // px='1'\r\n      p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${iconSize} !important`\r\n        }}\r\n      />\r\n      <SkeletonText isLoaded={isLoaded} ml='0.5'>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['sm', 'sm', 'md', 'md', 'md', 'lg']}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n    // </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mt={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='xs'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='sm'\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useBreakpointValue, VStack, HStack } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = <MT extends MediaType>(props: VerticalPosterProps<MT>): ReactElement => {\r\n  const size = useBreakpointValue({\r\n    'base': 'xs',\r\n    'sm': 'xs',\r\n    'md': 'xs',\r\n    'lg': 'md',\r\n    'xl': 'md',\r\n    '2xl': 'md'\r\n  });\r\n\r\n  const { width, mediaItem, mediaType, image, rating, title, subtitle, isLoaded } = props;\r\n\r\n  return (\r\n    <Card isDisabled={!isLoaded} isLightGray>\r\n      <VStack\r\n        width={width}\r\n        position='relative'\r\n        spacing={mediaType !== 'person' ? (size === 'sm' ? 0.25 : 0.5) : 1}\r\n        p={1}>\r\n        {/* Image */}\r\n        <Image\r\n          orientation='vertical'\r\n          mediaType={mediaType}\r\n          alt={image.alt}\r\n          src={image.src}\r\n          size={image.size}\r\n          isLoaded={isLoaded}\r\n        />\r\n        <VStack width='100%' spacing={mediaType === 'person' ? 1 : 0}>\r\n          {/* Header */}\r\n          {mediaType !== 'person' ? (\r\n            <HStack width='100%' justify='space-between' spacing={0}>\r\n              {/* Rating component */}\r\n              <Rating rating={rating} isLoaded={isLoaded} />\r\n\r\n              {mediaItem ? (\r\n                <HStack spacing={0}>\r\n                  {/* Like component */}\r\n                  <Like isDisabled={!isLoaded} title={title} mediaType={mediaType} mediaItem={mediaItem} size='xs' />\r\n                  {/* List component */}\r\n                  <Bookmark\r\n                    isDisabled={!isLoaded}\r\n                    title={title}\r\n                    mediaType={mediaType}\r\n                    mediaItem={mediaItem}\r\n                    size='xs'\r\n                  />\r\n                </HStack>\r\n              ) : null}\r\n            </HStack>\r\n          ) : null}\r\n          {/* Text */}\r\n          <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n            <Title title={title} isLoaded={isLoaded} />\r\n            <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n          </VStack>\r\n        </VStack>\r\n\r\n        {/* Like component */}\r\n        {mediaType === 'person' && mediaItem ? (\r\n          <HStack\r\n            spacing={0}\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              right: 1\r\n            }}>\r\n            <Like isDisabled={!isLoaded} title={title} mediaType={mediaType} mediaItem={mediaItem} size='xs' />\r\n          </HStack>\r\n        ) : null}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={{ ...movie }}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalMovie;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  return isLoading ? (\r\n    <>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n",
    "export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return !isLoading && person ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={{ ...person }}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalPerson;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  return isLoading ? (\r\n    <>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={{ ...show }}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  return isLoading ? (\r\n    <>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending movies'\r\n        isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n        path={{ pathname: '/trending/movie' }}>\r\n        <HorizontalMovies\r\n          isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n          isError={trendingMovies.isError}\r\n          isSuccess={trendingMovies.isSuccess}\r\n          movies={trendingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Popular TV'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending TV'\r\n        isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n        path={{ pathname: '/trending/tv' }}>\r\n        <HorizontalTV\r\n          isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n          isError={trendingTV.isError}\r\n          isSuccess={trendingTV.isSuccess}\r\n          tv={trendingTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending People'\r\n        isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n        path={{ pathname: '/trending/person' }}>\r\n        <HorizontalPeople\r\n          isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n          isError={trendingPeople.isError}\r\n          isSuccess={trendingPeople.isSuccess}\r\n          people={trendingPeople.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",
    "import { SortBy } from '../types/types';\r\n\r\nexport const likedListsSortBy: SortBy[] = [\r\n  {\r\n    label: 'Date Added',\r\n    value: 'dateAdded',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsMovieSortBy: SortBy[] = [...movieSortBy, ...likedListsSortBy];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsTvSortBy: SortBy[] = [...tvSortBy, ...likedListsSortBy];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsPeopleSortBy: SortBy[] = [...peopleSortBy, ...likedListsSortBy];\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { children, actions, title, colorMode: colorModeProp, isOpen, onClose, size, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n  const transition = `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`;\r\n\r\n  return (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isXs ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' || isXs ? 'none' : 'xl'}\r\n        mx={0}\r\n        sx={{ transition }}>\r\n        <ModalHeader\r\n          px={2}\r\n          py={1.25}\r\n          borderBottom='solid2'\r\n          borderBottomColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n          sx={{ transition }}>\r\n          <HStack justifyContent='space-between'>\r\n            <Text align='left' fontSize='xl' fontWeight='semibold' color={mode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              {title}\r\n            </Text>\r\n\r\n            <IconButton\r\n              aria-label='Close modal?'\r\n              colorMode={mode}\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            p={2}\r\n            borderTop='solid2'\r\n            borderTopColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n            sx={{ transition }}>\r\n            <Button colorMode={mode} onClick={() => onClose()} size='xs' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../Card';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title, actions }: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Card isFullWidth variant='outlined' p={2} pt={actions ? 0.75 : 1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          justifyContent='space-between'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          spacing={2}\r\n          pb={actions ? 0.75 : 1.5}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n          {actions}\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='xs'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Departments'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='xs' variant='text'>\r\n              {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {departments.map((department) => (\r\n              <WrapItem key={department.id}>\r\n                <Genre\r\n                  key={department.id}\r\n                  {...department}\r\n                  isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                  onClick={handleDepartmentClick}\r\n                />\r\n              </WrapItem>\r\n            ))}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      px={3}\r\n      py={1.5}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Display Mode'>\r\n          <HStack width='100%' spacing={2}>\r\n            {displayModes.map((displayMode) => (\r\n              <DisplayModeItem\r\n                key={displayMode.value}\r\n                {...displayMode}\r\n                isActive={value === displayMode.value}\r\n                onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='xs'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Container from '../Container';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Genres'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='xs' variant='text'>\r\n              {handleAllLabel()}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {mediaType === 'movie'\r\n              ? movieGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : mediaType === 'tv'\r\n              ? tvGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : null}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Sort by'>\r\n          <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n            {value.sortBy.map((sort) => (\r\n              <SortByItem\r\n                key={sort.value}\r\n                {...sort}\r\n                direction={value.direction}\r\n                onSortChange={handleSortChange}\r\n                onDirectionChange={handleDirectionChange}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  movieSortBy,\r\n  likedListsMovieSortBy,\r\n  tvSortBy,\r\n  likedListsTvSortBy,\r\n  peopleSortBy,\r\n  likedListsPeopleSortBy\r\n} from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = ({ mediaType, isLikedLists = false, onFilter }: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: isLikedLists\r\n        ? mediaType === 'movie'\r\n          ? [...likedListsMovieSortBy]\r\n          : mediaType === 'tv'\r\n          ? [...likedListsTvSortBy]\r\n          : [...likedListsPeopleSortBy]\r\n        : mediaType === 'movie'\r\n        ? [...movieSortBy]\r\n        : mediaType === 'tv'\r\n        ? [...tvSortBy]\r\n        : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: isLikedLists\r\n            ? pathname.includes('movie')\r\n              ? [...likedListsMovieSortBy]\r\n              : pathname.includes('tv')\r\n              ? [...likedListsTvSortBy]\r\n              : [...likedListsPeopleSortBy]\r\n            : pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? utils.handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isDisabled={!isDirty}\r\n            onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n            size='xs'>\r\n            Submit\r\n          </Button>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={3} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const headerTotal = header?.props?.children?.props?.children?.length || 0;\r\n\r\n  return (\r\n    <Collapse in={Boolean(title || header)} style={{ width: '100%' }} unmountOnExit>\r\n      <Stack\r\n        width='100%'\r\n        direction={isSm && headerTotal > 1 ? 'column' : 'row'}\r\n        alignItems={isSm && headerTotal > 1 ? 'stretch' : 'center'}\r\n        justify={title ? 'space-between' : 'flex-end'}\r\n        wrap='wrap'\r\n        spacing={2}\r\n        p={[2]}>\r\n        {title ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {title}\r\n          </Text>\r\n        ) : null}\r\n\r\n        {header}\r\n      </Stack>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      <Header title={title} header={header} />\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card color={isActive ? utils.handleReturnColor(color) : 'gray'} isFullWidth onClick={() => onClick(value)} p={4}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { mediaTypes, mediaType, onSetType } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n  };\r\n\r\n  return isXs ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={2}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/Modals';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, mediaItem, isLoaded = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              mediaType,\r\n              mediaItem\r\n            })\r\n          )\r\n        }>\r\n        {mediaItem.description}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['md', 'lg', 'xl', '2xl']}\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\r\n  const { mediaItem, mediaType, image, rating, title, subtitle, description, isLoaded } = props;\r\n\r\n  return (\r\n    <Card isFullWidth isDisabled={!isLoaded} isLightGray>\r\n      <HStack width='100%' position='relative' spacing={[1, 1, 1.5, 1.5, 2, 2]} p={[1, 1, 1.5, 1.5, 2, 2]}>\r\n        {/* Image */}\r\n        <Image\r\n          width={['96px', '120px', '144px', '168px']}\r\n          orientation='vertical'\r\n          mediaType={mediaType}\r\n          alt={image.alt}\r\n          src={image.src}\r\n          size={image.size}\r\n          isLoaded={isLoaded}\r\n        />\r\n        <VStack\r\n          width={['calc(100% - 96px)', 'calc(100% - 120px)', 'calc(100% - 144px)', 'calc(100% - 168px)']}\r\n          alignItems='flex-start'\r\n          spacing={[0.5, 0.5, 1, 1.5, 1.5, 2]}>\r\n          {/* Rating component */}\r\n          {mediaType !== 'person' ? <Rating rating={rating} isLoaded={isLoaded} /> : null}\r\n\r\n          {/* Text */}\r\n          <VStack width='100%' alignItems='flex-start' spacing={isLoaded ? 0 : 1}>\r\n            <Title title={title} isLoaded={isLoaded} />\r\n            <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n          </VStack>\r\n\r\n          <Box width='100%'>\r\n            <Description\r\n              mediaType={mediaType}\r\n              mediaItem={{ id: mediaItem?.id || -1, title, description }}\r\n              isLoaded={isLoaded}\r\n            />\r\n          </Box>\r\n        </VStack>\r\n\r\n        {/* Like / List Icon buttons */}\r\n        {mediaItem ? (\r\n          <HStack\r\n            spacing={0}\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 1,\r\n              right: 1\r\n            }}>\r\n            {/* Like component */}\r\n            <Like isDisabled={!isLoaded} title={title} mediaType={mediaType} mediaItem={mediaItem} size='md' />\r\n            {/* List component */}\r\n            {mediaType !== 'person' ? (\r\n              <Bookmark isDisabled={!isLoaded} title={title} mediaType={mediaType} mediaItem={mediaItem} size='md' />\r\n            ) : null}\r\n          </HStack>\r\n        ) : null}\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <HorizontalPoster\r\n      mediaItem={{ ...movie }}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      description={movie?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const handleKnownFor = (): string => {\r\n    const knownFor = arraySort(person?.known_for || [], 'vote_average');\r\n    const names: string[] = knownFor.map((item) => item.title || item.name || '');\r\n\r\n    return names.join(', ');\r\n  };\r\n\r\n  return !isLoading && person ? (\r\n    <HorizontalPoster\r\n      mediaItem={{ ...person }}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      description={handleKnownFor()} // TODO: Add a Link component and on click open item page\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <HorizontalPoster\r\n      mediaItem={{ ...show }}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      description={show?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  return (\r\n    <Fade\r\n      in={(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) || false}\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n            }`}\r\n            footer={`View all ${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/movie' }}>\r\n            <>\r\n              {movies.map((movie, index) =>\r\n                index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/tv' }}>\r\n            <>\r\n              {tv.map((show, index) =>\r\n                index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            footer={`View all ${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked/person' }}>\r\n            <>\r\n              {people.map((person, index) =>\r\n                index < 20 ? <VerticalPersonPoster key={person.id} isLoading={false} person={person} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, HStack, SimpleGrid, Box, ScaleFade } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalPersonPoster from '../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../components/People/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([...liked.movies]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([...liked.tv]);\r\n  const [people, setPeople] = useState<MediaItem<'person'>[]>([...liked.people]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredMovies: MediaItem<'movie'>[] = [...liked.movies];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setMovies([...filteredMovies]);\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredTV: MediaItem<'tv'>[] = [...liked.tv];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setTV([...filteredTV]);\r\n  };\r\n\r\n  const handleFilterPeople = (sortBy: SortBy[], departments: Department[]): void => {\r\n    let filteredPeople: MediaItem<'person'>[] = [...liked.people];\r\n\r\n    if (departments && departments.length > 0) {\r\n      filteredPeople = filteredPeople.filter((person) =>\r\n        departments.some((department) => person.known_for_department === department.value)\r\n      );\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredPeople = arraySort(filteredPeople, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setPeople([...filteredPeople]);\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      case 'person':\r\n        handleFilterPeople(sortBy, departments);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleHasMediaTypes = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return (tv && tv.length > 0) || (people && people.length > 0);\r\n      case 'tv':\r\n        return (movies && movies.length > 0) || (people && people.length > 0);\r\n      case 'person':\r\n        return (movies && movies.length > 0) || (tv && tv.length > 0);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypes = (): MediaType[] => {\r\n    const mediaTypes: MediaType[] = [];\r\n\r\n    if (movies && movies.length > 0) {\r\n      mediaTypes.push('movie');\r\n    }\r\n    if (tv && tv.length > 0) {\r\n      mediaTypes.push('tv');\r\n    }\r\n    if (people && people.length > 0) {\r\n      mediaTypes.push('person');\r\n    }\r\n\r\n    return mediaTypes;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMediaType(null);\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType === 'movie'\r\n            ? `${movies.length || 0} liked movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`\r\n            : mediaType === 'tv'\r\n            ? `${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`\r\n            : mediaType === 'person'\r\n            ? `${people.length || 0} liked ${\r\n                (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n              }`\r\n            : `You have liked ${[\r\n                `${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`,\r\n                `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`,\r\n                `${people.length || 0} ${(people && people.length === 0) || people.length > 1 ? 'people' : 'person'}`\r\n              ].join(' • ')}`\r\n        }\r\n        header={\r\n          <ScaleFade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <ScaleFade in={handleHasMediaTypes()} unmountOnExit>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n              </ScaleFade>\r\n              {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n            </HStack>\r\n          </ScaleFade>\r\n        }>\r\n        {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n          mediaType === 'movie' ? (\r\n            movies.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {movies.map((movie) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                  ) : (\r\n                    <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have liked no movie!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'tv' ? (\r\n            tv.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {tv.map((show) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                  ) : (\r\n                    <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have no liked no tv show!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'person' ? (\r\n            people.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {people.map((person) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalPersonPoster key={person.id} isLoading={false} person={person} />\r\n                  ) : (\r\n                    <VerticalPersonPoster key={person.id} width='100%' isLoading={false} person={person} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have no liked nobody!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : (\r\n            <All movies={movies} tv={tv} people={people} />\r\n          )\r\n        ) : (\r\n          <Box width='100%' px={2} py={0}>\r\n            <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={handleReturnMediaTypes()}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`}\r\n            footer={`View all ${movies.length || 0} movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            } `}\r\n            isLoading={false}\r\n            path={{ pathname: `/lists/${list.id}/movie` }}>\r\n            <>\r\n              {movies.map((movie) => (\r\n                <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: `/lists/${list.id}/tv` }}>\r\n            <>\r\n              {tv.map((show) => (\r\n                <VerticalShowPoster key={show.id} isLoading={false} show={show} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { id, label, results, isActive = false, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const movies = results.movies.length;\r\n  const tv = results.tv.length;\r\n\r\n  return (\r\n    <Card\r\n      color={location.pathname.includes(id) ? utils.handleReturnColor(color) : 'gray'}\r\n      onClick={!isActive && onClick ? () => onClick(id) : undefined}\r\n      variant='outlined'\r\n      p={4}>\r\n      <VStack spacing={0}>\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {label}\r\n        </Text>\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='xs'\r\n          fontWeight='400'\r\n          textTransform='capitalize'>\r\n          {`${[\r\n            `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n            `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n          ].join(' • ')}`}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../components/Modal';\r\nimport { List } from '../../../../store/slices/User/types';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const handleClick = (id: List['id']): void => {\r\n    history.push({\r\n      pathname: `/lists/${id}`,\r\n      search: queryString.stringify({ ...queryString.parse(history.location.search) })\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, SimpleGrid, Box, Text, ScaleFade } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.movies) {\r\n      let filteredMovies: MediaItem<'movie'>[] = [...list.results.movies];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n      }\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setMovies([...filteredMovies]);\r\n    }\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.tv) {\r\n      let filteredTV: MediaItem<'tv'>[] = [...list.results.tv];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n      }\r\n\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setTV([...filteredTV]);\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies([...activeList.results.movies]);\r\n      setTV([...activeList.results.tv]);\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n        <VerticalGrid\r\n          title={\r\n            lists\r\n              ? list\r\n                ? mediaType\r\n                  ? mediaType === 'movie'\r\n                    ? `${movies.length || 0} movie${\r\n                        movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n                      } in \"${list.label}\" list`\r\n                    : mediaType === 'tv'\r\n                    ? `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')} in \"${\r\n                        list.label\r\n                      }\" list`\r\n                    : `${[\r\n                        `${movies.length} movie${movies.length === 0 || movies.length > 1 ? 's' : ''}`,\r\n                        `${tv.length} TV show${tv.length === 0 || tv.length > 1 ? 's' : ''}`\r\n                      ].join(' • ')} results in \"${list.label}\" list`\r\n                  : `\"${list.label}\" list • Updated ${moment(list.date).fromNow()}`\r\n                : `${lists.length} list${lists.length === 0 || lists.length > 1 ? 's' : ''}`\r\n              : ''\r\n          }\r\n          header={\r\n            mediaType || (list && lists.length > 1) ? (\r\n              <HStack spacing={2}>\r\n                <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n                  <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                    Change list\r\n                  </Button>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!mediaType} unmountOnExit>\r\n                  <HStack spacing={2}>\r\n                    {movies.length > 0 && tv.length > 0 ? (\r\n                      <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                        Change media-type\r\n                      </Button>\r\n                    ) : null}\r\n                    {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n                  </HStack>\r\n                </ScaleFade>\r\n              </HStack>\r\n            ) : null\r\n          }>\r\n          {list ? (\r\n            movies.length > 0 || tv.length > 0 ? (\r\n              mediaType === 'movie' ? (\r\n                movies.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {movies.map((movie) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                      ) : (\r\n                        <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                      )\r\n                    )}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      button={\r\n                        <HStack spacing={1}>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: `/lists/${list.id}` })}\r\n                            size='xs'\r\n                            variant='outlined'>\r\n                            {`Back to \"${list.label}\" list`}\r\n                          </Button>\r\n                          <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                            OR\r\n                          </Text>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: '/lists' })}\r\n                            size='xs'\r\n                            variant='outlined'>\r\n                            Back to lists\r\n                          </Button>\r\n                        </HStack>\r\n                      }\r\n                      label={`No movies found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : mediaType === 'tv' ? (\r\n                tv.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {tv.map((show) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                      ) : (\r\n                        <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                      )\r\n                    )}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      button={\r\n                        <HStack spacing={1}>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: `/lists/${list.id}` })}\r\n                            size='xs'\r\n                            variant='outlined'>\r\n                            {`Back to \"${list.label}\" list`}\r\n                          </Button>\r\n                          <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                            OR\r\n                          </Text>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: '/lists' })}\r\n                            size='xs'\r\n                            variant='outlined'>\r\n                            Back to lists\r\n                          </Button>\r\n                        </HStack>\r\n                      }\r\n                      label={`No tv shows found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : (\r\n                <All list={list} movies={movies} tv={tv} />\r\n              )\r\n            ) : (\r\n              <Box width='100%' px={2}>\r\n                <Empty\r\n                  button={\r\n                    <Button\r\n                      color={utils.handleReturnColor(color)}\r\n                      onClick={() => history.push({ pathname: '/lists' })}\r\n                      size='xs'\r\n                      variant='outlined'>\r\n                      Back to lists\r\n                    </Button>\r\n                  }\r\n                  label={`You have no items in \"${list.label}\" list!`}\r\n                  variant='outlined'\r\n                  size='xl'\r\n                />\r\n              </Box>\r\n            )\r\n          ) : lists && lists.length > 0 ? (\r\n            <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 4]} spacing={2} px={2}>\r\n              {lists.map((list) => (\r\n                <List\r\n                  key={list.id}\r\n                  {...list}\r\n                  onClick={(id: ListType['id']) => history.push({ pathname: `/lists/${id}` })}\r\n                />\r\n              ))}\r\n            </SimpleGrid>\r\n          ) : (\r\n            <Box width='100%' p={2}>\r\n              <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n            </Box>\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      {!!mediaType && list ? (\r\n        <MediaTypePicker\r\n          mediaTypes={['movie', 'tv']}\r\n          mediaType={mediaType}\r\n          isOpen={isMediaTypePickerOpen}\r\n          onClose={onMediaTypePickerClose}\r\n          onSetType={(mediaType: MediaType) => history.push({ pathname: `/lists/${list.id}/${mediaType}` })}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular Movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Upcoming Movies'\r\n        isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n        path={{ pathname: '/movies/upcoming' }}>\r\n        <HorizontalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={upcomingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Movies Now Playing'\r\n        isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n        path={{ pathname: '/movies/now-playing' }}>\r\n        <HorizontalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={moviesNowPlaying.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated Movies'\r\n        isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n        path={{ pathname: '/movies/top-rated' }}>\r\n        <HorizontalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={topRatedMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount = 0, total = 0, mediaType, isLoading = false, hasNextPage = true, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${utils.handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      {hasNextPage ? (\r\n        <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n          Load more\r\n        </Button>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Movies Now Playing' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n            hasNextPage={moviesNowPlaying.hasNextPage || true}\r\n            onFetch={moviesNowPlaying.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n            hasNextPage={popularMovies.hasNextPage || true}\r\n            onFetch={popularMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n            hasNextPage={topRatedMovies.hasNextPage || true}\r\n            onFetch={topRatedMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Upcoming Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n            hasNextPage={upcomingMovies.hasNextPage || true}\r\n            onFetch={upcomingMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'People' : ''} header={<Filters mediaType='person' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalPeople\r\n          isLoading={popularPeople.isFetching || popularPeople.isLoading}\r\n          isError={popularPeople.isError}\r\n          isSuccess={popularPeople.isSuccess}\r\n          people={people?.results || []}\r\n        />\r\n\r\n        {people ? (\r\n          <LoadMore\r\n            amount={people.results.length}\r\n            total={people.total_results}\r\n            mediaType='people'\r\n            isLoading={popularPeople.isFetching || popularPeople.isLoading}\r\n            hasNextPage={popularPeople.hasNextPage || true}\r\n            onFetch={popularPeople.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, ListItem, Badge, Text, Kbd, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, label, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isHoveringDelete, setIsHoveringDelete] = useState<boolean>(false);\r\n\r\n  const handleSearch = (): void => {\r\n    if (type === 'isKeyword' && onSearch) {\r\n      onSearch(label);\r\n    } else {\r\n      const search = { query: label, page: 1, mediaType };\r\n\r\n      history.push({\r\n        pathname: history.location.pathname,\r\n        search: queryString.stringify(_.omit(search, 'page'))\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 0.25}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' ? () => handleSearch() : undefined}\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        isLoaded={state === 'isLoaded'}>\r\n        <HStack spacing={1}>\r\n          {mediaType ? (\r\n            <Badge colorScheme={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}>\r\n              {mediaType}\r\n            </Badge>\r\n          ) : null}\r\n          <Text align='left' fontSize='md'>\r\n            {label}\r\n          </Text>\r\n        </HStack>\r\n      </SkeletonText>\r\n\r\n      <HStack spacing={1}>\r\n        <ScaleFade in={state === 'isFocused'} unmountOnExit>\r\n          <span>\r\n            To select<Kbd>enter</Kbd>\r\n          </span>\r\n        </ScaleFade>\r\n        {type !== 'isKeyword' ? (\r\n          <ScaleFade in={isHovering}>\r\n            <Tooltip label={`Remove \"${label}\"`} placement='top'>\r\n              <IconButton\r\n                aria-label='Remove search'\r\n                icon={ClearOutlinedIcon}\r\n                onClick={() => handleDelete()}\r\n                onMouseEnter={() => setIsHoveringDelete(true)}\r\n                onMouseLeave={() => setIsHoveringDelete(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </ScaleFade>\r\n        ) : null}\r\n      </HStack>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n",
    "import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Empty from '../../../Empty';\r\nimport Row from '../Row';\r\n\r\nconst Default = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <VStack\r\n      ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n      alignItems='flex-start'\r\n      spacing={2}\r\n      maxHeight='35vh'\r\n      overflowY='auto'>\r\n      <VStack width='100%' alignItems='flex-start' spacing={1} pr={isOverflown ? 2 : 0}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          Recent searches\r\n        </Text>\r\n        {recentSearches.length > 0 ? (\r\n          _.sortBy(recentSearches, 'date').map((search) => (\r\n            <Row key={search.id} id={search.id} label={search.label} mediaType={search.mediaType} state='isLoaded' />\r\n          ))\r\n        ) : (\r\n          <Empty hasIllustration={false} label='No recent searches' size='xs' />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\n\r\ntype DisplayProps = {\r\n  query: string;\r\n  totalResults?: number;\r\n};\r\n\r\nconst Display = ({ query = '', totalResults = 0 }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n      <Text\r\n        align='right'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'>{`${totalResults} result${totalResults > 1 ? 's' : ''} found`}</Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n",
    "import React, { ReactElement, useRef, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useOutsideClick,\r\n  VStack,\r\n  Box,\r\n  HStack,\r\n  Input,\r\n  List,\r\n  Icon,\r\n  Collapse,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport Default from './components/Default';\r\nimport Display from './components/Display';\r\nimport Row from './components/Row';\r\nimport { SearchFormProps, Keyword } from './types';\r\n\r\nconst SearchForm = (props: SearchFormProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    query,\r\n    sortBy = undefined,\r\n    genres = undefined,\r\n    departments = undefined,\r\n    refetch = false,\r\n    onQueryChange,\r\n    onMoviesChange,\r\n    onTVChange,\r\n    onPeopleChange,\r\n    onIsLoading,\r\n    onIsFetched\r\n  } = props;\r\n\r\n  const [isLocked, setIsLocked] = useState<boolean>(false);\r\n  const [isHoveringLock, setIsHoveringLock] = useState<boolean>(false);\r\n\r\n  const [isFocused, setIsFocused] = useState<boolean>(false);\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\r\n\r\n  const [localQuery, setLocalQuery] = useState<string>('');\r\n  const [totalResults, setTotalResults] = useState<number | undefined>(undefined);\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', localQuery],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query: localQuery },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: localQuery.length > 0 }\r\n  );\r\n\r\n  const searchMovies = useInfiniteQuery(\r\n    'searchMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onMoviesChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchTV = useInfiniteQuery(\r\n    'searchTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onTVChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchPeople = useInfiniteQuery(\r\n    'searchPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onPeopleChange({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFocus = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleSearchQuery = (query: string): void => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    setLocalQuery(query);\r\n    onQueryChange(query.trim());\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          searchPeople.refetch();\r\n          break;\r\n        case 'tv':\r\n          searchTV.refetch();\r\n          break;\r\n        case 'movie':\r\n          searchMovies.refetch();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  };\r\n\r\n  const handleResetSearch = (): void => {\r\n    setIsLocked(false);\r\n    setIsHoveringLock(false);\r\n    setIsFocused(false);\r\n    setIsHovering(false);\r\n    setHasSubmitted(false);\r\n    setTotalResults(undefined);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: inputRef,\r\n    handler: !isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if ((localQuery && localQuery.length > 0) || (query && query.length > 0)) {\r\n      if (params && params.page && params.mediaType) {\r\n        switch (params.mediaType) {\r\n          case 'person': {\r\n            if (searchPeople.hasNextPage) {\r\n              searchPeople.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'tv': {\r\n            if (searchTV.hasNextPage) {\r\n              searchTV.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'movie': {\r\n            if (searchMovies.hasNextPage) {\r\n              searchMovies.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        handleSearchQuery(localQuery || query);\r\n      }\r\n    } else if (params && params.query && typeof params.query === 'string') {\r\n      handleSearchQuery(params.query);\r\n    }\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'movie' && onIsLoading) {\r\n      onIsLoading(searchMovies.isFetching || searchMovies.isLoading);\r\n    }\r\n  }, [searchMovies.isFetching, searchMovies.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'tv' && onIsLoading) {\r\n      onIsLoading(searchTV.isFetching || searchTV.isLoading);\r\n    }\r\n  }, [searchTV.isFetching, searchTV.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'person' && onIsLoading) {\r\n      onIsLoading(searchPeople.isFetching || searchPeople.isLoading);\r\n    }\r\n  }, [searchPeople.isFetching, searchPeople.isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && (localQuery || query)) {\r\n      const totalMovies =\r\n        searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n          ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalTV =\r\n        searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n          ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalPeople =\r\n        searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n          ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n          : 0;\r\n\r\n      setHasSubmitted(true);\r\n      setTotalResults(totalMovies + totalTV + totalPeople);\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: localQuery || query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess, searchTV.isSuccess, searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    handleResetSearch();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (refetch) {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  }, [refetch]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={1}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        pt={1}\r\n        pb={isFocused || isLocked ? 2 : 1}\r\n        onClick={() => handleSetFocus()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}>\r\n        <HStack\r\n          borderBottom={isFocused || isLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFocused || isLocked ? 1 : 0}\r\n          mb={isFocused || isLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder='Try \"The Godfather\"'\r\n            onFocus={!isHoveringLock && !isLocked ? () => setIsFocused(true) : undefined}\r\n            onBlur={!isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined}\r\n            onKeyPress={(event) => {\r\n              if (event.key === 'Enter' && !hasSubmitted) {\r\n                history.push({\r\n                  pathname: history.location.pathname,\r\n                  search: queryString.stringify({ query: localQuery })\r\n                });\r\n              }\r\n            }}\r\n            onChange={(event) => {\r\n              setLocalQuery(event.target.value);\r\n              setHasSubmitted(false);\r\n\r\n              if (hasSubmitted) {\r\n                searchMovies.remove();\r\n                searchTV.remove();\r\n                searchPeople.remove();\r\n              }\r\n            }}\r\n            variant='unstyled'\r\n            value={localQuery}\r\n          />\r\n          <HStack spacing={0}>\r\n            <ScaleFade in={localQuery.length > 0} unmountOnExit>\r\n              <Tooltip label='Clear search' placement='top' gutter={4}>\r\n                <IconButton\r\n                  aria-label='Clear search'\r\n                  icon={ClearOutlinedIcon}\r\n                  onClick={() => setLocalQuery('')}\r\n                  size='xs'\r\n                  variant='icon'\r\n                />\r\n              </Tooltip>\r\n            </ScaleFade>\r\n            <Tooltip\r\n              label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n              placement='top'\r\n              closeOnClick={false}\r\n              closeOnMouseDown={false}\r\n              gutter={4}\r\n              span>\r\n              <IconButton\r\n                aria-label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n                icon={isLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n                onClick={() => setIsLocked(!isLocked)}\r\n                onMouseEnter={() => setIsHoveringLock(true)}\r\n                onMouseLeave={() => setIsHoveringLock(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </HStack>\r\n        </HStack>\r\n        <Collapse in={isFocused || isLocked} unmountOnExit>\r\n          <List spacing={0}>\r\n            {keywords.isFetching || keywords.isLoading ? (\r\n              [...Array(5)].map((_dummy, index) => (\r\n                <Row key={index} id={`${index}`} label='' state='isLoading' type='isKeyword' />\r\n              ))\r\n            ) : keywords.isSuccess && keywords.data.length > 0 && !hasSubmitted ? (\r\n              keywords.data.map((keyword, index) =>\r\n                index < 5 ? (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={`${keyword.id}`}\r\n                    label={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => {\r\n                      setLocalQuery(query);\r\n\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({ query })\r\n                      });\r\n                    }}\r\n                  />\r\n                ) : null\r\n              )\r\n            ) : (\r\n              <Default />\r\n            )}\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <ScaleFade in={Boolean(totalResults) || hasSubmitted} unmountOnExit style={{ width: '100%' }}>\r\n        <Display query={query} totalResults={totalResults} />\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isLoading ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../components/TV/Grid/Horizontal';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, isLoading = false, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <Fade\r\n      in={\r\n        (movies && movies.results && movies.results.length > 0) ||\r\n        (tv && tv.results && tv.results.length > 0) ||\r\n        (people && people.results && people.results.length > 0) ||\r\n        false\r\n      }\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse\r\n          in={(movies && movies.results && movies.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}>\r\n            <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.results && tv.results.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}>\r\n            <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse\r\n          in={(people && people.results && people.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}>\r\n            <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\n\r\nconst Search = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [refetch, setRefetch] = useState<boolean>(false);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setRefetch(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else {\r\n          setMediaType(null);\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0}>\r\n        <Box width='100%' backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} px={2} pt={4} pb={2}>\r\n          <SearchForm\r\n            query={query}\r\n            sortBy={sortBy}\r\n            genres={genres}\r\n            departments={departments}\r\n            refetch={refetch}\r\n            onQueryChange={(query: string) => setQuery(query)}\r\n            onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n            onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n            onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n            onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            onIsFetched={() => setRefetch(false)}\r\n          />\r\n        </Box>\r\n\r\n        <VerticalGrid\r\n          title={\r\n            query\r\n              ? mediaType === 'movie'\r\n                ? `Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'tv'\r\n                ? `Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'person'\r\n                ? `Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : ''\r\n              : ''\r\n          }\r\n          header={\r\n            <Fade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </Fade>\r\n          }>\r\n          {mediaType === 'movie' && movies ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalMovies isLoading={isLoading} isError={false} isSuccess={true} movies={movies.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType={`movies for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: movies.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'tv' && tv ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalTV isLoading={isLoading} isError={false} isSuccess={true} tv={tv.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType={`tv shows for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: tv.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'person' && people ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalPeople isLoading={isLoading} isError={false} isSuccess={true} people={people.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={people.results.length}\r\n                  total={people.total_results}\r\n                  mediaType={`people for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: people.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : (\r\n            <All query={query} isLoading={isLoading} movies={movies} tv={tv} people={people} />\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          const search = { ...queryString.parse(history.location.search), page: 1, mediaType };\r\n\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(_.omit(search, 'page'))\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useInfiniteQuery(\r\n    'trendingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'movie') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending tv shows\r\n  const trendingTV = useInfiniteQuery(\r\n    'trendingTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'tv') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending people\r\n  const trendingPeople = useInfiniteQuery(\r\n    'trendingPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'person') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleRefetch = (): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        trendingMovies.refetch();\r\n        break;\r\n      case 'tv':\r\n        trendingTV.refetch();\r\n        break;\r\n      case 'person':\r\n        trendingPeople.refetch();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => handleRefetch(), 0);\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      handleRefetch();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Select media-type'\r\n        }\r\n        header={\r\n          <Fade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n            </HStack>\r\n          </Fade>\r\n        }>\r\n        {mediaType ? (\r\n          <VStack width='100%' spacing={4} px={2}>\r\n            {mediaType === 'movie' ? (\r\n              <>\r\n                <VerticalMovies\r\n                  isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                  isError={trendingMovies.isError}\r\n                  isSuccess={trendingMovies.isSuccess}\r\n                  movies={movies?.results || []}\r\n                />\r\n\r\n                {movies ? (\r\n                  <LoadMore\r\n                    amount={movies.results.length}\r\n                    total={movies.total_results}\r\n                    mediaType='movies'\r\n                    isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                    hasNextPage={trendingMovies.hasNextPage || true}\r\n                    onFetch={trendingMovies.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'tv' ? (\r\n              <>\r\n                <VerticalTV\r\n                  isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                  isError={trendingTV.isError}\r\n                  isSuccess={trendingTV.isSuccess}\r\n                  tv={tv?.results || []}\r\n                />\r\n\r\n                {tv ? (\r\n                  <LoadMore\r\n                    amount={tv.results.length}\r\n                    total={tv.total_results}\r\n                    mediaType='tv shows'\r\n                    isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                    hasNextPage={trendingTV.hasNextPage || true}\r\n                    onFetch={trendingTV.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'person' ? (\r\n              <>\r\n                <VerticalPeople\r\n                  isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                  isError={trendingPeople.isError}\r\n                  isSuccess={trendingPeople.isSuccess}\r\n                  people={people?.results || []}\r\n                />\r\n\r\n                {people ? (\r\n                  <LoadMore\r\n                    amount={people.results.length}\r\n                    total={people.total_results}\r\n                    mediaType='people'\r\n                    isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                    hasNextPage={trendingPeople.hasNextPage || true}\r\n                    onFetch={trendingPeople.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </VStack>\r\n        ) : (\r\n          <Box width='100%' px={2}>\r\n            <Empty\r\n              button={\r\n                <MediaTypes\r\n                  mediaType={mediaType}\r\n                  onSetType={(mediaType: MediaType) =>\r\n                    history.push({\r\n                      pathname: `${history.location.pathname === '/trending' ? '/trending/' : ''}${mediaType}`\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              hasIllustration={false}\r\n              label=''\r\n              size='xl'\r\n              variant='outlined'\r\n            />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/trending' ? '/trending/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular TV Shows'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows Airing Today'\r\n        isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n        path={{ pathname: '/tv/airing-today' }}>\r\n        <HorizontalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tvAiringToday.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows on at the moment'\r\n        isLoading={onTV.isLoading || onTV.isFetching}\r\n        path={{ pathname: '/tv/on-tv' }}>\r\n        <HorizontalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={onTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated TV Shows'\r\n        isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n        path={{ pathname: '/tv/top-rated' }}>\r\n        <HorizontalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={topRatedTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport ReportProblemTwoToneIcon from '@material-ui/icons/ReportProblemTwoTone';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      tvAiringToday.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          icon: ReportProblemTwoToneIcon,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='xs'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      tvAiringToday.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows Airing Today' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n            hasNextPage={tvAiringToday.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport ReportProblemTwoToneIcon from '@material-ui/icons/ReportProblemTwoTone';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      onTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          icon: ReportProblemTwoToneIcon,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='xs'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      onTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows On At The Moment' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={onTV.isLoading || onTV.isFetching}\r\n            hasNextPage={onTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport ReportProblemTwoToneIcon from '@material-ui/icons/ReportProblemTwoTone';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      popularTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          icon: ReportProblemTwoToneIcon,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='xs'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      popularTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular TV Shows' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={popularTV.isLoading || popularTV.isFetching}\r\n            hasNextPage={popularTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport ReportProblemTwoToneIcon from '@material-ui/icons/ReportProblemTwoTone';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      topRatedTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          icon: ReportProblemTwoToneIcon,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='xs'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      topRatedTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated TV Shows' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n            hasNextPage={topRatedTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n",
    "export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 64\r\n};\r\n",
    "import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, useParams, Link } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Params } from './types';\r\n\r\nconst Breadcrumb = ({ breadcrumbs }: { breadcrumbs: BreadcrumbType[] }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme);\r\n\r\n  const { id, mediaType } = useParams<Params>();\r\n  const location = useLocation();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const [state, setstate] = useState<BreadcrumbType[]>([]);\r\n\r\n  useEffect(() => {\r\n    setstate([]);\r\n\r\n    if (location.pathname.includes('lists')) {\r\n      if (id && mediaType) {\r\n        const label =\r\n          mediaType === 'movie'\r\n            ? 'Movies'\r\n            : mediaType === 'tv'\r\n            ? 'TV Shows'\r\n            : mediaType === 'person'\r\n            ? 'People'\r\n            : 'Media-Type';\r\n\r\n        setstate([\r\n          {\r\n            label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n            path: `/lists/${id}`\r\n          },\r\n          {\r\n            label,\r\n            path: `/lists/${id}/${mediaType}`\r\n          }\r\n        ]);\r\n      } else if (id) {\r\n        setstate([\r\n          {\r\n            label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n            path: `/lists/${id}`\r\n          }\r\n        ]);\r\n      }\r\n    } else if (mediaType) {\r\n      const label =\r\n        mediaType === 'movie'\r\n          ? 'Movies'\r\n          : mediaType === 'tv'\r\n          ? 'TV Shows'\r\n          : mediaType === 'person'\r\n          ? 'People'\r\n          : 'Media-Type';\r\n\r\n      setstate([\r\n        {\r\n          label,\r\n          path: location.pathname.includes('trending')\r\n            ? `/trending/${mediaType}`\r\n            : location.pathname.includes('liked')\r\n            ? `/liked/${mediaType}`\r\n            : ''\r\n        }\r\n      ]);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${theme.fontSizes.xl} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {[...breadcrumbs, ...state].map((breadcrumb) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={location.pathname === breadcrumb.path}\r\n          fontSize={['xl']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          {location.pathname === breadcrumb.path ? (\r\n            <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n              {breadcrumb.label}\r\n            </Text>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              as={Link}\r\n              to={breadcrumb.path}\r\n              sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n              {breadcrumb.label}\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium'\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']} !important`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900',\r\n      fontWeight: 'semibold'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TheatersTwoToneIcon from '@material-ui/icons/TheatersTwoTone';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\nimport WhatshotOutlinedIcon from '@material-ui/icons/WhatshotOutlined';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\n\r\nimport { NavItem } from '../../components/NavItems/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n",
    "import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    minWidth: '46px',\r\n    minHeight: '46px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n    backgroundColor: `${color}.400`,\r\n    borderColor: `${color}.400`,\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '23px' : size === 'md' ? '45px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n  },\r\n  light: {\r\n    color: 'gray.50'\r\n  },\r\n  dark: {\r\n    color: 'gray.900'\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = ({ label, path, isLastChild = false }: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const location = useLocation();\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack width='100%' spacing='15px'>\r\n        {sidebarMode === 'expanded' ? (\r\n          <Box height='44px' borderLeft='solid2' borderLeftColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n        ) : null}\r\n        <Tooltip\r\n          aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n          width='100%'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={sidebarMode === 'collapsed' ? label : ''}\r\n          placement='right'\r\n          span>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </Tooltip>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useDisclosure,\r\n  VStack,\r\n  HStack,\r\n  Collapse,\r\n  Icon,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { NavItem as NavItemType } from '../../types';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, icon, iconActive, children } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isOpen : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        closeOnClick={false}\r\n        closeOnMouseDown={false}\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        placement='right'\r\n        span>\r\n        <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onClick={isOpen ? () => onClose() : () => onOpen()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='lg' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes['2xl']} !important`,\r\n                    transform: `rotate(${isOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? '31px' : '0px'}\r\n            pr={sidebarMode === 'expanded' ? 2 : '0px'}\r\n            mb={sidebarMode === 'expanded' ? 1 : '0px'}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Logo from '../Logo';\r\nimport NavItem from './components/NavItem';\r\nimport { NavItemsProps, NavItem as NavItemType } from './types';\r\n\r\nconst NavItems = ({ navItems }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      <Box width='100%' height='2px' border='solid1' borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem: NavItemType) => (\r\n          <NavItem key={navItem.label} {...navItem} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    onClose();\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} blockScrollOnMount={false} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack, Box, Fade, Collapse } from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon } from '@material-ui/icons/';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { PartialMovie } from '../../../../../../common/types/movie';\r\nimport { PartialPerson } from '../../../../../../common/types/person';\r\nimport { PartialTV } from '../../../../../../common/types/tv';\r\nimport { Response } from '../../../../../../common/types/types';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport Modal from '../../../../../../components/Modal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport SearchForm from '../../../../../../components/SearchForm';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\n\r\nconst Search = (): ReactElement => {\r\n  const { isOpen: isModalOpen, onOpen: onModalOpen, onClose: onModalClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleResetModal = (): void => {\r\n    setQuery('');\r\n\r\n    setMovies(null);\r\n    setTV(null);\r\n    setPeople(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalOpen) {\r\n      setTimeout(() => {\r\n        handleResetModal();\r\n      }, 500);\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open Search'\r\n        disabled={location.pathname.includes('search')}\r\n        icon={SearchOutlinedIcon}\r\n        onClick={() => onModalOpen()}\r\n        variant='icon'\r\n        style={{ cursor: location.pathname.includes('search') ? 'default' : 'pointer' }}\r\n      />\r\n\r\n      <Modal title='Search' isOpen={isModalOpen} onClose={onModalClose} isCentered scrollBehavior='inside' size='full'>\r\n        <VStack width='100%' spacing={0}>\r\n          <Box width='100%' px={2} pt={4} pb={2}>\r\n            <SearchForm\r\n              query={query}\r\n              onQueryChange={(query: string) => setQuery(query)}\r\n              onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n              onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n              onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n              onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            />\r\n          </Box>\r\n\r\n          <Fade\r\n            in={\r\n              (movies && movies.results && movies.results.length > 0) ||\r\n              (tv && tv.results && tv.results.length > 0) ||\r\n              (people && people.results && people.results.length > 0) ||\r\n              false\r\n            }\r\n            unmountOnExit\r\n            style={{ width: '100%' }}>\r\n            <VStack width='100%' spacing={6} pb={4}>\r\n              {/* Movies */}\r\n              <Collapse\r\n                in={(movies && movies.results && movies.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* TV */}\r\n              <Collapse\r\n                in={(tv && tv.results && tv.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* People */}\r\n              <Collapse\r\n                in={(people && people.results && people.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n            </VStack>\r\n          </Fade>\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon, Text, Link } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { UserLink as UserLinkType } from '../../types';\r\nimport useStyles from './styles';\r\n\r\nconst UserLink = (props: UserLinkType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { label, path, icon, iconActive, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return path ? (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='flex-start'\r\n        px={2}\r\n        py={1}\r\n        spacing={1}\r\n        sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Link>\r\n  ) : (\r\n    <HStack\r\n      width='100%'\r\n      justifyContent='flex-start'\r\n      px={2}\r\n      py={1}\r\n      spacing={1}\r\n      onClick={onClick ? () => onClick() : undefined}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n      <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n        {label}\r\n      </Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default UserLink;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    link: Style;\r\n    container: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): NavItemStyle => ({\r\n  common: {\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    },\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { toggleDisplay } from '../../../../../../store/slices/Modals';\r\nimport UserLink from './components/UserLink';\r\nimport { UserLink as UserLinkType } from './types';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const userLinks: UserLinkType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    onClose();\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink: UserLinkType) => (\r\n                <UserLink key={userLink.label} {...userLink} />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, Fade } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Breadcrumb from './components/Breadcrumb';\r\nimport Menu from './components/Menu';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\n\r\ntype HeaderProps = { width: string; left: string; breadcrumbs: BreadcrumbType[] };\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMdUp] = useMediaQuery('(min-width: 640px)');\r\n  const [isLgUp] = useMediaQuery('(min-width: 1280px)');\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  const { width, left, breadcrumbs } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      <HStack spacing={1}>\r\n        {!isLgUp ? <Menu /> : null}\r\n        {isMdUp ? <Breadcrumb breadcrumbs={breadcrumbs} /> : null}\r\n      </HStack>\r\n      <HStack spacing={1}>\r\n        <Fade in={!location.pathname.includes('search')}>\r\n          <Search />\r\n        </Fade>\r\n        <User />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, VStack, Box, Icon, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../../../store/slices/Modals';\r\nimport { Theme } from '../../../../../theme/types';\r\n\r\nconst ConfirmModal = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (confirmModal.open) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [confirmModal.open]);\r\n\r\n  return (\r\n    <Modal\r\n      title={confirmModal.title}\r\n      actions={confirmModal.submitButton}\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='md'>\r\n      <VStack spacing={2} p={2}>\r\n        <Box borderRadius='lg' p={2} sx={{ backgroundColor: `${color}.50`, color: `${color}.400` }}>\r\n          <Icon\r\n            as={confirmModal.icon}\r\n            sx={{ fontSize: `${theme.fontSizes['6xl']} !important`, color: `${color}.400` }}\r\n          />\r\n        </Box>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='lg' fontWeight='normal'>\r\n          {confirmModal.description}\r\n        </Text>\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultDescriptionModal, toggleDescription } from '../../../../../store/slices/Modals';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleDescription({ ...defaultDescriptionModal }));\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (descriptionModal.open) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [descriptionModal.open]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        // TODO: Add Link to view item\r\n        <Button color={utils.handleReturnColor(color)} onClick={() => handleClose()} size='xs'>\r\n          {`View ${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : ''}`}\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.mediaItem ? descriptionModal.mediaItem.description : 'N/A'}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title, colorMode }: ContainerProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  return (\r\n    <Card colorMode={colorMode} isFullWidth variant='outlined' p={2} pt={1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={1.5}\r\n          sx={{\r\n            transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n          }}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, background, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      colorMode={background}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Background' colorMode={value}>\r\n          <HStack width='100%' spacing={2}>\r\n            {backgrounds.map((background) => (\r\n              <BackgroundItem\r\n                key={background.value}\r\n                {...background}\r\n                color={color}\r\n                background={value}\r\n                isActive={value === background.value}\r\n                onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, background, isActive, onClick } = props;\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      span>\r\n      <Card\r\n        color={isActive ? utils.handleReturnColor(value) : 'gray'}\r\n        colorMode={background}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        variant='outlined'\r\n        p={2}>\r\n        <VStack spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: background === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const background = form.watch('background');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Color' colorMode={background}>\r\n          <SimpleGrid width='100%' minChildWidth='20%' spacing={2}>\r\n            {colors.map((color, index) => (\r\n              <ColorItem\r\n                key={index}\r\n                {...color}\r\n                background={background}\r\n                isActive={color.value === value}\r\n                onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </SimpleGrid>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport { setTheme } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.modals.ui.isDisplayModalOpen);\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n  const background = form.watch('background');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      handleClose();\r\n\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n    }, 2500);\r\n    setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDisplayModalOpen) {\r\n      onOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [isDisplayModalOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='xs'>\r\n          Save\r\n        </Button>\r\n      }\r\n      colorMode={background}\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n",
    "import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../../../components/Modal';\r\nimport { setLists } from '../../../../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    if (!isDirty) {\r\n      form.reset({ ...defaultValues });\r\n      onClose();\r\n    }\r\n\r\n    // Toggle alert if has unsaved data!\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='xs'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${\r\n              results.movies.length + results.tv.length > 0\r\n                ? `${results.movies.length + results.tv.length} items  • `\r\n                : ''\r\n            }${results.movies.length + results.tv.length > 0 ? 'Updated' : 'Created'} ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, toggleList } from '../../../../../store/slices/Modals';\r\nimport { ListModal as ListModalType } from '../../../../../store/slices/Modals/types';\r\nimport { setLists } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\nimport CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isListsOpen, onOpen: onListsOpen, onClose: onListsClose } = useDisclosure();\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal: ListModalType = useSelector((state) => state.modals.ui.listsModal);\r\n  const lists: ListType[] = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.mediaItem && listsModal.mediaItem.id && listsModal.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) => {\r\n          const results = { ...updatedList.results };\r\n\r\n          switch (listsModal.mediaType) {\r\n            case 'movie': {\r\n              const movieMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.movies = [...results.movies, movieMediaItem];\r\n              break;\r\n            }\r\n            case 'tv': {\r\n              const showMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.tv = [...results.tv, showMediaItem];\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n\r\n          return updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: { ...results }\r\n              }\r\n            : updatedList;\r\n        });\r\n      });\r\n\r\n      setSelected([]);\r\n      dispatch(setLists([...updatedLists]));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleList({ ...defaultListsModal }));\r\n    onListsClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listsModal.open) {\r\n      onListsOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [listsModal.open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add \"${listsModal.title} to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleSaveItem()} size='xs'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => onCreateListOpen()} size='xs'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={isListsOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Modal as CUIModal,\r\n  ModalContent,\r\n  ModalBody,\r\n  VStack,\r\n  Box,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport useStyles from './styles';\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  const handleClose = (): void => {\r\n    const hasSplashscreenRendered = Boolean(JSON.parse(sessionStorage.getItem('hasSplashscreenRendered') || 'false'));\r\n\r\n    dispatch(toggleSplashscreen(false));\r\n\r\n    onClose();\r\n\r\n    if (!hasSplashscreenRendered) {\r\n      sessionStorage.setItem('hasSplashscreenRendered', JSON.stringify(true));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      onOpen();\r\n\r\n      setTimeout(() => handleClose(), 5000);\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <CUIModal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody zIndex={10000} p={0}>\r\n          <VStack width='100%' height='100vh' justifyContent='space-between' p={3}>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Entertainment database\r\n            </Text>\r\n            <MotionBox\r\n              animate={{ backgroundPosition: ['0%', '25%', '50%', '75%', '100%', '75%', '50%', '25%', '0%'] }}\r\n              transition={{\r\n                duration: 5,\r\n                ease: [0.76, 0, 0.24, 1],\r\n                repeat: 'Infinity',\r\n                repeatType: 'loop',\r\n                repeatDelay: 1\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400, red.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Loading...\r\n            </Text>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n",
    "import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={1}\r\n      py={sidebarMode === 'expanded' ? 2 : 1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Center, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth } from './common/data/sidebar';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Header from './components/Header';\r\nimport ConfirmModal from './components/Modals/Confirm';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Sidebar from './components/Sidebar';\r\nimport { LayoutProps, GenreResponse } from './types';\r\n\r\nconst Layout = ({ children, breadcrumbs }: LayoutProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>(`${sidebarWidth[sidebarMode]}px`);\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return (\r\n    <>\r\n      <Center overflow='hidden'>\r\n        {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n        <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n          <Header width={width} left={left} breadcrumbs={breadcrumbs} />\r\n          <Box width='100%' maxWidth='100%' position='relative' top='66px' left='0px' pb={4}>\r\n            {children}\r\n          </Box>\r\n        </Box>\r\n      </Center>\r\n\r\n      <SplashscreenModal />\r\n\r\n      <ConfirmModal />\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n\r\n      <DescriptionModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n",
    "import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport default function useQueriesTyped<TQueries extends readonly UseQueryOptions[]>(\r\n  queries: [...TQueries]\r\n): {\r\n  [ArrayElement in keyof TQueries]: UseQueryResult<\r\n    TQueries[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<TQueries[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n} {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n}\r\n\r\n// Using John Reilly code: https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n",
    "import React, { ComponentType, ReactElement } from 'react';\r\n\r\nimport { Container, Box } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport { useLocation, RouteComponentProps, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport { Breadcrumb } from '../../../common/types/types';\r\nimport Layout from '../../../containers/Layout';\r\n\r\ninterface DefaultRouteProps extends RouteProps {\r\n  component: ComponentType<RouteComponentProps | ComponentType>;\r\n  breadcrumbs: Breadcrumb[];\r\n}\r\n\r\nconst ComponentBox = motion(Box);\r\n\r\nconst DefaultRoute = ({ component: Component, breadcrumbs, ...rest }: DefaultRouteProps): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  sessionStorage.setItem('redirect_to', JSON.stringify(location));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <Container>\r\n          <Layout {...props} breadcrumbs={breadcrumbs}>\r\n            <ComponentBox\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{\r\n                duration: 1,\r\n                ease: [0.76, 0, 0.24, 1]\r\n              }}>\r\n              <Component {...props} />\r\n            </ComponentBox>\r\n          </Layout>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { useLocation, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Liked from '../pages/Liked';\r\nimport Lists from '../pages/Lists';\r\nimport Movies from '../pages/Movies';\r\nimport MoviesNowPlaying from '../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../pages/Movies/Popular';\r\nimport TopRatedMovies from '../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../pages/Movies/Upcoming';\r\nimport People from '../pages/People';\r\nimport Search from '../pages/Search';\r\nimport Trending from '../pages/Trending';\r\nimport TV from '../pages/TV';\r\nimport TVAiringToday from '../pages/TV/AiringToday';\r\nimport OnTV from '../pages/TV/OnTV';\r\nimport PopularTV from '../pages/TV/Popular';\r\nimport TopRatedTV from '../pages/TV/TopRated';\r\nimport DefaultRoute from './components/DefaultRoute';\r\n\r\nconst Router = (): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const breadcrumbs = {\r\n    home: { label: 'Home', path: '/' },\r\n    liked: { label: 'Liked', path: '/liked' },\r\n    lists: { label: 'Lists', path: '/lists' },\r\n    trending: { label: 'Trending', path: '/trending' },\r\n    movies: { label: 'Movies', path: '/movies' },\r\n    tv: { label: 'TV Shows', path: '/tv' }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location} key={location.pathname}>\r\n        {/* Home Route */}\r\n        <DefaultRoute exact path='/' component={Home} breadcrumbs={[breadcrumbs.home]} />\r\n\r\n        {/* Liked Routes */}\r\n        <DefaultRoute exact path='/liked' component={Liked} breadcrumbs={[breadcrumbs.home, breadcrumbs.liked]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/liked/:mediaType'\r\n          component={Liked}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.liked]}\r\n        />\r\n\r\n        {/* Lists Routes */}\r\n        <DefaultRoute exact path='/lists' component={Lists} breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]} />\r\n        <DefaultRoute exact path='/lists/:id' component={Lists} breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/lists/:id/:mediaType'\r\n          component={Lists}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.lists]}\r\n        />\r\n\r\n        {/* Search Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/search'\r\n          component={Search}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Search', path: '/search' }]}\r\n        />\r\n\r\n        {/* Trending Routes */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending/:mediaType'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending]}\r\n        />\r\n\r\n        {/* Movies Routes */}\r\n        <DefaultRoute exact path='/movies' component={Movies} breadcrumbs={[breadcrumbs.home, breadcrumbs.movies]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/popular'\r\n          component={PopularMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Popular', path: '/movies/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/upcoming'\r\n          component={UpcomingMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Upcoming', path: '/movies/upcoming' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/now-playing'\r\n          component={MoviesNowPlaying}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Now Playing', path: '/movies/now-playing' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/top-rated'\r\n          component={TopRatedMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Top Rated', path: '/movies/top-rated' }]}\r\n        />\r\n\r\n        {/* TV Routes */}\r\n        <DefaultRoute exact path='/tv' component={TV} breadcrumbs={[breadcrumbs.home, breadcrumbs.tv]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/popular'\r\n          component={PopularTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Popular', path: '/tv/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/airing-today'\r\n          component={TVAiringToday}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Airing Today', path: '/tv/airing-today' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/on-tv'\r\n          component={OnTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'On at the moment', path: '/tv/on-tv' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/top-rated'\r\n          component={TopRatedTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Top Rated', path: '/tv/top-rated' }]}\r\n        />\r\n\r\n        {/* People Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/people'\r\n          component={People}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'People', path: '/people' }]}\r\n        />\r\n      </Switch>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Routes from '../../routes';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Routes />\r\n        </BrowserRouter>\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",
    "import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"
  ],
  "sourceRoot": ""
}
