{"version":3,"sources":["common/hooks/useEventListener.ts","common/hooks/useElementSize.ts","common/hooks/useImageOnLoad.ts","common/hooks/useInterval.ts","common/hooks/useQueriesTyped.ts","common/hooks/useSelectorTyped.ts","common/hooks/useTimeout.ts","common/hooks/useWindowSize.ts","common/scripts/axios.ts","store/slices/App/index.ts","store/slices/Options/index.ts","containers/Layout/common/data/dimensions.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/common/data/navItems.ts","components/Clickable/Link/index.tsx","components/Clickable/Link/styles.ts","containers/Layout/components/Footer/components/NavItem/index.tsx","containers/Layout/components/Footer/index.tsx","components/Clickable/IconButton/index.tsx","components/Clickable/IconButton/styles.ts","components/Clickable/Button/index.tsx","components/Clickable/Button/styles.ts","store/slices/Modals/index.tsx","store/slices/User/index.ts","store/rootReducer.ts","store/index.ts","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/sizes.ts","theme/foundations/spacing.ts","theme/foundations/transition.ts","theme/foundations/typography.ts","theme/foundations/z-index.ts","theme/foundations/index.ts","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/utils.ts","components/Tooltip/index.tsx","components/NavItem/components/NavItemChild/index.tsx","components/NavItem/components/NavItemChild/styles.ts","components/NavItem/index.tsx","components/NavItem/styles.ts","containers/Layout/components/Logo/index.tsx","containers/Layout/components/Logo/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","components/Modal/index.tsx","containers/Layout/components/Modals/Confirm/index.tsx","containers/Layout/components/Modals/Description/index.tsx","components/Card/components/Divider/index.tsx","components/Card/components/Footer/index.tsx","components/Card/components/Header/index.tsx","components/Card/index.tsx","components/Card/styles.ts","components/Clickable/Card/index.tsx","components/Clickable/Card/styles.ts","containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx","containers/Layout/components/Modals/Display/components/Background/index.tsx","containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx","containers/Layout/components/Modals/Display/components/Color/index.tsx","containers/Layout/components/Modals/Display/index.tsx","containers/Layout/components/Modals/Lists/components/CreateList/validation.ts","containers/Layout/components/Modals/Lists/components/CreateList/index.tsx","containers/Layout/components/Modals/Lists/components/List/index.tsx","containers/Layout/components/Modals/Lists/index.tsx","containers/Layout/components/Modals/Splashscreen/index.tsx","containers/Layout/components/Modals/Splashscreen/styles.ts","pages/Error/index.tsx","components/Grid/Horizontal/components/Arrow/index.tsx","components/Grid/Horizontal/components/Grid/index.tsx","components/Grid/Horizontal/index.tsx","common/assets/illustrations/empty/blue.svg","common/assets/illustrations/empty/cyan.svg","common/assets/illustrations/empty/green.svg","common/assets/illustrations/empty/orange.svg","common/assets/illustrations/empty/pink.svg","common/assets/illustrations/empty/purple.svg","common/assets/illustrations/empty/teal.svg","common/assets/illustrations/empty/yellow.svg","common/assets/illustrations/empty/index.ts","components/Empty/index.tsx","common/assets/illustrations/error/blue.svg","common/assets/illustrations/error/cyan.svg","common/assets/illustrations/error/green.svg","common/assets/illustrations/error/orange.svg","common/assets/illustrations/error/pink.svg","common/assets/illustrations/error/purple.svg","common/assets/illustrations/error/teal.svg","common/assets/illustrations/error/yellow.svg","common/assets/illustrations/error/index.ts","components/Error/index.tsx","components/Bookmark/index.tsx","components/Like/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/utils.ts","components/Skeleton/index.tsx","components/Skeleton/Text/index.tsx","components/Rating/index.tsx","components/Image/index.tsx","components/Poster/components/Image/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","components/Movies/Poster/Vertical/index.tsx","components/Movies/Grid/Horizontal/index.tsx","common/data/departments.ts","components/People/Poster/Vertical/index.tsx","components/People/Grid/Horizontal/index.tsx","components/TV/Poster/Vertical/index.tsx","components/TV/Grid/Horizontal/index.tsx","containers/Page/components/Breadcrumbs/index.tsx","containers/Page/components/Breadcrumbs/styles.ts","containers/Page/components/Divider/index.tsx","containers/Page/index.tsx","pages/Home/index.tsx","components/Badge/index.tsx","common/data/sort.ts","components/Filters/components/Departments/components/Department/index.tsx","components/Filters/components/Departments/index.tsx","components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx","components/Filters/components/DisplayMode/index.tsx","components/Filters/components/Genres/components/Genre/index.tsx","components/Filters/components/Genres/index.tsx","components/Filters/components/SortBy/components/SortByItem/index.tsx","components/Filters/components/SortBy/components/SortByItem/styles.ts","components/Filters/components/SortBy/index.tsx","components/Filters/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/MediaTypePicker/components/MediaTypeItem/index.tsx","components/MediaTypePicker/components/MediaTypes/index.tsx","components/MediaTypePicker/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","components/Movies/Poster/Horizontal/index.tsx","components/HorizontalScroll/components/Arrow/index.tsx","components/HorizontalScroll/components/Arrow/styles.ts","components/HorizontalScroll/index.tsx","components/People/Poster/Horizontal/index.tsx","components/TV/Poster/Horizontal/index.tsx","containers/Page/common/data/breadcrumbs.ts","pages/Liked/components/All/index.tsx","pages/Liked/index.tsx","pages/Lists/components/All/index.tsx","pages/Lists/components/CreateList/validation.ts","pages/Lists/components/CreateList/index.tsx","pages/Lists/components/EditList/validation.ts","pages/Lists/components/EditList/index.tsx","pages/Lists/components/Empty/index.tsx","pages/Lists/components/ListInfo/components/MediaType/index.tsx","pages/Lists/components/ListInfo/components/MediaType/styles.ts","pages/Lists/components/ListInfo/index.tsx","components/Clickable/Radio/index.tsx","components/Clickable/Radio/styles.ts","pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/Lists/components/ListPicker/index.tsx","pages/Lists/components/Toast/index.tsx","pages/Lists/index.tsx","pages/Movies/index.tsx","components/LoadMore/index.tsx","components/Movies/Grid/Vertical/index.tsx","pages/Movies/NowPlaying/index.tsx","pages/Movies/Popular/index.tsx","pages/Movies/TopRated/index.tsx","pages/Movies/Upcoming/index.tsx","components/People/Grid/Vertical/index.tsx","pages/People/index.tsx","pages/Person/components/Bio/index.tsx","pages/Person/components/Details/components/Background/index.tsx","pages/Person/components/Details/components/Departments/index.tsx","pages/Person/components/Details/components/Poster/index.tsx","pages/Person/components/Details/components/Socials/components/Link/index.tsx","pages/Person/components/Details/components/Socials/components/Link/styles.ts","pages/Person/components/Details/components/Socials/components/Links/index.tsx","pages/Person/components/Details/components/Socials/index.tsx","pages/Person/components/Details/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/MediaItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/Panel/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/index.tsx","pages/Person/components/Filmography/components/QuickToggles/index.tsx","pages/Person/components/Filmography/index.tsx","pages/Person/components/KnownFor/index.tsx","pages/Person/components/MediaViewer/components/Actions/index.tsx","pages/Person/components/MediaViewer/components/Gallery/components/Grid/index.tsx","pages/Person/components/MediaViewer/components/Gallery/components/Image/index.tsx","pages/Person/components/MediaViewer/components/Gallery/index.tsx","pages/Person/components/MediaViewer/components/Navigation/index.tsx","pages/Person/components/MediaViewer/components/Viewer/index.tsx","pages/Person/components/MediaViewer/index.tsx","pages/Person/components/Photos/components/Image/index.tsx","pages/Person/components/Photos/index.tsx","pages/Person/index.tsx","components/TV/Grid/Vertical/index.tsx","pages/Search/components/All/components/Movies/index.tsx","pages/Search/components/All/components/People/index.tsx","pages/Search/components/All/components/TV/index.tsx","pages/Search/components/All/index.tsx","pages/Search/components/Form/components/Actions/index.tsx","pages/Search/components/Form/components/Display/index.tsx","pages/Search/components/Form/components/List/index.tsx","pages/Search/components/Form/components/Row/index.tsx","pages/Search/components/Form/components/Row/styles.ts","pages/Search/components/Form/index.tsx","pages/Search/index.tsx","pages/Trending/index.tsx","pages/TV/index.tsx","pages/TV/AiringToday/index.tsx","pages/TV/OnTV/index.tsx","pages/TV/Popular/index.tsx","pages/TV/TopRated/index.tsx","containers/Layout/components/Routes/index.tsx","containers/Layout/components/ScrollToTop/index.tsx","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","containers/App/index.tsx","index.tsx"],"names":["useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useElementSize","elementRef","useState","width","height","size","setSize","updateSize","useCallback","node","offsetWidth","offsetHeight","useImageOnLoad","theme","isLoaded","setIsLoaded","css","thumbnail","filter","opacity","visibility","transition","duration","slower","easing","fullSize","handleIsLoaded","bool","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","useQueriesTyped","queries","useQueries","useSelectorTyped","useSelector","useTimeout","setTimeout","clearTimeout","useWindowSize","windowSize","setWindowSize","innerWidth","innerHeight","handleDelay","response","a","Promise","resolve","_","instance","axios","create","baseURL","process","interceptors","request","use","headers","appSlice","createSlice","name","initialState","data","sortDirection","ui","displayMode","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","sidebarWidth","expanded","collapsed","navItems","label","path","iconActive","HomeTwoToneIcon","icon","HomeOutlinedIcon","SearchTwoToneIcon","SearchOutlinedIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","children","renderChild","TheatersTwoToneIcon","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","Link","props","useTheme","to","isDisabled","isFullWidth","rest","style","faster","textDecoration","boxShadow","useStyles","as","RRDLink","onClick","preventDefault","undefined","sx","NavItem","colorMode","useColorMode","location","useLocation","color","user","isActive","pathname","isChildActive","some","child","renderChildren","every","alignItems","justifyContent","cursor","align","fontSize","fontWeight","textTransform","_hover","length","map","index","Footer","useMediaQuery","isSm","backgroundColor","spacing","p","mt","navItem","moment","format","IconButton","forwardRef","ref","variant","isLoading","button","back","transform","front","display","borderStyle","borderWidth","borderRadius","padding","space","disabled","fontSizes","xl","light","contained","borderColor","outlined","dark","colorModeProp","mode","merge","_disabled","className","thickness","speed","slow","Button","whiteSpace","sm","md","lg","text","leftIcon","rightIcon","handleReturnSpacing","mr","ml","defaultListsModal","open","title","mediaType","mediaItem","defaultDescriptionModal","defaultConfirmModal","description","submitButton","listsModal","descriptionModal","confirmModal","isDisplayModalOpen","isSplashscreenOpen","modalsSlice","toggleList","toggleDescription","toggleConfirm","toggleDisplay","toggleSplashscreen","recentSearches","recentlyViewed","movies","people","liked","lists","uuid","date","Date","toISOString","results","background","userSlice","setTheme","setRecentSearches","setRecentlyViewed","setLiked","setLists","rootReducer","combineReducers","app","appReducer","options","optionsReducer","modals","modalsReducer","userReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","base","full","sizes","container","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","property","common","colors","dimensions","position","typography","fonts","body","heading","mono","zIndices","hide","auto","docked","dropdown","sticky","banner","overlay","toast","modal","popover","skipLink","tooltip","radius","styles","global","fontFamily","bg","overflowX","lineHeight","wordWrap","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","number","string","parseInt","replace","getState","genre","includes","join","navigator","maxTouchPoints","msMaxTouchPoints","section","split","month","find","time","sortBy","departments","hasFilters","isEmpty","alt","Math","floor","random","toString","substring","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","overflow","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","range","amount","Tooltip","closeDelay","openDelay","shouldWrapChildren","utils","arrowSize","normal","hasArrow","gray","NavItemChild","sidebarModeState","isLastChild","sidebarModeProp","useBoolean","isHoveringChild","setIsHoveringChild","link","aria-label","isOpen","placement","gutter","px","py","onMouseEnter","on","onMouseLeave","off","parts","initials","forEach","part","handleGetInitials","isChildrenOpen","setIsChildrenOpen","isHoveringNav","setIsHoveringNav","isHoveringIcon","setIsHoveringIcon","isExpanded","main","handleToggleChildren","debounce","toggle","in","unmountOnExit","enter","exit","ChevronRightOutlinedIcon","pl","pr","mb","Logo","minHeight","alignSelf","border","paddingTop","paddingBottom","paddingLeft","paddingRight","NavItems","Menu","useDisclosure","onOpen","onClose","MenuOutlinedIcon","blockScrollOnMount","User","dispatch","useDispatch","userLinks","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","PaletteTwoToneIcon","PaletteOutlinedIcon","minWidth","userLink","Header","isLgUp","useTransitionsStyle","left","maxWidth","top","zIndex","borderBottom","borderBottomColor","Modal","isXs","isMounted","setIsMounted","preserveScrollBarGap","motionPreset","scrollBehavior","m","CloseOutlinedIcon","borderTop","borderTopColor","ConfirmModal","isCentered","DescriptionModal","Divider","footer","Card","box","hasDivider","card","transparent","divider","header","isLightGray","isClickable","omit","BackgroundItem","backgrounds","WbSunnyOutlinedIcon","Brightness2OutlinedIcon","Background","form","watch","control","render","field","pb","pt","setValue","shouldDirty","ColorItem","isHovering","setIsHovering","CheckOutlinedIcon","Color","columns","Display","toggleColorMode","useForm","defaultValues","useFormState","isDirty","dirtyFields","handleClose","reset","handleSubmit","values","newTheme","schema","yup","shape","required","CreateList","reValidateMode","resolver","yupResolver","onChange","error","fieldState","isRequired","autoComplete","errorBorderColor","focusBorderColor","isInvalid","Boolean","placeholder","message","isFullWidthname","List","isSelected","isTruncated","fromNow","CheckBoxTwoToneIcon","CheckBoxOutlineBlankOutlinedIcon","ListsModal","isCreateListOpen","onCreateListOpen","onCreateListClose","selected","setSelected","handleIsSelected","list","updatedLists","updatedList","movieMediaItem","dateAdded","showMediaItem","handleSaveItem","MotionBox","motion","Box","Splashscreen","closeOnEsc","closeOnOverlayClick","animate","backgroundPosition","reverse","ease","repeat","Infinity","bgSize","bgGradient","bgClip","Error","descriptionRef","code","subtitle","Arrow","direction","onScrollClick","isMouseDown","setIsMouseDown","toLowerCase","closeOnClick","closeOnMouseDown","ArrowBackOutlinedIcon","ArrowForwardOutlinedIcon","handleOnClick","onMouseDown","handleIsMouseDown","onMouseUp","handleIsMouseUp","Grid","gridRef","handleScrollChange","onLoad","onScroll","defaultScrollButtonsState","right","HorizontalGrid","scrollButtons","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleGridRef","maxScroll","scrollLeft","isLeftDisabled","isRightDisabled","handleScrollClick","Empty","useBreakpointValue","hasIllustration","handleReturnPadding","src","empty","handleReturnIllustration","Bookmark","show","isBookmarked","paramList","handleRemoveBookmark","Like","buttonType","isHoveringIconButton","setIsHoveringIconButton","isLiked","person","handleRemoveLike","updatedLiked","handleLike","personMediaItem","fadeDuration","type","Skeleton","commonProps","startColor","endColor","SkeletonText","offsetY","defaultRating","rating","count","Rating","isHorizontal","iconSize","StarOutlinedIcon","Image","imageRef","elementWidth","fallbackSrc","setFallbackSrc","handleReturnFallbackSrc","String","onError","PosterImage","orientation","ratio","dummyTextWidths","Subtitle","setIsTruncated","handleIsTruncated","Title","VerticalPoster","image","isHoveringLiked","setIsHoveringLiked","isHoveringBookmark","setIsHoveringBookmark","justify","VerticalMovie","Vertical","poster_path","vote_average","vote_count","release_date","genre_ids","HorizontalMovies","isError","isSuccess","Array","_dummy","VerticalPerson","profile_path","department","known_for_department","HorizontalPeople","VerticalTV","first_air_date","HorizontalTV","Breadcrumbs","iconFontSize","breadcrumbItem","breadcrumbLink","breadcrumbActive","breadcrumbs","separator","breadcrumb","isCurrentPage","Page","Home","source","CancelToken","popularMovies","useQuery","axiosInstance","get","cancelToken","token","trendingMovies","popularTV","trendingTV","trendingPeople","handleRenderTitle","cancel","Horizontal","isFetching","Badge","handleReturnColor","handleReturnBackground","likedListsSortBy","movieSortBy","likedListsMovieSortBy","tvSortBy","likedListsTvSortBy","peopleSortBy","likedListsPeopleSortBy","Department","Departments","handleDepartmentClick","getValues","activeDepartment","DisplayModeItem","displayModes","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","DisplayMode","Genre","Genres","movieGenres","tvGenres","handleGenreClick","activeGenre","handleAllLabel","handleAllClick","SortByItem","onSortChange","onDirectionChange","ArrowDownwardOutlinedIcon","SortBy","handleSortChange","paramSort","sort","findIndex","next","handleDirectionChange","Filters","isLikedLists","onFilter","VisibilityOutlinedIcon","handleSubmitFilters","headerTotal","wrap","VerticalGrid","MediaTypeItem","mediaTypesList","MediaTypes","mediaTypes","onSetType","handleClick","mediaTypeItem","MediaTypePicker","Description","HorizontalPoster","isHoveringDescription","setIsHoveringDescription","HorizontalMovie","overview","arrow","content","pointerEvents","_after","_before","ChevronLeftOutlinedIcon","HorizontalScroll","containerRef","windowWidth","containerWidth","handleContainerRef","HorizontalPerson","arraySort","known_for","home","search","trending","All","total","Liked","isMediaTypePickerOpen","onMediaTypePickerOpen","onMediaTypePickerClose","isSmallMob","history","useHistory","paramMediaType","useParams","setMediaType","setMovies","setTV","setPeople","likedBreadcrumb","push","handleReturnBreadcrumbs","handleHasMediaTypes","filteredMovies","handleFilterMovies","filteredTV","handleFilterTV","filteredPeople","handleFilterPeople","handleReturnMediaTypes","EditList","EmptyList","mediaTypeLabel","MediaType","handleReturnTitle","screen","ListInfo","isSame","Radio","isChecked","radio","ListItem","isSelectable","onSelected","isHoveringRadio","setIsHoveringRadio","flex","activeList","Toast","onInfo","onEdit","onDelete","InfoTwoToneIcon","EditOutlinedIcon","DeleteOutlineOutlinedIcon","Lists","isListPickerOpen","onListPickerOpen","onListPickerClose","isEditListOpen","onEditListOpen","onEditListClose","isListInfoOpen","onListInfoOpen","onListInfoClose","useToast","setList","handleSelectList","handleCloseToast","closeAll","isClosable","listsBreadcrumb","ListPicker","Movies","upcomingMovies","moviesNowPlaying","topRatedMovies","LoadMore","hasNextPage","onFetch","max","round","VerticalMovies","MoviesNowPlaying","setSortBy","setGenres","useInfiniteQuery","pageParam","params","page","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","total_results","moviesBreadcrumb","active","refetch","fetchNextPage","PopularMovies","TopRatedMovies","UpcomingMovies","VerticalPeople","People","setDepartments","popularPeople","peopleBreadcrumb","_genres","Bio","biography","biographyRef","setIsExpanded","elementHeight","setHeight","handleBiographyRef","handleResize","startingHeight","paragraph","gradient","setGradient","handleReturnGradient","socials","bottom","poster","Poster","onClickPoster","isImageError","setIsImageError","href","iconComponent","isExternal","ImdbIcon","xmlns","aria-hidden","role","preserveAspectRatio","viewBox","d","fill","Links","facebook_id","FacebookIcon","twitter_id","TwitterIcon","instagram_id","InstagramIcon","imdb_id","Socials","isMd","orientationProp","Details","birthday","place_of_birth","deathday","diff","gender","popularity","adult","MediaItem","isBefore","handleIfDateIsFuture","CastMovies","withDate","withoutDate","handleSort","character","CastTV","episode_count","CrewMovies","job","CrewTV","Panel","AccordionItem","accordion","panel","credits","textAlign","cast","crew","KeyboardArrowDownOutlinedIcon","DummyAccordion","Accordion","DummyAccordionItem","allowMultiple","allowToggle","defaultIndex","indexes","isArray","QuickToggles","onToggleAccordion","spy","smooth","offset","Filmography","expandedAccordions","setExpandedAccordions","_department","handleToggleAccordions","paramDepartment","KnownFor","knownFor","Actions","onGalleryClick","isFullscreen","setIsFullscreen","isfullscreenNotSupported","setIsfullscreenNotSupported","handleCloseFullscreen","doc","document","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","console","DashboardOutlinedIcon","FullscreenExitOutlinedIcon","FullscreenOutlinedIcon","documentElement","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","handleOpenFullscreen","GalleryImage","onClickImage","file_path","Gallery","activeIndex","images","Navigation","onNavigation","Viewer","onSwiper","onSlideChange","allowSlideNext","allowSlidePrev","spaceBetween","slidesPerView","swiper","onKeyPress","log","MediaViewer","isGalleryOpen","onGalleryOpen","onGalleryClose","selectedImage","setSwiper","setActiveIndex","handleSlideTo","slideTo","PhotoImage","Photos","_image","Person","isMediaViewerOpen","onMediaViewerOpen","onMediaViewerClose","selectedPhoto","setSelectedPhoto","personQuery","creditsQuery","movieCreditsQuery","tvCreditsQuery","externalIdsQuery","imagesQuery","taggedImagesQuery","handleOnImageClick","filtered","Set","duplicate","has","add","_item","handleGetKnownFor","handleGetDepartments","profiles","stringify","TV","hasQuery","isFormLocked","isHoveringLock","onToggleLock","onHoverLock","onClearQuery","isHoveringClear","setIsHoveringClear","ClearOutlinedIcon","LockOutlinedIcon","LockOpenOutlinedIcon","hasUnsubmitted","totalResults","handleMultiply","handleReturnMediaTypeResults","handleReturnMediaTypeLabel","isOverflown","setIsOverflown","handleIsOverflown","maxHeight","overflowY","Row","onSearch","isHoveringRow","setIsHoveringRow","isHoveringDelete","setIsHoveringDelete","placeholders","Form","inputRef","keywords","submittedQuery","isInputDisabled","onInputKeyPress","onInputChange","onSubmitQuery","setIsFormLocked","setIsHoveringLock","isHoveringForm","setIsHoveringForm","isFormFocused","setIsFormFocused","focus","onFocus","onBlur","keyword","Search","setQuery","setSubmittedQuery","setHasUnsubmitted","setTotalResults","enabled","searchMovies","parse","cacheTime","searchTV","searchPeople","handleSetLocation","Object","assign","handleSubmitQuery","remove","handleClearQuery","target","Trending","handleRefetch","handleDisabledFilters","tvAiringToday","onTV","topRatedTV","TVAiringToday","tvBreadcrumb","OnTV","PopularTV","TopRatedTV","ComponentBox","initial","Routes","scrollingElement","scrollTo","AnimatePresence","exitBeforeEnter","exact","Popular","Upcoming","TopRated","reload","ScrollToTop","setScrollHeight","handleScroll","scroll","scrollTop","ArrowUpwardOutlinedIcon","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","breakpoints","setWidth","setLeft","queryKey","queryFn","basename","Confirm","queryClient","QueryClient","defaultOptions","refetchOnWindowFocus","refetchOnReconnect","retry","App","QueryClientProvider","client","persistor","persistStore","ReactDOM","loading","getElementById"],"mappings":"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","file":"static/js/main.f2ee0fc9.chunk.js","sourcesContent":["import { RefObject, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-event-listener\r\n */\r\nconst useEventListener = <T extends HTMLElement = HTMLDivElement>(\r\n  eventName: keyof WindowEventMap,\r\n  handler: (event: Event) => void,\r\n  element?: RefObject<T>\r\n): void => {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<(event: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: Event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => targetElement.removeEventListener(eventName, eventListener);\r\n  }, [eventName, element, handler]);\r\n};\r\n\r\nexport default useEventListener;\r\n","import { RefObject, useCallback, useEffect, useState } from 'react';\r\n\r\nimport useEventListener from './useEventListener';\r\n\r\ntype Size = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-element-size\r\n */\r\nconst useElementSize = <T extends HTMLElement = HTMLDivElement>(elementRef: RefObject<T>): Size => {\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const updateSize = useCallback(() => {\r\n    const node = elementRef?.current;\r\n\r\n    if (node) {\r\n      setSize({\r\n        width: node.offsetWidth || 0,\r\n        height: node.offsetHeight || 0\r\n      });\r\n    }\r\n  }, [elementRef]);\r\n\r\n  // Initial size on mount\r\n  useEffect(() => updateSize(), []);\r\n\r\n  useEventListener('resize', updateSize);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useElementSize;\r\n","import { CSSProperties, useState } from 'react';\r\n\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype ImageStyle = {\r\n  thumbnail: CSSProperties;\r\n  fullSize: CSSProperties;\r\n};\r\n\r\ntype ImageOnLoadType = {\r\n  css: ImageStyle;\r\n  isLoaded: boolean;\r\n  handleIsLoaded: (bool: boolean) => void;\r\n};\r\n\r\n/**\r\n * Based on: https://usehooks-typescript.com/react-hook/use-image-on-load\r\n */\r\nconst useImageOnLoad = (theme: Theme): ImageOnLoadType => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const handleIsLoaded = (bool: boolean) => {\r\n    setIsLoaded(bool);\r\n  };\r\n\r\n  const css: ImageStyle = {\r\n    // Thumbnail style.\r\n    thumbnail: {\r\n      filter: 'blur(2.5px)',\r\n      opacity: isLoaded ? 0 : 1,\r\n      visibility: isLoaded ? 'hidden' : 'visible',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    // Full image style.\r\n    fullSize: {\r\n      opacity: isLoaded ? 1 : 0,\r\n      visibility: isLoaded ? 'visible' : 'hidden',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    }\r\n  };\r\n\r\n  return { css, isLoaded, handleIsLoaded };\r\n};\r\n\r\nexport default useImageOnLoad;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-interval\r\n */\r\nconst useInterval = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\ntype Return<T> = {\r\n  [ArrayElement in keyof T]: UseQueryResult<\r\n    T[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<T[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n};\r\n\r\n/**\r\n * https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n */\r\nconst useQueriesTyped = <T extends readonly UseQueryOptions[]>(queries: [...T]): Return<T> => {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n};\r\n\r\nexport default useQueriesTyped;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-timeout\r\n */\r\nconst useTimeout = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the timeout.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useTimeout;\r\n","import { useEffect, useState } from 'react';\r\n\r\ntype WindowSize = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-window-size\r\n */\r\nconst useWindowSize = (): WindowSize => {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n\r\n    // Set size at the first client-side load\r\n    handler();\r\n\r\n    window.addEventListener('resize', handler);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handler);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst handleDelay = async (response: AxiosResponse): Promise<AxiosResponse> => {\r\n  await new Promise((resolve) => _.delay(resolve, 1000));\r\n\r\n  return response;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\ninstance.interceptors.response.use(handleDelay);\r\n\r\nexport default instance;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 58\r\n};\r\n\r\nexport const headerHeight = 66;\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import {\r\n  HomeTwoTone as HomeTwoToneIcon,\r\n  HomeOutlined as HomeOutlinedIcon,\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  SearchTwoTone as SearchTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TheatersTwoTone as TheatersTwoToneIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon,\r\n  WhatshotOutlined as WhatshotOutlinedIcon,\r\n  WhatshotTwoTone as WhatshotTwoToneIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport { NavItem } from '../../../../components/NavItem/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Link as CUILink, useTheme } from '@chakra-ui/react';\r\nimport { Link as RRDLink } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { children, to, isDisabled = false, isFullWidth = false, ...rest } = props;\r\n\r\n  const style = useStyles(theme, isFullWidth);\r\n\r\n  return (\r\n    <CUILink\r\n      {...rest}\r\n      as={RRDLink}\r\n      to={{ ...to }}\r\n      onClick={isDisabled ? (event) => event.preventDefault() : undefined}\r\n      sx={{ ...style }}>\r\n      {children}\r\n    </CUILink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\n\r\nexport default (theme: Theme, isFullWidth = false): Style => ({\r\n  'width': isFullWidth ? '100%' : 'auto',\r\n\r\n  'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n  '&:hover': {\r\n    textDecoration: 'none'\r\n  },\r\n\r\n  '&:focus': {\r\n    boxShadow: 'none'\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, useTheme } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport { NavItem as NavItemProps } from '../../../../../../components/NavItem/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\nconst NavItem = (props: NavItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  return (\r\n    <VStack alignItems='flex-start' justifyContent='flex-start'>\r\n      <Link to={{ pathname: path }} isDisabled={isActive}>\r\n        <Text\r\n          cursor={isActive ? 'default' : 'pointer'}\r\n          align='left'\r\n          color={\r\n            isActive ? `${color}.${colorMode === 'light' ? 400 : 500}` : colorMode === 'light' ? 'gray.400' : 'gray.500'\r\n          }\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='uppercase'\r\n          sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n          _hover={{\r\n            color: isActive\r\n              ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n              : colorMode === 'light'\r\n              ? 'gray.900'\r\n              : 'gray.50'\r\n          }}>\r\n          {label}\r\n        </Text>\r\n      </Link>\r\n\r\n      {children && children.length > 0 && renderChildren\r\n        ? children.map((child, index) => (\r\n            <Link key={index} to={{ pathname: child.path }} isDisabled={isChildActive}>\r\n              <Text\r\n                cursor={isActive ? 'default' : 'pointer'}\r\n                align='left'\r\n                color={\r\n                  isChildActive\r\n                    ? `${color}.${colorMode === 'light' ? 400 : 500}`\r\n                    : colorMode === 'light'\r\n                    ? 'gray.400'\r\n                    : 'gray.500'\r\n                }\r\n                fontSize='md'\r\n                fontWeight='medium'\r\n                textTransform='capitalize'\r\n                sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n                _hover={{\r\n                  color: isActive\r\n                    ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n                    : colorMode === 'light'\r\n                    ? 'gray.900'\r\n                    : 'gray.50'\r\n                }}>\r\n                {child.label}\r\n              </Text>\r\n            </Link>\r\n          ))\r\n        : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, HStack, Box, Center, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport navItems from '../../common/data/navItems';\r\nimport NavItem from './components/NavItem';\r\n\r\nconst Footer = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  return (\r\n    <VStack width='100%' backgroundColor={colorMode === 'light' ? 'gray.100' : 'gray.800'} spacing={4} p={4} mt={4}>\r\n      {isSm ? (\r\n        <VStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={4}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={2}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </HStack>\r\n      )}\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <Center width='100%'>\r\n        <Text align='center' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          {`© ${moment().format('YYYY')} EDB, All rights reserved.`}\r\n        </Text>\r\n      </Center>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    colorMode: colorModeProp,\r\n    icon,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  {\r\n    color = 'gray',\r\n    size = 'md',\r\n    variant = 'contained',\r\n    isLoading = false\r\n  }: Omit<IconButtonProps, 'aria-label' | 'icon'>\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'icon' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'sm' ? theme.space[0.5] : size === 'md' ? theme.space[1] : theme.space[2],\r\n\r\n      transform: variant !== 'icon' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes['2xl'] : theme.fontSizes['3xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, ForwardedRef, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = forwardRef(function Button(props: ButtonProps, ref: ForwardedRef<HTMLButtonElement>): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n      whiteSpace: 'nowrap',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'text' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'sm'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport Button from '../../../components/Clickable/Button';\r\nimport { StateProps, ListModal, DescriptionModal, ConfirmModal } from './types';\r\n\r\nexport const defaultListsModal: ListModal = {\r\n  open: false,\r\n  title: '',\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultDescriptionModal: DescriptionModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultConfirmModal: ConfirmModal = {\r\n  open: false,\r\n  title: 'Lorem ipsum',\r\n  description:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n  submitButton: (\r\n    <Button isDisabled size='sm'>\r\n      Close\r\n    </Button>\r\n  )\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultDescriptionModal },\r\n    confirmModal: { ...defaultConfirmModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: true\r\n  }\r\n};\r\n\r\nconst modalsSlice = createSlice({\r\n  name: 'modals',\r\n  initialState,\r\n  reducers: {\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleConfirm: (state: StateProps, action: PayloadAction<ConfirmModal>) => {\r\n      state.ui.confirmModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleList, toggleDescription, toggleConfirm, toggleDisplay, toggleSplashscreen } = modalsSlice.actions;\r\n\r\nexport default modalsSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItems, List, Theme } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    liked: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        description:\r\n          \"A collection of movies and tv shows that I'm looking forward to watching and hopefully re-watch 🥳 🤓\",\r\n        date: moment(new Date()).toISOString(),\r\n        results: {\r\n          movies: [],\r\n          tv: []\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTheme, setRecentSearches, setRecentlyViewed, setLiked, setLists } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport modalsReducer from './slices/Modals';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  modals: modalsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['modals']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '640px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","const zIndices = {\r\n  hide: -1,\r\n  auto: 'auto',\r\n  base: 0,\r\n  docked: 10,\r\n  dropdown: 1000,\r\n  sticky: 1100,\r\n  banner: 1200,\r\n  overlay: 1300,\r\n  toast: 1350,\r\n  modal: 1400,\r\n  popover: 1500,\r\n  skipLink: 1600,\r\n  tooltip: 1800\r\n};\r\n\r\nexport default zIndices;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\nimport zIndices from './z-index';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  zIndices,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Department } from '../data/departments';\r\nimport { Genre, MediaType, SortBy } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @param mediaType - Type of genres\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  handleIsTouchDevice: (): boolean => {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param section - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (section === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleParseDurationForFramer: (time: number): number => {\r\n    return time / 1000;\r\n  },\r\n\r\n  handleCheckHasFilters: (sortBy?: SortBy, genres?: Genre[], departments?: Department[]): boolean => {\r\n    let hasFilters = false;\r\n\r\n    if (!hasFilters && sortBy && sortBy.isActive) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(genres)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(departments)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    return hasFilters;\r\n  },\r\n\r\n  /**\r\n   * This method will return the proper typed button color depending on the color passed\r\n   *\r\n   * @param color - Current user selected color from display modal\r\n   * @returns - Proper typed color to be used in IconButton/Button\r\n   */\r\n  handleReturnColor: (color: unknown): ButtonProps['color'] => {\r\n    switch (color) {\r\n      case 'orange':\r\n        return 'orange';\r\n      case 'yellow':\r\n        return 'yellow';\r\n      case 'green':\r\n        return 'green';\r\n      case 'teal':\r\n        return 'teal';\r\n      case 'cyan':\r\n        return 'cyan';\r\n      case 'purple':\r\n        return 'purple';\r\n      case 'pink':\r\n        return 'pink';\r\n      default:\r\n        return 'blue';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will return a url that will fetch an img from boringavatars\r\n   * boringavatars - https://boringavatars.com/\r\n   *\r\n   * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n   * @param size - Size of poster\r\n   * @param alt - Image alt\r\n   * @returns - boringavatars URL\r\n   */\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`.replace(/ /g, '');\r\n    const colors: string = [\r\n      theme.colors.red[400],\r\n      theme.colors.orange[400],\r\n      theme.colors.yellow[400],\r\n      theme.colors.green[400],\r\n      theme.colors.teal[400],\r\n      theme.colors.blue[400],\r\n      theme.colors.cyan[400],\r\n      theme.colors.purple[400],\r\n      theme.colors.pink[400]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, colorMode: colorModeProp, closeDelay, openDelay, shouldWrapChildren = false, ...rest } = props;\r\n\r\n  const mode = colorModeProp || colorMode;\r\n\r\n  return !utils.handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={mode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      hasArrow\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${mode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {shouldWrapChildren ? <span style={{ width: '100%' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = (props: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, isLastChild = false, sidebarMode: sidebarModeProp } = props;\r\n\r\n  const [isHoveringChild, setIsHoveringChild] = useBoolean();\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link to={{ pathname: path || '' }} isFullWidth isDisabled={!path} sx={{ ...style.common.link }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringChild}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        gutter={16}>\r\n        <HStack width='100%' spacing='12px'>\r\n          {sidebarMode === 'expanded' ? (\r\n            <Box width='2px' height='42px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n          ) : null}\r\n\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            onMouseEnter={() => setIsHoveringChild.on()}\r\n            onMouseLeave={() => setIsHoveringChild.off()}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </Tooltip>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useCallback, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  VStack,\r\n  HStack,\r\n  Icon,\r\n  Text,\r\n  Box,\r\n  ScaleFade,\r\n  Collapse\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Link from '../../components/Clickable/Link';\r\nimport { Theme } from '../../theme/types';\r\nimport Tooltip from '../Tooltip';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\nimport { NavItem as NavItemType } from './types';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path, icon, iconActive, sidebarMode, onClick } = props;\r\n\r\n  const [isChildrenOpen, setIsChildrenOpen] = useBoolean();\r\n\r\n  const [isHoveringNav, setIsHoveringNav] = useBoolean();\r\n  const [isHoveringIcon, setIsHoveringIcon] = useBoolean();\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isChildrenOpen : false\r\n  );\r\n\r\n  const handleToggleChildren = useCallback(\r\n    _.debounce(() => {\r\n      setIsChildrenOpen.toggle();\r\n    }, 250),\r\n    [setIsChildrenOpen]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if ((isActive || isChildActive) && !isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [isActive, isChildActive, isChildrenOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      onClick={onClick ? () => onClick() : undefined}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringNav}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        shouldWrapChildren\r\n        gutter={16}>\r\n        <Link\r\n          to={{ pathname: path || '' }}\r\n          isFullWidth\r\n          isDisabled={!path || isHoveringIcon}\r\n          sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onMouseEnter={() => setIsHoveringNav.on()}\r\n            onMouseLeave={() => setIsHoveringNav.off()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='xl' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes.xl} !important`,\r\n                    transform: `rotate(${isChildrenOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                  onClick={() => setIsChildrenOpen.toggle()}\r\n                  onMouseEnter={() => setIsHoveringIcon.on()}\r\n                  onMouseLeave={() => setIsHoveringIcon.off()}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isChildrenOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? 3.5 : 0}\r\n            pr={sidebarMode === 'expanded' ? 2 : 0}\r\n            mb={sidebarMode === 'expanded' ? 1 : 0}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../common/types/types';\r\nimport { Theme as UserTheme } from '../../store/slices/User/types';\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    cursor: 'pointer',\r\n\r\n    width: size === 'sm' ? '40px' : '100px',\r\n    minHeight: '40px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '20px' : size === 'md' ? '40px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: [\r\n      `width, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `padding, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `font-size, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `background-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `border-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    ].join(', ')\r\n  },\r\n  light: {\r\n    'backgroundColor': `${color}.400`,\r\n    'borderColor': `${color}.400`,\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.500`,\r\n      borderColor: `${color}.500`,\r\n      color: 'gray.50'\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': `${color}.500`,\r\n    'borderColor': `${color}.500`,\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.400`,\r\n      borderColor: `${color}.400`,\r\n      color: 'gray.900'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport NavItem from '../../../../components/NavItem';\r\nimport Logo from '../Logo';\r\nimport { NavItemsProps } from './types';\r\n\r\nconst NavItems = ({ navItems, sidebarMode: sidebarModeProp }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Link to={{ pathname: '/' }} style={{ alignSelf: 'flex-start' }}>\r\n        <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      </Link>\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem) => (\r\n          <NavItem key={navItem.label} {...navItem} sidebarMode={sidebarMode} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} blockScrollOnMount={false} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} sidebarMode='expanded' />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport NavItem from '../../../../../../components/NavItem';\r\nimport { NavItem as NavItemType } from '../../../../../../components/NavItem/types';\r\nimport { toggleDisplay } from '../../../../../../store/slices/Modals';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const userLinks: NavItemType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink) => (\r\n                <NavItem key={userLink.label} {...userLink} sidebarMode='expanded' />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Menu from './components/Menu';\r\nimport User from './components/User';\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isLgUp] = useMediaQuery('(min-width: 1280px)');\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const { width, left } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent={isLgUp ? 'flex-end' : 'space-between'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      {!isLgUp ? <Menu /> : null}\r\n\r\n      <User />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  useBoolean,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport useTimeout from '../../common/hooks/useTimeout';\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement | null => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { children, actions, title, colorMode: colorModeProp, isOpen, onClose, size, ...rest } = props;\r\n\r\n  const [isMounted, setIsMounted] = useBoolean();\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n  const transition = `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`;\r\n\r\n  useTimeout(() => setIsMounted.off(), !isOpen ? 1000 : null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsMounted.on();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return isMounted ? (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isXs ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' || isXs ? 'none' : 'xl'}\r\n        m={0}\r\n        sx={{ transition }}>\r\n        <ModalHeader\r\n          px={2}\r\n          py={1.25}\r\n          borderBottom='solid2'\r\n          borderBottomColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n          sx={{ transition }}>\r\n          <HStack justifyContent='space-between'>\r\n            {typeof title !== 'string' ? (\r\n              title\r\n            ) : (\r\n              <Text align='left' fontSize='xl' fontWeight='semibold' color={mode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                {title}\r\n              </Text>\r\n            )}\r\n\r\n            <IconButton\r\n              aria-label='Close modal?'\r\n              colorMode={mode}\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            p={2}\r\n            borderTop='solid2'\r\n            borderTopColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n            sx={{ transition }}>\r\n            <Button colorMode={mode} onClick={() => onClose()} size='sm' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../store/slices/Modals';\r\n\r\nconst ConfirmModal = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  return (\r\n    <Modal\r\n      title={confirmModal.title}\r\n      actions={confirmModal.submitButton}\r\n      isOpen={confirmModal.open}\r\n      isCentered\r\n      onClose={() => dispatch(toggleConfirm({ ...confirmModal, open: false }))}\r\n      size='md'>\r\n      <Text align='left' fontSize='md' fontWeight='normal' p={2}>\r\n        {confirmModal.description}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultDescriptionModal, toggleDescription } from '../../../../../store/slices/Modals';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        <Link to={{ pathname: `/${defaultDescriptionModal.mediaType}/${descriptionModal.mediaItem?.id}` }}>\r\n          <Button color={utils.handleReturnColor(color)} size='sm'>\r\n            {`View ${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : ''}`}\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen={descriptionModal.open}\r\n      onClose={() => dispatch(toggleDescription({ ...defaultDescriptionModal }))}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.mediaItem ? descriptionModal.mediaItem.description : 'N/A'}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport { DividerProps } from './types';\r\n\r\nconst Divider = ({ colorMode }: DividerProps): ReactElement => {\r\n  return <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />;\r\n};\r\n\r\nexport default Divider;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\n\r\nimport { FooterProps } from './types';\r\n\r\nconst Footer = (props: FooterProps): ReactElement => {\r\n  const { footer, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' alignItems='stretch' justifyContent='stretch'>\r\n      {footer}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack, Text } from '@chakra-ui/react';\r\n\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { actions, colorMode, title, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' justifyContent='space-between'>\r\n      {title ? (\r\n        typeof title === 'string' ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n            fontSize='md'\r\n            fontWeight='semibold'>\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          title\r\n        )\r\n      ) : null}\r\n\r\n      {actions ? actions : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Box, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport Divider from './components/Divider';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    children,\r\n    box,\r\n    color,\r\n    colorMode: colorModeProp,\r\n    isFullWidth,\r\n    hasDivider = true,\r\n    variant = 'outlined',\r\n    ...rest\r\n  } = props;\r\n\r\n  const style = useStyles(color, isFullWidth);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <VStack\r\n      {...rest}\r\n      divider={hasDivider ? <Divider colorMode={mode} /> : undefined}\r\n      spacing={0}\r\n      sx={{ ..._.merge(style.card[variant], style[mode][variant]) }}>\r\n      {children.header?.title || children.header?.actions ? (\r\n        <Header {...box?.header} actions={children.header.actions} colorMode={mode} title={children.header.title} />\r\n      ) : null}\r\n\r\n      <Box {...box?.body} width='100%'>\r\n        {children.body}\r\n      </Box>\r\n\r\n      {children.footer ? <Footer {...box?.footer} footer={children.footer} /> : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../common/types/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: VariantStyle;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (color: CardProps['color'] = 'gray', isFullWidth = false): CardStyle => ({\r\n  card: {\r\n    outlined: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'lg',\r\n\r\n      transition: 'none'\r\n    },\r\n    transparent: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      transition: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    isDisabled = false,\r\n    ...rest\r\n  } = _.omit(props, ['color', 'isFullWidth', 'isLightGray', 'isClickable']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(style.card.back, style.card.disabled, style[mode].back, style[mode].disabled)\r\n            }\r\n          : { ..._.merge(style.card.back, style[mode].back) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[mode].front) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype CommonStyle = {\r\n  back: Style;\r\n  front: Style;\r\n  disabled: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle;\r\n  light: Omit<CommonStyle, 'icon'>;\r\n  dark: Omit<CommonStyle, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', isFullWidth = false, isLightGray = false, isClickable = true }: CardProps\r\n): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: isClickable ? 'translateY(0)' : 'translateY(-2px)'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'stretch',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-2px)',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n      backgroundColor: 'gray.50',\r\n      color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'gray.50',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.200',\r\n        backgroundColor: 'gray.50',\r\n        color: 'gray.200'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n      backgroundColor: 'gray.900',\r\n      color: `${color}.500`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.700',\r\n        backgroundColor: 'gray.900',\r\n        color: 'gray.700'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, background, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      colorMode={background}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} colorMode={value} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Background'\r\n            },\r\n\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {backgrounds.map((background) => (\r\n                  <BackgroundItem\r\n                    key={background.value}\r\n                    {...background}\r\n                    color={color}\r\n                    background={value}\r\n                    isActive={value === background.value}\r\n                    onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useBoolean, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, background, isActive, onClick } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      colorMode={background}\r\n      isOpen={isHovering}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      shouldWrapChildren\r\n      gutter={8}>\r\n      <Card\r\n        color={isActive ? utils.handleReturnColor(value) : 'gray'}\r\n        colorMode={background}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        p={2}>\r\n        <VStack width='100%' spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: background === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const background = form.watch('background');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Card\r\n          box={{\r\n            header: { pb: 2 },\r\n            body: { pt: 2 }\r\n          }}\r\n          colorMode={background}\r\n          isFullWidth\r\n          p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Color'\r\n            },\r\n            body: (\r\n              <SimpleGrid width='100%' columns={isSm ? 2 : 4} spacing={2}>\r\n                {colors.map((color, index) => (\r\n                  <ColorItem\r\n                    key={index}\r\n                    {...color}\r\n                    background={background}\r\n                    isActive={color.value === value}\r\n                    onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </SimpleGrid>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport { setTheme } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.modals.ui.isDisplayModalOpen);\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n  const background = form.watch('background');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    handleClose();\r\n\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n    }, 2500);\r\n    setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          colorMode={background}\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Save\r\n        </Button>\r\n      }\r\n      colorMode={background}\r\n      isOpen={isDisplayModalOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { useSelector } from '../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack width='calc(100% - 46px)' alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text\r\n              width='auto'\r\n              maxWidth='100%'\r\n              align='left'\r\n              fontSize='xs'\r\n              fontWeight='400'\r\n              textTransform='capitalize'\r\n              isTruncated>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${\r\n              results.movies.length + results.tv.length > 0\r\n                ? `${results.movies.length + results.tv.length} items  • `\r\n                : ''\r\n            }${results.movies.length + results.tv.length > 0 ? 'Updated' : 'Created'} ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, toggleList } from '../../../../../store/slices/Modals';\r\nimport { ListModal as ListModalType } from '../../../../../store/slices/Modals/types';\r\nimport { setLists } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\nimport CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal: ListModalType = useSelector((state) => state.modals.ui.listsModal);\r\n  const lists: ListType[] = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.mediaItem && listsModal.mediaItem.id && listsModal.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) => {\r\n          const results = { ...updatedList.results };\r\n\r\n          switch (listsModal.mediaType) {\r\n            case 'movie': {\r\n              const movieMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.movies = [...results.movies, movieMediaItem];\r\n              break;\r\n            }\r\n            case 'tv': {\r\n              const showMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.tv = [...results.tv, showMediaItem];\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n\r\n          return updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: { ...results }\r\n              }\r\n            : updatedList;\r\n        });\r\n      });\r\n\r\n      setSelected([]);\r\n\r\n      dispatch(setLists([...updatedLists]));\r\n      dispatch(toggleList({ ...defaultListsModal }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add \"${listsModal.title}\" to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleSaveItem()} size='sm'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => onCreateListOpen()} size='sm'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={listsModal.open}\r\n        onClose={() => dispatch(toggleList({ ...defaultListsModal }))}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, Modal, ModalContent, ModalBody, VStack, Box, Text } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport useStyles from './styles';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen={isSplashscreenOpen}\r\n      onClose={() => dispatch(toggleSplashscreen(false))}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody zIndex={10000} p={0}>\r\n          <VStack width='100%' height='100vh' justifyContent='space-between' p={3}>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Entertainment database\r\n            </Text>\r\n            <MotionBox\r\n              animate={{\r\n                backgroundPosition: [\r\n                  ..._.range(0, 101, 1).map((number) => `${number}%`),\r\n                  ..._.reverse(_.range(0, 101, 1).map((number) => `${number}%`))\r\n                ]\r\n              }}\r\n              transition={{\r\n                duration: 10,\r\n                ease: [0.76, 0, 0.24, 1],\r\n                repeat: Infinity\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Loading...\r\n            </Text>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n","import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n","import React, { ReactElement, useRef } from 'react';\r\n\r\nimport { useColorMode, Center, HStack, Box, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector, useElementSize } from '../../common/hooks';\r\nimport { headerHeight } from '../../containers/Layout/common/data/dimensions';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const descriptionRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { height } = useElementSize(descriptionRef);\r\n\r\n  const { code = 404, title, subtitle, actions } = props;\r\n\r\n  return (\r\n    <Center width='100%' minHeight={`calc(100vh - ${headerHeight}px)`}>\r\n      <VStack spacing={4}>\r\n        <HStack spacing={2}>\r\n          <Text align='right' color={`${color}.${colorMode === 'light' ? 400 : 500}`} fontSize='6xl' fontWeight='bold'>\r\n            {code}\r\n          </Text>\r\n          <Box width='2px' height={height} backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n          <VStack ref={descriptionRef} alignItems='flex-start' spacing={0}>\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='4xl' fontWeight='bold'>\r\n              {title}\r\n            </Text>\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n              {subtitle}\r\n            </Text>\r\n          </VStack>\r\n        </HStack>\r\n\r\n        <HStack alignItems='flex-start' spacing={2}>\r\n          {actions}\r\n        </HStack>\r\n      </VStack>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport useInterval from '../../../../../common/hooks/useInterval';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const { direction, isLoading = false, isDisabled = false, reset = false, variant, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={`Scroll ${direction.toLowerCase()}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      label={`Scroll ${direction.toLowerCase()} (${!isMouseDown ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isLoading || isDisabled}\r\n      gutter={isMouseDown ? 8 : 10}>\r\n      <IconButton\r\n        aria-label='Scroll left'\r\n        isDisabled={isLoading || isDisabled}\r\n        icon={direction === 'left' ? ArrowBackOutlinedIcon : ArrowForwardOutlinedIcon}\r\n        onClick={(event: Event) => handleOnClick(event)}\r\n        onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n        onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        size={variant === 'transparent' ? 'md' : 'sm'}\r\n        variant='outlined'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, hasDivider = false, handleScrollChange, variant = 'transparent' } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={variant === 'transparent' ? 2 : 0}\r\n      py={hasDivider ? 2 : 0}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border={variant === 'transparent' ? 'solid2' : 'none'}\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        px={variant === 'transparent' ? 2 : 0}\r\n        py={variant === 'transparent' ? 2 : 0}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize } from '../../../common/hooks';\r\nimport utils from '../../../common/utils/utils';\r\nimport Card from '../../Card';\r\nimport Arrow from './components/Arrow';\r\nimport Grid from './components/Grid';\r\nimport { HorizontalGridProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const gridRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width } = useWindowSize();\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, title, footer, isLoading = true, hasDivider = false, variant = 'transparent' } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleGridRef(gridRef.current);\r\n      }\r\n    }, 50),\r\n    [gridRef]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (gridRef && gridRef.current) {\r\n        if (direction === 'left') {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft - 10;\r\n        } else {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleGridRef(gridRef.current);\r\n  }, [width]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { px: variant === 'transparent' ? 2 : 0, py: 2 },\r\n        footer: { px: variant === 'transparent' ? 2 : 0, py: 1 }\r\n      }}\r\n      isFullWidth\r\n      hasDivider={hasDivider}\r\n      variant={variant}\r\n      px={variant === 'outlined' ? 2 : 0}>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: !utils.handleIsTouchDevice() ? (\r\n            <HStack spacing={variant === 'transparent' ? 2 : 1.25}>\r\n              <Arrow\r\n                direction='left'\r\n                isDisabled={scrollButtons.left}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n              <Arrow\r\n                direction='right'\r\n                isDisabled={scrollButtons.right}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n            </HStack>\r\n          ) : undefined\r\n        },\r\n        body: (\r\n          <Grid\r\n            gridRef={gridRef}\r\n            hasDivider={hasDivider}\r\n            handleScrollChange={() => handleGridRef(gridRef.current)}\r\n            variant={variant}>\r\n            {children}\r\n          </Grid>\r\n        ),\r\n        footer\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";","export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";","export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";","export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";","export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";","export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";","export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";","export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";","export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";","export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";","export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";","export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";","export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";","export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";","export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport { toggleList } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List } from '../../store/slices/User/types';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = (props: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const list = mediaItem\r\n    ? lists.find((list) => {\r\n        switch (mediaType) {\r\n          case 'movie':\r\n            return list.results.movies.some((movie) => movie.id === mediaItem.id);\r\n          case 'tv':\r\n            return list.results.tv.some((show) => show.id === mediaItem.id);\r\n          default:\r\n            return;\r\n        }\r\n      })\r\n    : undefined;\r\n  const isBookmarked: boolean = list\r\n    ? mediaType === 'movie'\r\n      ? list.results.movies.some((movie) => movie.id === mediaItem?.id)\r\n      : list.results.tv.some((show) => show.id === mediaItem?.id)\r\n    : false;\r\n\r\n  const handleRemoveBookmark = (list: List): void => {\r\n    const results = { ...list.results };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        results.movies = results.movies.filter((movie) => movie.id !== mediaItem?.id) || [];\r\n        break;\r\n      case 'tv':\r\n        results.tv = results.tv.filter((show) => show.id !== mediaItem?.id) || [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      setLists(\r\n        lists.map((paramList) =>\r\n          paramList.id === list.id\r\n            ? {\r\n                ...paramList,\r\n                results: { ...results }\r\n              }\r\n            : paramList\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleOpenListsModal = (): void => {\r\n    if (mediaItem) {\r\n      dispatch(\r\n        toggleList({\r\n          open: true,\r\n          title,\r\n          mediaType,\r\n          mediaItem: {\r\n            ...mediaItem\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n          : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n          : `Add \"${title}\" to a list`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={8}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n            : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n        }\r\n        color={isBookmarked ? utils.handleReturnColor(color) : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={isBookmarked && list ? () => handleRemoveBookmark(list) : () => handleOpenListsModal()}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = (props: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const { buttonType = 'iconButton', isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHoveringIconButton, setIsHoveringIconButton] = useBoolean();\r\n\r\n  const isLiked: boolean =\r\n    liked && mediaItem\r\n      ? mediaType === 'movie'\r\n        ? liked.movies.some((movie) => movie.id === mediaItem.id)\r\n        : mediaType === 'tv'\r\n        ? liked.tv.some((show) => show.id === mediaItem.id)\r\n        : liked.people.some((person) => person.id === mediaItem.id)\r\n      : false;\r\n\r\n  const handleRemoveLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        updatedLiked.movies = updatedLiked.movies.filter((movie) => movie.id !== mediaItem?.id);\r\n        break;\r\n      case 'tv':\r\n        updatedLiked.tv = updatedLiked.tv.filter((show) => show.id !== mediaItem?.id);\r\n        break;\r\n      case 'person':\r\n        updatedLiked.people = updatedLiked.people.filter((person) => person.id !== mediaItem?.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  const handleLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie': {\r\n        const movieMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.movies = [...updatedLiked.movies, movieMediaItem];\r\n        break;\r\n      }\r\n      case 'tv': {\r\n        const showMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.tv = [...updatedLiked.tv, showMediaItem];\r\n        break;\r\n      }\r\n      case 'person': {\r\n        const personMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.people = [...updatedLiked.people, personMediaItem];\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  return buttonType === 'iconButton' ? (\r\n    <Tooltip\r\n      aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n      label={isLiked ? `Dislike \"${title}\"` : `Like \"${title}\"`}\r\n      placement='top'\r\n      isOpen={isHoveringIconButton}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={8}>\r\n      <IconButton\r\n        aria-label={isLiked ? `Dislike \"${title}\" ${mediaType}` : `Like \"${title}\" ${mediaType}`}\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n        onMouseEnter={() => setIsHoveringIconButton.on()}\r\n        onMouseLeave={() => setIsHoveringIconButton.off()}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    <Button\r\n      color={isLiked ? 'red' : 'gray'}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      leftIcon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n      onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n      size={size}\r\n      variant='outlined'>\r\n      Like\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  // fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  fadeDuration: 0,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 750\r\n};\r\n","import { ColorMode } from '../../../../common/types/types';\r\nimport { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color, colorMode: ColorMode): string => {\r\n    switch (color) {\r\n      default:\r\n        return colorMode === 'light'\r\n          ? type === 'start'\r\n            ? 'gray.200'\r\n            : 'gray.400'\r\n          : type === 'start'\r\n          ? 'gray.700'\r\n          : 'gray.500';\r\n    }\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color, colorMode)}\r\n      endColor={utils.handleReturnColors('end', color, colorMode)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, SlideFade } from '@chakra-ui/react';\r\n\r\nimport Skeleton from '../../Skeleton';\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', isLoaded = false, offsetY, ...rest } = props;\r\n\r\n  return (\r\n    <Skeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      isLoaded={isLoaded}\r\n      startColor={utils.handleReturnColors('start', color, colorMode)}\r\n      endColor={utils.handleReturnColors('end', color, colorMode)}>\r\n      <SlideFade in={isLoaded} offsetY={offsetY}>\r\n        {children}\r\n      </SlideFade>\r\n    </Skeleton>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = (props: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { rating = defaultRating, isLoading = false, isHorizontal = false } = props;\r\n\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['lg'],\r\n    'sm': theme.fontSizes['lg'],\r\n    'md': theme.fontSizes['xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  return (\r\n    <Center backgroundColor='transparent' p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${isHorizontal ? iconSize : theme.fontSizes.xl} !important`\r\n        }}\r\n      />\r\n      <SkeletonText offsetY={8} isLoaded={!isLoading} ml={0.5}>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={isHorizontal ? ['sm', 'sm', 'md', 'lg', 'lg', 'xl'] : 'md'}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Image as CUIImage } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useElementSize, useImageOnLoad } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport { Theme } from '../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const imageRef = useRef<HTMLImageElement | null>(null);\r\n\r\n  const { width: elementWidth } = useElementSize(imageRef);\r\n  const { css, handleIsLoaded } = useImageOnLoad(theme);\r\n\r\n  const { width, mediaType, alt, src, size, ...rest } = props;\r\n\r\n  const [fallbackSrc, setFallbackSrc] = useState<string>('');\r\n\r\n  /**\r\n   * This method will return the url for the fallback src\r\n   */\r\n  const handleReturnFallbackSrc = useCallback(\r\n    _.debounce(() => {\r\n      const fallbackSrc: string = utils.handleReturnFallbackSrc(mediaType, String(elementWidth || 780), alt);\r\n\r\n      setFallbackSrc(fallbackSrc);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleReturnFallbackSrc(), []);\r\n\r\n  return (\r\n    <>\r\n      {/* Thumbnail to load faster */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        width={width}\r\n        position='absolute'\r\n        alt={`${alt} thumbnail`}\r\n        onError={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.thumbnail}${src}`}\r\n        fallbackSrc={fallbackSrc}\r\n        sx={{ ...css.thumbnail }}\r\n      />\r\n\r\n      {/* Full size image */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        width={width}\r\n        position='absolute'\r\n        alt={alt}\r\n        onLoad={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.full}${src}`}\r\n        fallbackSrc={fallbackSrc}\r\n        sx={{ ...css.fullSize }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio } from '@chakra-ui/react';\r\n\r\nimport Image from '../../../Image';\r\nimport Skeleton from '../../../Skeleton';\r\nimport { PosterImageProps } from './types';\r\n\r\nconst PosterImage = (props: PosterImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoading, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio\r\n      width={width || '100%'}\r\n      minWidth={width || '100%'}\r\n      maxWidth={width || '100%'}\r\n      ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n        <Image\r\n          {...rest}\r\n          alt={alt}\r\n          mediaType={mediaType}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          src={src}\r\n          size={size}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default PosterImage;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={6}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='xs'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={7}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='sm'\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean, VStack, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Bookmark from '../../Bookmark';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Image from '../components/Image';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = <MT extends MediaType>(props: VerticalPosterProps<MT>): ReactElement => {\r\n  const {\r\n    width,\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useBoolean();\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useBoolean();\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isHoveringLiked || isHoveringBookmark}\r\n      to={{ pathname: `/${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card isDisabled={isLoading} isClickable={!isHoveringLiked && !isHoveringBookmark} isLightGray>\r\n        <VStack width={width} position='relative' spacing={1} p={1}>\r\n          {/* Image */}\r\n          <Image\r\n            orientation='vertical'\r\n            mediaType={mediaType}\r\n            alt={image.alt}\r\n            src={image.src}\r\n            size={image.size}\r\n            isLoading={isLoading}\r\n          />\r\n          <VStack width='100%' spacing={mediaType !== 'person' ? 0.5 : 1}>\r\n            {/* Header */}\r\n            {mediaType !== 'person' ? (\r\n              <HStack width='100%' justify='space-between' spacing={0}>\r\n                {/* Rating component */}\r\n                <Rating rating={rating} isLoading={isLoading} />\r\n\r\n                <HStack spacing={0}>\r\n                  {/* Like component */}\r\n                  <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                    <Like isDisabled={isLoading} title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' />\r\n                  </Box>\r\n                  {/* List component */}\r\n                  <Box onMouseEnter={() => setIsHoveringBookmark.on()} onMouseLeave={() => setIsHoveringBookmark.off()}>\r\n                    <Bookmark\r\n                      isDisabled={isLoading}\r\n                      title={title}\r\n                      mediaType={mediaType}\r\n                      mediaItem={mediaItem}\r\n                      size='sm'\r\n                    />\r\n                  </Box>\r\n                </HStack>\r\n              </HStack>\r\n            ) : null}\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n          </VStack>\r\n\r\n          {/* Like component */}\r\n          {mediaType === 'person' ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 2\r\n              }}>\r\n              <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                <Like isDisabled={isLoading} title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' />\r\n              </Box>\r\n            </HStack>\r\n          ) : null}\r\n        </VStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalMovie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n","export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Cinematography',\r\n    value: 'Camera'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: {\r\n          thumbnail: 'w45',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={\r\n        departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n        person?.known_for_department ||\r\n        ''\r\n      }\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Text,\r\n  Icon\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { BreadcrumbsProps } from './types';\r\n\r\nconst Breadcrumbs = (props: BreadcrumbsProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const iconFontSize = useBreakpointValue({\r\n    'base': theme.fontSizes.md,\r\n    'sm': theme.fontSizes.md,\r\n    'md': theme.fontSizes.lg,\r\n    'lg': theme.fontSizes.lg,\r\n    'xl': theme.fontSizes.lg,\r\n    '2xl': theme.fontSizes.lg\r\n  });\r\n\r\n  const style = useStyles(theme);\r\n\r\n  // const { id, mediaType } = useParams<Params>();\r\n  // const location = useLocation();\r\n  // const history = useHistory();\r\n\r\n  // const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const { breadcrumbs } = props;\r\n\r\n  // const [state, setstate] = useState<BreadcrumbType[]>([]);\r\n\r\n  // const handleCheckBreadcrumb = (): boolean => {\r\n  //   const splitLocation = location.pathname.split('/');\r\n\r\n  //   console.log(splitLocation);\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // const handleGenericBreadcrumbLabel = (): string => {\r\n  //   return '';\r\n  // };\r\n\r\n  // const handleReturnBreadcrumbs = (): string[] => {\r\n  //   if (breadcrumbs[location.pathname]) {\r\n  //     return breadcrumbs[location.pathname].consistsOf;\r\n  //   } else {\r\n  //     // const splitLocation = location.pathname.split('/').filter((item) => item);\r\n  //     // const breadcrumb = breadcrumbs[`/${splitLocation[0]}`];\r\n  //     // console.log(breadcrumb);\r\n\r\n  //     return [];\r\n  //   }\r\n  // };\r\n\r\n  // handleReturnBreadcrumbs();\r\n\r\n  // useEffect(() => {\r\n  //   setstate([]);\r\n\r\n  //   if (location.pathname.includes('lists')) {\r\n  //     if (id && mediaType) {\r\n  //       const label =\r\n  //         mediaType === 'movie'\r\n  //           ? 'Movies'\r\n  //           : mediaType === 'tv'\r\n  //           ? 'TV Shows'\r\n  //           : mediaType === 'person'\r\n  //           ? 'People'\r\n  //           : 'Media-Type';\r\n\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         },\r\n  //         {\r\n  //           label,\r\n  //           path: `/lists/${id}/${mediaType}`\r\n  //         }\r\n  //       ]);\r\n  //     } else if (id) {\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         }\r\n  //       ]);\r\n  //     }\r\n  //   } else if (mediaType) {\r\n  //     const label =\r\n  //       mediaType === 'movie'\r\n  //         ? 'Movies'\r\n  //         : mediaType === 'tv'\r\n  //         ? 'TV Shows'\r\n  //         : mediaType === 'person'\r\n  //         ? 'People'\r\n  //         : 'Media-Type';\r\n\r\n  //     setstate([\r\n  //       {\r\n  //         label,\r\n  //         path: location.pathname.includes('trending')\r\n  //           ? `/trending/${mediaType}`\r\n  //           : location.pathname.includes('liked')\r\n  //           ? `/liked/${mediaType}`\r\n  //           : ''\r\n  //       }\r\n  //     ]);\r\n  //   }\r\n  // }, [location]);\r\n\r\n  // console.log(history);\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${iconFontSize} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {breadcrumbs.map((breadcrumb, index) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={index === breadcrumbs.length - 1}\r\n          fontSize={['sm', 'sm', 'md', 'md', 'md', 'md']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          <SkeletonText offsetY={8} isLoaded={!breadcrumb.isLoading}>\r\n            {index === breadcrumbs.length - 1 ? (\r\n              <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n                {breadcrumb.label || ''}\r\n              </Text>\r\n            ) : (\r\n              <BreadcrumbLink\r\n                as={Link}\r\n                to={{ ...breadcrumb.to }}\r\n                sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n                {breadcrumb.label || ''}\r\n              </BreadcrumbLink>\r\n            )}\r\n          </SkeletonText>\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst Divider = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      width={`calc(100% - ${theme.space[4]})`}\r\n      height='2px'\r\n      backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Box, Text } from '@chakra-ui/react';\r\n\r\nimport Breadcrumbs from './components/Breadcrumbs';\r\nimport Divider from './components/Divider';\r\nimport { PageProps } from './types';\r\n\r\nconst Page = (props: PageProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, title, breadcrumbs } = props;\r\n\r\n  return (\r\n    <VStack width='100%' divider={<Divider />} spacing={0}>\r\n      {/* Header */}\r\n      <HStack width='100%' justifyContent='space-between' p={2}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Breadcrumbs breadcrumbs={breadcrumbs} />\r\n          {typeof title === 'string' ? (\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {title || 'Page title'}\r\n            </Text>\r\n          ) : (\r\n            title\r\n          )}\r\n        </VStack>\r\n\r\n        {children.actions}\r\n      </HStack>\r\n\r\n      <Box width='100%'>{children.body}</Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Home' breadcrumbs={[]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularMovies.isFetching || popularMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={popularMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/movie' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingMovies.isFetching || trendingMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingMovies.isFetching || trendingMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={trendingMovies.isError}\r\n                isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n                movies={trendingMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular TV shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularTV.isFetching || popularTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular TV\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={popularTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending TV shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/tv' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingTV.isFetching || trendingTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingTV.isFetching || trendingTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending TV\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingTV.isFetching || trendingTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={trendingTV.isError}\r\n                isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n                tv={trendingTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Trending People')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/trending/person' }}\r\n                  isFullWidth\r\n                  isDisabled={trendingPeople.isFetching || trendingPeople.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Trending People\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={trendingPeople.isFetching || trendingPeople.isLoading}>\r\n              <HorizontalPeople\r\n                isError={trendingPeople.isError}\r\n                isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n                people={trendingPeople.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Badge as CUIBadge } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport { BadgeProps } from './types';\r\n\r\nconst Badge = (props: BadgeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, color = 'gray', size = 'sm', ...rest } = props;\r\n\r\n  const handleReturnColor = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '900' : '50'}`;\r\n      default:\r\n        return `${color}.600`;\r\n    }\r\n  };\r\n\r\n  const handleReturnBackground = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '200' : '700'}`;\r\n      default:\r\n        return `${color}.50`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIBadge\r\n      {...rest}\r\n      color={handleReturnColor()}\r\n      background={handleReturnBackground()}\r\n      variant='subtle'\r\n      fontSize={size === 'xs' ? '10px' : size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'lg'}\r\n      fontWeight='bold'\r\n      lineHeight='none'\r\n      px={size === 'xs' || size === 'sm' ? 0.5 : size === 'md' ? 0.75 : 1}\r\n      py={size === 'xs' || size === 'sm' ? 0.25 : size === 'md' ? 0.5 : 0.5}\r\n      sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n      {label}\r\n    </CUIBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const likedListsSortBy: SortBy[] = [\r\n  {\r\n    label: 'Date Added',\r\n    value: 'dateAdded',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsMovieSortBy: SortBy[] = [...movieSortBy, ...likedListsSortBy];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsTvSortBy: SortBy[] = [...tvSortBy, ...likedListsSortBy];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsPeopleSortBy: SortBy[] = [...peopleSortBy, ...likedListsSortBy];\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n                </Button>\r\n              ),\r\n              title: 'Departments'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {departments.map((department) => (\r\n                  <WrapItem key={department.id}>\r\n                    <Genre\r\n                      key={department.id}\r\n                      {...department}\r\n                      isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                      onClick={handleDepartmentClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: { title: 'Display Mode' },\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {displayModes.map((displayMode) => (\r\n                  <DisplayModeItem\r\n                    key={displayMode.value}\r\n                    {...displayMode}\r\n                    isActive={value === displayMode.value}\r\n                    onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {handleAllLabel()}\r\n                </Button>\r\n              ),\r\n              title: 'Genres'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {mediaType === 'movie'\r\n                  ? movieGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : mediaType === 'tv'\r\n                  ? tvGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : null}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth p={2}>\r\n          {{\r\n            header: {\r\n              title: 'Sort by'\r\n            },\r\n            body: (\r\n              <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n                {value.sortBy.map((sort) => (\r\n                  <SortByItem\r\n                    key={sort.value}\r\n                    {...sort}\r\n                    direction={value.direction}\r\n                    onSortChange={handleSortChange}\r\n                    onDirectionChange={handleDirectionChange}\r\n                  />\r\n                ))}\r\n              </VStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  movieSortBy,\r\n  likedListsMovieSortBy,\r\n  tvSortBy,\r\n  likedListsTvSortBy,\r\n  peopleSortBy,\r\n  likedListsPeopleSortBy\r\n} from '../../common/data/sort';\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = (props: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { mediaType, isLikedLists = false, isDisabled = false, onFilter } = props;\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: isLikedLists\r\n        ? mediaType === 'movie'\r\n          ? [...likedListsMovieSortBy]\r\n          : mediaType === 'tv'\r\n          ? [...likedListsTvSortBy]\r\n          : [...likedListsPeopleSortBy]\r\n        : mediaType === 'movie'\r\n        ? [...movieSortBy]\r\n        : mediaType === 'tv'\r\n        ? [...tvSortBy]\r\n        : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: isLikedLists\r\n            ? pathname.includes('movie')\r\n              ? [...likedListsMovieSortBy]\r\n              : pathname.includes('tv')\r\n              ? [...likedListsTvSortBy]\r\n              : [...likedListsPeopleSortBy]\r\n            : pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? utils.handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        isDisabled={isDisabled}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isDisabled={!isDirty}\r\n            onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n            size='sm'>\r\n            Submit\r\n          </Button>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='3xl'>\r\n        <VStack spacing={2} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, Text } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const headerTotal = header?.props?.children?.props?.children?.length || 0;\r\n\r\n  return (\r\n    <Stack\r\n      width='100%'\r\n      direction={isSm && headerTotal > 1 ? 'column' : 'row'}\r\n      alignItems={isSm && headerTotal > 1 ? 'stretch' : 'center'}\r\n      justify={title ? 'space-between' : 'flex-end'}\r\n      wrap='wrap'\r\n      spacing={2}\r\n      p={[2]}>\r\n      {title ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='2xl'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n      ) : null}\r\n\r\n      {header}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      {title || header ? <Header title={title} header={header} /> : null}\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(value)}\r\n      px={2}\r\n      py={6}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { mediaTypes, mediaType, onSetType } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n  };\r\n\r\n  return isXs ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  useEffect(() => {\r\n    onClose();\r\n  }, [location]);\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/Modals';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, mediaItem, isLoading = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              mediaType,\r\n              mediaItem\r\n            })\r\n          )\r\n        }>\r\n        {!isLoading\r\n          ? mediaItem.description\r\n          : 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={11.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['lg', 'xl', '2xl', '3xl']}\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Bookmark from '../../Bookmark';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Image from '../components/Image';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const {\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    description = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useBoolean();\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useBoolean();\r\n  const [isHoveringDescription, setIsHoveringDescription] = useBoolean();\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isHoveringLiked || isHoveringBookmark || isHoveringDescription}\r\n      to={{ pathname: `${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card\r\n        isFullWidth\r\n        isDisabled={isLoading}\r\n        isClickable={!isHoveringLiked && !isHoveringBookmark && !isHoveringDescription}\r\n        isLightGray>\r\n        <HStack width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\r\n          {/* Image */}\r\n          <Image\r\n            width={['100px', '116px', '152px', '188px', '188px', '224px']}\r\n            orientation='vertical'\r\n            mediaType={mediaType}\r\n            alt={image.alt}\r\n            src={image.src}\r\n            size={image.size}\r\n            isLoading={isLoading}\r\n          />\r\n          <VStack\r\n            width={[\r\n              'calc(100% - 108px)',\r\n              'calc(100% - 124px)',\r\n              'calc(100% - 168px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 240px)'\r\n            ]}\r\n            alignItems='flex-start'\r\n            spacing={[1, 1, 2, 2, 2, 2]}>\r\n            {/* Rating component */}\r\n            {mediaType !== 'person' ? <Rating rating={rating} isLoading={isLoading} isHorizontal /> : null}\r\n\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n\r\n            <Box\r\n              width='100%'\r\n              onMouseEnter={() => setIsHoveringDescription.on()}\r\n              onMouseLeave={() => setIsHoveringDescription.off()}>\r\n              {typeof description === 'string' ? (\r\n                <Description\r\n                  mediaType={mediaType}\r\n                  mediaItem={{ id: mediaItem?.id || -1, title, description }}\r\n                  isLoading={isLoading}\r\n                />\r\n              ) : (\r\n                description\r\n              )}\r\n            </Box>\r\n          </VStack>\r\n\r\n          {/* Like / List Icon buttons */}\r\n          {mediaItem ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 1\r\n              }}>\r\n              {/* Like component */}\r\n              <Box onMouseEnter={() => setIsHoveringLiked.on()} onMouseLeave={() => setIsHoveringLiked.off()}>\r\n                <Like\r\n                  isDisabled={isLoading}\r\n                  title={title}\r\n                  mediaType={mediaType}\r\n                  mediaItem={mediaItem}\r\n                  size={isSm ? 'sm' : 'md'}\r\n                />\r\n              </Box>\r\n              {/* List component */}\r\n              {mediaType !== 'person' ? (\r\n                <Box onMouseEnter={() => setIsHoveringBookmark.on()} onMouseLeave={() => setIsHoveringBookmark.off()}>\r\n                  <Bookmark\r\n                    isDisabled={isLoading}\r\n                    title={title}\r\n                    mediaType={mediaType}\r\n                    mediaItem={mediaItem}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </HStack>\r\n          ) : null}\r\n        </HStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      description={movie?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ChevronLeftOutlined as ChevronLeftOutlinedIcon,\r\n  ChevronRightOutlined as ChevronRightOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport _ from 'lodash';\r\n\r\nimport useInterval from '../../../../common/hooks/useInterval';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport useStyles from './styles';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { direction, isDisabled = false, reset = false, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Center\r\n      width='auto'\r\n      position='absolute'\r\n      left={direction === 'left' ? 0 : undefined}\r\n      right={direction === 'right' ? 0 : undefined}\r\n      zIndex={1}\r\n      backgroundColor='transparent'\r\n      _after={direction === 'left' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}\r\n      _before={direction === 'right' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}>\r\n      <ScaleFade in={!isDisabled} unmountOnExit>\r\n        <Center backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <IconButton\r\n            aria-label={`Scroll ${direction}`}\r\n            icon={direction === 'left' ? ChevronLeftOutlinedIcon : ChevronRightOutlinedIcon}\r\n            onClick={(event: Event) => handleOnClick(event)}\r\n            onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n            onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Center>\r\n      </ScaleFade>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { ArrowProps } from './types';\r\n\r\ntype DirectionStyle = {\r\n  left: Style;\r\n  right: Style;\r\n};\r\n\r\ntype ArrowStyle = {\r\n  arrow: Style;\r\n  light: DirectionStyle;\r\n  dark: DirectionStyle;\r\n};\r\n\r\nexport default (theme: Theme, { isDisabled = false }: ArrowProps): ArrowStyle => ({\r\n  arrow: {\r\n    content: '\"\"',\r\n\r\n    width: '30px',\r\n    height: '30px',\r\n\r\n    display: 'block',\r\n\r\n    pointerEvents: 'none'\r\n  },\r\n  light: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize, useElementSize } from '../../common/hooks';\r\nimport Arrow from './components/Arrow';\r\nimport { HorizontalScrollProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalScroll = (props: HorizontalScrollProps): ReactElement => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { width: containerWidth } = useElementSize(containerRef);\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, width, spacing } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleContainerRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleContainerRef(containerRef.current);\r\n      }\r\n    }, 50),\r\n    [containerRef]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (containerRef && containerRef.current) {\r\n        if (direction === 'left') {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft - 10;\r\n        } else {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [containerRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleContainerRef(containerRef.current);\r\n  }, [windowWidth, containerWidth]);\r\n\r\n  return (\r\n    <HStack width={width || '100%'} maxWidth={width || '100%'} position='relative' spacing={0}>\r\n      {/* Left Arrow Button */}\r\n      <Arrow\r\n        direction='left'\r\n        isDisabled={scrollButtons.left}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Scrollable content */}\r\n      <HStack\r\n        ref={containerRef}\r\n        width='100%'\r\n        maxWidth='100%'\r\n        overflowX='auto'\r\n        spacing={spacing ? spacing : 1}\r\n        onLoad={() => handleContainerRef(containerRef.current)}\r\n        onScroll={() => handleContainerRef(containerRef.current)}\r\n        sx={{\r\n          // CSS to hide scrollbar\r\n          'scrollbarWidth': 'none',\r\n          '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n          }\r\n        }}>\r\n        {children}\r\n      </HStack>\r\n\r\n      {/* Right Arrow Button */}\r\n      <Arrow\r\n        direction='right'\r\n        isDisabled={scrollButtons.right}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalScroll;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text, useTheme, HStack } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Link from '../../../Clickable/Link';\r\nimport HorizontalScroll from '../../../HorizontalScroll';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport { PosterProps } from '../types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: {\r\n          thumbnail: 'w45',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={\r\n        departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n        person?.known_for_department ||\r\n        ''\r\n      }\r\n      description={\r\n        <HorizontalScroll>\r\n          <HStack\r\n            divider={\r\n              <Text\r\n                align='left'\r\n                fontSize={['sm', 'md', 'lg', 'xl']}\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                pr={0.75}>\r\n                ,\r\n              </Text>\r\n            }>\r\n            {arraySort(person?.known_for || [], 'vote_average').map((mediaItem) => (\r\n              <Link\r\n                key={mediaItem.id}\r\n                to={{ pathname: `/${mediaItem?.title ? 'movie' : mediaItem?.name ? 'tv' : ''}/${mediaItem.id}` }}>\r\n                <SkeletonText\r\n                  width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n                  offsetY={8.5}\r\n                  isLoaded={!isLoading}>\r\n                  <Text\r\n                    align='left'\r\n                    fontSize={['sm', 'md', 'lg', 'xl']}\r\n                    color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                    isTruncated\r\n                    overflow='hidden'\r\n                    whiteSpace='nowrap'\r\n                    sx={{\r\n                      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n                    }}\r\n                    _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n                    {!isLoading ? mediaItem?.title || mediaItem?.name || '' : 'Lorem ipsum dolor'}\r\n                  </Text>\r\n                </SkeletonText>\r\n              </Link>\r\n            ))}\r\n          </HStack>\r\n        </HorizontalScroll>\r\n      }\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: {\r\n          thumbnail: 'w92',\r\n          full: 'original'\r\n        }\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      description={show?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import { Breadcrumb } from '../../types';\r\n\r\nconst home: Breadcrumb = {\r\n  label: 'Home',\r\n  to: { pathname: '/' }\r\n};\r\n\r\nconst search = {\r\n  label: 'Search',\r\n  to: { pathname: '/search' }\r\n};\r\n\r\nconst trending = {\r\n  label: 'Trending',\r\n  to: { pathname: '/trending' }\r\n};\r\n\r\nconst movies: Breadcrumb = {\r\n  label: 'Movies',\r\n  to: { pathname: '/movies' }\r\n};\r\n\r\nconst tv: Breadcrumb = {\r\n  label: 'TV Shows',\r\n  to: { pathname: '/tv' }\r\n};\r\n\r\nconst people: Breadcrumb = {\r\n  label: 'People',\r\n  to: { pathname: '/people' }\r\n};\r\n\r\nconst liked = {\r\n  label: 'Liked',\r\n  to: { pathname: '/liked' }\r\n};\r\n\r\nconst lists = {\r\n  label: 'Lists',\r\n  to: { pathname: '/lists' }\r\n};\r\n\r\n// '/person/:id': {\r\n//   label: 'Person',\r\n//   consistsOf: ['/', '/people', '/person/:id']\r\n// }\r\n\r\nexport { home, search, trending, movies, tv, people, liked, lists };\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n        <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('Movies', movies.length)}\r\n          footer={\r\n            movies.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/movie' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${movies.length || 0} liked movie${\r\n                    movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {movies.map((movie, index) =>\r\n              index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* TV */}\r\n      <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('TV shows', tv.length)}\r\n          footer={\r\n            tv.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/tv' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {tv.map((show, index) =>\r\n              index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* People */}\r\n      <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('People', people.length)}\r\n          footer={\r\n            people.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/person' }} isFullWidth>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${people.length || 0} liked ${\r\n                    (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {people.map((person, index) =>\r\n              index < 20 ? <VerticalPersonPoster key={person.id} isLoading={false} person={person} /> : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  HStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Center,\r\n  Text,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalPersonPoster from '../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../components/People/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, liked as likedBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([...liked.movies]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([...liked.tv]);\r\n  const [people, setPeople] = useState<MediaItem<'person'>[]>([...liked.people]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredMovies: MediaItem<'movie'>[] = [...liked.movies];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setMovies([...filteredMovies]);\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredTV: MediaItem<'tv'>[] = [...liked.tv];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setTV([...filteredTV]);\r\n  };\r\n\r\n  const handleFilterPeople = (sortBy: SortBy[], departments: Department[]): void => {\r\n    let filteredPeople: MediaItem<'person'>[] = [...liked.people];\r\n\r\n    if (departments && departments.length > 0) {\r\n      filteredPeople = filteredPeople.filter((person) =>\r\n        departments.some((department) => person.known_for_department === department.value)\r\n      );\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredPeople = arraySort(filteredPeople, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setPeople([...filteredPeople]);\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      case 'person':\r\n        handleFilterPeople(sortBy, departments);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleHasMediaTypes = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return (tv && tv.length > 0) || (people && people.length > 0);\r\n      case 'tv':\r\n        return (movies && movies.length > 0) || (people && people.length > 0);\r\n      case 'person':\r\n        return (movies && movies.length > 0) || (tv && tv.length > 0);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypes = (): MediaType[] => {\r\n    const mediaTypes: MediaType[] = [];\r\n\r\n    if (movies && movies.length > 0) {\r\n      mediaTypes.push('movie');\r\n    }\r\n    if (tv && tv.length > 0) {\r\n      mediaTypes.push('tv');\r\n    }\r\n    if (people && people.length > 0) {\r\n      mediaTypes.push('person');\r\n    }\r\n\r\n    return mediaTypes;\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, likedBreadcrumb];\r\n\r\n    switch (mediaType) {\r\n      case 'person':\r\n        breadcrumbs.push({\r\n          label: 'People',\r\n          to: { pathname: '/liked/person' }\r\n        });\r\n        break;\r\n      case 'tv':\r\n        breadcrumbs.push({\r\n          label: 'TV Shows',\r\n          to: { pathname: '/liked/tv' }\r\n        });\r\n        break;\r\n      case 'movie':\r\n        breadcrumbs.push({\r\n          label: 'Movies',\r\n          to: { pathname: '/liked/movie' }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(null);\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {mediaType === 'movie'\r\n                ? 'Movies'\r\n                : mediaType === 'tv'\r\n                ? 'TV shows'\r\n                : mediaType === 'person'\r\n                ? 'People'\r\n                : 'Liked'}\r\n            </Text>\r\n            <Badge\r\n              label={\r\n                mediaType === 'movie'\r\n                  ? String(movies.length)\r\n                  : mediaType === 'tv'\r\n                  ? String(tv.length)\r\n                  : mediaType === 'person'\r\n                  ? String(people.length)\r\n                  : String(movies.length + tv.length + people.length)\r\n              }\r\n              color={mediaType ? utils.handleReturnColor(color) : 'gray'}\r\n              size='lg'\r\n              ml={2}\r\n            />\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <ScaleFade in={handleHasMediaTypes()} unmountOnExit>\r\n                  <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                    Change media type\r\n                  </Button>\r\n                </ScaleFade>\r\n                {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n                mediaType === 'movie' ? (\r\n                  movies.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {movies.map((movie) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                        ) : (\r\n                          <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} py={0}>\r\n                      <Empty label='You have liked no movie!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : mediaType === 'tv' ? (\r\n                  tv.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {tv.map((show) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                        ) : (\r\n                          <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} py={0}>\r\n                      <Empty label='You have no liked no tv show!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : mediaType === 'person' ? (\r\n                  people.length > 0 ? (\r\n                    <SimpleGrid\r\n                      width='100%'\r\n                      columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                      spacing={2}\r\n                      px={2}\r\n                      pt={2}>\r\n                      {people.map((person) =>\r\n                        displayMode === 'list' ? (\r\n                          <HorizontalPersonPoster key={person.id} isLoading={false} person={person} />\r\n                        ) : (\r\n                          <VerticalPersonPoster key={person.id} width='100%' isLoading={false} person={person} />\r\n                        )\r\n                      )}\r\n                    </SimpleGrid>\r\n                  ) : (\r\n                    <Box width='100%' px={2} pt={2}>\r\n                      <Empty label='You have no liked nobody!' variant='outlined' size='xl' />\r\n                    </Box>\r\n                  )\r\n                ) : (\r\n                  <All movies={movies} tv={tv} people={people} />\r\n                )\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={handleReturnMediaTypes()}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Fade, Collapse } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n        <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('Movies', movies.length)}\r\n            footer={\r\n              movies.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/movie` }} isFullWidth>\r\n                  <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${movies.length || 0} movie${\r\n                      movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                    }`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {movies.map((movie, index) =>\r\n                index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('TV shows', tv.length)}\r\n            footer={\r\n              tv.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/tv` }} isFullWidth>\r\n                  <Button color={utils.handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {tv.map((show, index) =>\r\n                index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { EditListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst EditList = ({ list, isOpen, onClose }: EditListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    if (list) {\r\n      dispatch(\r\n        setLists(\r\n          lists.map((paramList) =>\r\n            paramList.id === list.id\r\n              ? {\r\n                  ...list,\r\n                  label: values.label,\r\n                  description: values?.description || '',\r\n                  date: moment(new Date()).toISOString(),\r\n                  results: {\r\n                    ...list.results\r\n                  }\r\n                }\r\n              : { ...paramList }\r\n          )\r\n        )\r\n      );\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && list) {\r\n      form.reset({\r\n        label: list.label,\r\n        description: list.description\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`Edit ${list?.label ? `\"${list.label}\"` : ''} List`}\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Box, HStack, Text } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport { EmptyListProps } from './types';\r\n\r\nconst EmptyList = (props: EmptyListProps): ReactElement => {\r\n  const history = useHistory();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, label, mediaTypeLabel } = props;\r\n\r\n  return (\r\n    <Box width='100%' px={2} pt={2}>\r\n      <Empty\r\n        button={\r\n          <HStack spacing={1}>\r\n            {mediaTypeLabel ? (\r\n              <>\r\n                <Button\r\n                  color={utils.handleReturnColor(color)}\r\n                  onClick={() => history.push({ pathname: `/lists/${id}` })}\r\n                  size='sm'\r\n                  variant='outlined'>\r\n                  {`Back to \"${label}\" list`}\r\n                </Button>\r\n                <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                  OR\r\n                </Text>\r\n              </>\r\n            ) : null}\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => history.push({ pathname: '/lists' })}\r\n              size='sm'\r\n              variant='outlined'>\r\n              Back to lists\r\n            </Button>\r\n          </HStack>\r\n        }\r\n        label={\r\n          mediaTypeLabel ? `No ${mediaTypeLabel} found in \"${label}\" list!` : `You have no items in \"${label}\" list!`\r\n        }\r\n        variant='outlined'\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, HStack, Text, Icon, useMediaQuery } from '@chakra-ui/react';\r\nimport { TheatersOutlined as TheatersOutlinedIcon, TvOutlined as TvOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { MediaTypeProps } from './types';\r\n\r\nconst MediaType = (props: MediaTypeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const style = useStyles(props);\r\n\r\n  const { mediaType, amount } = props;\r\n\r\n  const handleReturnTitle = (): string => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return `Movie${amount === 0 || amount > 1 ? 's' : ''}`;\r\n      case 'tv':\r\n        return `TV Show${amount === 0 || amount > 1 ? 's' : ''}`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      width={isSm ? `${screen.width - 32}px` : `${400 / 2}px`}\r\n      height={isSm ? `${screen.width - 32}px` : `${400 / 2}px`}\r\n      alignItems='flex-start'\r\n      justifyContent='space-between'\r\n      spacing={0}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack spacing={0.75}>\r\n        <Icon aria-label={handleReturnTitle()} as={mediaType === 'movie' ? TheatersOutlinedIcon : TvOutlinedIcon} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold'>\r\n          {handleReturnTitle()}\r\n        </Text>\r\n      </HStack>\r\n      <Text align='left' fontSize='6xl' fontWeight='bold' lineHeight={theme.fontSizes['5xl']}>\r\n        {amount}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MediaType;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { MediaTypeProps } from './types';\r\n\r\ntype MediaTypeStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default ({ mediaType }: MediaTypeProps): MediaTypeStyle => ({\r\n  common: {\r\n    borderRadius: 'xl',\r\n    bgGradient: `linear(to-tr, ${mediaType === 'movie' ? 'blue.400' : 'pink.400'}, ${\r\n      mediaType === 'movie' ? 'cyan.400' : 'red.400'\r\n    })`,\r\n\r\n    padding: 2\r\n  },\r\n  light: {\r\n    '& .chakra-icon': {\r\n      color: 'gray.50'\r\n    },\r\n    '& .chakra-text': {\r\n      color: 'gray.50'\r\n    }\r\n  },\r\n  dark: {\r\n    '& .chakra-icon': {\r\n      color: 'gray.900'\r\n    },\r\n    '& .chakra-text': {\r\n      color: 'gray.900'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, HStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Modal from '../../../../components/Modal';\r\nimport MediaType from './components/MediaType';\r\nimport { ListInfoProps } from './types';\r\n\r\nconst ListInfo = ({ list, isOpen, onClose }: ListInfoProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {`${list?.label ? `\"${list.label}\"` : ''} List`}\r\n          </Text>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs' fontWeight='normal'>\r\n            {`${(list ? list?.results.movies.length + list?.results.tv.length : 0) > 0 ? 'Updated' : 'Created'} ${\r\n              moment(list?.date).isSame(moment(), 'day')\r\n                ? moment(list?.date).fromNow()\r\n                : moment(list?.date).format('LL')\r\n            }`}\r\n          </Text>\r\n        </VStack>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      isCentered\r\n      size='md'>\r\n      <VStack spacing={3} p={2}>\r\n        {list?.description ? (\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='lg' fontWeight='normal'>\r\n            {list.description}\r\n          </Text>\r\n        ) : null}\r\n\r\n        <HStack wrap='wrap' spacing={2}>\r\n          {['movie', 'tv'].map((mediaType) => (\r\n            <MediaType\r\n              key={mediaType}\r\n              mediaType={mediaType}\r\n              amount={\r\n                mediaType === 'movie'\r\n                  ? list?.results.movies.length || 0\r\n                  : mediaType === 'tv'\r\n                  ? list?.results.tv.length || 0\r\n                  : 0\r\n              }\r\n            />\r\n          ))}\r\n        </HStack>\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ListInfo;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Radio as CUIRadio } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RadioProps } from './types';\r\n\r\nconst Radio = (props: RadioProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { colorMode: colorModeProp, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return <CUIRadio {...rest} sx={{ ..._.merge(style.radio, style[mode]) }} />;\r\n};\r\n\r\nexport default Radio;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { RadioProps } from './types';\r\n\r\ntype RadioStyle = {\r\n  radio: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isChecked = false, isDisabled = false }: RadioProps): RadioStyle => ({\r\n  radio: {\r\n    'opacity': isDisabled ? 0.5 : 1,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none !important'\r\n    },\r\n\r\n    '&.chakra-radio__control': {\r\n      boxShadow: 'none !important',\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '& svg': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n      borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n      color: isChecked ? 'gray.50' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.500` : 'transparent',\r\n        borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n        color: isChecked ? 'gray.50' : 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.500` : 'transparent',\r\n      borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n      color: isChecked ? 'gray.900' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.400` : 'transparent',\r\n        borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n        color: isChecked ? 'gray.900' : 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Text, Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport Radio from '../../../../../../components/Clickable/Radio';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { id, label, results, isActive = false, isSelectable = false, isSelected = false, onSelected, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isHoveringRadio, setIsHoveringRadio] = useBoolean();\r\n\r\n  const movies = results.movies.length;\r\n  const tv = results.tv.length;\r\n\r\n  return (\r\n    <Card\r\n      flex={1}\r\n      color={location.pathname.includes(id) ? utils.handleReturnColor(color) : 'gray'}\r\n      onClick={!isActive && !isHoveringRadio && onClick ? () => onClick(id) : undefined}\r\n      isFullWidth\r\n      isClickable={!isHoveringRadio}>\r\n      <VStack position='relative' width='100%' spacing={0} px={2} py={6}>\r\n        {isSelectable && onSelected ? (\r\n          <Box position='absolute' top={theme.space[2]} left={theme.space[2]}>\r\n            <Radio\r\n              color={utils.handleReturnColor(color)}\r\n              isChecked={isSelected}\r\n              onMouseEnter={() => setIsHoveringRadio.on()}\r\n              onMouseLeave={() => setIsHoveringRadio.off()}\r\n              onClick={() => onSelected(id)}\r\n              size='lg'\r\n            />\r\n          </Box>\r\n        ) : null}\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {label}\r\n        </Text>\r\n        <Text\r\n          align='center'\r\n          color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='xs'\r\n          fontWeight='400'\r\n          textTransform='capitalize'>\r\n          {`${[\r\n            `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n            `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n          ].join(' • ')}`}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Modal from '../../../../components/Modal';\r\nimport { List } from '../../../../store/slices/User/types';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const handleClick = (id: List['id']): void => {\r\n    history.push({\r\n      pathname: `/lists/${id}`\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  InfoTwoTone as InfoTwoToneIcon,\r\n  EditOutlined as EditOutlinedIcon,\r\n  DeleteOutlineOutlined as DeleteOutlineOutlinedIcon,\r\n  CloseOutlined as CloseOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport store from '../../../../store';\r\nimport { ToastProps } from './types';\r\n\r\nconst Toast = (props: ToastProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = store.getState().user.ui.theme.color;\r\n\r\n  const { selected, onInfo, onEdit, onDelete, onClose } = props;\r\n\r\n  return (\r\n    <HStack\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      borderRadius='full'\r\n      boxShadow='lg'\r\n      spacing={2}\r\n      px={2}\r\n      py={1.5}\r\n      mb={1.5}>\r\n      <HStack spacing={0.25}>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          fontSize={isSm ? 'sm' : 'md'}\r\n          fontWeight='normal'\r\n          whiteSpace='nowrap'>\r\n          {`\"${selected.label}\" list`}\r\n        </Text>\r\n      </HStack>\r\n\r\n      <HStack spacing={1}>\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Information related to selected list'\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}>\r\n            Info\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Edit selected list'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Delete selected list'\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}>\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n\r\n      <IconButton\r\n        aria-label='Close'\r\n        colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n        icon={CloseOutlinedIcon}\r\n        onClick={() => onClose()}\r\n        size={isSm ? 'sm' : 'md'}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  useToast,\r\n  VStack,\r\n  HStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Center,\r\n  Text,\r\n  ScaleFade,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport IconButton from '../../components/Clickable/IconButton';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, lists as listsBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { toggleConfirm } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport CreateList from './components/CreateList';\r\nimport EditList from './components/EditList';\r\nimport EmptyList from './components/Empty';\r\nimport ListInfo from './components/ListInfo';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Toast from './components/Toast';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n  const { isOpen: isEditListOpen, onOpen: onEditListOpen, onClose: onEditListClose } = useDisclosure();\r\n  const { isOpen: isListInfoOpen, onOpen: onListInfoOpen, onClose: onListInfoClose } = useDisclosure();\r\n\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const toast = useToast();\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([]);\r\n\r\n  const [selected, setSelected] = useState<ListType>();\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.movies) {\r\n      let filteredMovies: MediaItem<'movie'>[] = [...list.results.movies];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n      }\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setMovies([...filteredMovies]);\r\n    }\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.tv) {\r\n      let filteredTV: MediaItem<'tv'>[] = [...list.results.tv];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n      }\r\n\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setTV([...filteredTV]);\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, listsBreadcrumb];\r\n\r\n    if (list) {\r\n      breadcrumbs.push({\r\n        label: list.label,\r\n        to: { pathname: `/lists/${list.id}` }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: { pathname: `/lists/${list.id}/tv` }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: { pathname: `/lists/${list.id}/movie` }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  const handleSelectList = (id: ListType['id']): void => {\r\n    if (selected?.id === id) {\r\n      setSelected(undefined);\r\n    } else {\r\n      setSelected(lists.find((list) => list.id === id));\r\n    }\r\n  };\r\n\r\n  const handleCloseToast = (): void => {\r\n    toast.closeAll();\r\n    setSelected(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies([...activeList.results.movies]);\r\n      setTV([...activeList.results.tv]);\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    toast.closeAll();\r\n\r\n    if (selected) {\r\n      toast({\r\n        duration: null,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n        variant: 'solid',\r\n        render: function RenderToast() {\r\n          return (\r\n            <Toast\r\n              selected={selected}\r\n              onInfo={() => onListInfoOpen()}\r\n              onEdit={() => onEditListOpen()}\r\n              onDelete={() =>\r\n                dispatch(\r\n                  toggleConfirm({\r\n                    open: true,\r\n                    title: isSm ? 'Delete' : `Delete ${selected?.label ? `\"${selected.label}\"` : ''} list`,\r\n                    description: `Are you sure you want to delete the ${\r\n                      selected?.label ? `\"${selected.label}\"` : ''\r\n                    } list? You will not be able to retrieve this list back!`,\r\n                    submitButton: (\r\n                      <Button\r\n                        color='red'\r\n                        onClick={() => {\r\n                          dispatch(setLists(lists.filter((paramList) => paramList.id !== selected?.id)));\r\n                          dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                          handleCloseToast();\r\n                        }}\r\n                        size='sm'>\r\n                        Delete\r\n                      </Button>\r\n                    )\r\n                  })\r\n                )\r\n              }\r\n              onClose={() => handleCloseToast()}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {list\r\n                ? `\"${list.label}\" list ${mediaType === 'movie' ? 'Movies' : mediaType === 'tv' ? 'TV shows' : ''}`\r\n                : 'Lists'}\r\n            </Text>\r\n            <Badge\r\n              label={\r\n                list\r\n                  ? mediaType === 'movie'\r\n                    ? String(movies.length)\r\n                    : mediaType === 'tv'\r\n                    ? String(tv.length)\r\n                    : String(movies.length + tv.length)\r\n                  : String(lists.length)\r\n              }\r\n              size='lg'\r\n              ml={2}\r\n            />\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions:\r\n            mediaType || (list && lists.length > 0) ? (\r\n              <HStack spacing={2}>\r\n                <ScaleFade in={!!mediaType} unmountOnExit>\r\n                  <HStack spacing={2}>\r\n                    {movies.length > 0 && tv.length > 0 ? (\r\n                      <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                        Change media-type\r\n                      </Button>\r\n                    ) : null}\r\n                    {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n                  </HStack>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n                  <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                    Change list\r\n                  </Button>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!list} unmountOnExit>\r\n                  <IconButton\r\n                    aria-label='Open Information modal'\r\n                    icon={InfoTwoToneIcon}\r\n                    onClick={() => onListInfoOpen()}\r\n                    variant='outlined'\r\n                  />\r\n                </ScaleFade>\r\n              </HStack>\r\n            ) : (\r\n              <Button onClick={() => onCreateListOpen()} variant='outlined'>\r\n                Create new list\r\n              </Button>\r\n            ),\r\n          body: (\r\n            <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n              <VerticalGrid>\r\n                {list ? (\r\n                  movies.length > 0 || tv.length > 0 ? (\r\n                    mediaType === 'movie' ? (\r\n                      movies.length > 0 ? (\r\n                        <SimpleGrid\r\n                          width='100%'\r\n                          columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                          spacing={2}\r\n                          px={2}\r\n                          pt={2}>\r\n                          {movies.map((movie) =>\r\n                            displayMode === 'list' ? (\r\n                              <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                            ) : (\r\n                              <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                            )\r\n                          )}\r\n                        </SimpleGrid>\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='movies' />\r\n                      )\r\n                    ) : mediaType === 'tv' ? (\r\n                      tv.length > 0 ? (\r\n                        <SimpleGrid\r\n                          width='100%'\r\n                          columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                          spacing={2}\r\n                          px={2}\r\n                          pt={2}>\r\n                          {tv.map((show) =>\r\n                            displayMode === 'list' ? (\r\n                              <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                            ) : (\r\n                              <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                            )\r\n                          )}\r\n                        </SimpleGrid>\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='tv shows' />\r\n                      )\r\n                    ) : (\r\n                      <All list={list} movies={movies} tv={tv} />\r\n                    )\r\n                  ) : (\r\n                    <EmptyList id={list.id} label={list.label} />\r\n                  )\r\n                ) : lists && lists.length > 0 ? (\r\n                  <SimpleGrid width='100%' columns={[1, 2, 3, 4, 4]} spacing={2} px={2} pt={2}>\r\n                    {lists.map((list) => (\r\n                      <List\r\n                        key={list.id}\r\n                        {...list}\r\n                        isSelectable\r\n                        isSelected={selected?.id === list.id || false}\r\n                        onSelected={handleSelectList}\r\n                        onClick={(id: ListType['id']) => history.push({ pathname: `/lists/${id}` })}\r\n                      />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' p={2}>\r\n                    <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n                  </Box>\r\n                )}\r\n              </VerticalGrid>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n\r\n      <EditList list={selected} isOpen={isEditListOpen} onClose={() => onEditListClose()} />\r\n\r\n      <ListInfo list={list || selected} isOpen={isListInfoOpen} onClose={onListInfoClose} />\r\n\r\n      {!!mediaType && list ? (\r\n        <MediaTypePicker\r\n          mediaTypes={['movie', 'tv']}\r\n          mediaType={mediaType}\r\n          isOpen={isMediaTypePickerOpen}\r\n          onClose={onMediaTypePickerClose}\r\n          onSetType={(mediaType: MediaType) => history.push({ pathname: `/lists/${list.id}/${mediaType}` })}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\nimport { home, movies } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Movies' breadcrumbs={[home, movies]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularMovies.isFetching || popularMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular Movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={popularMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Upcoming Movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/upcoming' }}\r\n                  isFullWidth\r\n                  isDisabled={upcomingMovies.isFetching || upcomingMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Upcoming Movies\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={upcomingMovies.isError}\r\n                isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n                movies={upcomingMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Movies Now Playing')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/now-playing' }}\r\n                  isFullWidth\r\n                  isDisabled={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Movies Now Playing\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}>\r\n              <HorizontalMovies\r\n                isError={moviesNowPlaying.isError}\r\n                isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n                movies={moviesNowPlaying.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Top Rated Movies')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/movies/top-rated' }}\r\n                  isFullWidth\r\n                  isDisabled={topRatedMovies.isFetching || topRatedMovies.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Movies Now Playing\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}>\r\n              <HorizontalMovies\r\n                isError={topRatedMovies.isError}\r\n                isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n                movies={topRatedMovies.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount = 0, total = 0, mediaType, isLoading = false, isError = false, hasNextPage = true, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${utils.handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      <ScaleFade in={hasNextPage && !isError && amount < total} unmountOnExit>\r\n        <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n          Load more\r\n        </Button>\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Movies Now Playing'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Now Playing', to: { pathname: '/movies/now-playing' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!moviesNowPlaying.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={moviesNowPlaying.isError}\r\n                isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n                  isError={moviesNowPlaying.isError}\r\n                  hasNextPage={moviesNowPlaying.hasNextPage || true}\r\n                  onFetch={moviesNowPlaying.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Popular', to: { pathname: '/movies/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!popularMovies.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={popularMovies.isError}\r\n                isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={popularMovies.isFetching || popularMovies.isLoading}\r\n                  isError={popularMovies.isError}\r\n                  hasNextPage={popularMovies.hasNextPage || true}\r\n                  onFetch={popularMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Top Rated', to: { pathname: '/movies/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!topRatedMovies.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={topRatedMovies.isError}\r\n                isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n                  isError={topRatedMovies.isError}\r\n                  hasNextPage={topRatedMovies.hasNextPage || true}\r\n                  onFetch={topRatedMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Upcoming Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Upcoming', to: { pathname: '/movies/upcoming' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={upcomingMovies.isError}\r\n                isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              {movies ? (\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType='movies'\r\n                  isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n                  isError={upcomingMovies.isError}\r\n                  hasNextPage={upcomingMovies.hasNextPage || true}\r\n                  onFetch={upcomingMovies.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, people as peopleBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='People' breadcrumbs={[home, peopleBreadcrumb]}>\r\n      {{\r\n        actions: <Filters mediaType='person' isDisabled={!popularPeople.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalPeople\r\n                isError={popularPeople.isError}\r\n                isSuccess={popularPeople.isSuccess && !popularPeople.isFetching && !popularPeople.isLoading}\r\n                people={people?.results || []}\r\n              />\r\n\r\n              {people ? (\r\n                <LoadMore\r\n                  amount={people.results.length}\r\n                  total={people.total_results}\r\n                  mediaType='people'\r\n                  isLoading={popularPeople.isFetching || popularPeople.isLoading}\r\n                  isError={popularPeople.isError}\r\n                  hasNextPage={popularPeople.hasNextPage || true}\r\n                  onFetch={popularPeople.fetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useBoolean, VStack, Text, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useWindowSize, useElementSize } from '../../../../common/hooks';\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { BioProps } from './types';\r\n\r\nconst Bio = ({ biography, isLoading = false }: BioProps): ReactElement => {\r\n  const biographyRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [isExpanded, setIsExpanded] = useBoolean();\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { height: elementHeight } = useElementSize(biographyRef);\r\n\r\n  const [height, setHeight] = useState<number>();\r\n\r\n  const handleBiographyRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        setHeight(ref.offsetHeight);\r\n      } else {\r\n        handleBiographyRef(biographyRef.current);\r\n      }\r\n    }, 250),\r\n    [biographyRef]\r\n  );\r\n\r\n  const handleResize = useCallback(() => handleBiographyRef(biographyRef.current), [biographyRef, handleBiographyRef]);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { pb: 2 },\r\n        body: { pt: 2 }\r\n      }}\r\n      isFullWidth\r\n      p={2}>\r\n      {{\r\n        header: {\r\n          title: 'Biography',\r\n          actions: (\r\n            <ScaleFade in={(height || 0) > 44} unmountOnExit>\r\n              <Button\r\n                isDisabled={isLoading}\r\n                isFullWidth\r\n                onClick={() => setIsExpanded.toggle()}\r\n                size='sm'\r\n                variant='text'>\r\n                {isExpanded ? 'Collapse' : 'Expand'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: !isLoading ? (\r\n          <Collapse startingHeight={(height || 44) >= 44 ? 44 : elementHeight} in={isExpanded}>\r\n            <VStack ref={biographyRef} width='100%' spacing={2}>\r\n              {biography.split('\\n'[0]).map((paragraph, index) => (\r\n                <Text\r\n                  key={index}\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                  fontSize='md'\r\n                  fontWeight='medium'>\r\n                  {paragraph}\r\n                </Text>\r\n              ))}\r\n            </VStack>\r\n          </Collapse>\r\n        ) : (\r\n          <VStack width='100%' spacing={2}>\r\n            {_.range(0, 3).map((_dummy, index) => (\r\n              <SkeletonText key={index} width='100%' offsetY={6} isLoaded={!isLoading}>\r\n                <Text align='left' fontSize='xs'>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                  dolore magna aliqua.\r\n                </Text>\r\n              </SkeletonText>\r\n            ))}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { BackgroundProps } from './types';\r\n\r\nconst Background = ({ children }: BackgroundProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const location = useLocation();\r\n\r\n  const [gradient, setGradient] = useState<string>();\r\n\r\n  /**\r\n   * This method will return 2 colors to be used in a gradient\r\n   */\r\n  const handleReturnGradient = useCallback(\r\n    _.debounce(() => {\r\n      const random: number = Math.floor(Math.random() * 9);\r\n      let gradient = '';\r\n\r\n      switch (random) {\r\n        case 0:\r\n          gradient = 'red.200, red.500';\r\n          break;\r\n        case 1:\r\n          gradient = 'orange.200, orange.500';\r\n          break;\r\n        case 2:\r\n          gradient = 'yellow.200, yellow.500';\r\n          break;\r\n        case 3:\r\n          gradient = 'green.200, green.500';\r\n          break;\r\n        case 4:\r\n          gradient = 'teal.200, teal.500';\r\n          break;\r\n        case 5:\r\n          gradient = 'blue.200, blue.500';\r\n          break;\r\n        case 6:\r\n          gradient = 'cyan.200, cyan.500';\r\n          break;\r\n        case 7:\r\n          gradient = 'purple.200, purple.500';\r\n          break;\r\n        default:\r\n          gradient = 'pink.200, pink.500';\r\n          break;\r\n      }\r\n\r\n      setGradient(gradient);\r\n    }, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleReturnGradient(), [location]);\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height={['150px', '150px', '200px', '250px', '300px', '350px']}\r\n      position='relative'\r\n      bgGradient={`linear(to-r, ${gradient})`}\r\n      borderRadius='md'>\r\n      <Box position='absolute' top={theme.space[2]} right={theme.space[2]}>\r\n        {children.socials}\r\n      </Box>\r\n      <Box\r\n        position='absolute'\r\n        bottom={['-37.5px', '-37.5px', '-50px', '-62.5px', '-75px', '-87.5px']}\r\n        left={['37.5px', '37.5px', '50px', '62.5px', '75px', '87.5px']}>\r\n        {children.poster}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { ReactElement, Fragment } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { DepartmentsProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst Departments = (props: DepartmentsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { departments, isLoading = false } = props;\r\n\r\n  return (\r\n    <HStack maxWidth='100%' spacing={isLoading ? 1 : 0}>\r\n      {!isLoading ? (\r\n        <HorizontalScroll>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Text\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                  fontSize='md'\r\n                  whiteSpace='nowrap'>\r\n                  {department}\r\n                </Text>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <SkeletonText\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='19px'\r\n              offsetY={9.5}\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  useBreakpointValue,\r\n  useBoolean,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['6xl'],\r\n    'sm': theme.fontSizes['4xl'],\r\n    'md': theme.fontSizes['5xl'],\r\n    'lg': theme.fontSizes['5xl'],\r\n    'xl': theme.fontSizes['6xl'],\r\n    '2xl': theme.fontSizes['6xl']\r\n  });\r\n\r\n  const { name, path, isLoading = false, isError = false, onClickPoster } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={isSm ? '100%' : ['125px', '125px', '175px', '225px', '275px', '325px']}\r\n      border={isSm ? 'none' : '4px'}\r\n      borderColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRadius={isSm ? 'base' : 'full'}\r\n      onClick={!isLoading && !isError && path ? () => onClickPoster(path) : undefined}\r\n      onMouseEnter={!isLoading && !isError && path ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={!isLoading && !isError && path ? () => setIsHovering.off() : undefined}>\r\n      <Fade in={!isImageError} unmountOnExit>\r\n        <Center\r\n          width='100%'\r\n          height='100%'\r\n          position='absolute'\r\n          zIndex={1}\r\n          borderRadius={isSm ? 'base' : 'full'}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            backgroundColor: isHovering\r\n              ? colorMode === 'light'\r\n                ? 'rgba(0, 0, 0, 0.25)'\r\n                : 'rgba(255, 255, 255, 0.25)'\r\n              : 'transparent',\r\n            transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n          }}>\r\n          <Fade in={isHovering} unmountOnExit>\r\n            <Icon\r\n              as={SearchOutlinedIcon}\r\n              color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n              sx={{\r\n                fontSize: `${fontSize} !important`\r\n              }}\r\n            />\r\n          </Fade>\r\n        </Center>\r\n      </Fade>\r\n      <AspectRatio ratio={1 / 1}>\r\n        <Skeleton isLoaded={!isLoading} borderRadius={isSm ? 'base' : 'full'}>\r\n          <Image\r\n            width='100%'\r\n            alt={`${name ? `\"${name}\"` : ''} profile poster`}\r\n            mediaType='person'\r\n            onError={() => setIsImageError.on()}\r\n            onLoad={() => setIsImageError.off()}\r\n            src={path || ''}\r\n            size={{\r\n              thumbnail: 'w45',\r\n              full: 'original'\r\n            }}\r\n          />\r\n        </Skeleton>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link as CUILink, Box, Icon } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { name, type, href, icon, isDisabled = false } = props;\r\n\r\n  const iconComponent = (\r\n    <Skeleton isLoaded={!isDisabled}>\r\n      <Icon as={icon} sx={{ ..._.merge(style.common.icon) }} />\r\n    </Skeleton>\r\n  );\r\n\r\n  return !isDisabled ? (\r\n    <CUILink\r\n      aria-label={`${name ? `\"${name}\"` : ''} ${type} link`}\r\n      href={!isDisabled ? href : ''}\r\n      isExternal\r\n      sx={{ ..._.merge(style.common.link, style[colorMode]) }}>\r\n      {iconComponent}\r\n    </CUILink>\r\n  ) : (\r\n    <Box p={1}>{iconComponent}</Box>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { LinkProps } from './types';\r\n\r\ntype LinkStyle = {\r\n  common: {\r\n    link: Style;\r\n    icon: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color, isDisabled = false }: LinkProps): LinkStyle => ({\r\n  common: {\r\n    link: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'display': 'flex',\r\n      'alignItems': 'center',\r\n      'justifyContent': 'center',\r\n\r\n      'padding': theme.space[1],\r\n\r\n      'opacity': !isDisabled ? 1 : 0.5,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${theme.fontSizes['2xl']} !important`\r\n    }\r\n  },\r\n  light: {\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  },\r\n  dark: {\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useTheme } from '@chakra-ui/react';\r\nimport { Facebook as FacebookIcon, Twitter as TwitterIcon, Instagram as InstagramIcon } from '@material-ui/icons';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Link from '../Link';\r\nimport { LinksProps } from './types';\r\n\r\nconst ImdbIcon = (): ReactElement => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      aria-hidden='true'\r\n      role='img'\r\n      width='24px'\r\n      height='24px'\r\n      preserveAspectRatio='xMidYMid meet'\r\n      viewBox='0 0 448 512'>\r\n      <path\r\n        d='M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9c1.7 7.6 1.4 16.3 1.4 24.4c0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9c-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2c21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7c-6 0-4.9 8.9-4.9 12.7c0 .6-1.1 39.6 1.1 44.7c.8 1.6 2.2 2.4 3.8 2.4c7.8 0 6.2-9 6.2-14.4z'\r\n        fill='currentColor'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Links = (props: LinksProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { socials, name, isLoading = false } = props;\r\n\r\n  return (\r\n    <>\r\n      {/* Facebook */}\r\n      {socials?.facebook_id ? (\r\n        <Link\r\n          color='#4267B2'\r\n          name={name}\r\n          href={`https://www.facebook.com/${socials.facebook_id}`}\r\n          type='Facebook'\r\n          icon={FacebookIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Twitter */}\r\n      {socials?.twitter_id ? (\r\n        <Link\r\n          color='#1DA1F2'\r\n          name={name}\r\n          href={`https://www.twitter.com/${socials.twitter_id}`}\r\n          type='Twitter'\r\n          icon={TwitterIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Instagram */}\r\n      {socials?.instagram_id ? (\r\n        <Link\r\n          color={colorMode === 'light' ? theme.colors.gray[900] : theme.colors.gray[50]}\r\n          name={name}\r\n          href={`https://www.instagram.com/${socials.instagram_id}`}\r\n          type='Instagram'\r\n          icon={InstagramIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* IMDB */}\r\n      {socials?.imdb_id ? (\r\n        <Link\r\n          color='#F5C518'\r\n          name={name}\r\n          href={`https://www.imdb.com/name/${socials.imdb_id}`}\r\n          type='IMDB'\r\n          icon={ImdbIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, HStack, VStack } from '@chakra-ui/react';\r\n\r\nimport Links from './components/Links';\r\nimport { SocialsProps } from './types';\r\n\r\nconst Socials = (props: SocialsProps): ReactElement => {\r\n  const [isMd] = useMediaQuery('(max-width: 768px)');\r\n  const { orientation: orientationProp = 'vertical', ...rest } = props;\r\n\r\n  const orientation = isMd ? 'horizontal' : orientationProp;\r\n\r\n  return orientation === 'vertical' ? (\r\n    <VStack spacing={0}>\r\n      <Links {...rest} />\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' spacing={0}>\r\n      <Links {...rest} />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Like from '../../../../components/Like';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport Background from './components/Background';\r\nimport Departments from './components/Departments';\r\nimport Poster from './components/Poster';\r\n// import Stats from './components/Stats';\r\nimport Socials from './components/Socials';\r\nimport { DetailsProps } from './types';\r\n\r\nconst width = [\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 225px)',\r\n  'calc(100% - 287.5px)',\r\n  'calc(100% - 350px)',\r\n  'calc(100% - 412.5px)'\r\n];\r\nconst left = ['162.5px', '162.5px', '225px', '287.5px', '350px', '412.5px'];\r\n\r\nconst Details = (props: DetailsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const {\r\n    person,\r\n    // totalMovieCredits,\r\n    // totalTvCredits,\r\n    // totalCrewCredits,\r\n    departments,\r\n    socials,\r\n    isLoading = false,\r\n    isError = false,\r\n    onClickPoster\r\n  } = props;\r\n\r\n  return (\r\n    <Card isFullWidth p={2}>\r\n      {{\r\n        body: (\r\n          <VStack width='100%' alignItems='stretch' spacing={2}>\r\n            {isSm ? (\r\n              <Poster\r\n                name={person?.name}\r\n                path={person?.profile_path}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n                onClickPoster={onClickPoster}\r\n              />\r\n            ) : (\r\n              <Background alt={`${person?.name || ''} background`} size='780'>\r\n                {{\r\n                  poster: (\r\n                    <Poster\r\n                      name={person?.name}\r\n                      path={person?.profile_path}\r\n                      isLoading={isLoading}\r\n                      isError={isError}\r\n                      onClickPoster={onClickPoster}\r\n                    />\r\n                  ),\r\n\r\n                  socials: <Socials socials={socials} name={person?.name} isLoading={isLoading} />\r\n                }}\r\n              </Background>\r\n            )}\r\n\r\n            <VStack\r\n              width={isSm ? '100%' : width}\r\n              maxWidth={isSm ? '100%' : width}\r\n              position='relative'\r\n              left={isSm ? 0 : left}\r\n              alignItems='flex-start'\r\n              spacing={2}>\r\n              <VStack width='100%' maxWidth='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n                <SkeletonText offsetY={isSm ? 12 : 18} isLoaded={!isLoading}>\r\n                  <Text\r\n                    align='left'\r\n                    color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                    fontSize={isSm ? '2xl' : '4xl'}\r\n                    fontWeight='bold'>\r\n                    {person?.name || 'Unknown'}\r\n                  </Text>\r\n                </SkeletonText>\r\n\r\n                <Departments departments={departments} isLoading={isLoading} />\r\n              </VStack>\r\n\r\n              <ScaleFade in={isLoading ? true : !isError && (person?.birthday || '')?.length > 0} unmountOnExit>\r\n                <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                    {`Born on ${moment(person?.birthday || '', 'YYYY-MM-DD').format('LL')}${\r\n                      person?.place_of_birth ? ` in ${person?.place_of_birth}` : ''\r\n                    }${\r\n                      person?.deathday ? ` - ${moment(person?.deathday || '', 'YYYY-MM-DD').format('LL')}` : ''\r\n                    } (${moment(person?.deathday || new Date()).diff(\r\n                      moment(person?.birthday || '', 'YYYY-MM-DD'),\r\n                      'years'\r\n                    )} years old)`}\r\n                  </Text>\r\n                </SkeletonText>\r\n              </ScaleFade>\r\n\r\n              <ScaleFade in={!isError} unmountOnExit>\r\n                <Like\r\n                  buttonType='button'\r\n                  isDisabled={isLoading}\r\n                  title={person?.name || ''}\r\n                  mediaType='person'\r\n                  mediaItem={\r\n                    person\r\n                      ? {\r\n                          known_for_department: person.known_for_department,\r\n                          id: person.id,\r\n                          name: person.name,\r\n                          gender: person.gender,\r\n                          popularity: person.popularity,\r\n                          profile_path: person.profile_path,\r\n                          adult: person.adult\r\n                        }\r\n                      : undefined\r\n                  }\r\n                  size='md'\r\n                />\r\n              </ScaleFade>\r\n\r\n              {/* <Stats\r\n            totalMovieCredits={totalMovieCredits}\r\n            totalTvCredits={totalTvCredits}\r\n            totalCrewCredits={totalCrewCredits}\r\n            isLoading={isLoading}\r\n          /> */}\r\n            </VStack>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, VStack, Center, Link as CUILink, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Link from '../../../../../../../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\nimport { MediaItemProps } from './types';\r\n\r\nconst MediaItem = (props: MediaItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, mediaType, title, subtitle, date } = props;\r\n\r\n  /**\r\n   * This method will check if the media item's date is in the future or its already passed\r\n   *\r\n   * @param date - String\r\n   * @returns - Boolean if media item's date is in the future\r\n   */\r\n  const handleIfDateIsFuture = (date: string): boolean => {\r\n    return moment(new Date()).isBefore(moment(date, 'YYYY-MM-DD'));\r\n  };\r\n\r\n  return (\r\n    <HStack justifyContent='space-between' width='100%' spacing={2}>\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <HStack spacing={2}>\r\n          <Center>\r\n            <Link to={{ pathname: `/${mediaType}/${id}` }}>\r\n              <CUILink\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize={isSm ? 'sm' : 'md'}\r\n                fontWeight='semibold'\r\n                sx={{\r\n                  transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n                }}\r\n                _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n                {`${title}  `}\r\n              </CUILink>\r\n            </Link>\r\n            {!date ? (\r\n              <Badge label='Announced' color={utils.handleReturnColor(color)} size={isSm ? 'xs' : 'sm'} ml={1} />\r\n            ) : date && handleIfDateIsFuture(date) ? (\r\n              <Badge label='In Production' color={utils.handleReturnColor(color)} size={isSm ? 'xs' : 'sm'} ml={1} />\r\n            ) : null}\r\n          </Center>\r\n        </HStack>\r\n\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n\r\n      {date ? (\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {utils.handleReturnDate(date || '', 'year')}\r\n        </Text>\r\n      ) : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaItem;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastMovies = ({ movies }: { movies: CastMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CastMovieCredit[] => {\r\n    const withDate: CastMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CastMovieCredit[] = arraySort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.character ? `As ${movie.character}` : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastTV = ({ tv }: { tv: CastTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CastTVCredit[] => {\r\n    const withoutDate: CastTVCredit[] = arraySort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CastTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${\r\n            show.character ? show.character : 'Unknown'\r\n          }`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewMovies = ({ movies }: { movies: CrewMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CrewMovieCredit[] => {\r\n    const withDate: CrewMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CrewMovieCredit[] = arraySort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.job ? movie.job : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewTV = ({ tv }: { tv: CrewTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CrewTVCredit[] => {\r\n    const withoutDate: CrewTVCredit[] = arraySort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CrewTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${show.job}`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\n\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Card from '../../../../../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst Panel = ({ children, title, total }: ListProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth variant='transparent'>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: <Badge label={String(total)} size={isSm ? 'sm' : 'md'} ml={2} />\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            {children}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  AccordionItem as CUIAccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  VStack,\r\n  Center,\r\n  VisuallyHidden,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../../../common/hooks';\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../../../components/Badge';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport CastMovies from './components/CastMovies';\r\nimport CastTV from './components/CastTV';\r\nimport CrewMovies from './components/CrewMovies';\r\nimport CrewTV from './components/CrewTV';\r\nimport Panel from './components/Panel';\r\nimport useStyles from './styles';\r\nimport { AccordionItemProps } from './types';\r\n\r\nconst AccordionItem = (props: AccordionItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, credits, isExpanded } = props;\r\n\r\n  return (\r\n    <CUIAccordionItem sx={{ ..._.merge(style.common.accordion, style[colorMode].accordion) }}>\r\n      <VisuallyHidden>\r\n        <span id={`${label.toLowerCase()}-accordion`} />\r\n      </VisuallyHidden>\r\n\r\n      <AccordionButton sx={{ ..._.merge(style.common.button) }}>\r\n        <Center>\r\n          <Text\r\n            textAlign='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize={isSm ? 'xl' : '2xl'}\r\n            fontWeight='semibold'>\r\n            {label}\r\n          </Text>\r\n          <Badge\r\n            label={`${\r\n              (credits.cast?.movie?.length || 0) +\r\n              (credits.cast?.tv?.length || 0) +\r\n              (credits.crew?.movie?.length || 0) +\r\n              (credits.crew?.tv?.length || 0)\r\n            }`}\r\n            color={isExpanded ? utils.handleReturnColor(color) : 'gray'}\r\n            size={isSm ? 'md' : 'lg'}\r\n            ml={isSm ? 1 : 2}\r\n          />\r\n        </Center>\r\n        <Icon\r\n          as={KeyboardArrowDownOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ ..._.merge(style.common.icon) }}\r\n        />\r\n      </AccordionButton>\r\n\r\n      <AccordionPanel sx={{ ..._.merge(style.common.panel) }}>\r\n        <VStack width='100%' spacing={6}>\r\n          {label === 'Actor' ? (\r\n            <>\r\n              {credits.cast?.movie && credits.cast?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.cast.movie.length}>\r\n                  <CastMovies movies={credits.cast.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.cast?.tv && credits.cast?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.cast.tv.length}>\r\n                  <CastTV tv={credits.cast.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {credits.crew?.movie && credits.crew?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.crew.movie.length}>\r\n                  <CrewMovies movies={credits.crew.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.crew?.tv && credits.crew?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.crew.tv.length}>\r\n                  <CrewTV tv={credits.crew.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </VStack>\r\n      </AccordionPanel>\r\n    </CUIAccordionItem>\r\n  );\r\n};\r\n\r\nexport default AccordionItem;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { AccordionItemProps } from './types';\r\n\r\ntype Components = {\r\n  accordion: Style;\r\n  button: Style;\r\n  icon: Style;\r\n  panel: Style;\r\n};\r\n\r\ntype AccordionItemStyle = {\r\n  common: Components;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { isExpanded = false }: AccordionItemProps): AccordionItemStyle => ({\r\n  common: {\r\n    accordion: {\r\n      width: '100%',\r\n\r\n      border: 'none',\r\n      borderRadius: 'lg',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n\r\n      'padding': `${theme.space[1.5]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': isExpanded ? 'rotate(360deg)' : 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    panel: {\r\n      padding: `${theme.space[0.5]} ${theme.space[2]} ${theme.space[2]} ${theme.space[2]}`,\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.100' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.100',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.800' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.800',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon } from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(300, 5);\r\n\r\nconst DummyAccordion = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme);\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between' sx={{ ..._.merge(style.common.button) }}>\r\n      <Skeleton width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`} height='16px' />\r\n\r\n      <Icon\r\n        as={KeyboardArrowDownOutlinedIcon}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        sx={{ ..._.merge(style.common.icon) }}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DummyAccordion;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype DummyAccordionItemStyle = {\r\n  common: { button: Style; icon: Style };\r\n};\r\n\r\nexport default (theme: Theme): DummyAccordionItemStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Accordion as CUIAccordion, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport AccordionItem from './components/AccordionItem';\r\nimport DummyAccordionItem from './components/DummyAccordionItem';\r\nimport { AccordionProps } from './types';\r\n\r\nconst Accordion = (props: AccordionProps): ReactElement => {\r\n  const { departments, expanded, isLoading = false, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <CUIAccordion\r\n          width='100%'\r\n          allowMultiple\r\n          allowToggle\r\n          defaultIndex={[]}\r\n          index={expanded}\r\n          onChange={(indexes) => onChange(indexes)}>\r\n          <VStack width='100%' spacing={2}>\r\n            {departments.map((department, index) => (\r\n              <AccordionItem\r\n                key={`${department.label.toLowerCase()}-accordion`}\r\n                {...department}\r\n                isExpanded={Array.isArray(expanded) ? expanded.includes(index) : false}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </CUIAccordion>\r\n      ) : (\r\n        _.range(0, 5).map((_dummy, index) => <DummyAccordionItem key={index} />)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React, { Fragment, ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { QuickTogglesProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst QuickToggles = (props: QuickTogglesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { departments, isLoading = false, onToggleAccordion } = props;\r\n\r\n  return (\r\n    <HStack justifyContent='stretch' spacing={isLoading ? 1 : 0}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        whiteSpace='nowrap'\r\n        py={0.75}>\r\n        Jump to:\r\n      </Text>\r\n\r\n      {!isLoading ? (\r\n        <HorizontalScroll width='calc(100% - 61.47px)' spacing='0'>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Link to={`${department.toLowerCase()}-accordion`} spy={true} smooth={true} offset={-81}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => onToggleAccordion(department)}\r\n                    size='sm'\r\n                    variant='text'>\r\n                    {department}\r\n                  </Button>\r\n                </Link>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <SkeletonText\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='28px'\r\n              offsetY={14}\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default QuickToggles;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { ExpandedIndex, VStack, Collapse, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport Accordion from './components/Accordion';\r\nimport QuickToggles from './components/QuickToggles';\r\nimport { FilmographyProps } from './types';\r\n\r\nconst Filmography = (props: FilmographyProps): ReactElement => {\r\n  const { departments, name, isSuccess = false, isLoading = false, isError = false } = props;\r\n\r\n  const [expandedAccordions, setExpandedAccordions] = useState<ExpandedIndex>([]);\r\n\r\n  /**\r\n   * This method will either expand/collapse all accordions at once\r\n   */\r\n  const handleToggleAccordions = (): void => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    setExpandedAccordions(expanded === departments.length ? [] : departments.map((_department, index) => index));\r\n  };\r\n\r\n  /**\r\n   * This method will check if all the accordions are either expanded or collapsed\r\n   *\r\n   * @returns Boolean - If expanded or collapsed\r\n   */\r\n  const handleCheckisAccordionsExpanded = (): boolean => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    return expanded === departments.length;\r\n  };\r\n\r\n  /**\r\n   * This method will either expand/collapse the accordion passed as param\r\n   *\r\n   * @param department String - The accordion clicked\r\n   */\r\n  const handleToggleAccordion = (department: string): void => {\r\n    const expanded: number[] = Array.isArray(expandedAccordions) ? expandedAccordions : [];\r\n    const index: number = departments.findIndex((paramDepartment) => paramDepartment.label === department);\r\n\r\n    if (!expanded.includes(index)) {\r\n      setExpandedAccordions([...expanded, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 2 }, body: { pt: 2 } }} isFullWidth variant='outlined' p={2}>\r\n      {{\r\n        header: {\r\n          title: 'Filmography',\r\n          actions: (\r\n            <ScaleFade in={!isError} unmountOnExit>\r\n              <Button isDisabled={isLoading} onClick={() => handleToggleAccordions()} size='sm' variant='text'>\r\n                {handleCheckisAccordionsExpanded() ? 'Hide all' : 'Show all'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            <Collapse in={!isError} unmountOnExit style={{ width: '100%' }}>\r\n              <QuickToggles\r\n                departments={departments.map((department) => department.label)}\r\n                isLoading={isLoading}\r\n                onToggleAccordion={handleToggleAccordion}\r\n              />\r\n            </Collapse>\r\n\r\n            {isError ? (\r\n              <Error\r\n                label='Oh no! Something went wrong'\r\n                description={`Failed to fetch ${name ? `\"${name}\"` : ''} filmography credits list!`}\r\n                variant='transparent'\r\n              />\r\n            ) : isSuccess && departments && departments.length === 0 ? (\r\n              <Empty label={`${name ? `\"${name}\"` : ''} has no credits`} variant='transparent' />\r\n            ) : (\r\n              <Accordion\r\n                departments={departments}\r\n                expanded={expandedAccordions}\r\n                isLoading={isLoading}\r\n                onChange={(indexes: ExpandedIndex) => setExpandedAccordions(indexes)}\r\n              />\r\n            )}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Filmography;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { KnownForProps } from './types';\r\n\r\nconst KnownFor = (props: KnownForProps): ReactElement => {\r\n  const { knownFor, name, isError = false, isSuccess = false, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalGrid title='Known for' isLoading={isLoading} hasDivider variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} known for list!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && knownFor && knownFor.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no known for credits`} variant='transparent' />\r\n      ) : isSuccess && knownFor && knownFor.length > 0 ? (\r\n        <>\r\n          {knownFor.map((mediaItem) => (\r\n            <VerticalPoster\r\n              key={mediaItem.id}\r\n              width={['185px', '205px', '230px']}\r\n              mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n              mediaType={mediaItem ? 'movie' : 'tv'}\r\n              image={{\r\n                alt: `${mediaItem?.title || mediaItem?.name || ''} ${mediaItem?.title ? 'movie' : 'tv'} poster`,\r\n                src: mediaItem?.poster_path || '',\r\n                size: {\r\n                  thumbnail: '45',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              rating={{\r\n                rating: mediaItem?.vote_average || null,\r\n                count: mediaItem?.vote_count || null\r\n              }}\r\n              title={mediaItem?.title || mediaItem?.name || ''}\r\n              subtitle={`${utils.handleReturnDate(mediaItem?.release_date || mediaItem?.first_air_date || '', 'year')}`}\r\n              isLoading={false}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {[...Array(knownFor ? knownFor.length : 10)].map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='movie'\r\n              image={{\r\n                alt: 'Movie poster',\r\n                src: '',\r\n                size: {\r\n                  thumbnail: '45',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              title='Lorem ipsum'\r\n              subtitle='Lorem ipsum'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default KnownFor;\r\n","import React, { ReactElement, MouseEvent } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  CloseOutlined as CloseOutlinedIcon,\r\n  DashboardOutlined as DashboardOutlinedIcon,\r\n  FullscreenOutlined as FullscreenOutlinedIcon,\r\n  FullscreenExitOutlined as FullscreenExitOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { ActionsProps, HTMLFullscreenElement, FullscreenDocument } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { onClose, onGalleryClick } = props;\r\n\r\n  const [isFullscreen, setIsFullscreen] = useBoolean();\r\n  const [isfullscreenNotSupported, setIsfullscreenNotSupported] = useBoolean();\r\n\r\n  /**\r\n   * This method will open fullscreen mode\r\n   */\r\n  const handleOpenFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const element: HTMLFullscreenElement = document.documentElement;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.on();\r\n  };\r\n\r\n  /**\r\n   * This method will close fullscreen mode\r\n   */\r\n  const handleCloseFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const doc: FullscreenDocument = document;\r\n\r\n    if (doc.exitFullscreen) {\r\n      doc.exitFullscreen();\r\n    } else if (doc.webkitExitFullscreen) {\r\n      doc.webkitExitFullscreen();\r\n    } else if (doc.mozCancelFullScreen) {\r\n      doc.mozCancelFullScreen();\r\n    } else if (doc.msExitFullscreen) {\r\n      doc.msExitFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.off();\r\n  };\r\n\r\n  /**\r\n   * This method will close the modal and will close fullscreen if fullscreen is open\r\n   */\r\n  const handleClose = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    if (isFullscreen) {\r\n      handleCloseFullscreen(event);\r\n    }\r\n\r\n    onClose();\r\n  };\r\n\r\n  const actions = [\r\n    // Close button\r\n    <IconButton\r\n      key='close_button'\r\n      aria-label='Close modal'\r\n      icon={CloseOutlinedIcon}\r\n      onClick={(event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => handleClose(event)}\r\n      variant='icon'\r\n    />,\r\n\r\n    // Gallery button\r\n    <IconButton\r\n      key='gallery_button'\r\n      aria-label='Open Gallery'\r\n      icon={DashboardOutlinedIcon}\r\n      onClick={() => onGalleryClick()}\r\n      variant='icon'\r\n    />,\r\n\r\n    //  Fullscreen button\r\n    !isfullscreenNotSupported ? (\r\n      <IconButton\r\n        key='fullscreen_button'\r\n        aria-label={isFullscreen ? 'Exit fullscreen ' : 'Enter fullscreen'}\r\n        icon={isFullscreen ? FullscreenExitOutlinedIcon : FullscreenOutlinedIcon}\r\n        onClick={isFullscreen ? (event) => handleCloseFullscreen(event) : (event) => handleOpenFullscreen(event)}\r\n        variant='icon'\r\n      />\r\n    ) : null\r\n  ].filter((action) => action);\r\n\r\n  return isSm ? (\r\n    <HStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions.reverse()}\r\n    </HStack>\r\n  ) : (\r\n    <VStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, SimpleGrid, Text } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = ({ children, title }: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 340px)');\r\n\r\n  return (\r\n    <VStack width='100%' justifyContent='stretch' spacing={2}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='xl'\r\n        fontWeight='semibold'>\r\n        {title}\r\n      </Text>\r\n\r\n      <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 5, 6]} spacing={2}>\r\n        {children}\r\n      </SimpleGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon, CheckOutlined as CheckOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport Image from '../../../../../../../../components/Image';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst GalleryImage = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['5xl'],\r\n    'sm': theme.fontSizes['5xl'],\r\n    'md': theme.fontSizes['6xl'],\r\n    'lg': theme.fontSizes['6xl'],\r\n    'xl': theme.fontSizes['7xl'],\r\n    '2xl': theme.fontSizes['7xl']\r\n  });\r\n\r\n  const { image, index, name, isActive = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height='100%'\r\n      position='relative'\r\n      onClick={() => onClickImage(index)}\r\n      onMouseEnter={() => setIsHovering.on()}\r\n      onMouseLeave={() => setIsHovering.off()}>\r\n      <Center\r\n        width='100%'\r\n        height='100%'\r\n        position='absolute'\r\n        zIndex={1}\r\n        borderRadius='base'\r\n        sx={{\r\n          cursor: 'pointer',\r\n          backgroundColor:\r\n            isHovering || isActive\r\n              ? colorMode === 'light'\r\n                ? 'rgba(0, 0, 0, 0.25)'\r\n                : 'rgba(255, 255, 255, 0.25)'\r\n              : 'transparent',\r\n          transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n        }}>\r\n        <Fade in={isHovering || isActive} unmountOnExit>\r\n          <Icon\r\n            as={isActive ? CheckOutlinedIcon : SearchOutlinedIcon}\r\n            color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n            sx={{\r\n              fontSize: `${fontSize} !important`\r\n            }}\r\n          />\r\n        </Fade>\r\n      </Center>\r\n      <AspectRatio borderRadius='base' ratio={1 / 1}>\r\n        <Image\r\n          alt={`${name ? `\"${name}\"` : ''} image`}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          mediaType='person'\r\n          src={image.file_path}\r\n          size={{\r\n            thumbnail: 'w45',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GalleryImage;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Modal, ModalContent, ModalHeader, ModalBody, VStack } from '@chakra-ui/react';\r\nimport { CloseOutlined as CloseOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Grid from './components/Grid';\r\nimport Image from './components/Image';\r\nimport { GalleryProps } from './types';\r\n\r\nconst Gallery = (props: GalleryProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { isOpen, name, activeIndex, images, onClick, onClose } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalHeader display='flex' justifyContent='flex-end' p={2}>\r\n          {/* Close button */}\r\n          <IconButton aria-label='Close modal' icon={CloseOutlinedIcon} onClick={() => onClose()} variant='icon' />\r\n        </ModalHeader>\r\n        <ModalBody p={0}>\r\n          <VStack width='100%' px={isSm ? 3 : 6} pb={isSm ? 3 : 6}>\r\n            {/* Photos Section */}\r\n            <Grid title='Photos'>\r\n              <>\r\n                {images.map((image, index) => (\r\n                  <Image\r\n                    key={index}\r\n                    image={image}\r\n                    index={index}\r\n                    name={name}\r\n                    isActive={index === activeIndex}\r\n                    onClickImage={onClick}\r\n                  />\r\n                ))}\r\n              </>\r\n            </Grid>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { NavigationProps } from './types';\r\n\r\nconst Navigation = (props: NavigationProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { current, total, onNavigation } = props;\r\n\r\n  return (\r\n    <HStack position='absolute' bottom={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {/* Left button */}\r\n      <IconButton\r\n        aria-label='Previous photo'\r\n        icon={ArrowBackOutlinedIcon}\r\n        isDisabled={current <= 1}\r\n        onClick={() => onNavigation('prev')}\r\n        variant='icon'\r\n      />\r\n\r\n      <Text\r\n        align='center'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='md'>{`${current} / ${total}`}</Text>\r\n\r\n      {/* Right button */}\r\n      <IconButton\r\n        aria-label='Next photo'\r\n        icon={ArrowForwardOutlinedIcon}\r\n        isDisabled={current >= total}\r\n        onClick={() => onNavigation('next')}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Center } from '@chakra-ui/react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport { ViewerProps } from './types';\r\n\r\nconst Viewer = (props: ViewerProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { current, name, images, onSwiper, onSlideChange } = props;\r\n\r\n  return (\r\n    <Swiper\r\n      allowSlideNext={current <= images.length}\r\n      allowSlidePrev={current >= 1}\r\n      spaceBetween={96}\r\n      slidesPerView={1}\r\n      onSwiper={(swiper) => onSwiper(swiper)}\r\n      onSlideChange={(swiper) => onSlideChange(swiper)}\r\n      onKeyPress={(event) => console.log(event)}>\r\n      {images.map((image, index) => (\r\n        <SwiperSlide key={index}>\r\n          <Center width='100vw' height='100vh' py={2}>\r\n            <Image\r\n              alt={`${name ? `\"${name}\"` : ''} image`}\r\n              width={isSm ? 'calc(100% - 64px)' : 'auto'}\r\n              maxWidth='none'\r\n              height={isSm ? 'auto' : 'calc(100% - 128px)'}\r\n              mediaType='person'\r\n              borderRadius='xl'\r\n              src={image.file_path}\r\n              size={{\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }}\r\n            />\r\n          </Center>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Viewer;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Modal, ModalContent, ModalBody } from '@chakra-ui/react';\r\nimport { Swiper } from 'swiper';\r\n\r\nimport Actions from './components/Actions';\r\nimport Gallery from './components/Gallery';\r\nimport Navigation from './components/Navigation';\r\nimport Viewer from './components/Viewer';\r\nimport { MediaViewerProps, NavigationDirection } from './types';\r\n\r\nconst MediaViewer = (props: MediaViewerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isGalleryOpen, onOpen: onGalleryOpen, onClose: onGalleryClose } = useDisclosure();\r\n\r\n  const { isOpen, name, selectedImage, images, onClose } = props;\r\n\r\n  const [swiper, setSwiper] = useState<Swiper | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n\r\n  /**\r\n   * This method will slide to the image\r\n   *\r\n   * @param index Number - The index of the image in the list\r\n   * @param speed Number - The speed of the slide transition\r\n   */\r\n  const handleSlideTo = useCallback(\r\n    (index: number, speed: number) => {\r\n      if (swiper) {\r\n        swiper.slideTo(index, speed);\r\n        setActiveIndex(index);\r\n      }\r\n    },\r\n    [swiper]\r\n  );\r\n\r\n  /**\r\n   * This method will either slide to the previous slide or to the next slide depending on the direction passed\r\n   *\r\n   * @param direction - Either 'prev' or 'next'\r\n   */\r\n  const handleNavigationClick = (direction: NavigationDirection): void => {\r\n    handleSlideTo(direction === 'prev' ? activeIndex - 1 : activeIndex + 1, 500);\r\n  };\r\n\r\n  /**\r\n   * This method will close the gallery and will slide to the index passed\r\n   *\r\n   * @param index Number - The slide index\r\n   */\r\n  const handleGalleryClick = (index: number): void => {\r\n    onGalleryClose();\r\n    handleSlideTo(index, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiper && selectedImage) {\r\n      handleSlideTo(images.findIndex((image) => image.file_path === selectedImage.file_path) || 0, 0);\r\n    }\r\n  }, [swiper, selectedImage]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        blockScrollOnMount\r\n        preserveScrollBarGap\r\n        motionPreset='scale'\r\n        scrollBehavior='inside'\r\n        size='full'>\r\n        <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n          <ModalBody position='relative' p={0}>\r\n            <Actions onClose={onClose} onGalleryClick={() => onGalleryOpen()} />\r\n\r\n            <Viewer\r\n              current={activeIndex + 1}\r\n              name={name}\r\n              images={images}\r\n              onSwiper={(swiper) => setSwiper(swiper)}\r\n              onSlideChange={(swiper) => setActiveIndex(swiper.activeIndex)}\r\n            />\r\n\r\n            <Navigation current={activeIndex + 1} total={images.length} onNavigation={handleNavigationClick} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Gallery\r\n        isOpen={isGalleryOpen}\r\n        name={name}\r\n        activeIndex={activeIndex}\r\n        images={images}\r\n        onClick={handleGalleryClick}\r\n        onClose={onGalleryClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaViewer;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport Image from '../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst PhotoImage = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['5xl'],\r\n    'sm': theme.fontSizes['5xl'],\r\n    'md': theme.fontSizes['6xl'],\r\n    'lg': theme.fontSizes['6xl'],\r\n    'xl': theme.fontSizes['7xl'],\r\n    '2xl': theme.fontSizes['7xl']\r\n  });\r\n\r\n  const { image, name, isLoading = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={width}\r\n      minWidth={width}\r\n      maxWidth={width}\r\n      onClick={image ? () => onClickImage(image) : undefined}\r\n      onMouseEnter={image ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={image ? () => setIsHovering.off() : undefined}>\r\n      <Center\r\n        width={width}\r\n        height='100%'\r\n        position='absolute'\r\n        zIndex={1}\r\n        borderRadius='base'\r\n        sx={{\r\n          cursor: 'pointer',\r\n          backgroundColor: isHovering\r\n            ? colorMode === 'light'\r\n              ? 'rgba(0, 0, 0, 0.25)'\r\n              : 'rgba(255, 255, 255, 0.25)'\r\n            : 'transparent',\r\n          transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n        }}>\r\n        <Fade in={isHovering} unmountOnExit>\r\n          <Icon\r\n            as={SearchOutlinedIcon}\r\n            color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n            sx={{\r\n              fontSize: `${fontSize} !important`\r\n            }}\r\n          />\r\n        </Fade>\r\n      </Center>\r\n      <AspectRatio ratio={2 / 3}>\r\n        <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n          <Image\r\n            alt={`${name ? `\"${name}\"` : ''} image`}\r\n            maxWidth='none'\r\n            height='100%'\r\n            borderRadius='base'\r\n            mediaType='person'\r\n            src={image?.file_path || ''}\r\n            size={{\r\n              thumbnail: 'w45',\r\n              full: 'original'\r\n            }}\r\n          />\r\n        </Skeleton>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PhotoImage;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Image as ImageType } from '../../../../common/types/person';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport Image from './components/Image';\r\nimport { PhotosProps } from './types';\r\n\r\nconst Photos = (props: PhotosProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const { images, name, isError = false, isSuccess = false, isLoading = false, onClickImage } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title='Photos'\r\n      footer={\r\n        images.length > 7 ? (\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isFullWidth\r\n            isDisabled={isLoading || isError}\r\n            onClick={() => onClickImage()}\r\n            size={isSm ? 'sm' : 'md'}\r\n            variant='text'>\r\n            {`View all ${name ? `\"${name}\"` : ''} photos`}\r\n          </Button>\r\n        ) : undefined\r\n      }\r\n      isLoading={isLoading}\r\n      hasDivider\r\n      variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} photos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && images && images.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no photos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(images && images.length > 0 ? images : Array(5))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: ImageType | number, index) => (\r\n              <Image\r\n                key={index}\r\n                image={typeof image !== 'number' && image ? image : undefined}\r\n                name={name}\r\n                isLoading={isLoading}\r\n                onClickImage={onClickImage}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport {\r\n  FullPerson,\r\n  Credits,\r\n  MovieCredits,\r\n  TVCredits,\r\n  ExternalIDs,\r\n  ImageResponse,\r\n  Image\r\n} from '../../common/types/person';\r\nimport { Response } from '../../common/types/types';\r\nimport Bio from './components/Bio';\r\nimport Details from './components/Details';\r\nimport Filmography from './components/Filmography';\r\nimport KnownFor from './components/KnownFor';\r\nimport MediaViewer from './components/MediaViewer';\r\nimport Photos from './components/Photos';\r\nimport { Department, KnownFor as KnownForType } from './types';\r\n\r\nconst Person = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState<Image | undefined>();\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person known for list\r\n  const creditsQuery = useQuery([`person-combined_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Credits>(`/person/${id}/combined_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person external ids\r\n  const externalIdsQuery = useQuery([`person-external_ids-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ExternalIDs>(`/person/${id}/external_ids`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person images\r\n  const imagesQuery = useQuery([`person-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/person/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tagged images\r\n  const taggedImagesQuery = useQuery([`person-tagged_images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<ImageResponse>>(`/person/${id}/tagged_images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  /**\r\n   * This method will take all the credits and place them in their respective object\r\n   *\r\n   * @returns Array of Objects - Of Departments containing all credits\r\n   */\r\n  const handleGetDepartments = (): Department[] => {\r\n    let departments: Department[] = [];\r\n\r\n    if ((movieCreditsQuery.data?.cast.length || 0) > 0 || (tvCreditsQuery.data?.cast.length || 0) > 0) {\r\n      departments.push({\r\n        label: 'Actor',\r\n        credits: {\r\n          cast: {\r\n            movie: movieCreditsQuery.data?.cast || [],\r\n            tv: tvCreditsQuery.data?.cast || []\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    movieCreditsQuery.data?.crew.forEach((mediaItem) => {\r\n      if (departments.some((department) => department.label === mediaItem.job)) {\r\n        departments = departments.map((department) =>\r\n          department.label === mediaItem.job\r\n            ? {\r\n                ...department,\r\n                credits: {\r\n                  ...department.credits,\r\n                  crew: {\r\n                    ...department.credits.crew,\r\n                    movie: [...(department.credits.crew?.movie || []), { ...mediaItem }]\r\n                  }\r\n                }\r\n              }\r\n            : department\r\n        );\r\n      } else {\r\n        departments.push({\r\n          label: mediaItem.job,\r\n          credits: {\r\n            crew: {\r\n              movie: [{ ...mediaItem }],\r\n              tv: []\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    tvCreditsQuery.data?.crew.forEach((mediaItem) => {\r\n      if (departments.some((department) => department.label === mediaItem.job)) {\r\n        departments = departments.map((department) =>\r\n          department.label === mediaItem.job\r\n            ? {\r\n                ...department,\r\n                credits: {\r\n                  ...department.credits,\r\n                  crew: {\r\n                    ...department.credits.crew,\r\n                    tv: [...(department.credits.crew?.tv || []), { ...mediaItem }]\r\n                  }\r\n                }\r\n              }\r\n            : department\r\n        );\r\n      } else {\r\n        departments.push({\r\n          label: mediaItem.job,\r\n          credits: {\r\n            crew: {\r\n              movie: [],\r\n              tv: [{ ...mediaItem }]\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return arraySort([...departments], 'label');\r\n  };\r\n\r\n  /**\r\n   * This method will filter from known for list and will return the 8 most voted movies/tv shows\r\n   *\r\n   * @returns Array of Objects - Known for list\r\n   */\r\n  const handleGetKnownFor = (): KnownForType => {\r\n    const filtered = new Set();\r\n    const credits = [...(creditsQuery.data?.cast || []), ...(creditsQuery.data?.crew || [])];\r\n    const knownFor = arraySort(\r\n      credits.filter((mediaItem) => {\r\n        const duplicate = filtered.has(mediaItem.id);\r\n        filtered.add(mediaItem.id);\r\n        return !duplicate;\r\n      }),\r\n      'vote_count',\r\n      { reverse: true }\r\n    ).filter((_item, index) => index < 8);\r\n\r\n    return [...knownFor];\r\n  };\r\n\r\n  /**\r\n   * This method will open the image passed in the media modal\r\n   *\r\n   * @param image - Image object\r\n   */\r\n  const handleOnImageClick = (image?: Image): void => {\r\n    setSelectedPhoto(image || undefined);\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  /**\r\n   * This method will find the image object from images and then it will open the media modal\r\n   *\r\n   * @param path - Image path\r\n   */\r\n  const handleOnPosterClick = (path: string): void => {\r\n    handleOnImageClick(imagesQuery.data?.profiles.find((image) => image.file_path === path));\r\n  };\r\n\r\n  const knownFor = creditsQuery.isSuccess ? handleGetKnownFor() : [];\r\n  const departments = movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess ? handleGetDepartments() : [];\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={4} p={2}>\r\n      <Details\r\n        person={personQuery.data}\r\n        // totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n        // totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n        // totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n        departments={departments.map((department) => department.label)}\r\n        socials={externalIdsQuery.data}\r\n        isLoading={\r\n          personQuery.isFetching || personQuery.isLoading || externalIdsQuery.isFetching || externalIdsQuery.isLoading\r\n        }\r\n        isError={personQuery.isError || personQuery.isError}\r\n        onClickPoster={handleOnPosterClick}\r\n      />\r\n\r\n      {personQuery.data?.biography || personQuery.isFetching || personQuery.isLoading ? (\r\n        <Bio\r\n          biography={personQuery.data?.biography || ''}\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      <KnownFor\r\n        knownFor={knownFor}\r\n        name={personQuery.data?.name}\r\n        isError={creditsQuery.isError}\r\n        isSuccess={creditsQuery.isSuccess}\r\n        isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n      />\r\n\r\n      <Filmography\r\n        departments={departments}\r\n        isLoading={\r\n          movieCreditsQuery.isFetching ||\r\n          movieCreditsQuery.isLoading ||\r\n          tvCreditsQuery.isFetching ||\r\n          tvCreditsQuery.isLoading\r\n        }\r\n        isError={movieCreditsQuery.isError || tvCreditsQuery.isError}\r\n      />\r\n\r\n      <Photos\r\n        images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n        name={personQuery.data?.name}\r\n        isError={imagesQuery.isError || taggedImagesQuery.isError}\r\n        isSuccess={imagesQuery.isSuccess && taggedImagesQuery.isSuccess}\r\n        isLoading={\r\n          imagesQuery.isFetching || imagesQuery.isLoading || taggedImagesQuery.isFetching || taggedImagesQuery.isLoading\r\n        }\r\n        onClickImage={handleOnImageClick}\r\n      />\r\n\r\n      {imagesQuery.isSuccess || taggedImagesQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selectedImage={selectedPhoto}\r\n          images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport { MoviesProps } from './types';\r\n\r\nconst Movies = (props: MoviesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} movie${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} movie${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalMovies isError={isError} isSuccess={isSuccess} movies={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport { PeopleProps } from './types';\r\n\r\nconst People = (props: PeopleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} ${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'person' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} ${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalPeople isError={isError} isSuccess={isSuccess} people={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\nimport { TVProps } from './types';\r\n\r\nconst TV = (props: TVProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} TV show${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'tv' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} TV show${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalTV isError={isError} isSuccess={isSuccess} tv={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade } from '@chakra-ui/react';\r\n\r\nimport Movies from './components/Movies';\r\nimport People from './components/People';\r\nimport TV from './components/TV';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Fade\r\n        in={(movies.data?.pages[movies.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <Movies\r\n          query={query}\r\n          results={movies.data?.pages[movies.data?.pages.length - 1].results || []}\r\n          total_results={movies.data?.pages[movies.data?.pages.length - 1].total_results || 0}\r\n          isFetching={movies.isFetching}\r\n          isLoading={movies.isLoading}\r\n          isError={movies.isError}\r\n          isSuccess={movies.isSuccess}\r\n          refetch={movies.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* TV */}\r\n      <Fade\r\n        in={(tv.data?.pages[tv.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <TV\r\n          query={query}\r\n          results={tv.data?.pages[tv.data?.pages.length - 1].results || []}\r\n          total_results={tv.data?.pages[tv.data?.pages.length - 1].total_results || 0}\r\n          isFetching={tv.isFetching}\r\n          isLoading={tv.isLoading}\r\n          isError={tv.isError}\r\n          isSuccess={tv.isSuccess}\r\n          refetch={tv.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* People */}\r\n      <Fade\r\n        in={(people.data?.pages[people.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <People\r\n          query={query}\r\n          results={people.data?.pages[people.data?.pages.length - 1].results || []}\r\n          total_results={people.data?.pages[people.data?.pages.length - 1].total_results || 0}\r\n          isFetching={people.isFetching}\r\n          isLoading={people.isLoading}\r\n          isError={people.isError}\r\n          isSuccess={people.isSuccess}\r\n          refetch={people.refetch}\r\n        />\r\n      </Fade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const {\r\n    hasQuery = false,\r\n    isFormLocked = false,\r\n    isHoveringLock = false,\r\n    onToggleLock,\r\n    onHoverLock,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isHoveringClear, setIsHoveringClear] = useBoolean();\r\n\r\n  return (\r\n    <Center>\r\n      <ScaleFade in={hasQuery} unmountOnExit>\r\n        <Tooltip\r\n          aria-label='Clear search'\r\n          label='Clear search'\r\n          isOpen={isHoveringClear}\r\n          isDisabled={!hasQuery}\r\n          placement='top'>\r\n          <IconButton\r\n            aria-label='Clear search'\r\n            icon={ClearOutlinedIcon}\r\n            isDisabled={!hasQuery}\r\n            onClick={() => onClearQuery()}\r\n            onMouseEnter={() => setIsHoveringClear.on()}\r\n            onMouseLeave={() => setIsHoveringClear.off()}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Tooltip>\r\n      </ScaleFade>\r\n      <Tooltip\r\n        aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        isOpen={isHoveringLock}\r\n        placement='top'>\r\n        <IconButton\r\n          aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n          icon={isFormLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n          onClick={() => onToggleLock()}\r\n          onMouseEnter={() => onHoverLock(true)}\r\n          onMouseLeave={() => onHoverLock(false)}\r\n          size='sm'\r\n          variant='icon'\r\n        />\r\n      </Tooltip>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text, SlideFade } from '@chakra-ui/react';\r\n\r\nimport { DisplayProps } from './types';\r\n\r\nconst Display = ({ query = '', mediaType, hasUnsubmitted, totalResults }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const handleMultiply = (): number => {\r\n    return (totalResults?.movies || 0) + (totalResults?.tv || 0) + (totalResults?.people || 0);\r\n  };\r\n\r\n  const handleReturnMediaTypeResults = (): number => {\r\n    switch (mediaType) {\r\n      case 'person':\r\n        return totalResults?.people || 0;\r\n      case 'tv':\r\n        return totalResults?.tv || 0;\r\n      case 'movie':\r\n        return totalResults?.movies || 0;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypeLabel = (): string => {\r\n    if (mediaType) {\r\n      const total = handleReturnMediaTypeResults();\r\n\r\n      switch (mediaType) {\r\n        case 'person':\r\n          return `${total > 1 ? 'People' : 'Person'}`;\r\n        case 'tv':\r\n          return `TV Show${total > 1 ? 's' : ''}`;\r\n        case 'movie':\r\n          return `Movie${total > 1 ? 's' : ''}`;\r\n        default:\r\n          return '';\r\n      }\r\n    } else {\r\n      const total = handleMultiply();\r\n\r\n      return `result${total > 1 ? 's' : ''}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SlideFade in={Boolean(totalResults) && !hasUnsubmitted} offsetY={-7} unmountOnExit style={{ width: '100%' }}>\r\n      <HStack width='100%' justifyContent='space-between'>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>{`${\r\n          mediaType ? handleReturnMediaTypeResults() : handleMultiply()\r\n        } ${handleReturnMediaTypeLabel()} found`}</Text>\r\n      </HStack>\r\n    </SlideFade>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { VStack, List as CUIList } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst List = (props: ListProps): ReactElement => {\r\n  const { children, title, actions } = props;\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CUIList spacing={0}>\r\n      <Card\r\n        box={{\r\n          header: { pb: 1 }\r\n        }}\r\n        isFullWidth\r\n        hasDivider={false}\r\n        variant='transparent'>\r\n        {{\r\n          header: {\r\n            title,\r\n            actions\r\n          },\r\n          body: (\r\n            <VStack\r\n              ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n              width='100%'\r\n              alignItems='flex-start'\r\n              spacing={0}\r\n              maxHeight='35vh'\r\n              overflowY='auto'\r\n              pr={isOverflown ? 2 : 0}>\r\n              {children}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </CUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Center, ListItem, Text, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Badge from '../../../../../../components/Badge';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { setRecentSearches } from '../../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, title, subtitle, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHoveringRow, setIsHoveringRow] = useBoolean();\r\n  const [isHoveringDelete, setIsHoveringDelete] = useBoolean();\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 1}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' && onSearch ? () => onSearch(title) : undefined}\r\n      onMouseEnter={state !== 'isLoading' ? () => setIsHoveringRow.on() : undefined}\r\n      onMouseLeave={state !== 'isLoading' ? () => setIsHoveringRow.off() : undefined}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        height={state === 'isLoading' ? '22px' : 'auto'}\r\n        offsetY='11px'\r\n        isLoaded={state === 'isLoaded'}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Center>\r\n            <Text align='left' fontSize='md'>\r\n              {title}\r\n            </Text>\r\n            {mediaType ? (\r\n              <Badge\r\n                color={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}\r\n                label={mediaType}\r\n                ml={1}\r\n              />\r\n            ) : null}\r\n          </Center>\r\n          {type === 'default' && subtitle ? (\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs'>\r\n              {subtitle}\r\n            </Text>\r\n          ) : null}\r\n        </VStack>\r\n      </SkeletonText>\r\n\r\n      {type !== 'isKeyword' ? (\r\n        <ScaleFade in={isHoveringRow}>\r\n          <Tooltip aria-label='Remove search' label={`Remove \"${title}\"`} isOpen={isHoveringDelete} placement='top'>\r\n            <IconButton\r\n              aria-label='Remove search'\r\n              icon={ClearOutlinedIcon}\r\n              onClick={() => handleDelete()}\r\n              onMouseEnter={state !== 'isLoading' ? () => setIsHoveringDelete.on() : undefined}\r\n              onMouseLeave={state !== 'isLoading' ? () => setIsHoveringDelete.off() : undefined}\r\n              size='sm'\r\n              variant='icon'\r\n            />\r\n          </Tooltip>\r\n        </ScaleFade>\r\n      ) : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useRef } from 'react';\r\n\r\nimport { useBoolean, useColorMode, VStack, Box, HStack, Icon, Input, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { InputKeyboardEvent, InputChangeEvent } from '../../types';\r\nimport Actions from './components/Actions';\r\nimport Display from './components/Display';\r\nimport List from './components/List';\r\nimport Row from './components/Row';\r\nimport { FormProps } from './types';\r\n\r\nconst placeholders = [\r\n  'The Godfather',\r\n  'Seinfeld',\r\n  'The Dark Knight',\r\n  'I Love Lucy',\r\n  'Pulp Fiction',\r\n  'The Sopranos',\r\n  'Fight Club',\r\n  'The Simpsons',\r\n  'The Matrix',\r\n  'Friends',\r\n  'GoodFellas',\r\n  'South Park',\r\n  'Hamilton',\r\n  'Family Guy',\r\n  'Star Wars',\r\n  'Breaking Bad',\r\n  'Parasite',\r\n  'Game of Thrones',\r\n  'Gladiator',\r\n  'Star Trek'\r\n];\r\nconst placeholder = placeholders[Math.floor(Math.random() * placeholders.length)];\r\n\r\nconst Form = (props: FormProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const {\r\n    keywords,\r\n    query,\r\n    mediaType,\r\n    submittedQuery,\r\n    hasUnsubmitted = false,\r\n    totalResults,\r\n    isInputDisabled = false,\r\n    onInputKeyPress,\r\n    onInputChange,\r\n    onSubmitQuery,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isFormLocked, setIsFormLocked] = useBoolean();\r\n  const [isHoveringLock, setIsHoveringLock] = useBoolean();\r\n\r\n  const [isHoveringForm, setIsHoveringForm] = useBoolean();\r\n  const [isFormFocused, setIsFormFocused] = useBoolean();\r\n\r\n  const handleFocusOnInput = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleOnHoverLock = (bool: boolean) => {\r\n    if (bool) {\r\n      setIsHoveringLock.on();\r\n    } else {\r\n      setIsHoveringLock.off();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={1} p={2}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        py={1.5}\r\n        onClick={() => handleFocusOnInput()}\r\n        onMouseEnter={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.on() : undefined}\r\n        onMouseLeave={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.off() : undefined}>\r\n        <HStack\r\n          borderBottom={isFormFocused || isFormLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFormFocused || isFormLocked ? 1.5 : 0}\r\n          mb={isFormFocused || isFormLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder={`Try \"${placeholder}\"`}\r\n            isDisabled={isInputDisabled}\r\n            onFocus={!isHoveringLock && !isFormLocked ? () => setIsFormFocused.on() : undefined}\r\n            onBlur={!isHoveringLock && !isFormLocked && !isHoveringForm ? () => setIsFormFocused.off() : undefined}\r\n            onKeyPress={(event: InputKeyboardEvent) => onInputKeyPress(event)}\r\n            onChange={(event: InputChangeEvent) => onInputChange(event)}\r\n            variant='unstyled'\r\n            value={query}\r\n          />\r\n          <Actions\r\n            hasQuery={query.length > 0}\r\n            isFormLocked={isFormLocked}\r\n            isHoveringLock={isHoveringLock}\r\n            onToggleLock={() => setIsFormLocked.toggle()}\r\n            onHoverLock={handleOnHoverLock}\r\n            onClearQuery={onClearQuery}\r\n          />\r\n        </HStack>\r\n\r\n        <Collapse in={isFormFocused || isFormLocked} unmountOnExit>\r\n          <List\r\n            title={!hasUnsubmitted ? 'Recent searches' : ''}\r\n            actions={\r\n              !hasUnsubmitted ? (\r\n                <ScaleFade in={recentSearches.length > 0}>\r\n                  <Button onClick={() => dispatch(setRecentSearches([]))} size='sm' variant='text'>\r\n                    Clear\r\n                  </Button>\r\n                </ScaleFade>\r\n              ) : undefined\r\n            }>\r\n            <>\r\n              {!hasUnsubmitted ? (\r\n                recentSearches.length > 0 ? (\r\n                  _.sortBy(recentSearches, 'date').map((search) => (\r\n                    <Row\r\n                      key={search.id}\r\n                      id={search.id}\r\n                      title={search.label}\r\n                      subtitle={moment(search.date).fromNow()}\r\n                      mediaType={search.mediaType}\r\n                      state='isLoaded'\r\n                      onSearch={(query: string) => onSubmitQuery(query, search.mediaType)}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <Empty hasIllustration={false} label='No recent searches!' size='xs' />\r\n                )\r\n              ) : keywords.isError ? (\r\n                <Error\r\n                  hasIllustration={false}\r\n                  label='Oh no! Something went wrong'\r\n                  description='Failed to fetch keywords!'\r\n                  size='xs'\r\n                />\r\n              ) : keywords.isSuccess && keywords.data?.length === 0 ? (\r\n                <Empty hasIllustration={false} label='No keywords found!' size='xs' />\r\n              ) : keywords.isSuccess && keywords.data?.length > 0 ? (\r\n                keywords.data.map((keyword) => (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={String(keyword.id)}\r\n                    title={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => onSubmitQuery(query)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                [...Array(7)].map((_dummy, index) => (\r\n                  <Row key={index} id={String(index)} title='Lorem Ipsum' state='isLoading' type='isKeyword' />\r\n                ))\r\n              )}\r\n            </>\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <Display\r\n        query={submittedQuery}\r\n        mediaType={mediaType}\r\n        hasUnsubmitted={hasUnsubmitted}\r\n        totalResults={totalResults}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, useBoolean, VStack, HStack, Box, ScaleFade, SlideFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, search } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport All from './components/All';\r\nimport Form from './components/Form';\r\nimport { Keyword, InputKeyboardEvent, InputChangeEvent, TotalResults } from './types';\r\n\r\nconst Search = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n  const [submittedQuery, setSubmittedQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [hasUnsubmitted, setHasUnsubmitted] = useBoolean();\r\n\r\n  const [totalResults, setTotalResults] = useState<TotalResults>();\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', query],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: query.length > 0 }\r\n  );\r\n\r\n  // Searching movies by query\r\n  const searchMovies = useInfiniteQuery(\r\n    ['searchMovies', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'movie') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setMovies({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, movies: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching tv shows by query\r\n  const searchTV = useInfiniteQuery(\r\n    ['searchTV', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'tv') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setTV({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, tv: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching people by query\r\n  const searchPeople = useInfiniteQuery(\r\n    ['searchPeople', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'person') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setPeople({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, people: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    handleSetLocation(query, mediaType || undefined);\r\n  };\r\n\r\n  const handleSetLocation = useCallback(\r\n    (query: string, mediaType?: MediaType, page?: number): void => {\r\n      const search = { query };\r\n\r\n      if (mediaType) {\r\n        Object.assign(search, { mediaType });\r\n      }\r\n\r\n      if (page) {\r\n        Object.assign(search, { page });\r\n      }\r\n\r\n      history.push({\r\n        pathname: '/search',\r\n        search: queryString.stringify({ ...search })\r\n      });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleSubmitQuery = useCallback(\r\n    (query: string, mediaType?: MediaType): void => {\r\n      setQuery(query);\r\n      setSubmittedQuery(query);\r\n\r\n      setHasUnsubmitted.off();\r\n\r\n      searchMovies.remove();\r\n      searchTV.remove();\r\n      searchPeople.remove();\r\n\r\n      handleSetLocation(query, mediaType);\r\n    },\r\n    [\r\n      setQuery,\r\n      setSubmittedQuery,\r\n      setHasUnsubmitted,\r\n      searchMovies,\r\n      searchTV,\r\n      searchPeople,\r\n      handleSetLocation,\r\n      setMediaType\r\n    ]\r\n  );\r\n\r\n  const handleOnKeyPress = (event: InputKeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      handleSubmitQuery(query);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event: InputChangeEvent): void => {\r\n    setQuery(event.target.value);\r\n\r\n    setHasUnsubmitted.on();\r\n  };\r\n\r\n  const handleClearQuery = (): void => {\r\n    setQuery('');\r\n    setSubmittedQuery('');\r\n    setTotalResults(undefined);\r\n    setMediaType(undefined);\r\n\r\n    setHasUnsubmitted.off();\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, search];\r\n\r\n    if (submittedQuery) {\r\n      breadcrumbs.push({\r\n        label: submittedQuery,\r\n        to: { pathname: '/search', search: queryString.stringify({ query: submittedQuery }) }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'person':\r\n            breadcrumbs.push({\r\n              label: 'People',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'person' })\r\n              }\r\n            });\r\n            break;\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'tv' })\r\n              }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'movie' })\r\n              }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(undefined);\r\n    }\r\n\r\n    if (params && params.page && params.mediaType) {\r\n      const page = typeof params.page === 'string' ? params.page : 1;\r\n\r\n      if (page > 1) {\r\n        switch (params.mediaType) {\r\n          case 'person':\r\n            searchPeople.fetchNextPage();\r\n            break;\r\n          case 'tv':\r\n            searchTV.fetchNextPage();\r\n            break;\r\n          case 'movie':\r\n            searchMovies.fetchNextPage();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (params && params.query && typeof params.query === 'string' && !submittedQuery) {\r\n      handleSubmitQuery(params.query || submittedQuery || query);\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && query) {\r\n      setHasUnsubmitted.off();\r\n\r\n      setTotalResults({\r\n        movies:\r\n          searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n            ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n            : 0,\r\n        tv:\r\n          searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n            ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n            : 0,\r\n        people:\r\n          searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n            ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n            : 0\r\n      });\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      source.cancel();\r\n\r\n      handleClearQuery();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page title='Search' breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VStack width='100%' spacing={0}>\r\n              {/* Search Form */}\r\n              <Form\r\n                keywords={keywords}\r\n                query={query}\r\n                mediaType={mediaType}\r\n                submittedQuery={submittedQuery}\r\n                hasUnsubmitted={hasUnsubmitted}\r\n                totalResults={totalResults}\r\n                isInputDisabled={\r\n                  searchMovies.isFetching ||\r\n                  searchMovies.isLoading ||\r\n                  searchTV.isFetching ||\r\n                  searchTV.isLoading ||\r\n                  searchPeople.isFetching ||\r\n                  searchPeople.isLoading\r\n                }\r\n                onInputKeyPress={handleOnKeyPress}\r\n                onInputChange={handleOnChange}\r\n                onSubmitQuery={handleSubmitQuery}\r\n                onClearQuery={handleClearQuery}\r\n              />\r\n\r\n              <Box width='100%'>\r\n                <SlideFade in={!hasUnsubmitted && submittedQuery.length > 0} offsetY={100} unmountOnExit>\r\n                  {mediaType ? (\r\n                    <VerticalGrid>\r\n                      <VStack width='100%' spacing={4} px={2}>\r\n                        {mediaType === 'movie' ? (\r\n                          <VerticalMovies\r\n                            isError={searchMovies.isError}\r\n                            isSuccess={searchMovies.isSuccess}\r\n                            movies={movies?.results || []}\r\n                          />\r\n                        ) : mediaType === 'tv' ? (\r\n                          <VerticalTV\r\n                            isError={searchTV.isError}\r\n                            isSuccess={searchTV.isSuccess}\r\n                            tv={tv?.results || []}\r\n                          />\r\n                        ) : mediaType === 'person' ? (\r\n                          <VerticalPeople\r\n                            isError={searchPeople.isError}\r\n                            isSuccess={searchPeople.isSuccess}\r\n                            people={people?.results || []}\r\n                          />\r\n                        ) : undefined}\r\n\r\n                        <LoadMore\r\n                          amount={\r\n                            mediaType === 'movie'\r\n                              ? movies?.results.length || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.results.length || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.results.length || 0\r\n                              : 0\r\n                          }\r\n                          total={\r\n                            mediaType === 'movie'\r\n                              ? movies?.total_results || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.total_results || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.total_results || 0\r\n                              : 0\r\n                          }\r\n                          mediaType={`${\r\n                            mediaType === 'movie'\r\n                              ? 'Movies'\r\n                              : mediaType === 'tv'\r\n                              ? 'TV Shows'\r\n                              : mediaType === 'person'\r\n                              ? 'People'\r\n                              : ''\r\n                          } for \"${query}\"`}\r\n                          isLoading={\r\n                            mediaType === 'movie'\r\n                              ? searchMovies.isFetching || searchMovies.isLoading\r\n                              : mediaType === 'tv'\r\n                              ? searchTV.isFetching || searchTV.isLoading\r\n                              : mediaType === 'person'\r\n                              ? searchPeople.isFetching || searchPeople.isLoading\r\n                              : false\r\n                          }\r\n                          onFetch={() =>\r\n                            handleSetLocation(\r\n                              submittedQuery,\r\n                              mediaType,\r\n                              mediaType === 'movie'\r\n                                ? (movies?.page || 0) + 1\r\n                                : mediaType === 'tv'\r\n                                ? (tv?.page || 0) + 1\r\n                                : mediaType === 'person'\r\n                                ? (people?.page || 0) + 1\r\n                                : 1\r\n                            )\r\n                          }\r\n                        />\r\n                      </VStack>\r\n                    </VerticalGrid>\r\n                  ) : (\r\n                    <All query={submittedQuery} movies={searchMovies} tv={searchTV} people={searchPeople} />\r\n                  )}\r\n                </SlideFade>\r\n              </Box>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => handleSetLocation(submittedQuery, mediaType, 1)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport Page from '../../containers/Page';\r\nimport { home, trending } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useInfiniteQuery(\r\n    'trendingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'movie') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending tv shows\r\n  const trendingTV = useInfiniteQuery(\r\n    'trendingTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'tv') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending people\r\n  const trendingPeople = useInfiniteQuery(\r\n    'trendingPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'person') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleRefetch = (): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        trendingMovies.refetch();\r\n        break;\r\n      case 'tv':\r\n        trendingTV.refetch();\r\n        break;\r\n      case 'person':\r\n        trendingPeople.refetch();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => handleRefetch(), 0);\r\n  };\r\n\r\n  const handleDisabledFilters = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return !trendingMovies.isSuccess;\r\n      case 'tv':\r\n        return !trendingTV.isSuccess;\r\n      case 'person':\r\n        return !trendingPeople.isSuccess;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(undefined);\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, trending];\r\n\r\n    if (mediaType) {\r\n      switch (mediaType) {\r\n        case 'person':\r\n          breadcrumbs.push({\r\n            label: 'People',\r\n            to: { pathname: '/search/person' }\r\n          });\r\n          break;\r\n        case 'tv':\r\n          breadcrumbs.push({\r\n            label: 'TV Shows',\r\n            to: { pathname: '/search/tv' }\r\n          });\r\n          break;\r\n        case 'movie':\r\n          breadcrumbs.push({\r\n            label: 'Movies',\r\n            to: { pathname: '/search/movie' }\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      handleRefetch();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Trending'\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <Fade in={!!mediaType} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? (\r\n                  <Filters mediaType={mediaType} isDisabled={handleDisabledFilters()} onFilter={handleSetFilters} />\r\n                ) : null}\r\n              </HStack>\r\n            </Fade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {mediaType ? (\r\n                <VStack width='100%' spacing={4} px={2} pt={2}>\r\n                  {mediaType === 'movie' ? (\r\n                    <>\r\n                      <VerticalMovies\r\n                        isError={trendingMovies.isError}\r\n                        isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n                        movies={movies?.results || []}\r\n                      />\r\n\r\n                      {movies ? (\r\n                        <LoadMore\r\n                          amount={movies.results.length}\r\n                          total={movies.total_results}\r\n                          mediaType='movies'\r\n                          isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                          isError={trendingMovies.isError}\r\n                          hasNextPage={trendingMovies.hasNextPage || true}\r\n                          onFetch={trendingMovies.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : mediaType === 'tv' ? (\r\n                    <>\r\n                      <VerticalTV\r\n                        isError={trendingTV.isError}\r\n                        isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n                        tv={tv?.results || []}\r\n                      />\r\n\r\n                      {tv ? (\r\n                        <LoadMore\r\n                          amount={tv.results.length}\r\n                          total={tv.total_results}\r\n                          mediaType='tv shows'\r\n                          isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                          isError={trendingTV.isError}\r\n                          hasNextPage={trendingTV.hasNextPage || true}\r\n                          onFetch={trendingTV.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : mediaType === 'person' ? (\r\n                    <>\r\n                      <VerticalPeople\r\n                        isError={trendingPeople.isError}\r\n                        isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n                        people={people?.results || []}\r\n                      />\r\n\r\n                      {people ? (\r\n                        <LoadMore\r\n                          amount={people.results.length}\r\n                          total={people.total_results}\r\n                          mediaType='people'\r\n                          isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                          isError={trendingPeople.isError}\r\n                          hasNextPage={trendingPeople.hasNextPage || true}\r\n                          onFetch={trendingPeople.fetchNextPage}\r\n                        />\r\n                      ) : null}\r\n                    </>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty\r\n                    button={\r\n                      <MediaTypes\r\n                        mediaType={mediaType}\r\n                        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n                      />\r\n                    }\r\n                    hasIllustration={false}\r\n                    label=''\r\n                    size='xl'\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\nimport Page from '../../containers/Page';\r\nimport { home, tv } from '../../containers/Page/common/data/breadcrumbs';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 480px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const handleRenderTitle = (title: string): ReactElement => {\r\n    return (\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='TV Shows' breadcrumbs={[home, tv]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Popular TV Shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/popular' }}\r\n                  isFullWidth\r\n                  isDisabled={popularTV.isFetching || popularTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Popular TV Shows\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={popularTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('TV Shows Airing Today')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/airing-today' }}\r\n                  isFullWidth\r\n                  isDisabled={tvAiringToday.isFetching || tvAiringToday.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all TV Shows Airing Today\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}>\r\n              <HorizontalTV\r\n                isError={tvAiringToday.isError}\r\n                isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n                tv={tvAiringToday.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('TV Shows on at the moment')}\r\n              footer={\r\n                <Link to={{ pathname: '/tv/on-tv' }} isFullWidth isDisabled={onTV.isFetching || onTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={onTV.isFetching || onTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all TV Shows on at the moment\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={onTV.isFetching || onTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={onTV.isError}\r\n                isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n                tv={onTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title={handleRenderTitle('Top Rated TV Shows')}\r\n              footer={\r\n                <Link\r\n                  to={{ pathname: '/tv/top-rated' }}\r\n                  isFullWidth\r\n                  isDisabled={topRatedTV.isFetching || topRatedTV.isLoading}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    isFullWidth\r\n                    isDisabled={topRatedTV.isFetching || topRatedTV.isLoading}\r\n                    size={isSm ? 'sm' : 'md'}\r\n                    variant='text'>\r\n                    View all Top Rated TV Shows\r\n                  </Button>\r\n                </Link>\r\n              }\r\n              isLoading={topRatedTV.isFetching || topRatedTV.isLoading}>\r\n              <HorizontalTV\r\n                isError={topRatedTV.isError}\r\n                isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n                tv={topRatedTV.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      tvAiringToday.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      tvAiringToday.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows Airing Today'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Airing Today,', to: { pathname: '/tv/airing-today' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!tvAiringToday.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={tvAiringToday.isError}\r\n                isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n                  isError={tvAiringToday.isError}\r\n                  hasNextPage={tvAiringToday.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      onTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      onTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows On At The Moment'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'On At The Moment', to: { pathname: '/tv/on-tv' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!onTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={onTV.isError}\r\n                isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={onTV.isFetching || onTV.isLoading}\r\n                  isError={onTV.isError}\r\n                  hasNextPage={onTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      popularTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      popularTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Popular', to: { pathname: '/tv/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!popularTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={popularTV.isError}\r\n                isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={popularTV.isFetching || popularTV.isLoading}\r\n                  isError={popularTV.isError}\r\n                  hasNextPage={popularTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../common/hooks';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport Page from '../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      topRatedTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      topRatedTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Top Rated', to: { pathname: '/tv/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!topRatedTV.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={topRatedTV.isError}\r\n                isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              {tv ? (\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType='TV shows'\r\n                  isLoading={topRatedTV.isFetching || topRatedTV.isLoading}\r\n                  isError={topRatedTV.isError}\r\n                  hasNextPage={topRatedTV.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              ) : null}\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { useHistory, useLocation, Switch, Route } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Error from '../../../../pages/Error';\r\nimport Home from '../../../../pages/Home';\r\nimport Liked from '../../../../pages/Liked';\r\nimport Lists from '../../../../pages/Lists';\r\nimport Movies from '../../../../pages/Movies';\r\nimport MoviesNowPlaying from '../../../../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../../../../pages/Movies/Popular';\r\nimport TopRatedMovies from '../../../../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../../../../pages/Movies/Upcoming';\r\nimport People from '../../../../pages/People';\r\nimport Person from '../../../../pages/Person';\r\nimport Search from '../../../../pages/Search';\r\nimport Trending from '../../../../pages/Trending';\r\nimport TV from '../../../../pages/TV';\r\nimport TVAiringToday from '../../../../pages/TV/AiringToday';\r\nimport OnTV from '../../../../pages/TV/OnTV';\r\nimport PopularTV from '../../../../pages/TV/Popular';\r\nimport TopRatedTV from '../../../../pages/TV/TopRated';\r\n\r\nconst ComponentBox = motion(Box);\r\n\r\nconst Page = ({ children }: { children: ReactElement }): ReactElement => {\r\n  return (\r\n    <ComponentBox\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{\r\n        duration: 1,\r\n        ease: [0.76, 0, 0.24, 1]\r\n      }}>\r\n      {children}\r\n    </ComponentBox>\r\n  );\r\n};\r\n\r\nconst Routes = (): ReactElement => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  useEffect(() => {\r\n    if (!location.pathname.includes('search')) {\r\n      document.scrollingElement?.scrollTo(0, 0);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location} key={location.pathname}>\r\n        {/* Home Route */}\r\n        <Route exact path='/'>\r\n          <Page>\r\n            <Home />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Liked Routes */}\r\n        <Route exact path='/liked'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/liked/:mediaType'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Lists Routes */}\r\n        <Route exact path='/lists'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id/:mediaType'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Search Route */}\r\n        <Route exact path='/search'>\r\n          <Page>\r\n            <Search />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Trending Routes */}\r\n        <Route exact path='/trending'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/trending/:mediaType'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Movies Routes */}\r\n        <Route exact path='/movies'>\r\n          <Page>\r\n            <Movies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/popular'>\r\n          <Page>\r\n            <PopularMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/upcoming'>\r\n          <Page>\r\n            <UpcomingMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/now-playing'>\r\n          <Page>\r\n            <MoviesNowPlaying />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/top-rated'>\r\n          <Page>\r\n            <TopRatedMovies />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* TV Routes */}\r\n        <Route exact path='/tv'>\r\n          <Page>\r\n            <TV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/popular'>\r\n          <Page>\r\n            <PopularTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/airing-today'>\r\n          <Page>\r\n            <TVAiringToday />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/on-tv'>\r\n          <Page>\r\n            <OnTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/top-rated'>\r\n          <Page>\r\n            <TopRatedTV />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* People Route */}\r\n        <Route exact path='/people'>\r\n          <Page>\r\n            <People />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/person/:id'>\r\n          <Page>\r\n            <Person />\r\n          </Page>\r\n        </Route>\r\n\r\n        <Route>\r\n          <Page>\r\n            <Error\r\n              code={404}\r\n              title='Page not found!'\r\n              subtitle='Please check the URL in the address bar and try again.'\r\n              actions={\r\n                <>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => history.push({ pathname: '/' })}\r\n                    variant='outlined'>\r\n                    Go back home\r\n                  </Button>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                      return false;\r\n                    }}>\r\n                    Try again\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n          </Page>\r\n        </Route>\r\n      </Switch>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, useBoolean, Box, SlideFade } from '@chakra-ui/react';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector, useWindowSize } from '../../../../common/hooks';\r\nimport utils from '../../../../common/utils/utils';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../components/Tooltip';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst ScrollToTop = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { height } = useWindowSize();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [scrollHeight, setScrollHeight] = useState<number>(0);\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleScroll = useCallback(\r\n    _.debounce(() => {\r\n      const scroll = document?.scrollingElement?.scrollTop || 0;\r\n\r\n      if (scroll <= height) {\r\n        setIsHovering.off();\r\n      }\r\n\r\n      setScrollHeight(scroll);\r\n    }, 250),\r\n    [document, setScrollHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleScroll();\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      position='fixed'\r\n      bottom={theme.space[2]}\r\n      right={theme.space[2]}\r\n      borderRadius='lg'\r\n      boxShadow='lg'\r\n      backgroundColor='transparent'>\r\n      <SlideFade in={scrollHeight > screen.height} unmountOnExit offsetY={theme.space[2]}>\r\n        <Tooltip aria-label='Scroll to top' label='Scroll to the top' placement='left' isOpen={isHovering} gutter={6}>\r\n          <IconButton\r\n            aria-label='Scroll to top'\r\n            color={utils.handleReturnColor(color)}\r\n            icon={ArrowUpwardOutlinedIcon}\r\n            onClick={() => document.scrollingElement?.scrollTo(0, 0)}\r\n            onMouseEnter={() => setIsHovering.on()}\r\n            onMouseLeave={() => setIsHovering.off()}\r\n          />\r\n        </Tooltip>\r\n      </SlideFade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth, headerHeight } from './common/data/dimensions';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport ConfirmModal from './components/Modals/Confirm';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Routes from './components/Routes';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Sidebar from './components/Sidebar';\r\nimport { GenreResponse } from './types';\r\n\r\nconst Layout = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>(`${sidebarWidth[sidebarMode]}px`);\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return isSplashscreenOpen ? (\r\n    <SplashscreenModal />\r\n  ) : (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n      <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n        <Header width={width} left={left} />\r\n\r\n        <Box\r\n          width='100%'\r\n          maxWidth='100%'\r\n          position='relative'\r\n          top={`${headerHeight}px`}\r\n          left='0px'\r\n          sx={{ ...transition }}>\r\n          <Box width='100%' minHeight={`calc(100vh - ${headerHeight}px)`} sx={{ ...transition }}>\r\n            <Routes />\r\n          </Box>\r\n\r\n          <Footer />\r\n        </Box>\r\n\r\n        <ScrollToTop />\r\n      </Box>\r\n\r\n      <ConfirmModal />\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n\r\n      <DescriptionModal />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Layout from '../../containers/Layout';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      refetchOnReconnect: false,\r\n      retry: false\r\n    }\r\n  }\r\n});\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Layout />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nimport './index.css';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}