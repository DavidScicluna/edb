{"version":3,"file":"static/js/649.689da804.chunk.js","mappings":"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","sources":["pages/Authentication/Register/defaults.ts","pages/Authentication/Register/components/Details/components/Credentials/index.tsx","pages/Authentication/Register/components/Details/components/Info/components/Bio/index.tsx","pages/Authentication/Register/components/Details/components/Info/components/Name/index.tsx","pages/Authentication/Register/components/Details/components/Info/index.tsx","pages/Authentication/Register/components/Details/index.tsx","pages/Authentication/Register/components/Genres/components/Genres/components/Genre/index.tsx","pages/Authentication/Register/components/Genres/components/Genres/index.tsx","pages/Authentication/Register/components/Genres/index.tsx","pages/Authentication/Register/components/Profile/components/Cropper/common/utils/index.ts","pages/Authentication/Register/components/Profile/components/Cropper/components/Grid/index.tsx","pages/Authentication/Register/components/Profile/components/Cropper/components/Rotate/index.tsx","pages/Authentication/Register/components/Profile/components/Cropper/components/Zoom/index.tsx","pages/Authentication/Register/components/Profile/components/Cropper/components/Actions/index.tsx","pages/Authentication/Register/components/Profile/components/Cropper/index.tsx","pages/Authentication/Register/components/Profile/components/Avatar/index.tsx","pages/Authentication/Register/components/Profile/components/Background/index.tsx","pages/Authentication/Register/components/Profile/components/Details/index.tsx","pages/Authentication/Register/components/Profile/index.tsx","pages/Authentication/Register/validation.ts","components/Stepper/index.tsx","components/Stepper/components/StepList/common/styles/index.ts","components/Stepper/components/StepList/components/Cancel/index.tsx","components/Stepper/components/StepList/components/Step/components/Status/index.tsx","components/Stepper/components/StepList/components/Step/components/Icon/index.tsx","components/Stepper/components/StepList/components/Next/index.tsx","components/Stepper/components/StepList/components/Step/components/Description/index.tsx","components/Stepper/components/StepList/components/Step/index.tsx","components/Stepper/components/StepList/index.tsx","components/Stepper/components/StepDescription/index.tsx","components/Stepper/components/StepPanel/index.tsx","components/Stepper/components/StepPanels/index.tsx","pages/Authentication/Register/index.tsx"],"sourcesContent":["import { DetailsForm, GenresForm, CustomizationForm, ProfileForm } from './types';\n\nexport const detailsDefaultValues: DetailsForm = {\n\tusername: '',\n\tpassword: '',\n\tfirstName: '',\n\tlastName: '',\n\tbio: ''\n};\n\nexport const genresDefaultValues: GenresForm = {\n\tmovie: [],\n\ttv: []\n};\n\nexport const customizationDefaultValues: CustomizationForm = {\n\tcolor: 'light_blue',\n\tcolorMode: 'light'\n};\n\nexport const profileDefaultValues: ProfileForm = {\n\tavatar_path: '',\n\tbackground_path: ''\n};\n","import React, { ReactElement } from 'react';\nimport { Controller } from 'react-hook-form';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport { isEmpty, isNil } from 'lodash';\n\nimport Button from '../../../../../../../components/Clickable/Button';\nimport Panel from '../../../../../../../components/Panel';\nimport Password from '../../../../../components/Password';\nimport Username from '../../../../../components/Username';\nimport { detailsDefaultValues as defaultValues } from '../../../../defaults';\nimport { DetailsProps as CredentialsProps } from '../../types';\n\nconst Credentials = ({ form, color, colorMode }: CredentialsProps): ReactElement => {\n\tconst username = form.watch('username');\n\tconst password = form.watch('password');\n\n\tconst handleClear = (): void => {\n\t\tform.setValue('username', defaultValues.username, { shouldDirty: false });\n\t\tform.setValue('password', defaultValues.password, { shouldDirty: false });\n\t};\n\n\treturn (\n\t\t<Panel colorMode={colorMode} isFullWidth variant='outlined'>\n\t\t\t{{\n\t\t\t\theader: {\n\t\t\t\t\ttitle: 'Credentials',\n\t\t\t\t\tactions: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t(isNil(username) || isEmpty(username)) && (isNil(password) || isEmpty(password))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() => handleClear()}\n\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\tvariant='text'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\trender={({ field, fieldState }) => (\n\t\t\t\t\t\t\t\t<Username field={field} fieldState={fieldState} color={color} colorMode={colorMode} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\trender={({ field, fieldState }) => (\n\t\t\t\t\t\t\t\t<Password field={field} fieldState={fieldState} color={color} colorMode={colorMode} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Panel>\n\t);\n};\n\nexport default Credentials;\n","import React, { ReactElement } from 'react';\nimport { Controller } from 'react-hook-form';\n\nimport { useTheme } from '@chakra-ui/react';\n\nimport Textarea from '../../../../../../../../../components/Forms/Textarea';\nimport { Theme } from '../../../../../../../../../theme/types';\nimport { DetailsProps as BioProps } from '../../../../types';\n\nconst Bio = ({ form, color, colorMode }: BioProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\n\treturn (\n\t\t<Controller\n\t\t\tcontrol={form.control}\n\t\t\tname='bio'\n\t\t\trender={({ field: { onChange, onBlur, value, name }, fieldState: { error } }) => (\n\t\t\t\t<Textarea\n\t\t\t\t\tcolor={color}\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tlabel='Biography'\n\t\t\t\t\terror={error}\n\t\t\t\t\tname={name}\n\t\t\t\t\tplaceholder='My name is John Smith ...'\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tisFullWidth\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tsx={{ textarea: { height: theme.space[12.5] } }}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default Bio;\n","import React, { ReactElement } from 'react';\nimport { Controller } from 'react-hook-form';\n\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\n\nimport Input from '../../../../../../../../../components/Forms/Input';\nimport { DetailsProps as NameProps } from '../../../../types';\n\nconst Name = ({ form, color, colorMode }: NameProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\treturn (\n\t\t<SimpleGrid width='100%' columns={isSm ? 1 : 2} spacing={2}>\n\t\t\t<Controller\n\t\t\t\tcontrol={form.control}\n\t\t\t\tname='firstName'\n\t\t\t\trender={({ field: { onChange, onBlur, value, name }, fieldState: { error } }) => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tlabel='First name'\n\t\t\t\t\t\terror={error}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tplaceholder='John'\n\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\tisRequired\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tcontrol={form.control}\n\t\t\t\tname='lastName'\n\t\t\t\trender={({ field: { onChange, onBlur, value, name }, fieldState: { error } }) => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tlabel='Last name'\n\t\t\t\t\t\terror={error}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tplaceholder='Smith'\n\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\tisRequired\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</SimpleGrid>\n\t);\n};\n\nexport default Name;\n","import React, { ReactElement } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport { isEmpty, isNil } from 'lodash';\n\nimport Bio from './components/Bio';\nimport Name from './components/Name';\n\nimport Button from '../../../../../../../components/Clickable/Button';\nimport Panel from '../../../../../../../components/Panel';\nimport { detailsDefaultValues as defaultValues } from '../../../../defaults';\nimport { DetailsProps as InfoProps } from '../../types';\n\nconst Info = ({ form, color, colorMode }: InfoProps): ReactElement => {\n\tconst firstName = form.watch('firstName');\n\tconst lastName = form.watch('lastName');\n\tconst bio = form.watch('bio');\n\n\tconst handleClear = (): void => {\n\t\tform.setValue('firstName', defaultValues.firstName, { shouldDirty: false });\n\t\tform.setValue('lastName', defaultValues.lastName, { shouldDirty: false });\n\t\tform.setValue('bio', defaultValues.bio, { shouldDirty: false });\n\t};\n\n\treturn (\n\t\t<Panel colorMode={colorMode} isFullWidth variant='outlined'>\n\t\t\t{{\n\t\t\t\theader: {\n\t\t\t\t\ttitle: 'Information',\n\t\t\t\t\tactions: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t(isNil(firstName) || isEmpty(firstName)) &&\n\t\t\t\t\t\t\t\t(isNil(lastName) || isEmpty(lastName)) &&\n\t\t\t\t\t\t\t\t(isNil(bio) || isEmpty(bio))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() => handleClear()}\n\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\tvariant='text'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t<Name form={form} color={color} colorMode={colorMode} />\n\t\t\t\t\t\t<Bio form={form} color={color} colorMode={colorMode} />\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Panel>\n\t);\n};\n\nexport default Info;\n","import React, { ReactElement } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport Credentials from './components/Credentials';\nimport Info from './components/Info';\nimport { DetailsProps } from './types';\n\nconst Details = ({ form, ...rest }: DetailsProps): ReactElement => {\n\treturn (\n\t\t<VStack width='100%' spacing={4}>\n\t\t\t<Credentials {...rest} form={form} />\n\t\t\t<Info {...rest} form={form} />\n\t\t</VStack>\n\t);\n};\n\nexport default Details;\n","import { ReactElement } from 'react';\n\nimport { useConst } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { GenreProps } from './types';\n\nimport Button from '../../../../../../../../../components/Clickable/Button';\nimport Icon from '../../../../../../../../../components/Icon';\nimport SkeletonText from '../../../../../../../../../components/Skeleton/Text';\n\nconst dummies = range(25, 200, 5);\n\nconst Genre = (props: GenreProps): ReactElement => {\n\tconst { color, colorMode, id, name, isActive = false, isLoading = true, onClick } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Button\n\t\t\tcolor={isActive ? color : 'gray'}\n\t\t\tcolorMode={colorMode}\n\t\t\trenderRight={\n\t\t\t\tisActive ? ({ fontSize }) => <Icon icon='check' type='outlined' fontSize={fontSize} /> : undefined\n\t\t\t}\n\t\t\tonClick={onClick ? () => onClick({ id, name }) : undefined}\n\t\t\tisDisabled={isLoading}\n\t\t\tvariant='outlined'\n\t\t>\n\t\t\t<SkeletonText\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\twidth={isLoading ? `${dummy}px` : 'auto'}\n\t\t\t\tfontSize='sm'\n\t\t\t\tisLoaded={!isLoading}\n\t\t\t>\n\t\t\t\t{name || 'Genre'}\n\t\t\t</SkeletonText>\n\t\t</Button>\n\t);\n};\n\nexport default Genre;\n","import React, { ReactElement } from 'react';\nimport { Controller } from 'react-hook-form';\n\nimport { useMediaQuery, HStack, Wrap, WrapItem } from '@chakra-ui/react';\n\nimport { isEmpty, isNil, range } from 'lodash';\nimport { useElementSize } from 'usehooks-ts';\n\nimport Genre from './components/Genre';\nimport { GenresProps } from './types';\n\nimport { useSelector } from '../../../../../../../common/hooks';\nimport { Genre as GenreType } from '../../../../../../../common/types';\nimport Button from '../../../../../../../components/Clickable/Button';\nimport Divider from '../../../../../../../components/Divider';\nimport Empty from '../../../../../../../components/Empty';\nimport Panel from '../../../../../../../components/Panel';\nimport { genresDefaultValues as defaultValues } from '../../../../defaults';\n\nconst Genres = ({ color, colorMode, form, mediaType }: GenresProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst allGenres = useSelector(\n\t\t(state) => (mediaType === 'movie' ? state.options.data.genres.movie : state.options.data.genres.tv) || []\n\t);\n\tconst genres = form.watch(mediaType === 'movie' ? 'movie' : 'tv') || [];\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst handleGenreClick = (genre: GenreType): void => {\n\t\tconst type = mediaType === 'movie' ? 'movie' : 'tv';\n\n\t\tif (genres.some((activeGenre) => activeGenre.id === genre.id)) {\n\t\t\tform.setValue(\n\t\t\t\ttype,\n\t\t\t\tgenres.filter((activeGenre) => activeGenre.id !== genre.id),\n\t\t\t\t{ shouldDirty: true }\n\t\t\t);\n\t\t} else {\n\t\t\tform.setValue(type, [...genres, genre], { shouldDirty: true });\n\t\t}\n\t};\n\n\tconst handleAllClick = (): void => {\n\t\tconst type = mediaType === 'movie' ? 'movie' : 'tv';\n\n\t\tif (genres.length === allGenres.length) {\n\t\t\tform.setValue(type, [], { shouldDirty: true });\n\t\t} else {\n\t\t\tform.setValue(type, [...allGenres], {\n\t\t\t\tshouldDirty: true\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleAllLabel = (): string => {\n\t\treturn `${genres.length === allGenres.length ? 'Remove' : 'Select'} All`;\n\t};\n\n\treturn (\n\t\t<Controller\n\t\t\tcontrol={form.control}\n\t\t\tname={mediaType === 'movie' ? 'movie' : 'tv'}\n\t\t\trender={({ field: { value } }) => (\n\t\t\t\t<Panel colorMode={colorMode} isFullWidth>\n\t\t\t\t\t{{\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\ttitle: mediaType === 'movie' ? 'Movie Genres' : 'TV Show Genres',\n\t\t\t\t\t\t\tactions: (\n\t\t\t\t\t\t\t\t<HStack\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tdivider={\n\t\t\t\t\t\t\t\t\t\t<Divider colorMode={colorMode} orientation='vertical' height={`${height}px`} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\t\tisNil(allGenres) ||\n\t\t\t\t\t\t\t\t\t\t\tisEmpty(allGenres) ||\n\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0 ||\n\t\t\t\t\t\t\t\t\t\t\tvalue.length === allGenres.length\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tform.setValue(\n\t\t\t\t\t\t\t\t\t\t\t\tmediaType === 'movie' ? 'movie' : 'tv',\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValues[mediaType === 'movie' ? 'movie' : 'tv'],\n\t\t\t\t\t\t\t\t\t\t\t\t{ shouldDirty: true }\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t\tvariant='text'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\t\tisDisabled={isNil(allGenres) || isEmpty(allGenres)}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAllClick()}\n\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t\tvariant='text'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{handleAllLabel()}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: (\n\t\t\t\t\t\t\t<Wrap width='100%' spacing={isSm ? 1 : 1.5}>\n\t\t\t\t\t\t\t\t{isNil(allGenres) || isEmpty(allGenres) ? (\n\t\t\t\t\t\t\t\t\t<WrapItem width='100%'>\n\t\t\t\t\t\t\t\t\t\t<Empty\n\t\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\t\t\thasIllustration={false}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Oh no!'\n\t\t\t\t\t\t\t\t\t\t\tdescription='Failed to find any genres!'\n\t\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t\t\tvariant='transparent'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</WrapItem>\n\t\t\t\t\t\t\t\t) : !(isNil(allGenres) || isEmpty(allGenres)) ? (\n\t\t\t\t\t\t\t\t\tallGenres.map((genre) => (\n\t\t\t\t\t\t\t\t\t\t<WrapItem key={genre.id}>\n\t\t\t\t\t\t\t\t\t\t\t<Genre\n\t\t\t\t\t\t\t\t\t\t\t\t{...genre}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\t\t\t\tisActive={value.some((activeGenre) => activeGenre.id === genre.id)}\n\t\t\t\t\t\t\t\t\t\t\t\tisLoading={false}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleGenreClick}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</WrapItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\trange(0, 15).map((_dummy, index) => (\n\t\t\t\t\t\t\t\t\t\t<WrapItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<Genre color={color} colorMode={colorMode} isLoading />\n\t\t\t\t\t\t\t\t\t\t</WrapItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Wrap>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</Panel>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default Genres;\n","import React, { ReactElement } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport Genres from './components/Genres';\nimport { GenresProps } from './types';\n\nconst GenresStep = ({ form, ...rest }: GenresProps): ReactElement => {\n\treturn (\n\t\t<VStack width='100%' spacing={4}>\n\t\t\t<Genres {...rest} form={form} mediaType='movie' />\n\t\t\t<Genres {...rest} form={form} mediaType='tv' />\n\t\t</VStack>\n\t);\n};\n\nexport default GenresStep;\n","// eslint-disable-next-line import/no-unresolved\nimport { Area } from 'react-easy-crop/types';\n\nconst handleCreateImage = (url: string): Promise<HTMLImageElement> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst image = new Image();\n\t\timage.addEventListener('load', () => resolve(image));\n\t\timage.addEventListener('error', (error) => reject(error));\n\t\timage.src = url;\n\t});\n};\n\nconst handleRadianAngle = (rotation: number): number => {\n\treturn (rotation * Math.PI) / 180;\n};\n\nconst handleRotateSize = (width: number, height: number, rotation: number) => {\n\tconst radius = handleRadianAngle(rotation);\n\n\treturn {\n\t\twidth: Math.abs(Math.cos(radius) * width) + Math.abs(Math.sin(radius) * height),\n\t\theight: Math.abs(Math.sin(radius) * width) + Math.abs(Math.cos(radius) * height)\n\t};\n};\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport const handleGetImage = async (\n\timageSrc: string,\n\tpixelCrop: Area,\n\trotation = 0,\n\tflip = { horizontal: false, vertical: false }\n): Promise<string | null> => {\n\tconst image = await handleCreateImage(imageSrc);\n\tconst canvas = document.createElement('canvas');\n\tconst ctx = canvas.getContext('2d');\n\n\tif (!ctx) {\n\t\treturn null;\n\t}\n\n\tconst rotRad = handleRadianAngle(rotation);\n\n\t// calculate bounding box of the rotated image\n\tconst { width: bBoxWidth, height: bBoxHeight } = handleRotateSize(image.width, image.height, rotation);\n\n\t// set canvas size to match the bounding box\n\tcanvas.width = bBoxWidth;\n\tcanvas.height = bBoxHeight;\n\n\t// translate canvas context to a central location to allow rotating and flipping around the center\n\tctx.translate(bBoxWidth / 2, bBoxHeight / 2);\n\tctx.rotate(rotRad);\n\tctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\n\tctx.translate(-image.width / 2, -image.height / 2);\n\n\t// draw rotated image\n\tctx.drawImage(image, 0, 0);\n\n\t// croppedAreaPixels values are bounding box relative\n\t// extract the cropped image using these values\n\tconst data = ctx.getImageData(pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height);\n\n\t// set canvas width to final desired crop size - this will clear existing context\n\tcanvas.width = pixelCrop.width;\n\tcanvas.height = pixelCrop.height;\n\n\t// paste generated rotate image at the top left corner\n\tctx.putImageData(data, 0, 0);\n\n\t// As Base64 string\n\treturn canvas.toDataURL('image/jpeg');\n\n\t// As a blob\n\t// return new Promise((resolve) => {\n\t// \tcanvas.toBlob((file) => {\n\t// \t\tif (file) {\n\t// \t\t\tresolve(URL.createObjectURL(file));\n\t// \t\t}\n\t// \t}, 'image/jpeg');\n\t// });\n};\n","import React, { ReactElement } from 'react';\n\nimport { useBoolean } from '@chakra-ui/react';\n\nimport { GridProps } from './types';\n\nimport IconButton from '../../../../../../../../../components/Clickable/IconButton';\nimport Icon from '../../../../../../../../../components/Icon';\nimport Tooltip from '../../../../../../../../../components/Tooltip';\n\nconst Grid = ({ colorMode, isActive = false, onToggle }: GridProps): ReactElement => {\n\tconst [isHovering, setIsHovering] = useBoolean();\n\n\treturn (\n\t\t<Tooltip\n\t\t\taria-label={isActive ? 'Turn off Grid (Tooltip)' : 'Turn on Grid (Tooltip)'}\n\t\t\tcolorMode={colorMode}\n\t\t\tisOpen={isHovering}\n\t\t\tplacement='top'\n\t\t\tlabel={isActive ? 'Turn off Grid' : 'Turn on Grid'}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\taria-label={isActive ? 'Turn off Grid (Tooltip)' : 'Turn on Grid (Tooltip)'}\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tonClick={() => onToggle()}\n\t\t\t\tonMouseEnter={() => setIsHovering.on()}\n\t\t\t\tonMouseLeave={() => setIsHovering.off()}\n\t\t\t\tvariant='icon'\n\t\t\t>\n\t\t\t\t<Icon icon={!isActive ? 'grid_off' : 'grid_on'} type='outlined' />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport default Grid;\n","import React, { ReactElement } from 'react';\n\nimport { useBoolean, Center } from '@chakra-ui/react';\n\nimport { RotateProps } from './types';\n\nimport IconButton from '../../../../../../../../../components/Clickable/IconButton';\nimport Icon from '../../../../../../../../../components/Icon';\nimport Tooltip from '../../../../../../../../../components/Tooltip';\n\nconst Rotate = ({ colorMode, rotation, onRotation }: RotateProps): ReactElement => {\n\tconst [isHoveringLeft, setIsHoveringLeft] = useBoolean();\n\tconst [isHoveringRight, setIsHoveringRight] = useBoolean();\n\n\tconst handleRotate = (direction: 'left' | 'right'): void => {\n\t\tswitch (rotation) {\n\t\t\tcase 0:\n\t\t\tcase 360:\n\t\t\t\tonRotation(direction === 'left' ? 270 : 90);\n\t\t\t\tbreak;\n\t\t\tcase 90:\n\t\t\t\tonRotation(direction === 'left' ? 0 : 180);\n\t\t\t\tbreak;\n\t\t\tcase 180:\n\t\t\t\tonRotation(direction === 'left' ? 90 : 270);\n\t\t\t\tbreak;\n\t\t\tcase 270:\n\t\t\t\tonRotation(direction === 'left' ? 180 : 360);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<Center>\n\t\t\t<Tooltip\n\t\t\t\taria-label='Rotate Left (Tooltip)'\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tisOpen={isHoveringLeft}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel='Rotate Left'\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label='Rotate Left (Tooltip)'\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tonClick={() => handleRotate('left')}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringLeft.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringLeft.off()}\n\t\t\t\t\tvariant='icon'\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='rotate_left' type='outlined' />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label='Rotate Right (Tooltip)'\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tisOpen={isHoveringRight}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel='Rotate Right'\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label='Rotate Right (Tooltip)'\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tonClick={() => handleRotate('right')}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringRight.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringRight.off()}\n\t\t\t\t\tvariant='icon'\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='rotate_right' type='outlined' />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</Center>\n\t);\n};\n\nexport default Rotate;\n","import React, { ReactElement } from 'react';\n\nimport { useBoolean, Center } from '@chakra-ui/react';\n\nimport { ZoomProps } from './types';\n\nimport { minZoom, maxZoom } from '../..';\nimport IconButton from '../../../../../../../../../components/Clickable/IconButton';\nimport Icon from '../../../../../../../../../components/Icon';\nimport Tooltip from '../../../../../../../../../components/Tooltip';\n\nconst Zoom = ({ colorMode, zoom, onSetZoom }: ZoomProps): ReactElement => {\n\tconst [isHoveringIn, setIsHoveringIn] = useBoolean();\n\tconst [isHoveringOut, setIsHoveringOut] = useBoolean();\n\n\treturn (\n\t\t<Center>\n\t\t\t<Tooltip\n\t\t\t\taria-label='Zoom Out (Tooltip)'\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tisOpen={zoom !== minZoom && isHoveringOut}\n\t\t\t\tisDisabled={zoom === minZoom}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel='Zoom Out'\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label='Zoom Out (Tooltip)'\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tisDisabled={zoom === minZoom}\n\t\t\t\t\tonClick={() => onSetZoom(zoom - 0.25)}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringOut.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringOut.off()}\n\t\t\t\t\tvariant='icon'\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='zoom_out' type='outlined' />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label='Zoom In (Tooltip)'\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tisOpen={zoom !== maxZoom && isHoveringIn}\n\t\t\t\tisDisabled={zoom === maxZoom}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel='Zoom In'\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label='Zoom In (Tooltip)'\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tisDisabled={zoom === maxZoom}\n\t\t\t\t\tonClick={() => onSetZoom(zoom + 0.25)}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringIn.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringIn.off()}\n\t\t\t\t\tvariant='icon'\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='zoom_in' type='outlined' />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</Center>\n\t);\n};\n\nexport default Zoom;\n","import React, { ReactElement } from 'react';\n\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\n\nimport { useElementSize } from 'usehooks-ts';\n\nimport { ActionsProps } from './types';\n\nimport Button from '../../../../../../../../../components/Clickable/Button';\nimport Divider from '../../../../../../../../../components/Divider';\nimport Grid from '../Grid';\nimport Rotate from '../Rotate';\nimport Zoom from '../Zoom';\n\nconst Actions = (props: ActionsProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst { renderActions, colorMode, isActive, zoom, rotation, onToggle, onSetZoom, onRotation, onClose } = props;\n\n\treturn isSm ? (\n\t\t<VStack\n\t\t\tref={ref}\n\t\t\twidth='100%'\n\t\t\tjustifyContent='space-between'\n\t\t\tdivider={<Divider colorMode={colorMode} orientation='vertical' height={`${height}px`} />}\n\t\t\tspacing={2}\n\t\t>\n\t\t\t<HStack alignItems='center' justifyContent='center'>\n\t\t\t\t<Grid colorMode={colorMode} isActive={isActive} onToggle={onToggle} />\n\t\t\t\t<Zoom colorMode={colorMode} zoom={zoom} onSetZoom={onSetZoom} />\n\t\t\t\t<Rotate colorMode={colorMode} rotation={rotation} onRotation={onRotation} />\n\t\t\t</HStack>\n\n\t\t\t<HStack alignItems='center' justifyContent='space-between'>\n\t\t\t\t<Button colorMode={colorMode} onClick={() => onClose()} variant='outlined'>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\n\t\t\t\t{renderActions ? renderActions({}) : null}\n\t\t\t</HStack>\n\t\t</VStack>\n\t) : (\n\t\t<HStack\n\t\t\tref={ref}\n\t\t\twidth='100%'\n\t\t\tjustifyContent='space-between'\n\t\t\tdivider={<Divider colorMode={colorMode} orientation='vertical' height={`${height}px`} />}\n\t\t\tspacing={2}\n\t\t>\n\t\t\t<Button colorMode={colorMode} onClick={() => onClose()} variant='outlined'>\n\t\t\t\tCancel\n\t\t\t</Button>\n\n\t\t\t<HStack alignItems='center' justifyContent='center' flex={1}>\n\t\t\t\t<Grid colorMode={colorMode} isActive={isActive} onToggle={onToggle} />\n\t\t\t\t<Zoom colorMode={colorMode} zoom={zoom} onSetZoom={onSetZoom} />\n\t\t\t\t<Rotate colorMode={colorMode} rotation={rotation} onRotation={onRotation} />\n\t\t\t</HStack>\n\n\t\t\t{renderActions ? renderActions({}) : null}\n\t\t</HStack>\n\t);\n};\n\nexport default Actions;\n","import React, { ReactElement, useState, useCallback } from 'react';\nimport RECCropper from 'react-easy-crop';\n\n// eslint-disable-next-line import/no-unresolved\nimport { Area } from 'react-easy-crop/types';\n\nimport { useTheme, useMediaQuery, useBoolean, VStack, Center } from '@chakra-ui/react';\n\nimport { debounce } from 'lodash';\n\nimport { handleGetImage } from './common/utils';\nimport Actions from './components/Actions';\nimport { CropperProps } from './types';\n\nimport { handleReturnRatio } from '../../../../../../../common/utils';\nimport Button from '../../../../../../../components/Clickable/Button';\nimport Modal from '../../../../../../../components/Modal';\nimport { Theme } from '../../../../../../../theme/types';\n\nexport const minZoom = 1;\nexport const maxZoom = 5;\n\nconst Cropper = ({ color, colorMode, type, image, isOpen = false, onCrop, onClose }: CropperProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst [crop, setCrop] = useState({ x: 0, y: 0 });\n\tconst [rotation, setRotation] = useState<number>(0);\n\tconst [zoom, setZoom] = useState<number>(minZoom);\n\tconst [area, setArea] = useState<Area | null>(null);\n\n\tconst [isGridActive, setIsGridActive] = useBoolean();\n\n\tconst handleCropComplete = useCallback(\n\t\tdebounce((_croppedArea, croppedAreaPixels) => {\n\t\t\tsetArea(croppedAreaPixels);\n\t\t}, 500),\n\t\t[]\n\t);\n\n\tconst handleCropImage = useCallback(async () => {\n\t\tif (image && area) {\n\t\t\tconst croppedImage = await handleGetImage(image, area, rotation);\n\n\t\t\tif (croppedImage) {\n\t\t\t\tonCrop(croppedImage);\n\t\t\t\tonClose();\n\t\t\t}\n\t\t}\n\t}, [image, area, rotation]);\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={`Edit ${type}`}\n\t\t\trenderActions={({ size }) => (\n\t\t\t\t<Actions\n\t\t\t\t\trenderActions={() => (\n\t\t\t\t\t\t<Button color={color} colorMode={colorMode} onClick={() => handleCropImage()} size={size}>\n\t\t\t\t\t\t\tSave Image\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\tisActive={isGridActive}\n\t\t\t\t\tzoom={zoom}\n\t\t\t\t\trotation={rotation}\n\t\t\t\t\tonToggle={() => setIsGridActive.toggle()}\n\t\t\t\t\tonSetZoom={setZoom}\n\t\t\t\t\tonRotation={setRotation}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\tcolorMode={colorMode}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\thasCancel={false}\n\t\t\tisCentered\n\t\t\tsize='3xl'\n\t\t>\n\t\t\t<VStack width='100%' spacing={2} p={2}>\n\t\t\t\t<Center width='100%' height='50vh' position='relative' borderRadius='lg' overflow='hidden'>\n\t\t\t\t\t<RECCropper\n\t\t\t\t\t\timage={image}\n\t\t\t\t\t\tcrop={crop}\n\t\t\t\t\t\trotation={rotation}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\taspect={type === 'avatar' ? handleReturnRatio(isSm ? 'square' : 'portrait') : 18 / 5} // TODO: Update when background is updated\n\t\t\t\t\t\tcropShape={type === 'avatar' ? 'round' : 'rect'}\n\t\t\t\t\t\tshowGrid={isGridActive}\n\t\t\t\t\t\tonRotationChange={setRotation}\n\t\t\t\t\t\tonCropChange={setCrop}\n\t\t\t\t\t\tonCropComplete={handleCropComplete}\n\t\t\t\t\t\tonZoomChange={setZoom}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcropAreaStyle: {\n\t\t\t\t\t\t\t\tborderWidth: '2px',\n\t\t\t\t\t\t\t\tborderStyle: 'solid',\n\t\t\t\t\t\t\t\tborderColor: theme.colors.gray[colorMode === 'light' ? 200 : 700],\n\t\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.75)'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Center>\n\t\t\t</VStack>\n\t\t</Modal>\n\t);\n};\n\nexport default Cropper;\n","import React, { ReactElement, ChangeEvent, useRef, useState } from 'react';\n\nimport { useMediaQuery, useDisclosure, Center, Image } from '@chakra-ui/react';\n\nimport Compressor from 'compressorjs';\n\nimport { AvatarProps } from './types';\n\nimport * as fallback from '../../../../../../../common/assets/fallback';\nimport { handleReturnRatio } from '../../../../../../../common/utils';\nimport ClickableImage from '../../../../../../../components/Clickable/Image';\nimport Icon from '../../../../../../../components/Icon';\nimport Cropper from '../Cropper';\n\nconst Avatar = ({ color, colorMode, alt, form, avatar }: AvatarProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst [isMd] = useMediaQuery('(max-width: 860px)');\n\tconst [isLg] = useMediaQuery('(min-width: 1280px)');\n\n\tconst { isOpen: isCropperOpen, onOpen: onOpenCropper, onClose: onCloseCropper } = useDisclosure();\n\n\tconst fileInputRef = useRef<HTMLInputElement | null>(null);\n\n\tconst [image, setImage] = useState<string>('');\n\n\tconst border = isSm ? 0 : isMd ? 4 : isLg ? 6 : 5;\n\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.files) {\n\t\t\tnew Compressor(event.target.files[0], {\n\t\t\t\tstrict: true,\n\t\t\t\tcheckOrientation: true,\n\t\t\t\tquality: 0.6,\n\t\t\t\tresize: 'cover',\n\t\t\t\tsuccess: (file) => {\n\t\t\t\t\tconst blob = new Blob([file], { type: file.type });\n\n\t\t\t\t\tsetImage(URL.createObjectURL(blob));\n\t\t\t\t\tonOpenCropper();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Center\n\t\t\t\twidth={isSm ? '100%' : isMd ? 150 : isLg ? 250 : 200}\n\t\t\t\tposition={isSm ? 'relative' : 'absolute'}\n\t\t\t\tbottom={isSm ? 0 : `calc(5% - ${border}px)`}\n\t\t\t\tleft={isSm ? 0 : `calc(2% - ${border}px)`}\n\t\t\t\tzIndex={1}\n\t\t\t\tborderWidth={`${border}px`}\n\t\t\t\tborderStyle='solid'\n\t\t\t\tborderColor={`gray.${colorMode === 'light' ? 50 : 900}`}\n\t\t\t\tborderRadius='lg'\n\t\t\t\toverflow='hidden'\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={fileInputRef}\n\t\t\t\t\ttype='file'\n\t\t\t\t\tonChange={(event) => handleChange(event)}\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\tvalue=''\n\t\t\t\t/>\n\t\t\t\t<ClickableImage\n\t\t\t\t\tratio={handleReturnRatio(isSm ? 'square' : 'portrait')}\n\t\t\t\t\trenderIcon={({ color, fontSize }) => (\n\t\t\t\t\t\t<Icon icon='upload_file' type='outlined' color={color} fontSize={fontSize} />\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t\t\tfileInputRef.current?.click();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\talt={`${alt} Avatar`}\n\t\t\t\t\t\twidth='inherit'\n\t\t\t\t\t\theight='inherit'\n\t\t\t\t\t\tsrc={avatar || ''}\n\t\t\t\t\t\tfallbackSrc={colorMode === 'light' ? fallback.default.light : fallback.default.dark}\n\t\t\t\t\t/>\n\t\t\t\t</ClickableImage>\n\t\t\t</Center>\n\n\t\t\t<Cropper\n\t\t\t\tcolor={color}\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\ttype='avatar'\n\t\t\t\timage={image}\n\t\t\t\tisOpen={isCropperOpen}\n\t\t\t\tonCrop={(image) => form.setValue('avatar_path', image, { shouldDirty: true })}\n\t\t\t\tonClose={onCloseCropper}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default Avatar;\n","import React, { ReactElement, ChangeEvent, useRef, useState } from 'react';\n\nimport { useDisclosure, Box, Image } from '@chakra-ui/react';\n\nimport Compressor from 'compressorjs';\n\nimport { BackgroundProps } from './types';\n\nimport * as fallback from '../../../../../../../common/assets/fallback';\nimport ClickableImage from '../../../../../../../components/Clickable/Image';\nimport Icon from '../../../../../../../components/Icon';\nimport Cropper from '../Cropper';\n\nconst Background = ({ color, colorMode, alt, form, background }: BackgroundProps): ReactElement => {\n\tconst { isOpen: isCropperOpen, onOpen: onOpenCropper, onClose: onCloseCropper } = useDisclosure();\n\n\tconst fileInputRef = useRef<HTMLInputElement | null>(null);\n\n\tconst [image, setImage] = useState<string>('');\n\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.files) {\n\t\t\tnew Compressor(event.target.files[0], {\n\t\t\t\tstrict: true,\n\t\t\t\tcheckOrientation: true,\n\t\t\t\tquality: 0.6,\n\t\t\t\tresize: 'cover',\n\t\t\t\tsuccess: (file) => {\n\t\t\t\t\tconst blob = new Blob([file], { type: file.type });\n\n\t\t\t\t\tsetImage(URL.createObjectURL(blob));\n\t\t\t\t\tonOpenCropper();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Box width='inherit' height='inherit'>\n\t\t\t\t<input\n\t\t\t\t\tref={fileInputRef}\n\t\t\t\t\ttype='file'\n\t\t\t\t\tonChange={(event) => handleChange(event)}\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\tvalue=''\n\t\t\t\t/>\n\t\t\t\t<ClickableImage\n\t\t\t\t\tborderRadius='none'\n\t\t\t\t\tratio={20 / 5}\n\t\t\t\t\trenderIcon={({ color, fontSize }) => (\n\t\t\t\t\t\t<Icon icon='upload_file' type='outlined' color={color} fontSize={fontSize} />\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tfileInputRef.current?.click();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\talt={`${alt} Background`}\n\t\t\t\t\t\twidth='inherit'\n\t\t\t\t\t\theight='inherit'\n\t\t\t\t\t\tobjectFit='cover'\n\t\t\t\t\t\tborderRadius='none'\n\t\t\t\t\t\tsrc={background || ''}\n\t\t\t\t\t\tfallbackSrc={colorMode === 'light' ? fallback.default.light : fallback.default.dark}\n\t\t\t\t\t/>\n\t\t\t\t</ClickableImage>\n\t\t\t</Box>\n\n\t\t\t<Cropper\n\t\t\t\tcolor={color}\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\ttype='background'\n\t\t\t\timage={image}\n\t\t\t\tisOpen={isCropperOpen}\n\t\t\t\tonCrop={(image) => form.setValue('background_path', image, { shouldDirty: true })}\n\t\t\t\tonClose={onCloseCropper}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default Background;\n","import React, { ReactElement } from 'react';\n\nimport { useMediaQuery, Stack, VStack, Center, Text } from '@chakra-ui/react';\n\nimport { compact, isEmpty, isNil } from 'lodash';\nimport { useElementSize } from 'usehooks-ts';\n\nimport { DetailsProps } from './types';\n\nimport Button from '../../../../../../../components/Clickable/Button';\nimport Icon from '../../../../../../../components/Icon';\nimport Skeleton from '../../../../../../../components/Skeleton';\nimport SkeletonText from '../../../../../../../components/Skeleton/Text';\n\nconst Details = ({ colorMode, user }: DetailsProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst [isMd] = useMediaQuery('(max-width: 860px)');\n\tconst [isLg] = useMediaQuery('(min-width: 1280px)');\n\n\tconst [buttonRef, { width: buttonWidth }] = useElementSize();\n\n\tconst hasUsername = !(isNil(user.username) || isEmpty(user.username));\n\tconst hasFirstName = !(isNil(user.firstName) || isEmpty(user.firstName));\n\tconst hasLastName = !(isNil(user.lastName) || isEmpty(user.lastName));\n\n\treturn (\n\t\t<Stack\n\t\t\twidth={`calc(99% - ${isSm ? 0 : isMd ? 150 + 4 : isLg ? 250 + 6 : 200 + 5}px)`}\n\t\t\talignItems={isSm ? 'flex-start' : 'center'}\n\t\t\tjustifyContent='space-between'\n\t\t\tdirection={isSm ? 'column' : 'row'}\n\t\t\tspacing={isSm ? 4 : 2}\n\t\t\tp={!isSm ? 4 : 0}\n\t\t>\n\t\t\t<VStack\n\t\t\t\twidth={`calc(100% - ${!isSm ? buttonWidth + 16 : 0}px)`}\n\t\t\t\talignItems='flex-start'\n\t\t\t\tspacing={!(hasFirstName || hasLastName || hasUsername) ? 1 : 0}\n\t\t\t>\n\t\t\t\t<SkeletonText colorMode={colorMode} fontSize='4xl' isLoaded={hasFirstName || hasLastName} speed={0}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\tfontSize='4xl'\n\t\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{!hasFirstName && !hasLastName\n\t\t\t\t\t\t\t? 'First Last Name '\n\t\t\t\t\t\t\t: compact([hasFirstName ? user.firstName : null, hasLastName ? user.lastName : null]).join(\n\t\t\t\t\t\t\t\t\t' '\n\t\t\t\t\t\t\t  )}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t\t<SkeletonText colorMode={colorMode} fontSize='md' isLoaded={hasUsername} speed={0}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tfontSize='md'\n\t\t\t\t\t\tfontWeight='medium'\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{hasUsername ? `@${user.username}` : 'User @Username'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t</VStack>\n\n\t\t\t<Center ref={buttonRef}>\n\t\t\t\t<Skeleton colorMode={colorMode} isLoaded={false} speed={0}>\n\t\t\t\t\t<Button renderLeft={() => <Icon icon='edit' type='outlined' />} isDisabled variant='outlined'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Button>\n\t\t\t\t</Skeleton>\n\t\t\t</Center>\n\t\t</Stack>\n\t);\n};\n\nexport default Details;\n","import React, { ReactElement } from 'react';\n\nimport { useTheme, useMediaQuery, VStack } from '@chakra-ui/react';\n\nimport { useEffectOnce } from 'usehooks-ts';\n\nimport Avatar from './components/Avatar';\nimport Background from './components/Background';\nimport Details from './components/Details';\nimport { ProfileProps } from './types';\n\nimport { handleReturnBoringSrc } from '../../../../../common/utils';\nimport { Theme } from '../../../../../theme/types';\n\n// TODO: Use Profile component with edit mode on\n\nconst Profile = (props: ProfileProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst { id, form, user, color, colorMode, onChange } = props;\n\n\tconst background = form.watch('background_path');\n\tconst avatar = form.watch('avatar_path');\n\n\tconst alt = `${user.firstName} ${user.lastName} (@${user.username})`;\n\n\tuseEffectOnce(() => {\n\t\tform.setValue(\n\t\t\t'background_path',\n\t\t\thandleReturnBoringSrc(theme, 'sunset', colorMode === 'light' ? 500 : 400, id),\n\t\t\t{\n\t\t\t\tshouldDirty: true\n\t\t\t}\n\t\t);\n\n\t\tform.setValue('avatar_path', handleReturnBoringSrc(theme, 'beam', colorMode === 'light' ? 500 : 400, id), {\n\t\t\tshouldDirty: true\n\t\t});\n\n\t\tonChange();\n\t});\n\n\treturn (\n\t\t<VStack\n\t\t\twidth='100%'\n\t\t\theight='auto'\n\t\t\talignItems='flex-end'\n\t\t\tposition='relative'\n\t\t\tborderWidth='2px'\n\t\t\tborderStyle='solid'\n\t\t\tborderColor={`gray.${colorMode === 'light' ? 200 : 700}`}\n\t\t\tborderRadius='lg'\n\t\t\toverflow='hidden'\n\t\t\tspacing={isSm ? 4 : 0}\n\t\t\tp={isSm ? 2 : 0}\n\t\t>\n\t\t\t{!isSm ? (\n\t\t\t\t<Background color={color} colorMode={colorMode} alt={alt} form={form} background={background} />\n\t\t\t) : null}\n\n\t\t\t<Avatar color={color} colorMode={colorMode} alt={alt} form={form} avatar={avatar} />\n\n\t\t\t<Details colorMode={colorMode} user={user} />\n\t\t</VStack>\n\t);\n};\n\nexport default Profile;\n","import * as yup from 'yup';\n\nexport const detailsSchema = yup.object().shape({\n\tusername: yup\n\t\t.string()\n\t\t.required()\n\t\t.matches(/^[a-z0-9_-]+$/, 'Must be only in lowercase!')\n\t\t.max(20, 'Cannot exceed 20 chars!')\n\t\t.label('Username'),\n\tpassword: yup\n\t\t.string()\n\t\t.required()\n\t\t.matches(\n\t\t\t/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n\t\t\t'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character!'\n\t\t)\n\t\t.max(30, 'Cannot exceed 30 chars!')\n\t\t.label('Password'),\n\tfirstName: yup.string().required().max(30, 'cannot exceed 30 chars!').label('First name'),\n\tlastName: yup.string().required().max(30, 'cannot exceed 30 chars!').label('Last name'),\n\tbio: yup.string().label('Biography')\n});\n","import React, { ReactElement, createContext, forwardRef } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport { StepperContext as StepperContextType, StepperRef, StepperProps } from './types';\n\nexport const StepperContext = createContext<StepperContextType>({\n\tactiveStep: 0,\n\tcolor: 'blue',\n\tcolorMode: 'light',\n\tonChange: () => undefined,\n\tonCancel: () => undefined,\n\tonSubmit: () => undefined\n});\n\nconst Stepper = forwardRef<StepperRef, StepperProps>(function Stepper(props, ref): ReactElement {\n\tconst { children, activeStep = 0, color, colorMode, onChange, onCancel, onSubmit, ...rest } = props;\n\n\treturn (\n\t\t<VStack {...rest} ref={ref} width='100%' maxWidth='100%' spacing={0}>\n\t\t\t<StepperContext.Provider value={{ activeStep, color, colorMode, onChange, onCancel, onSubmit }}>\n\t\t\t\t{children}\n\t\t\t</StepperContext.Provider>\n\t\t</VStack>\n\t);\n});\n\nexport default Stepper;\n","import { height } from '../..';\nimport { Style } from '../../../../../../common/types';\nimport { Theme } from '../../../../../../theme/types';\nimport { StepProps, Status } from '../../components/Step/types';\n\ntype StatusStyle = { [key in Status]: Style };\n\ntype TabStyle = {\n\tstep: Style;\n\tdisabled: Style;\n\tlight: StatusStyle;\n\tdark: StatusStyle;\n};\n\ntype StyleTabsProps = {\n\tcolor: StepProps['color'];\n};\n\nexport default (theme: Theme, { color }: StyleTabsProps): TabStyle => ({\n\tstep: {\n\t\t'cursor': 'pointer',\n\n\t\t'height': height,\n\n\t\t'userSelect': 'none',\n\t\t'willChange': 'auto',\n\n\t\t'opacity': 1,\n\n\t\t'borderRadius': 'none',\n\t\t'borderBottomWidth': '2px',\n\t\t'borderBottomStyle': 'solid',\n\n\t\t'WebkitTapHighlightColor': 'transparent',\n\n\t\t'px': 2,\n\t\t'py': 1,\n\n\t\t'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']} !important`,\n\n\t\t'&:focus': {\n\t\t\tboxShadow: 'none'\n\t\t},\n\n\t\t'& .edb-icon': {\n\t\t\ttransition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']} !important`\n\t\t}\n\t},\n\tdisabled: {\n\t\tcursor: 'not-allowed',\n\t\tpointerEvents: 'none',\n\n\t\topacity: 0.5\n\t},\n\tlight: {\n\t\tidle: {\n\t\t\t'backgroundColor': 'gray.50',\n\t\t\t'borderBottomColor': 'gray.200',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.100',\n\t\t\t\tborderBottomColor: 'gray.200'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.200',\n\t\t\t\tborderBottomColor: 'gray.200'\n\t\t\t}\n\t\t},\n\t\tsuccess: {\n\t\t\t'backgroundColor': 'gray.50',\n\t\t\t'borderBottomColor': 'green.500',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.100',\n\t\t\t\tborderBottomColor: 'green.500'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.200',\n\t\t\t\tborderBottomColor: 'green.500'\n\t\t\t}\n\t\t},\n\t\terror: {\n\t\t\t'backgroundColor': 'gray.50',\n\t\t\t'borderBottomColor': 'red.500',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.100',\n\t\t\t\tborderBottomColor: 'red.500'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.200',\n\t\t\t\tborderBottomColor: 'red.500'\n\t\t\t}\n\t\t},\n\t\twarning: {\n\t\t\t'backgroundColor': 'gray.50',\n\t\t\t'borderBottomColor': 'yellow.500',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.100',\n\t\t\t\tborderBottomColor: 'yellow.500'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.200',\n\t\t\t\tborderBottomColor: 'yellow.500'\n\t\t\t}\n\t\t},\n\t\tactive: {\n\t\t\t'backgroundColor': 'gray.50',\n\t\t\t'borderBottomColor': `${color}.500`,\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.100',\n\t\t\t\tborderBottomColor: `${color}.500`\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.200',\n\t\t\t\tborderBottomColor: `${color}.500`\n\t\t\t}\n\t\t}\n\t},\n\tdark: {\n\t\tidle: {\n\t\t\t'backgroundColor': 'gray.900',\n\t\t\t'borderBottomColor': 'gray.700',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.800',\n\t\t\t\tborderBottomColor: 'gray.700'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\tborderBottomColor: 'gray.700'\n\t\t\t}\n\t\t},\n\t\tsuccess: {\n\t\t\t'backgroundColor': 'gray.900',\n\t\t\t'borderBottomColor': 'green.400',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.800',\n\t\t\t\tborderBottomColor: 'green.400'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\tborderBottomColor: 'green.400'\n\t\t\t}\n\t\t},\n\t\terror: {\n\t\t\t'backgroundColor': 'gray.900',\n\t\t\t'borderBottomColor': 'red.400',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.800',\n\t\t\t\tborderBottomColor: 'red.400'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\tborderBottomColor: 'red.400'\n\t\t\t}\n\t\t},\n\t\twarning: {\n\t\t\t'backgroundColor': 'gray.900',\n\t\t\t'borderBottomColor': 'yellow.400',\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.800',\n\t\t\t\tborderBottomColor: 'yellow.400'\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\tborderBottomColor: 'yellow.400'\n\t\t\t}\n\t\t},\n\t\tactive: {\n\t\t\t'backgroundColor': 'gray.900',\n\t\t\t'borderBottomColor': `${color}.400`,\n\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: 'gray.800',\n\t\t\t\tborderBottomColor: `${color}.400`\n\t\t\t},\n\n\t\t\t'&:active': {\n\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\tborderBottomColor: `${color}.400`\n\t\t\t}\n\t\t}\n\t}\n});\n","import React, { ReactElement } from 'react';\n\nimport { useTheme, useMediaQuery, Center } from '@chakra-ui/react';\n\nimport { merge } from 'lodash';\n\nimport { CancelProps } from './types';\n\nimport { height } from '../..';\nimport { Theme } from '../../../../../../theme/types';\nimport Icon from '../../../../../Icon';\nimport useStyles from '../../common/styles';\n\nconst Cancel = (props: CancelProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst { color, colorMode, isDisabled = false, onCancel } = props;\n\n\tconst style = useStyles(theme, { color });\n\n\treturn (\n\t\t<Center\n\t\t\taria-disabled={isDisabled}\n\t\t\twidth={isSm ? '50%' : height}\n\t\t\tonClick={onCancel ? () => onCancel() : undefined}\n\t\t\tsx={{\n\t\t\t\t...merge(\n\t\t\t\t\tstyle.step,\n\t\t\t\t\tstyle[colorMode].idle,\n\t\t\t\t\t!isSm\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tborderRightWidth: '2px',\n\t\t\t\t\t\t\t\tborderRightStyle: 'solid',\n\t\t\t\t\t\t\t\tborderRightColor: `gray.${colorMode === 'light' ? 200 : 700}`\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}\n\t\t\t\t)\n\t\t\t}}\n\t\t\t_disabled={{ ...merge(style.disabled) }}\n\t\t>\n\t\t\t<Icon icon='close' type='outlined' color={`gray.${colorMode === 'light' ? 900 : 50}`} fontSize='3xl' />\n\t\t</Center>\n\t);\n};\n\nexport default Cancel;\n","import React, { ReactElement } from 'react';\n\nimport { Text } from '@chakra-ui/react';\n\nimport { StatusProps } from './types';\n\nimport { Color } from '../../../../../../../../theme/types';\n\nexport const handleReturnColor = (status: StatusProps['status'], color: StatusProps['color']): keyof Color => {\n\tswitch (status) {\n\t\tcase 'success':\n\t\t\treturn 'green';\n\t\tcase 'error':\n\t\t\treturn 'red';\n\t\tcase 'active':\n\t\t\treturn color;\n\t\tcase 'warning':\n\t\t\treturn 'yellow';\n\t\tdefault:\n\t\t\treturn 'gray';\n\t}\n};\n\nconst Status = ({ color, colorMode, status }: StatusProps): ReactElement => {\n\tconst handleReturnLabel = (): string => {\n\t\tswitch (status) {\n\t\t\tcase 'success':\n\t\t\t\treturn 'complete';\n\t\t\tcase 'error':\n\t\t\t\treturn 'error';\n\t\t\tcase 'active':\n\t\t\t\treturn 'current';\n\t\t\tcase 'warning':\n\t\t\t\treturn 'incomplete';\n\t\t\tdefault:\n\t\t\t\treturn 'not done yet';\n\t\t}\n\t};\n\n\treturn (\n\t\t<Text\n\t\t\talign='left'\n\t\t\tcolor={`${handleReturnColor(status, color)}.${colorMode === 'light' ? 500 : 400}`}\n\t\t\tfontSize='xs'\n\t\t\tfontWeight='semibold'\n\t\t\tlineHeight='normal'\n\t\t\ttextTransform='uppercase'\n\t\t\tisTruncated\n\t\t\toverflow='hidden'\n\t\t\twhiteSpace='nowrap'\n\t\t>\n\t\t\t{handleReturnLabel()}\n\t\t</Text>\n\t);\n};\n\nexport default Status;\n","import React, { ReactElement, forwardRef } from 'react';\n\nimport { Center } from '@chakra-ui/react';\n\nimport { StepIconRef, StepIconProps } from './types';\n\nimport Icon from '../../../../../../../Icon';\nimport { Icon as IconType } from '../../../../../../../Icon/types';\nimport { Status } from '../../types';\nimport { handleReturnColor } from '../Status';\n\nexport const handleReturnIcon = (status: Status): IconType => {\n\tswitch (status) {\n\t\tcase 'error':\n\t\t\treturn 'error_outline';\n\t\tcase 'warning':\n\t\t\treturn 'warning_amber';\n\t\tdefault:\n\t\t\treturn 'done';\n\t}\n};\n\nconst StepIcon = forwardRef<StepIconRef, StepIconProps>(function StepIcon(props, ref): ReactElement {\n\tconst { color, colorMode, status } = props;\n\n\treturn (\n\t\t<Center ref={ref} height='100%'>\n\t\t\t<Icon\n\t\t\t\ticon={handleReturnIcon(status)}\n\t\t\t\ttype='outlined'\n\t\t\t\tcolor={`${handleReturnColor(status, color)}.${colorMode === 'light' ? 500 : 400}`}\n\t\t\t\tfontSize='3xl'\n\t\t\t/>\n\t\t</Center>\n\t);\n});\n\nexport default StepIcon;\n","import React, { ReactElement } from 'react';\n\nimport { useTheme, useMediaQuery, Center } from '@chakra-ui/react';\n\nimport { merge } from 'lodash';\n\nimport { NextProps } from './types';\n\nimport { height } from '../..';\nimport { Theme } from '../../../../../../theme/types';\nimport Icon from '../../../../../Icon';\nimport useStyles from '../../common/styles';\nimport { handleReturnIcon } from '../Step/components/Icon';\nimport { handleReturnColor } from '../Step/components/Status';\n\nconst Next = (props: NextProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst {\n\t\tcolor,\n\t\tcolorMode,\n\t\tisDisabled = false,\n\t\tisLast = false,\n\t\thasErrors = false,\n\t\thasWarnings = false,\n\t\thasIdle = false,\n\t\tonNext\n\t} = props;\n\n\tconst style = useStyles(theme, { color });\n\n\treturn (\n\t\t<Center\n\t\t\taria-disabled={isDisabled}\n\t\t\twidth={isSm ? '50%' : height}\n\t\t\tonClick={onNext ? () => onNext() : undefined}\n\t\t\tsx={{\n\t\t\t\t...merge(\n\t\t\t\t\tstyle.step,\n\t\t\t\t\tstyle[colorMode].idle,\n\t\t\t\t\t!isSm\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tborderLeftWidth: '2px',\n\t\t\t\t\t\t\t\tborderLeftStyle: 'solid',\n\t\t\t\t\t\t\t\tborderLeftColor: `gray.${colorMode === 'light' ? 200 : 700}`\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}\n\t\t\t\t)\n\t\t\t}}\n\t\t\t_disabled={{ ...merge(style.disabled) }}\n\t\t>\n\t\t\t<Icon\n\t\t\t\ticon={\n\t\t\t\t\tisLast\n\t\t\t\t\t\t? hasErrors\n\t\t\t\t\t\t\t? handleReturnIcon('error')\n\t\t\t\t\t\t\t: hasWarnings || hasIdle\n\t\t\t\t\t\t\t? handleReturnIcon('warning')\n\t\t\t\t\t\t\t: 'check'\n\t\t\t\t\t\t: 'east'\n\t\t\t\t}\n\t\t\t\ttype='outlined'\n\t\t\t\tcolor={\n\t\t\t\t\tisLast && hasErrors\n\t\t\t\t\t\t? `${handleReturnColor('error', color)}.${colorMode === 'light' ? 500 : 400}`\n\t\t\t\t\t\t: isLast && hasWarnings\n\t\t\t\t\t\t? `${handleReturnColor('warning', color)}.${colorMode === 'light' ? 500 : 400}`\n\t\t\t\t\t\t: `gray.${colorMode === 'light' ? 900 : 50}`\n\t\t\t\t}\n\t\t\t\tfontSize='3xl'\n\t\t\t/>\n\t\t</Center>\n\t);\n};\n\nexport default Next;\n","import React, { ReactElement } from 'react';\n\nimport { VStack, Text } from '@chakra-ui/react';\n\nimport { DescriptionProps } from './types';\n\nconst Description = ({ colorMode, index, title, subtitle }: DescriptionProps): ReactElement => {\n\treturn (\n\t\t<VStack width='100%' alignItems='inherit' spacing={0.5}>\n\t\t\t<Text\n\t\t\t\twidth='100%'\n\t\t\t\talign='left'\n\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\tfontSize='2xl'\n\t\t\t\tfontWeight='bold'\n\t\t\t\tlineHeight='normal'\n\t\t\t\tisTruncated\n\t\t\t\toverflow='hidden'\n\t\t\t\twhiteSpace='nowrap'\n\t\t\t>\n\t\t\t\t{`${index + 1}. ${title}`}\n\t\t\t</Text>\n\t\t\t{subtitle ? (\n\t\t\t\t<Text\n\t\t\t\t\twidth='100%'\n\t\t\t\t\talign='left'\n\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\tfontSize='sm'\n\t\t\t\t\tlineHeight='normal'\n\t\t\t\t\tisTruncated\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t>\n\t\t\t\t\t{subtitle}\n\t\t\t\t</Text>\n\t\t\t) : null}\n\t\t</VStack>\n\t);\n};\n\nexport default Description;\n","import React, { ReactElement } from 'react';\n\nimport { useTheme, HStack, VStack, Fade } from '@chakra-ui/react';\n\nimport { merge } from 'lodash';\nimport { useElementSize } from 'usehooks-ts';\n\nimport Description from './components/Description';\nimport Icon from './components/Icon';\nimport Status from './components/Status';\nimport { StepProps } from './types';\n\nimport { Theme } from '../../../../../../theme/types';\nimport useStyles from '../../common/styles';\n\nconst Step = (props: StepProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\n\tconst [ref, { width }] = useElementSize();\n\n\tconst { color, colorMode, index, title, subtitle, status = 'idle', isDisabled = false, onClick } = props;\n\n\tconst style = useStyles(theme, { color });\n\n\treturn (\n\t\t<HStack\n\t\t\taria-disabled={isDisabled}\n\t\t\twidth='100%'\n\t\t\tminWidth='350px'\n\t\t\tmaxWidth='350px'\n\t\t\talignItems='flex-start'\n\t\t\tjustifyContent='center'\n\t\t\tonClick={() => onClick()}\n\t\t\tspacing={4}\n\t\t\tsx={{ ...merge(style.step, style[colorMode][status], { px: 3 }) }}\n\t\t\t_disabled={{ ...merge(style.disabled) }}\n\t\t>\n\t\t\t<VStack\n\t\t\t\twidth={`calc(100% - ${status !== 'idle' && status !== 'active' ? width + 32 : 0}px)`}\n\t\t\t\theight='100%'\n\t\t\t\talignItems='inherit'\n\t\t\t\tjustifyContent='inherit'\n\t\t\t\tspacing={0.5}\n\t\t\t>\n\t\t\t\t<Status color={color} colorMode={colorMode} status={status} />\n\t\t\t\t<Description colorMode={colorMode} index={index} title={title} subtitle={subtitle} />\n\t\t\t</VStack>\n\n\t\t\t{status !== 'idle' && status !== 'active' ? (\n\t\t\t\t<Fade in unmountOnExit style={{ height: '100%' }}>\n\t\t\t\t\t<Icon ref={ref} color={color} colorMode={colorMode} status={status} />\n\t\t\t\t</Fade>\n\t\t\t) : null}\n\t\t</HStack>\n\t);\n};\n\nexport default Step;\n","import React, { ReactElement, useContext, useCallback } from 'react';\n\nimport { useMediaQuery, Stack, HStack, Center } from '@chakra-ui/react';\n\nimport Cancel from './components/Cancel';\nimport Next from './components/Next';\nimport Step from './components/Step';\nimport { Status } from './components/Step/types';\nimport { StepListProps, Step as StepType } from './types';\n\nimport { StepperContext } from '../../.';\nimport Divider from '../../../Divider';\nimport HorizontalScroll from '../../../HorizontalScroll';\nimport { StepperContext as StepperContextType } from '../../types';\n\nexport const height = '100px';\n\nconst StepList = ({ children = [] }: StepListProps): ReactElement => {\n\tconst {\n\t\tactiveStep = 0,\n\t\tcolor,\n\t\tcolorMode,\n\t\tonChange,\n\t\tonCancel,\n\t\tonSubmit\n\t} = useContext<StepperContextType>(StepperContext);\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst hasErrors: boolean = children.some((step) => step.status === 'error');\n\tconst hasWarnings: boolean = children.some((step) => step.status === 'warning');\n\tconst hasIdle: boolean = children.some((step) => step.status === 'idle');\n\n\tconst handleNext = (): void => {\n\t\tif (activeStep === children.length - 1) {\n\t\t\tif (hasErrors) {\n\t\t\t\tonChange(children.findIndex((step) => step.status === 'error'));\n\t\t\t} else if (hasWarnings) {\n\t\t\t\tonChange(children.findIndex((step) => step.status === 'warning'));\n\t\t\t} else if (hasIdle) {\n\t\t\t\tonChange(children.findIndex((step) => step.status === 'idle'));\n\t\t\t} else {\n\t\t\t\tonSubmit();\n\t\t\t}\n\t\t} else {\n\t\t\tonChange(activeStep + 1);\n\t\t}\n\t};\n\n\tconst handleChange = (index: number): void => {\n\t\tif (onChange && activeStep !== index) {\n\t\t\tonChange(index);\n\t\t}\n\t};\n\n\tconst handleReturnStepStatus = useCallback(\n\t\t(index: number, step: StepType): Status => {\n\t\t\tif (activeStep === index) {\n\t\t\t\treturn 'active';\n\t\t\t} else {\n\t\t\t\tswitch (step.status) {\n\t\t\t\t\tcase 'success':\n\t\t\t\t\t\treturn 'success';\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treturn 'error';\n\t\t\t\t\tcase 'warning':\n\t\t\t\t\t\treturn 'warning';\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn 'idle';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[activeStep]\n\t);\n\n\treturn (\n\t\t<Stack width='100%' direction={isSm ? 'column' : 'row'} spacing={0}>\n\t\t\t{isSm ? (\n\t\t\t\t<>\n\t\t\t\t\t<HStack\n\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\tjustifyContent='stretch'\n\t\t\t\t\t\tdivider={<Divider colorMode={colorMode} orientation='vertical' height={height} />}\n\t\t\t\t\t\tspacing={0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Cancel color={color} colorMode={colorMode} onCancel={onCancel} />\n\t\t\t\t\t\t<Next\n\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\tisLast={activeStep === children.length - 1}\n\t\t\t\t\t\t\thasErrors={hasErrors}\n\t\t\t\t\t\t\thasWarnings={hasWarnings}\n\t\t\t\t\t\t\thasIdle={hasIdle}\n\t\t\t\t\t\t\tonNext={handleNext}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</HStack>\n\t\t\t\t\t<Center width={isSm ? '100%' : 'calc(100% - 200px)'}>\n\t\t\t\t\t\t<HorizontalScroll\n\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\trenderDivider={() => (\n\t\t\t\t\t\t\t\t<Divider colorMode={colorMode} orientation='vertical' height={height} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children.map((step, index) => (\n\t\t\t\t\t\t\t\t<Step\n\t\t\t\t\t\t\t\t\t{...step}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\tstatus={handleReturnStepStatus(index, step)}\n\t\t\t\t\t\t\t\t\tonClick={() => handleChange(index)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</HorizontalScroll>\n\t\t\t\t\t</Center>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Cancel color={color} colorMode={colorMode} onCancel={onCancel} />\n\t\t\t\t\t<Center width='calc(100% - 200px)'>\n\t\t\t\t\t\t<HorizontalScroll\n\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\trenderDivider={() => (\n\t\t\t\t\t\t\t\t<Divider colorMode={colorMode} orientation='vertical' height={height} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children.map((step, index) => (\n\t\t\t\t\t\t\t\t<Step\n\t\t\t\t\t\t\t\t\t{...step}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\t\t\t\tstatus={handleReturnStepStatus(index, step)}\n\t\t\t\t\t\t\t\t\tonClick={() => handleChange(index)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</HorizontalScroll>\n\t\t\t\t\t</Center>\n\t\t\t\t\t<Next\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tisLast={activeStep === children.length - 1}\n\t\t\t\t\t\thasIdle={hasIdle}\n\t\t\t\t\t\thasErrors={hasErrors}\n\t\t\t\t\t\thasWarnings={hasWarnings}\n\t\t\t\t\t\tonNext={handleNext}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Stack>\n\t);\n};\n\nexport default StepList;\n","import React, { ReactElement, useContext } from 'react';\n\nimport { useTheme, VStack, Text } from '@chakra-ui/react';\n\nimport { StepDescriptionProps } from './types';\n\nimport { StepperContext } from '../..';\nimport { Theme } from '../../../../theme/types';\nimport { StepperContext as StepperContextType } from '../../types';\n\nconst StepDescription = (props: StepDescriptionProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\n\tconst { color, colorMode } = useContext<StepperContextType>(StepperContext);\n\n\tconst { index, total, title, subtitle } = props;\n\n\treturn (\n\t\t<VStack\n\t\t\twidth='100%'\n\t\t\talignItems='flex-start'\n\t\t\tspacing={0.5}\n\t\t\tsx={{\n\t\t\t\t'& *': {\n\t\t\t\t\ttransition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']} !important`\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<Text\n\t\t\t\twidth='100%'\n\t\t\t\talign='left'\n\t\t\t\tcolor={`${color}.${colorMode === 'light' ? 500 : 400}`}\n\t\t\t\tfontSize='md'\n\t\t\t\tfontWeight='semibold'\n\t\t\t\tlineHeight='normal'\n\t\t\t\tisTruncated\n\t\t\t\toverflow='hidden'\n\t\t\t\twhiteSpace='nowrap'\n\t\t\t>\n\t\t\t\t{`Step ${index + 1} of ${total}`}\n\t\t\t</Text>\n\t\t\t<Text\n\t\t\t\twidth='100%'\n\t\t\t\talign='left'\n\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\tfontSize='4xl'\n\t\t\t\tfontWeight='bold'\n\t\t\t\tlineHeight='normal'\n\t\t\t\tisTruncated\n\t\t\t\toverflow='hidden'\n\t\t\t\twhiteSpace='nowrap'\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</Text>\n\t\t\t{subtitle ? (\n\t\t\t\t<Text\n\t\t\t\t\twidth='100%'\n\t\t\t\t\talign='left'\n\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\tfontSize='md'\n\t\t\t\t\tlineHeight='normal'\n\t\t\t\t\tisTruncated\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t>\n\t\t\t\t\t{subtitle}\n\t\t\t\t</Text>\n\t\t\t) : null}\n\t\t</VStack>\n\t);\n};\n\nexport default StepDescription;\n","import React, { ReactElement, useContext } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport { StepPanelProps } from './types';\n\nimport { StepperContext } from '../..';\nimport Divider from '../../../Divider';\nimport { StepperContext as StepperContextType } from '../../types';\nimport StepDescription from '../StepDescription';\n\nconst StepPanel = ({ children, index, total, title, subtitle, ...rest }: StepPanelProps): ReactElement => {\n\tconst { colorMode } = useContext<StepperContextType>(StepperContext);\n\n\treturn (\n\t\t<VStack {...rest} width='100%' divider={<Divider colorMode={colorMode} />} spacing={4}>\n\t\t\t<StepDescription index={index} total={total} title={title} subtitle={subtitle} />\n\n\t\t\t{children}\n\t\t</VStack>\n\t);\n};\n\nexport default StepPanel;\n","import { ReactElement, useContext } from 'react';\n\nimport { Center, Fade } from '@chakra-ui/react';\n\nimport { AnimatePresence } from 'framer-motion';\n\nimport { StepPanelsProps } from './types';\n\nimport { StepperContext } from '../..';\nimport { StepperContext as StepperContextType } from '../../types';\n\nconst StepPanels = ({ children }: StepPanelsProps): ReactElement => {\n\tconst { activeStep = 0 } = useContext<StepperContextType>(StepperContext);\n\n\treturn (\n\t\t<Center as={AnimatePresence} width='100%' exitBeforeEnter initial={false}>\n\t\t\t{children.map((step, index) =>\n\t\t\t\tactiveStep === index ? (\n\t\t\t\t\t<Center key={`step_panel_${index}`} as={Fade} in width='100%' unmountOnExit>\n\t\t\t\t\t\t{step}\n\t\t\t\t\t</Center>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Center>\n\t);\n};\n\nexport default StepPanels;\n","import React, { ReactElement, useState, useCallback } from 'react';\nimport { useForm, useFormState } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nimport { ColorMode, useTheme, useColorMode, useDisclosure, Center, Container } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport sha256 from 'crypto-js/sha256';\nimport dayjs from 'dayjs';\nimport { isEmpty, isNil } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nimport Customization from './components/Customization';\nimport Details from './components/Details';\nimport Genres from './components/Genres';\nimport Profile from './components/Profile';\nimport {\n\tdetailsDefaultValues,\n\tgenresDefaultValues,\n\tcustomizationDefaultValues,\n\tprofileDefaultValues\n} from './defaults';\nimport { DetailsForm, GenresForm, CustomizationForm, ProfileForm } from './types';\nimport { detailsSchema } from './validation';\n\nimport { useSelector } from '../../../common/hooks';\nimport { handleCheckSystemColorMode } from '../../../common/utils';\nimport Button from '../../../components/Clickable/Button';\nimport ConfirmModal from '../../../components/ConfirmModal';\nimport Stepper from '../../../components/Stepper';\nimport StepList from '../../../components/Stepper/components/StepList';\nimport { Step, Status } from '../../../components/Stepper/components/StepList/components/Step/types';\nimport StepPanel from '../../../components/Stepper/components/StepPanel';\nimport StepPanels from '../../../components/Stepper/components/StepPanels';\nimport { setUser } from '../../../store/slices/App';\nimport { toggleSplashscreen } from '../../../store/slices/Modals';\nimport { defaultUser, setUserInfo, setUserTheme, setUsers } from '../../../store/slices/Users';\nimport { User, Info } from '../../../store/slices/Users/types';\nimport { Theme } from '../../../theme/types';\n\nconst id = uuid();\n\nconst defaultSteps: Step[] = [\n\t{\n\t\tindex: 0,\n\t\ttitle: 'Details',\n\t\tsubtitle: 'Enter your credentials and some basic information about you.',\n\t\tstatus: 'active'\n\t},\n\t{\n\t\tindex: 1,\n\t\ttitle: 'Favored Genres',\n\t\tsubtitle: 'Select your most favorite Movie & TV Show genres.',\n\t\tstatus: 'idle'\n\t},\n\t{\n\t\tindex: 2,\n\t\ttitle: 'Customization',\n\t\tsubtitle: 'Pick your favorite color and mode.',\n\t\tstatus: 'idle'\n\t},\n\t{\n\t\tindex: 3,\n\t\ttitle: 'Avatar & Background',\n\t\tsubtitle: 'Upload an avatar & background of your choice!',\n\t\tstatus: 'idle'\n\t}\n];\n\nconst Register = (): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst { colorMode: colorModeHook } = useColorMode();\n\n\tconst { isOpen: isConfirmOpen, onOpen: onOpenConfirm, onClose: onCloseConfirm } = useDisclosure();\n\n\tconst navigate = useNavigate();\n\n\tconst dispatch = useDispatch();\n\tconst users = useSelector((state) => state.users.data.users);\n\n\tconst [activeStep, setActiveStep] = useState<number>(0);\n\tconst [steps, setSteps] = useState<Step[]>(defaultSteps);\n\n\tconst detailsForm = useForm<DetailsForm>({\n\t\tmode: 'onTouched',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: detailsDefaultValues,\n\t\tresolver: yupResolver(detailsSchema)\n\t});\n\n\tconst {\n\t\tisValid: isDetailsFormValid,\n\t\terrors: detailsFormErrors,\n\t\tisDirty: isDetailsFormDirty\n\t} = useFormState({ control: detailsForm.control });\n\n\tconst genresForm = useForm<GenresForm>({\n\t\tmode: 'onTouched',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: genresDefaultValues\n\t});\n\n\tconst { isValid: isGenresFormValid, isDirty: isGenresFormDirty } = useFormState({ control: genresForm.control });\n\n\tconst customizationForm = useForm<CustomizationForm>({\n\t\tmode: 'onTouched',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: { ...customizationDefaultValues, colorMode: colorModeHook }\n\t});\n\n\tconst color = customizationForm.watch('color');\n\tconst themeColorMode = customizationForm.watch('colorMode');\n\tconst colorMode: ColorMode = themeColorMode === 'system' ? handleCheckSystemColorMode() : themeColorMode;\n\n\tconst { isValid: isCustomizationFormValid, isDirty: isCustomizationFormDirty } = useFormState({\n\t\tcontrol: customizationForm.control\n\t});\n\n\tconst profileForm = useForm<ProfileForm>({\n\t\tmode: 'onTouched',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: profileDefaultValues\n\t});\n\n\tconst { isValid: isProfileFormValid, isDirty: isProfileFormDirty } = useFormState({ control: profileForm.control });\n\n\tconst handleStepStatus = useCallback(\n\t\t(index: number): Status => {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tlet status: Status = 'idle';\n\n\t\t\t\t\tif (isDetailsFormValid) {\n\t\t\t\t\t\tstatus = 'success';\n\t\t\t\t\t} else if (!(isNil(detailsFormErrors) || isEmpty(detailsFormErrors))) {\n\t\t\t\t\t\tstatus = 'error';\n\t\t\t\t\t} else if (isDetailsFormDirty) {\n\t\t\t\t\t\tstatus = 'warning';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn status;\n\t\t\t\t}\n\t\t\t\tcase 1: {\n\t\t\t\t\tlet status: Status = 'idle';\n\n\t\t\t\t\tif (isGenresFormValid) {\n\t\t\t\t\t\tstatus = 'success';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn status;\n\t\t\t\t}\n\t\t\t\tcase 2: {\n\t\t\t\t\tlet status: Status = 'idle';\n\n\t\t\t\t\tif (isCustomizationFormValid) {\n\t\t\t\t\t\tstatus = 'success';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn status;\n\t\t\t\t}\n\t\t\t\tcase 3: {\n\t\t\t\t\tlet status: Status = 'idle';\n\n\t\t\t\t\tif (isProfileFormValid) {\n\t\t\t\t\t\tstatus = 'success';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn status;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'idle';\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tisDetailsFormValid,\n\t\t\tdetailsFormErrors,\n\t\t\tisDetailsFormDirty,\n\t\t\tisGenresFormValid,\n\t\t\tisCustomizationFormValid,\n\t\t\tisProfileFormValid\n\t\t]\n\t);\n\n\tconst handleReturnElement = (index: number): ReactElement | null => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <Details form={detailsForm} color={color} colorMode={colorMode} />;\n\t\t\tcase 1:\n\t\t\t\treturn <Genres form={genresForm} color={color} colorMode={colorMode} />;\n\t\t\tcase 2:\n\t\t\t\treturn <Customization form={customizationForm} />;\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<Profile\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tform={profileForm}\n\t\t\t\t\t\tuser={detailsForm.getValues()}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tonChange={() => handleChange(3)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst handleChange = (index: number): void => {\n\t\tsetSteps(\n\t\t\tsteps.map((step) => (step.index === activeStep ? { ...step, status: handleStepStatus(activeStep) } : step))\n\t\t);\n\t\tsetActiveStep(index);\n\t};\n\n\tconst handleClose = (): void => {\n\t\tnavigate(-1);\n\t};\n\n\tconst handleCloseConfirm = (): void => {\n\t\tonCloseConfirm();\n\t\thandleClose();\n\t};\n\n\tconst handleCheckCancel = (): void => {\n\t\tif (!(isDetailsFormDirty || isGenresFormDirty || isCustomizationFormDirty || isProfileFormDirty)) {\n\t\t\thandleClose();\n\t\t} else {\n\t\t\tonOpenConfirm();\n\t\t}\n\t};\n\n\tconst handleSubmit = (): void => {\n\t\tconst details = detailsForm.getValues();\n\t\tconst genres = genresForm.getValues();\n\t\tconst customization = customizationForm.getValues();\n\t\tconst profile = profileForm.getValues();\n\n\t\tconst info: Info = {\n\t\t\tname: `${details.firstName} ${details.lastName}`,\n\t\t\tbio: details.bio,\n\t\t\tavatar_path: profile.avatar_path,\n\t\t\tbackground_path: profile.background_path,\n\t\t\tprefers: { ...genres }\n\t\t};\n\t\tconst user: User = {\n\t\t\t...defaultUser,\n\t\t\tdata: {\n\t\t\t\t...defaultUser.data,\n\t\t\t\tid,\n\t\t\t\tcredentials: {\n\t\t\t\t\tusername: details.username,\n\t\t\t\t\tpassword: sha256(details.password).toString(),\n\t\t\t\t\trememberMe: true\n\t\t\t\t},\n\t\t\t\tinfo: { ...info },\n\t\t\t\tsignedInAt: dayjs().toISOString()\n\t\t\t},\n\t\t\tui: {\n\t\t\t\t...defaultUser.ui,\n\t\t\t\ttheme: { ...customization }\n\t\t\t}\n\t\t};\n\n\t\tdispatch(setUser(id));\n\t\tdispatch(setUsers([...users, user].sort((a, b) => dayjs(b.data.signedInAt).diff(a.data.signedInAt))));\n\n\t\tdispatch(toggleSplashscreen(true));\n\n\t\tnavigate('/', { replace: true });\n\n\t\tsetTimeout(() => {\n\t\t\tdispatch(setUserInfo({ id, data: { ...info } }));\n\t\t\tdispatch(setUserTheme({ id, data: { ...customization } }));\n\t\t}, 250);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Center\n\t\t\t\tbackgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\n\t\t\t\tsx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\n\t\t\t>\n\t\t\t\t<Container maxWidth='8xl' minHeight='100vh' centerContent p={0}>\n\t\t\t\t\t<Stepper\n\t\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonCancel={handleCheckCancel}\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StepList>{[...steps]}</StepList>\n\t\t\t\t\t\t<StepPanels>\n\t\t\t\t\t\t\t{steps.map((step, index) => (\n\t\t\t\t\t\t\t\t<StepPanel key={step.title} {...step} index={index} total={steps.length} p={3}>\n\t\t\t\t\t\t\t\t\t{handleReturnElement(index)}\n\t\t\t\t\t\t\t\t</StepPanel>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</StepPanels>\n\t\t\t\t\t</Stepper>\n\t\t\t\t</Container>\n\t\t\t</Center>\n\n\t\t\t<ConfirmModal\n\t\t\t\trenderActions={({ size }) => (\n\t\t\t\t\t<Button color={color} colorMode={colorMode} onClick={() => handleCloseConfirm()} size={size}>\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\ttitle='Cancel User Creation?'\n\t\t\t\tdescription='Are you sure you want to cancel creating a new user? Once you close the page you will not be able to retrieve the data!'\n\t\t\t\tcolorMode={colorMode}\n\t\t\t\tisOpen={isConfirmOpen}\n\t\t\t\tonClose={onCloseConfirm}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default Register;\n"],"names":["detailsDefaultValues","username","password","firstName","lastName","bio","genresDefaultValues","movie","tv","customizationDefaultValues","color","colorMode","profileDefaultValues","avatar_path","background_path","form","watch","Panel","isFullWidth","variant","header","title","actions","Button","isDisabled","isNil","isEmpty","onClick","setValue","defaultValues","shouldDirty","size","body","width","spacing","control","name","render","field","fieldState","Username","Password","theme","useTheme","onChange","onBlur","value","error","Textarea","label","placeholder","sx","textarea","height","space","useMediaQuery","isSm","columns","Input","isRequired","rest","dummies","range","props","id","isActive","isLoading","dummy","useConst","sample","renderRight","fontSize","Icon","icon","type","undefined","isLoaded","mediaType","allGenres","useSelector","state","options","data","genres","useElementSize","ref","handleGenreClick","genre","some","activeGenre","filter","divider","Divider","orientation","length","handleAllClick","Empty","hasIllustration","description","map","_dummy","index","handleCreateImage","url","Promise","resolve","reject","image","Image","addEventListener","src","handleRadianAngle","rotation","Math","PI","handleRotateSize","radius","abs","cos","sin","handleGetImage","imageSrc","pixelCrop","flip","horizontal","vertical","canvas","document","createElement","ctx","getContext","rotRad","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","getImageData","x","y","putImageData","toDataURL","onToggle","useBoolean","isHovering","setIsHovering","Tooltip","isOpen","placement","IconButton","onMouseEnter","on","onMouseLeave","off","onRotation","isHoveringLeft","setIsHoveringLeft","isHoveringRight","setIsHoveringRight","handleRotate","direction","zoom","onSetZoom","isHoveringIn","setIsHoveringIn","isHoveringOut","setIsHoveringOut","minZoom","maxZoom","renderActions","onClose","justifyContent","alignItems","flex","onCrop","useState","crop","setCrop","setRotation","setZoom","area","setArea","isGridActive","setIsGridActive","handleCropComplete","useCallback","debounce","_croppedArea","croppedAreaPixels","handleCropImage","croppedImage","Modal","toggle","hasCancel","isCentered","p","position","borderRadius","overflow","aspect","handleReturnRatio","cropShape","showGrid","onRotationChange","onCropChange","onCropComplete","onZoomChange","style","cropAreaStyle","borderWidth","borderStyle","borderColor","colors","gray","alt","avatar","isMd","isLg","useDisclosure","isCropperOpen","onOpenCropper","onOpen","onCloseCropper","fileInputRef","useRef","setImage","border","bottom","left","zIndex","event","target","files","Compressor","strict","checkOrientation","quality","resize","success","file","blob","Blob","URL","createObjectURL","handleChange","display","ratio","renderIcon","preventDefault","stopPropagation","current","click","fallbackSrc","fallback","background","e","objectFit","user","buttonRef","buttonWidth","hasUsername","hasFirstName","hasLastName","speed","align","fontWeight","isTruncated","whiteSpace","compact","join","Skeleton","renderLeft","useEffectOnce","handleReturnBoringSrc","detailsSchema","yup","shape","required","matches","max","StepperContext","createContext","activeStep","onCancel","onSubmit","forwardRef","children","maxWidth","Provider","step","transition","duration","faster","easing","boxShadow","disabled","cursor","pointerEvents","opacity","light","idle","backgroundColor","borderBottomColor","warning","active","dark","useStyles","merge","borderRightWidth","borderRightStyle","borderRightColor","_disabled","handleReturnColor","status","lineHeight","textTransform","handleReturnLabel","handleReturnIcon","isLast","hasErrors","hasWarnings","hasIdle","onNext","borderLeftWidth","borderLeftStyle","borderLeftColor","subtitle","minWidth","px","in","unmountOnExit","useContext","handleNext","findIndex","handleReturnStepStatus","HorizontalScroll","renderDivider","key","total","as","AnimatePresence","exitBeforeEnter","initial","Fade","uuid","defaultSteps","colorModeHook","useColorMode","isConfirmOpen","onOpenConfirm","onCloseConfirm","navigate","useNavigate","dispatch","useDispatch","users","setActiveStep","steps","setSteps","detailsForm","useForm","mode","reValidateMode","resolver","yupResolver","useFormState","isDetailsFormValid","isValid","detailsFormErrors","errors","isDetailsFormDirty","isDirty","genresForm","isGenresFormValid","isGenresFormDirty","customizationForm","themeColorMode","handleCheckSystemColorMode","isCustomizationFormValid","isCustomizationFormDirty","profileForm","isProfileFormValid","isProfileFormDirty","handleStepStatus","handleReturnElement","Customization","getValues","handleClose","minHeight","centerContent","details","customization","profile","info","prefers","defaultUser","credentials","sha256","toString","rememberMe","signedInAt","dayjs","toISOString","ui","setUser","setUsers","sort","a","b","diff","toggleSplashscreen","replace","setTimeout","setUserInfo","setUserTheme","ConfirmModal"],"sourceRoot":""}