{
  "version": 3,
  "sources": [
    "common/hooks/useSelectorTyped.ts",
    "common/scripts/axios.ts",
    "components/Grid/Horizontal/components/Header/index.tsx",
    "components/HorizontalScroll/components/Arrow/index.tsx",
    "store/slices/App/index.ts",
    "store/slices/Options/index.ts",
    "containers/Layout/common/data/sidebar.ts",
    "containers/Layout/common/styles/transitions.ts",
    "containers/Layout/common/data/breadcrumbs.ts",
    "containers/Layout/components/Header/components/Breadcrumb/index.tsx",
    "components/Clickable/IconButton/index.tsx",
    "components/Clickable/IconButton/styles.ts",
    "containers/Layout/common/data/navItems.ts",
    "containers/Layout/components/Logo/index.tsx",
    "containers/Layout/components/Logo/styles.ts",
    "components/Clickable/Button/index.tsx",
    "components/Clickable/Button/styles.ts",
    "store/slices/Modals/index.tsx",
    "store/slices/User/index.ts",
    "store/rootReducer.ts",
    "store/index.ts",
    "theme/foundations/borders.ts",
    "theme/foundations/radius.ts",
    "theme/foundations/sizes.ts",
    "theme/foundations/spacing.ts",
    "theme/foundations/transition.ts",
    "theme/foundations/typography.ts",
    "theme/foundations/z-index.ts",
    "theme/foundations/index.ts",
    "theme/styles.ts",
    "theme/index.ts",
    "common/data/date.ts",
    "common/utils/utils.ts",
    "components/Tooltip/index.tsx",
    "containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/index.tsx",
    "containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/styles.ts",
    "containers/Layout/components/NavItems/components/NavItem/index.tsx",
    "containers/Layout/components/NavItems/components/NavItem/styles.ts",
    "containers/Layout/components/NavItems/index.tsx",
    "containers/Layout/components/Header/components/Menu/index.tsx",
    "components/Clickable/Link/index.tsx",
    "components/Card/index.tsx",
    "components/Card/styles.ts",
    "components/Grid/Horizontal/components/Grid/index.tsx",
    "components/Grid/Horizontal/index.tsx",
    "components/Modal/index.tsx",
    "common/assets/illustrations/empty/blue.svg",
    "common/assets/illustrations/empty/cyan.svg",
    "common/assets/illustrations/empty/green.svg",
    "common/assets/illustrations/empty/orange.svg",
    "common/assets/illustrations/empty/pink.svg",
    "common/assets/illustrations/empty/purple.svg",
    "common/assets/illustrations/empty/teal.svg",
    "common/assets/illustrations/empty/yellow.svg",
    "common/assets/illustrations/empty/index.ts",
    "components/Empty/index.tsx",
    "common/assets/illustrations/error/blue.svg",
    "common/assets/illustrations/error/cyan.svg",
    "common/assets/illustrations/error/green.svg",
    "common/assets/illustrations/error/orange.svg",
    "common/assets/illustrations/error/pink.svg",
    "common/assets/illustrations/error/purple.svg",
    "common/assets/illustrations/error/teal.svg",
    "common/assets/illustrations/error/yellow.svg",
    "common/assets/illustrations/error/index.ts",
    "components/Error/index.tsx",
    "components/Clickable/Card/index.tsx",
    "components/Clickable/Card/styles.ts",
    "components/Bookmark/index.tsx",
    "components/Skeleton/common/props/index.ts",
    "components/Skeleton/common/utils/utils.ts",
    "components/Skeleton/index.tsx",
    "components/Image/index.tsx",
    "components/Like/index.tsx",
    "components/Skeleton/Text/index.tsx",
    "components/Rating/index.tsx",
    "components/Poster/Vertical/components/Subtitle/index.tsx",
    "components/Poster/Vertical/components/Title/index.tsx",
    "components/Poster/Vertical/index.tsx",
    "components/Movies/Poster/Vertical/index.tsx",
    "components/Movies/Grid/Horizontal/index.tsx",
    "common/data/departments.ts",
    "components/People/Poster/Vertical/index.tsx",
    "components/People/Grid/Horizontal/index.tsx",
    "components/SearchForm/components/Row/index.tsx",
    "components/SearchForm/components/Row/styles.ts",
    "components/SearchForm/components/Default/index.tsx",
    "components/SearchForm/components/Display/index.tsx",
    "components/SearchForm/index.tsx",
    "components/TV/Poster/Vertical/index.tsx",
    "components/TV/Grid/Horizontal/index.tsx",
    "containers/Layout/components/Header/components/Search/index.tsx",
    "containers/Layout/components/Header/components/User/components/UserLink/index.tsx",
    "containers/Layout/components/Header/components/User/components/UserLink/styles.ts",
    "containers/Layout/components/Header/components/User/index.tsx",
    "containers/Layout/components/Header/index.tsx",
    "containers/Layout/components/Modals/Confirm/index.tsx",
    "containers/Layout/components/Modals/Description/index.tsx",
    "containers/Layout/components/Modals/Display/components/Container/index.tsx",
    "containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx",
    "containers/Layout/components/Modals/Display/components/Background/index.tsx",
    "containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx",
    "containers/Layout/components/Modals/Display/components/Color/index.tsx",
    "containers/Layout/components/Modals/Display/index.tsx",
    "containers/Layout/components/Modals/Lists/components/CreateList/validation.ts",
    "containers/Layout/components/Modals/Lists/components/CreateList/index.tsx",
    "containers/Layout/components/Modals/Lists/components/List/index.tsx",
    "containers/Layout/components/Modals/Lists/index.tsx",
    "containers/Layout/components/Modals/Splashscreen/index.tsx",
    "containers/Layout/components/Modals/Splashscreen/styles.ts",
    "pages/Home/index.tsx",
    "common/data/sort.ts",
    "components/Filters/components/Container/index.tsx",
    "components/Filters/components/Departments/components/Department/index.tsx",
    "components/Filters/components/Departments/index.tsx",
    "components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx",
    "components/Filters/components/DisplayMode/index.tsx",
    "components/Filters/components/Genres/components/Genre/index.tsx",
    "components/Filters/components/Genres/index.tsx",
    "components/Filters/components/SortBy/components/SortByItem/index.tsx",
    "components/Filters/components/SortBy/components/SortByItem/styles.ts",
    "components/Filters/components/SortBy/index.tsx",
    "components/Filters/index.tsx",
    "components/Grid/Vertical/components/Header/index.tsx",
    "components/Grid/Vertical/index.tsx",
    "components/MediaTypePicker/components/MediaTypeItem/index.tsx",
    "components/MediaTypePicker/components/MediaTypes/index.tsx",
    "components/MediaTypePicker/index.tsx",
    "components/Poster/Horizontal/components/Description/index.tsx",
    "components/Poster/Horizontal/components/Subtitle/index.tsx",
    "components/Poster/Horizontal/components/Title/index.tsx",
    "components/Poster/Horizontal/index.tsx",
    "components/Movies/Poster/Horizontal/index.tsx",
    "components/People/Poster/Horizontal/index.tsx",
    "components/TV/Poster/Horizontal/index.tsx",
    "pages/Liked/components/All/index.tsx",
    "pages/Liked/index.tsx",
    "pages/Lists/components/All/index.tsx",
    "pages/Lists/components/CreateList/validation.ts",
    "pages/Lists/components/CreateList/index.tsx",
    "pages/Lists/components/EditList/validation.ts",
    "pages/Lists/components/EditList/index.tsx",
    "pages/Lists/components/ListInfo/components/MediaType/index.tsx",
    "pages/Lists/components/ListInfo/components/MediaType/styles.ts",
    "pages/Lists/components/ListInfo/index.tsx",
    "components/Clickable/Radio/index.tsx",
    "components/Clickable/Radio/styles.ts",
    "pages/Lists/components/ListPicker/components/ListItem/index.tsx",
    "pages/Lists/components/ListPicker/index.tsx",
    "pages/Lists/components/Toast/index.tsx",
    "pages/Lists/index.tsx",
    "pages/Movies/index.tsx",
    "components/LoadMore/index.tsx",
    "components/Movies/Grid/Vertical/index.tsx",
    "pages/Movies/NowPlaying/index.tsx",
    "pages/Movies/Popular/index.tsx",
    "pages/Movies/TopRated/index.tsx",
    "pages/Movies/Upcoming/index.tsx",
    "components/People/Grid/Vertical/index.tsx",
    "pages/People/index.tsx",
    "pages/Person/components/Bio/index.tsx",
    "pages/Person/components/Details/components/Background/index.tsx",
    "components/HorizontalScroll/components/Arrow/styles.ts",
    "components/HorizontalScroll/index.tsx",
    "pages/Person/components/Details/components/Departments/index.tsx",
    "pages/Person/components/Details/components/Poster/index.tsx",
    "pages/Person/components/Details/components/Socials/components/Link/index.tsx",
    "pages/Person/components/Details/components/Socials/components/Link/styles.ts",
    "pages/Person/components/Details/components/Socials/components/Links/index.tsx",
    "pages/Person/components/Details/components/Socials/index.tsx",
    "pages/Person/components/Details/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/Badge/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/MediaItem/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastMovies/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastTV/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewMovies/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewTV/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/Panel/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/AccordionItem/styles.ts",
    "pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/index.tsx",
    "pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/styles.ts",
    "pages/Person/components/Filmography/components/Accordion/index.tsx",
    "pages/Person/components/Filmography/components/Header/index.tsx",
    "pages/Person/components/Filmography/components/QuickToggles/index.tsx",
    "pages/Person/components/Filmography/index.tsx",
    "pages/Person/components/KnownFor/index.tsx",
    "pages/Person/components/MediaViewer/components/Actions/index.tsx",
    "pages/Person/components/MediaViewer/components/Gallery/components/Grid/index.tsx",
    "pages/Person/components/MediaViewer/components/Gallery/components/Image/index.tsx",
    "pages/Person/components/MediaViewer/components/Gallery/index.tsx",
    "pages/Person/components/MediaViewer/components/Navigation/index.tsx",
    "pages/Person/components/MediaViewer/components/Viewer/index.tsx",
    "pages/Person/components/MediaViewer/index.tsx",
    "pages/Person/components/Photos/components/Image/index.tsx",
    "pages/Person/components/Photos/index.tsx",
    "pages/Person/index.tsx",
    "components/TV/Grid/Vertical/index.tsx",
    "pages/Search/components/All/index.tsx",
    "pages/Search/index.tsx",
    "pages/Trending/index.tsx",
    "pages/TV/index.tsx",
    "pages/TV/AiringToday/index.tsx",
    "pages/TV/OnTV/index.tsx",
    "pages/TV/Popular/index.tsx",
    "pages/TV/TopRated/index.tsx",
    "containers/Page/index.tsx",
    "containers/Layout/components/Routes/index.tsx",
    "containers/Layout/components/ScrollToTop/index.tsx",
    "containers/Layout/components/Sidebar/index.tsx",
    "containers/Layout/index.tsx",
    "common/hooks/useQueriesTyped.ts",
    "containers/App/index.tsx",
    "index.tsx"
  ],
  "names": [
    "useSelectorTyped",
    "useSelector",
    "instance",
    "axios",
    "create",
    "baseURL",
    "process",
    "interceptors",
    "request",
    "use",
    "headers",
    "interval",
    "appSlice",
    "createSlice",
    "name",
    "initialState",
    "data",
    "sortDirection",
    "ui",
    "displayMode",
    "sidebarMode",
    "reducers",
    "toggleDisplayMode",
    "state",
    "action",
    "payload",
    "toggleSortDirection",
    "toggleSidebarMode",
    "actions",
    "optionsSlice",
    "genres",
    "movie",
    "tv",
    "hasDownloaded",
    "setMovieGenres",
    "setTVGenres",
    "toggleHasDownloaded",
    "sidebarWidth",
    "expanded",
    "collapsed",
    "theme",
    "transition",
    "duration",
    "slower",
    "easing",
    "breadcrumbs",
    "label",
    "consistsOf",
    "Breadcrumb",
    "useTheme",
    "colorMode",
    "useColorMode",
    "location",
    "useLocation",
    "pathname",
    "separator",
    "as",
    "ChevronRightOutlinedIcon",
    "color",
    "sx",
    "fontSize",
    "fontSizes",
    "xl",
    "spacing",
    "IconButton",
    "forwardRef",
    "props",
    "ref",
    "style",
    "size",
    "variant",
    "isLoading",
    "button",
    "back",
    "faster",
    "boxShadow",
    "transform",
    "front",
    "cursor",
    "width",
    "height",
    "display",
    "alignItems",
    "justifyContent",
    "borderStyle",
    "borderWidth",
    "borderRadius",
    "padding",
    "space",
    "disabled",
    "opacity",
    "icon",
    "light",
    "contained",
    "borderColor",
    "backgroundColor",
    "outlined",
    "dark",
    "useStyles",
    "colorModeProp",
    "isDisabled",
    "rest",
    "mode",
    "_",
    "merge",
    "_disabled",
    "className",
    "thickness",
    "speed",
    "slow",
    "navItems",
    "path",
    "iconActive",
    "HomeTwoToneIcon",
    "HomeOutlinedIcon",
    "SearchTwoToneIcon",
    "SearchOutlinedIcon",
    "WhatshotTwoToneIcon",
    "WhatshotOutlinedIcon",
    "children",
    "renderChild",
    "TheatersTwoToneIcon",
    "TheatersOutlinedIcon",
    "TvTwoToneIcon",
    "TvOutlinedIcon",
    "PeopleAltTwoToneIcon",
    "PeopleAltOutlinedIcon",
    "Logo",
    "common",
    "minWidth",
    "minHeight",
    "alignSelf",
    "border",
    "fontFamily",
    "fontWeight",
    "lineHeight",
    "textTransform",
    "paddingTop",
    "paddingBottom",
    "paddingLeft",
    "paddingRight",
    "user",
    "Button",
    "isFullWidth",
    "whiteSpace",
    "sm",
    "md",
    "lg",
    "text",
    "leftIcon",
    "rightIcon",
    "handleReturnSpacing",
    "mr",
    "ml",
    "defaultListsModal",
    "open",
    "title",
    "mediaType",
    "mediaItem",
    "undefined",
    "defaultDescriptionModal",
    "defaultConfirmModal",
    "description",
    "submitButton",
    "listsModal",
    "descriptionModal",
    "confirmModal",
    "isDisplayModalOpen",
    "isSplashscreenOpen",
    "modalsSlice",
    "toggleList",
    "toggleDescription",
    "toggleConfirm",
    "toggleDisplay",
    "toggleSplashscreen",
    "recentSearches",
    "recentlyViewed",
    "movies",
    "people",
    "liked",
    "lists",
    "id",
    "uuid",
    "date",
    "moment",
    "Date",
    "toISOString",
    "results",
    "background",
    "userSlice",
    "setTheme",
    "setRecentSearches",
    "setRecentlyViewed",
    "setLiked",
    "setLists",
    "rootReducer",
    "combineReducers",
    "app",
    "appReducer",
    "options",
    "optionsReducer",
    "modals",
    "modalsReducer",
    "userReducer",
    "persistConfig",
    "key",
    "storage",
    "blacklist",
    "persistedReducer",
    "persistReducer",
    "store",
    "configureStore",
    "reducer",
    "devTools",
    "borders",
    "none",
    "solid",
    "dashed",
    "solid1",
    "solid2",
    "dashed1",
    "dashed2",
    "radii",
    "base",
    "full",
    "sizes",
    "container",
    "0",
    "0.25",
    "0.5",
    "0.75",
    "1",
    "1.25",
    "1.5",
    "1.75",
    "2",
    "2.25",
    "2.5",
    "2.75",
    "3",
    "3.25",
    "3.5",
    "3.75",
    "4",
    "4.25",
    "4.5",
    "4.75",
    "5",
    "5.25",
    "5.5",
    "5.75",
    "6",
    "6.25",
    "6.5",
    "6.75",
    "7",
    "7.25",
    "7.5",
    "7.75",
    "8",
    "8.25",
    "8.5",
    "8.75",
    "9",
    "9.25",
    "9.5",
    "9.75",
    "10",
    "10.25",
    "10.5",
    "10.75",
    "11",
    "11.25",
    "11.5",
    "11.75",
    "12",
    "12.25",
    "12.5",
    "12.75",
    "13",
    "13.25",
    "13.5",
    "13.75",
    "14",
    "14.25",
    "14.5",
    "14.75",
    "15",
    "15.25",
    "15.5",
    "15.75",
    "property",
    "colors",
    "dimensions",
    "position",
    "typography",
    "fonts",
    "body",
    "heading",
    "mono",
    "zIndices",
    "hide",
    "auto",
    "docked",
    "dropdown",
    "sticky",
    "banner",
    "overlay",
    "toast",
    "modal",
    "popover",
    "skipLink",
    "tooltip",
    "radius",
    "styles",
    "global",
    "bg",
    "overflowX",
    "wordWrap",
    "config",
    "cssVarPrefix",
    "initialColorMode",
    "useSystemColorMode",
    "foundations",
    "extendTheme",
    "months",
    "value",
    "number",
    "string",
    "parseInt",
    "replace",
    "getState",
    "filter",
    "genre",
    "includes",
    "map",
    "join",
    "window",
    "navigator",
    "maxTouchPoints",
    "msMaxTouchPoints",
    "section",
    "split",
    "month",
    "find",
    "time",
    "sortBy",
    "departments",
    "hasFilters",
    "isActive",
    "isEmpty",
    "alt",
    "Math",
    "floor",
    "random",
    "toString",
    "substring",
    "red",
    "orange",
    "yellow",
    "green",
    "teal",
    "blue",
    "cyan",
    "purple",
    "pink",
    "queryString",
    "stringifyUrl",
    "url",
    "query",
    "square",
    "element",
    "overflow",
    "isOverflowing",
    "clientWidth",
    "scrollWidth",
    "clientHeight",
    "scrollHeight",
    "range",
    "amount",
    "Tooltip",
    "closeDelay",
    "openDelay",
    "gutter",
    "span",
    "utils",
    "arrowSize",
    "normal",
    "fast",
    "hasArrow",
    "gray",
    "NavItemChild",
    "isLastChild",
    "child",
    "link",
    "textDecoration",
    "RRDLink",
    "to",
    "borderLeft",
    "borderLeftColor",
    "aria-label",
    "closeOnClick",
    "closeOnMouseDown",
    "placement",
    "px",
    "py",
    "align",
    "parts",
    "initials",
    "forEach",
    "part",
    "handleGetInitials",
    "NavItem",
    "useDisclosure",
    "isOpen",
    "onOpen",
    "onClose",
    "isChildActive",
    "some",
    "renderChildren",
    "every",
    "isExpanded",
    "main",
    "useEffect",
    "onClick",
    "in",
    "unmountOnExit",
    "delay",
    "enter",
    "exit",
    "pl",
    "pr",
    "mb",
    "index",
    "length",
    "NavItems",
    "navItem",
    "Menu",
    "MenuOutlinedIcon",
    "blockScrollOnMount",
    "Link",
    "_hover",
    "_focus",
    "Card",
    "card",
    "transparent",
    "omit",
    "Grid",
    "gridRef",
    "handleScrollChange",
    "onLoad",
    "event",
    "onScroll",
    "Header",
    "isMouseDown",
    "onMouseDown",
    "onMouseLeave",
    "reset",
    "scrollButtons",
    "onScrollClick",
    "useState",
    "direction",
    "setDirection",
    "handleScroll",
    "useCallback",
    "handleIsMouseDown",
    "setInterval",
    "handleIsMouseUp",
    "clearInterval",
    "justify",
    "borderBottom",
    "left",
    "ArrowBackOutlinedIcon",
    "onMouseUp",
    "right",
    "ArrowForwardOutlinedIcon",
    "defaultScrollButtonsState",
    "HorizontalGrid",
    "footer",
    "setGridRef",
    "setScrollButtons",
    "resetScrollButtons",
    "setResetScrollButtons",
    "handleGridRef",
    "maxScroll",
    "scrollLeft",
    "offsetWidth",
    "isLeftDisabled",
    "isRightDisabled",
    "handleScrollClick",
    "currentTarget",
    "borderTop",
    "pt",
    "pb",
    "Modal",
    "useMediaQuery",
    "isXs",
    "preserveScrollBarGap",
    "motionPreset",
    "scrollBehavior",
    "m",
    "borderBottomColor",
    "CloseOutlinedIcon",
    "p",
    "borderTopColor",
    "Empty",
    "maxWidth",
    "useBreakpointValue",
    "hasIllustration",
    "handleReturnPadding",
    "src",
    "empty",
    "handleReturnIllustration",
    "Error",
    "error",
    "isLightGray",
    "Bookmark",
    "dispatch",
    "useDispatch",
    "isHovering",
    "setIsHovering",
    "list",
    "show",
    "isBookmarked",
    "BookmarkOutlinedIcon",
    "BookmarkBorderOutlinedIcon",
    "paramList",
    "handleRemoveBookmark",
    "onMouseEnter",
    "fadeDuration",
    "type",
    "Skeleton",
    "commonProps",
    "startColor",
    "endColor",
    "Image",
    "orientation",
    "ratio",
    "isLoaded",
    "fallbackSrc",
    "Like",
    "isLiked",
    "person",
    "FavoriteOutlinedIcon",
    "FavoriteBorderOutlinedIcon",
    "updatedLiked",
    "handleRemoveLike",
    "movieMediaItem",
    "dateAdded",
    "showMediaItem",
    "personMediaItem",
    "handleLike",
    "SkeletonText",
    "defaultRating",
    "rating",
    "count",
    "Rating",
    "isHorizontal",
    "iconSize",
    "StarOutlinedIcon",
    "dummyTextWidths",
    "Subtitle",
    "subtitle",
    "isTruncated",
    "setIsTruncated",
    "handleIsTruncated",
    "mt",
    "Title",
    "VerticalPoster",
    "image",
    "isHoveringLiked",
    "setIsHoveringLiked",
    "isHoveringBookmark",
    "setIsHoveringBookmark",
    "top",
    "VerticalMovie",
    "Vertical",
    "poster_path",
    "vote_average",
    "vote_count",
    "release_date",
    "genre_ids",
    "HorizontalMovies",
    "isError",
    "isSuccess",
    "Array",
    "_dummy",
    "VerticalPerson",
    "profile_path",
    "department",
    "known_for_department",
    "HorizontalPeople",
    "Row",
    "history",
    "useHistory",
    "onSearch",
    "isHoveringDelete",
    "setIsHoveringDelete",
    "search",
    "page",
    "push",
    "stringify",
    "handleSearch",
    "colorScheme",
    "ClearOutlinedIcon",
    "Default",
    "isOverflown",
    "setIsOverflown",
    "handleIsOverflown",
    "offsetHeight",
    "maxHeight",
    "overflowY",
    "Display",
    "totalResults",
    "SearchForm",
    "source",
    "CancelToken",
    "inputRef",
    "useRef",
    "refetch",
    "onQueryChange",
    "onMoviesChange",
    "onTVChange",
    "onPeopleChange",
    "onIsLoading",
    "onIsFetched",
    "isLocked",
    "setIsLocked",
    "isHoveringLock",
    "setIsHoveringLock",
    "isFocused",
    "setIsFocused",
    "hasSubmitted",
    "setHasSubmitted",
    "localQuery",
    "setLocalQuery",
    "setTotalResults",
    "keywords",
    "useQuery",
    "a",
    "axiosInstance",
    "get",
    "params",
    "cancelToken",
    "token",
    "enabled",
    "searchMovies",
    "useInfiniteQuery",
    "pageParam",
    "parse",
    "cacheTime",
    "getPreviousPageParam",
    "firstPage",
    "getNextPageParam",
    "lastPage",
    "total_pages",
    "onSuccess",
    "current",
    "pages",
    "sort",
    "reverse",
    "total_results",
    "searchTV",
    "searchPeople",
    "handleSearchQuery",
    "trim",
    "useOutsideClick",
    "handler",
    "parseNumbers",
    "hasNextPage",
    "fetchNextPage",
    "isFetching",
    "totalMovies",
    "totalTV",
    "totalPeople",
    "cancel",
    "focus",
    "placeholder",
    "onFocus",
    "onBlur",
    "onKeyPress",
    "onChange",
    "target",
    "remove",
    "LockOutlinedIcon",
    "LockOpenOutlinedIcon",
    "keyword",
    "Boolean",
    "VerticalTV",
    "first_air_date",
    "HorizontalTV",
    "Search",
    "isModalOpen",
    "onModalOpen",
    "onModalClose",
    "setQuery",
    "setMovies",
    "setTV",
    "setPeople",
    "setIsLoading",
    "setTimeout",
    "isCentered",
    "bool",
    "Horizontal",
    "UserLink",
    "User",
    "userLinks",
    "PaletteTwoToneIcon",
    "PaletteOutlinedIcon",
    "userLink",
    "isMdUp",
    "isLgUp",
    "useTransitionsStyle",
    "zIndex",
    "ConfirmModal",
    "DescriptionModal",
    "Container",
    "BackgroundItem",
    "backgrounds",
    "WbSunnyOutlinedIcon",
    "Brightness2OutlinedIcon",
    "Background",
    "form",
    "watch",
    "control",
    "render",
    "field",
    "setValue",
    "shouldDirty",
    "ColorItem",
    "CheckOutlinedIcon",
    "Color",
    "isMob",
    "columns",
    "toggleColorMode",
    "useForm",
    "defaultValues",
    "useFormState",
    "isDirty",
    "dirtyFields",
    "handleClose",
    "handleSubmit",
    "values",
    "newTheme",
    "schema",
    "yup",
    "shape",
    "required",
    "CreateList",
    "reValidateMode",
    "resolver",
    "yupResolver",
    "fieldState",
    "isRequired",
    "autoComplete",
    "errorBorderColor",
    "focusBorderColor",
    "isInvalid",
    "message",
    "isFullWidthname",
    "List",
    "isSelected",
    "fromNow",
    "CheckBoxTwoToneIcon",
    "CheckBoxOutlineBlankOutlinedIcon",
    "ListsModal",
    "isCreateListOpen",
    "onCreateListOpen",
    "onCreateListClose",
    "selected",
    "setSelected",
    "handleIsSelected",
    "updatedLists",
    "updatedList",
    "handleSaveItem",
    "MotionBox",
    "motion",
    "Box",
    "Splashscreen",
    "closeOnEsc",
    "closeOnOverlayClick",
    "animate",
    "backgroundPosition",
    "ease",
    "repeat",
    "Infinity",
    "bgSize",
    "bgGradient",
    "bgClip",
    "Home",
    "popularMovies",
    "trendingMovies",
    "popularTV",
    "trendingTV",
    "trendingPeople",
    "likedListsSortBy",
    "movieSortBy",
    "likedListsMovieSortBy",
    "tvSortBy",
    "likedListsTvSortBy",
    "peopleSortBy",
    "likedListsPeopleSortBy",
    "Department",
    "Departments",
    "handleDepartmentClick",
    "getValues",
    "activeDepartment",
    "DisplayModeItem",
    "displayModes",
    "GridOnTwoToneIcon",
    "GridOnOutlinedIcon",
    "ListAltTwoToneIcon",
    "ListAltOutlinedIcon",
    "DisplayMode",
    "Genre",
    "Genres",
    "movieGenres",
    "tvGenres",
    "handleGenreClick",
    "activeGenre",
    "handleAllLabel",
    "handleAllClick",
    "SortByItem",
    "onSortChange",
    "onDirectionChange",
    "ArrowDownwardOutlinedIcon",
    "SortBy",
    "handleSortChange",
    "paramSort",
    "findIndex",
    "next",
    "handleDirectionChange",
    "Filters",
    "isLikedLists",
    "onFilter",
    "VisibilityOutlinedIcon",
    "handleSubmitFilters",
    "header",
    "isSm",
    "headerTotal",
    "wrap",
    "VerticalGrid",
    "MediaTypeItem",
    "mediaTypesList",
    "MediaTypes",
    "mediaTypes",
    "onSetType",
    "handleClick",
    "mediaTypeItem",
    "MediaTypePicker",
    "Description",
    "HorizontalPoster",
    "isHoveringDescription",
    "setIsHoveringDescription",
    "HorizontalMovie",
    "overview",
    "HorizontalPerson",
    "arraySort",
    "known_for",
    "item",
    "All",
    "Liked",
    "isMediaTypePickerOpen",
    "onMediaTypePickerOpen",
    "onMediaTypePickerClose",
    "isSmallMob",
    "paramMediaType",
    "useParams",
    "setMediaType",
    "handleHasMediaTypes",
    "filteredMovies",
    "handleFilterMovies",
    "filteredTV",
    "handleFilterTV",
    "filteredPeople",
    "handleFilterPeople",
    "handleReturnMediaTypes",
    "EditList",
    "MediaType",
    "handleReturnTitle",
    "screen",
    "ListInfo",
    "isSame",
    "format",
    "Radio",
    "isChecked",
    "radio",
    "ListItem",
    "isSelectable",
    "onSelected",
    "isHoveringCheckbox",
    "setIsHoveringCheckbox",
    "flex",
    "activeList",
    "Toast",
    "onInfo",
    "onEdit",
    "onDelete",
    "InfoTwoToneIcon",
    "EditOutlinedIcon",
    "DeleteOutlineOutlinedIcon",
    "Lists",
    "isListPickerOpen",
    "onListPickerOpen",
    "onListPickerClose",
    "isEditListOpen",
    "onEditListOpen",
    "onEditListClose",
    "isListInfoOpen",
    "onListInfoOpen",
    "onListInfoClose",
    "useToast",
    "setList",
    "handleSelectList",
    "handleCloseToast",
    "closeAll",
    "isClosable",
    "ListPicker",
    "Movies",
    "upcomingMovies",
    "moviesNowPlaying",
    "topRatedMovies",
    "LoadMore",
    "total",
    "onFetch",
    "max",
    "round",
    "VerticalMovies",
    "MoviesNowPlaying",
    "setSortBy",
    "setGenres",
    "active",
    "PopularMovies",
    "TopRatedMovies",
    "UpcomingMovies",
    "VerticalPeople",
    "People",
    "setDepartments",
    "popularPeople",
    "_genres",
    "Bio",
    "biography",
    "useBoolean",
    "setIsExpanded",
    "startingHeight",
    "paragraph",
    "toggle",
    "gradient",
    "handleReturnGradient",
    "socials",
    "bottom",
    "poster",
    "Arrow",
    "arrow",
    "content",
    "pointerEvents",
    "_after",
    "_before",
    "ChevronLeftOutlinedIcon",
    "HorizontalScroll",
    "containerRef",
    "setContainerRef",
    "handleContainerRef",
    "Poster",
    "onClickPoster",
    "on",
    "off",
    "href",
    "iconComponent",
    "isExternal",
    "ImdbIcon",
    "xmlns",
    "aria-hidden",
    "role",
    "preserveAspectRatio",
    "viewBox",
    "d",
    "fill",
    "Links",
    "facebook_id",
    "FacebookIcon",
    "twitter_id",
    "TwitterIcon",
    "instagram_id",
    "InstagramIcon",
    "imdb_id",
    "Socials",
    "Details",
    "birthday",
    "place_of_birth",
    "deathday",
    "diff",
    "Badge",
    "MediaItem",
    "isBefore",
    "handleIfDateIsFuture",
    "CastMovies",
    "withoutDate",
    "withDate",
    "handleSort",
    "character",
    "CastTV",
    "episode_count",
    "CrewMovies",
    "job",
    "CrewTV",
    "Panel",
    "AccordionItem",
    "accordion",
    "panel",
    "credits",
    "toLowerCase",
    "textAlign",
    "cast",
    "crew",
    "KeyboardArrowDownOutlinedIcon",
    "DummyAccordion",
    "Accordion",
    "DummyAccordionItem",
    "allowMultiple",
    "allowToggle",
    "defaultIndex",
    "indexes",
    "isArray",
    "isAccordionsExpanded",
    "onToggleAccordions",
    "QuickToggles",
    "onToggleAccordion",
    "spy",
    "smooth",
    "offset",
    "Filmography",
    "expandedAccordions",
    "setExpandedAccordions",
    "_department",
    "paramDepartment",
    "KnownFor",
    "knownFor",
    "Actions",
    "isFullscreen",
    "setIsFullscreen",
    "onGalleryClick",
    "handleCloseFullscreen",
    "document",
    "exitFullscreen",
    "DashboardOutlinedIcon",
    "FullscreenExitOutlinedIcon",
    "FullscreenOutlinedIcon",
    "documentElement",
    "requestFullscreen",
    "onClickImage",
    "file_path",
    "Gallery",
    "activeIndex",
    "images",
    "Navigation",
    "onNavigation",
    "Viewer",
    "onSwiper",
    "onSlideChange",
    "spaceBetween",
    "slidesPerView",
    "swiper",
    "MediaViewer",
    "isGalleryOpen",
    "onGalleryOpen",
    "onGalleryClose",
    "selectedImage",
    "setSwiper",
    "setActiveIndex",
    "handleSlideTo",
    "slideTo",
    "Photos",
    "_image",
    "Person",
    "isMediaViewerOpen",
    "onMediaViewerOpen",
    "onMediaViewerClose",
    "selectedPhoto",
    "setSelectedPhoto",
    "personQuery",
    "creditsQuery",
    "movieCreditsQuery",
    "tvCreditsQuery",
    "externalIdsQuery",
    "imagesQuery",
    "taggedImagesQuery",
    "handleOnImageClick",
    "filtered",
    "Set",
    "duplicate",
    "has",
    "add",
    "_item",
    "handleGetKnownFor",
    "handleGetDepartments",
    "profiles",
    "breakpoints",
    "setRefetch",
    "Trending",
    "handleRefetch",
    "handleDisabledFilters",
    "TV",
    "tvAiringToday",
    "onTV",
    "topRatedTV",
    "TVAiringToday",
    "OnTV",
    "PopularTV",
    "TopRatedTV",
    "ComponentBox",
    "Page",
    "initial",
    "Routes",
    "scrollingElement",
    "scrollTo",
    "AnimatePresence",
    "exitBeforeEnter",
    "exact",
    "Popular",
    "Upcoming",
    "TopRated",
    "ScrollToTop",
    "setScrollHeight",
    "scrollTop",
    "addEventListener",
    "removeEventListener",
    "ArrowUpwardOutlinedIcon",
    "Sidebar",
    "borderRight",
    "borderRightColor",
    "RemoveOutlinedIcon",
    "AddOutlinedIcon",
    "Layout",
    "setWidth",
    "setLeft",
    "queries",
    "useQueries",
    "useQueriesTyped",
    "queryKey",
    "queryFn",
    "basename",
    "Confirm",
    "queryClient",
    "QueryClient",
    "defaultOptions",
    "refetchOnWindowFocus",
    "retry",
    "App",
    "QueryClientProvider",
    "client",
    "persistor",
    "persistStore",
    "ReactDOM",
    "loading",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.a874ddc0.chunk.js",
  "sourcesContent": [
    "import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n",
    "import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\n\r\nexport default instance;\r\n",
    "import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { HeaderProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isMouseDown, onOpen: onMouseDown, onClose: onMouseLeave } = useDisclosure();\r\n\r\n  const { title, isLoading = false, reset = false, scrollButtons, variant = 'transparent', onScrollClick } = props;\r\n\r\n  const [direction, setDirection] = useState<'left' | 'right' | ''>('');\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (direction === 'left' || direction === 'right') {\r\n      onScrollClick(direction);\r\n    }\r\n  }, [direction, onScrollClick]);\r\n\r\n  const handleIsMouseDown = useCallback(() => {\r\n    if (isMouseDown) {\r\n      interval = setInterval(() => {\r\n        handleScroll();\r\n      }, 25);\r\n    }\r\n  }, [isMouseDown, interval]);\r\n\r\n  const handleIsMouseUp = () => {\r\n    setDirection('');\r\n    clearInterval(interval);\r\n\r\n    onMouseLeave();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsMouseDown();\r\n  }, [isMouseDown]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleIsMouseUp();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <HStack\r\n      width='100%'\r\n      justify='space-between'\r\n      borderBottom={variant === 'outlined' ? 'solid2' : 'none'}\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={variant === 'transparent' ? 2 : 0}\r\n      py={variant === 'transparent' ? 2 : 1.25}>\r\n      {typeof title === 'string' ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='2xl'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n      ) : (\r\n        title\r\n      )}\r\n\r\n      {/* Scroll buttons */}\r\n      {!utils.handleIsTouchDevice() && (\r\n        <HStack spacing={variant === 'transparent' ? 2 : 1.25}>\r\n          {/* Maybe add an auto scroll button */}\r\n          <Tooltip\r\n            aria-label='Scroll left'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll left (${!isMouseDown ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.left}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll left'\r\n              isDisabled={isLoading || scrollButtons.left}\r\n              icon={ArrowBackOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isMouseDown) {\r\n                  onMouseDown();\r\n                  setDirection('left');\r\n                }\r\n              }}\r\n              onMouseUp={() => handleIsMouseUp()}\r\n              size={variant === 'transparent' ? 'md' : 'sm'}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n          <Tooltip\r\n            aria-label='Scroll right'\r\n            closeOnClick={false}\r\n            closeOnMouseDown={false}\r\n            label={`Scroll right (${!isMouseDown ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n            placement='top'\r\n            isDisabled={isLoading || scrollButtons.right}\r\n            span>\r\n            <IconButton\r\n              aria-label='Scroll right'\r\n              isDisabled={isLoading || scrollButtons.right}\r\n              icon={ArrowForwardOutlinedIcon}\r\n              onMouseDown={() => {\r\n                if (!isMouseDown) {\r\n                  onMouseDown();\r\n                  setDirection('right');\r\n                }\r\n              }}\r\n              onMouseUp={() => handleIsMouseUp()}\r\n              size={variant === 'transparent' ? 'md' : 'sm'}\r\n              variant='outlined'\r\n            />\r\n          </Tooltip>\r\n        </HStack>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { ReactElement, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ChevronLeftOutlined as ChevronLeftOutlinedIcon,\r\n  ChevronRightOutlined as ChevronRightOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport useStyles from './styles';\r\nimport { ArrowProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isMouseDown, onOpen: onMouseDown, onClose: onMouseLeave } = useDisclosure();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { direction, isDisabled = false, reset = false, onScrollClick } = props;\r\n\r\n  const handleIsMouseDown = useCallback(() => {\r\n    if (isMouseDown) {\r\n      interval = setInterval(() => {\r\n        onScrollClick(direction);\r\n      }, 25);\r\n    }\r\n  }, [isMouseDown, interval, direction, onScrollClick]);\r\n\r\n  const handleIsMouseUp = (): void => {\r\n    clearInterval(interval);\r\n\r\n    onMouseLeave();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsMouseDown();\r\n  }, [isMouseDown]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleIsMouseUp();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <Center\r\n      width='auto'\r\n      position='absolute'\r\n      left={direction === 'left' ? 0 : undefined}\r\n      right={direction === 'right' ? 0 : undefined}\r\n      zIndex={1}\r\n      backgroundColor='transparent'\r\n      _after={direction === 'left' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}\r\n      _before={direction === 'right' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}>\r\n      <ScaleFade in={!isDisabled} unmountOnExit>\r\n        <Center backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <IconButton\r\n            aria-label={`Scroll ${direction}`}\r\n            icon={direction === 'left' ? ChevronLeftOutlinedIcon : ChevronRightOutlinedIcon}\r\n            onMouseDown={() => {\r\n              if (!isMouseDown) {\r\n                onMouseDown();\r\n              }\r\n            }}\r\n            onMouseUp={() => handleIsMouseUp()}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Center>\r\n      </ScaleFade>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n",
    "export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 64\r\n};\r\n",
    "import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n",
    "export type Breadcrumb = {\r\n  label: string;\r\n  consistsOf: string[];\r\n};\r\n\r\nexport type RouteBreadcrumb = { [key: string]: Breadcrumb };\r\n\r\nconst breadcrumbs: RouteBreadcrumb = {\r\n  '/': {\r\n    label: 'Home',\r\n    consistsOf: ['/']\r\n  },\r\n  '/liked': {\r\n    label: 'Liked',\r\n    consistsOf: ['/', '/liked']\r\n  },\r\n  '/liked/movie': {\r\n    label: 'Movies',\r\n    consistsOf: ['/', '/liked', '/liked/movie']\r\n  },\r\n  '/liked/tv': {\r\n    label: 'TV Shows',\r\n    consistsOf: ['/', '/liked', '/liked/tv']\r\n  },\r\n  '/liked/person': {\r\n    label: 'People',\r\n    consistsOf: ['/', '/liked', '/liked/person']\r\n  },\r\n  '/lists': {\r\n    label: 'Lists',\r\n    consistsOf: ['/', '/lists']\r\n  },\r\n  '/lists/:id': {\r\n    label: 'List',\r\n    consistsOf: ['/', '/lists', '/lists/:id']\r\n  },\r\n  '/lists/:id/:mediaType': {\r\n    label: 'List',\r\n    consistsOf: ['/', '/lists', '/lists/:id', '/lists/:id/:mediaType']\r\n  },\r\n  '/search': {\r\n    label: 'Search',\r\n    consistsOf: ['/', '/search']\r\n  },\r\n  '/trending': {\r\n    label: 'Trending',\r\n    consistsOf: ['/', '/trending']\r\n  },\r\n  '/trending/movie': {\r\n    label: 'Movies',\r\n    consistsOf: ['/', '/trending', '/trending/movie']\r\n  },\r\n  '/trending/tv': {\r\n    label: 'TV Shows',\r\n    consistsOf: ['/', '/trending', '/trending/tv']\r\n  },\r\n  '/trending/person': {\r\n    label: 'People',\r\n    consistsOf: ['/', '/trending', '/trending/person']\r\n  },\r\n  '/movies': {\r\n    label: 'Movies',\r\n    consistsOf: ['/', '/movies']\r\n  },\r\n  '/movies/popular': {\r\n    label: 'Popular',\r\n    consistsOf: ['/', '/movies', '/movies/popular']\r\n  },\r\n  '/movies/upcoming': {\r\n    label: 'Upcoming',\r\n    consistsOf: ['/', '/movies', '/movies/upcoming']\r\n  },\r\n  '/movies/now-playing': {\r\n    label: 'Now playing',\r\n    consistsOf: ['/', '/movies', '/movies/now-playing']\r\n  },\r\n  '/movies/top-rated': {\r\n    label: 'Top rated',\r\n    consistsOf: ['/', '/movies', '/movies/top-rated']\r\n  },\r\n  '/tv': {\r\n    label: 'TV Shows',\r\n    consistsOf: ['/', '/tv']\r\n  },\r\n  '/tv/popular': {\r\n    label: 'Popular',\r\n    consistsOf: ['/', '/tv', '/tv/popular']\r\n  },\r\n  '/tv/airing-today': {\r\n    label: 'Airing today',\r\n    consistsOf: ['/', '/tv', '/tv/airing-today']\r\n  },\r\n  '/tv/on-tv': {\r\n    label: 'On at the moment',\r\n    consistsOf: ['/', '/tv', '/tv/on-tv']\r\n  },\r\n  '/tv/top-rated': {\r\n    label: 'Top rated',\r\n    consistsOf: ['/', '/tv', '/tv/top-rated']\r\n  },\r\n  '/people': {\r\n    label: 'People',\r\n    consistsOf: ['/', '/people']\r\n  },\r\n  '/person/:id': {\r\n    label: 'Person',\r\n    consistsOf: ['/', '/people', '/person/:id']\r\n  }\r\n};\r\n\r\nexport default breadcrumbs;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Breadcrumb as CUIBreadcrumb, Icon } from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport breadcrumbs from '../../../../common/data/breadcrumbs';\r\n\r\nconst Breadcrumb = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  // const style = useStyles(theme);\r\n\r\n  // const { id, mediaType } = useParams<Params>();\r\n  const location = useLocation();\r\n  // const history = useHistory();\r\n\r\n  // const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  // const [state, setstate] = useState<BreadcrumbType[]>([]);\r\n\r\n  // const handleCheckBreadcrumb = (): boolean => {\r\n  //   const splitLocation = location.pathname.split('/');\r\n\r\n  //   console.log(splitLocation);\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // const handleGenericBreadcrumbLabel = (): string => {\r\n  //   return '';\r\n  // };\r\n\r\n  const handleReturnBreadcrumbs = (): string[] => {\r\n    if (breadcrumbs[location.pathname]) {\r\n      return breadcrumbs[location.pathname].consistsOf;\r\n    } else {\r\n      // const splitLocation = location.pathname.split('/').filter((item) => item);\r\n      // const breadcrumb = breadcrumbs[`/${splitLocation[0]}`];\r\n      // console.log(breadcrumb);\r\n\r\n      return [];\r\n    }\r\n  };\r\n\r\n  handleReturnBreadcrumbs();\r\n\r\n  // useEffect(() => {\r\n  //   setstate([]);\r\n\r\n  //   if (location.pathname.includes('lists')) {\r\n  //     if (id && mediaType) {\r\n  //       const label =\r\n  //         mediaType === 'movie'\r\n  //           ? 'Movies'\r\n  //           : mediaType === 'tv'\r\n  //           ? 'TV Shows'\r\n  //           : mediaType === 'person'\r\n  //           ? 'People'\r\n  //           : 'Media-Type';\r\n\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         },\r\n  //         {\r\n  //           label,\r\n  //           path: `/lists/${id}/${mediaType}`\r\n  //         }\r\n  //       ]);\r\n  //     } else if (id) {\r\n  //       setstate([\r\n  //         {\r\n  //           label: lists.find((list) => list.id === id)?.label || 'List-Name',\r\n  //           path: `/lists/${id}`\r\n  //         }\r\n  //       ]);\r\n  //     }\r\n  //   } else if (mediaType) {\r\n  //     const label =\r\n  //       mediaType === 'movie'\r\n  //         ? 'Movies'\r\n  //         : mediaType === 'tv'\r\n  //         ? 'TV Shows'\r\n  //         : mediaType === 'person'\r\n  //         ? 'People'\r\n  //         : 'Media-Type';\r\n\r\n  //     setstate([\r\n  //       {\r\n  //         label,\r\n  //         path: location.pathname.includes('trending')\r\n  //           ? `/trending/${mediaType}`\r\n  //           : location.pathname.includes('liked')\r\n  //           ? `/liked/${mediaType}`\r\n  //           : ''\r\n  //       }\r\n  //     ]);\r\n  //   }\r\n  // }, [location]);\r\n\r\n  // console.log(history);\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${theme.fontSizes.xl} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {/* {[...(breadcrumbs[location.pathname]?.consistsOf || [])].map((breadcrumb: string) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb}\r\n          isCurrentPage={breadcrumb.includes(':') ? handleCheckBreadcrumb() : location.pathname === breadcrumb}\r\n          fontSize={['xl']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          {(breadcrumb.includes(':') ? handleCheckBreadcrumb() : location.pathname === breadcrumb) ? (\r\n            <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n              {(breadcrumb.includes(':') ? handleGenericBreadcrumbLabel() : breadcrumbs[breadcrumb].label) || ''}\r\n            </Text>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              as={Link}\r\n              to={breadcrumb}\r\n              sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n              {breadcrumbs[breadcrumb].label || ''}\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))} */}\r\n      <h1>Hello</h1>\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n",
    "import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    colorMode: colorModeProp,\r\n    icon,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  {\r\n    color = 'gray',\r\n    size = 'md',\r\n    variant = 'contained',\r\n    isLoading = false\r\n  }: Omit<IconButtonProps, 'aria-label' | 'icon'>\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'icon' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'sm' ? theme.space[0.5] : size === 'md' ? theme.space[1] : theme.space[2],\r\n\r\n      transform: variant !== 'icon' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes['2xl'] : theme.fontSizes['3xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import {\r\n  HomeTwoTone as HomeTwoToneIcon,\r\n  HomeOutlined as HomeOutlinedIcon,\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  SearchTwoTone as SearchTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TheatersTwoTone as TheatersTwoToneIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon,\r\n  WhatshotOutlined as WhatshotOutlinedIcon,\r\n  WhatshotTwoTone as WhatshotTwoToneIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport { NavItem } from '../../components/NavItems/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n",
    "import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    minWidth: '46px',\r\n    minHeight: '46px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n    backgroundColor: `${color}.400`,\r\n    borderColor: `${color}.400`,\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '23px' : size === 'md' ? '45px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n  },\r\n  light: {\r\n    color: 'gray.50'\r\n  },\r\n  dark: {\r\n    color: 'gray.900'\r\n  }\r\n});\r\n",
    "import React, { ReactElement, ForwardedRef, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = forwardRef(function Button(props: ButtonProps, ref: ForwardedRef<HTMLButtonElement>): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n      whiteSpace: 'nowrap',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'text' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'sm'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.600`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.600`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: `${color}.500`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.400`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.500`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.500`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.500`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: `${color}.400`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.400`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.400`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.400`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.600',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.400',\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.600',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.500',\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.400',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.400',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.500',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.500',\r\n            backgroundColor: 'gray.50',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.400'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.500'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.300`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.300`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: `${color}.400`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.500`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.400`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.400`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.400`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: `${color}.500`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.500`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.500`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.500`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': 'gray.300',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.500',\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.300',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.400',\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': 'gray.500',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'gray.500',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'gray.400',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'gray.400',\r\n            backgroundColor: 'gray.900',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: 'gray.500'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: 'gray.400'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport Button from '../../../components/Clickable/Button';\r\nimport { StateProps, ListModal, DescriptionModal, ConfirmModal } from './types';\r\n\r\nexport const defaultListsModal: ListModal = {\r\n  open: false,\r\n  title: '',\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultDescriptionModal: DescriptionModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultConfirmModal: ConfirmModal = {\r\n  open: false,\r\n  title: 'Lorem ipsum',\r\n  description:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n  submitButton: (\r\n    <Button isDisabled size='sm'>\r\n      Close\r\n    </Button>\r\n  )\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultDescriptionModal },\r\n    confirmModal: { ...defaultConfirmModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: true\r\n  }\r\n};\r\n\r\nconst modalsSlice = createSlice({\r\n  name: 'modals',\r\n  initialState,\r\n  reducers: {\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleConfirm: (state: StateProps, action: PayloadAction<ConfirmModal>) => {\r\n      state.ui.confirmModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleList, toggleDescription, toggleConfirm, toggleDisplay, toggleSplashscreen } = modalsSlice.actions;\r\n\r\nexport default modalsSlice.reducer;\r\n",
    "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItems, List, Theme } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    liked: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        description:\r\n          \"A collection of movies and tv shows that I'm looking forward to watching and hopefully re-watch 🥳 🤓\",\r\n        date: moment(new Date()).toISOString(),\r\n        results: {\r\n          movies: [],\r\n          tv: []\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTheme, setRecentSearches, setRecentlyViewed, setLiked, setLists } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n",
    "import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport modalsReducer from './slices/Modals';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  modals: modalsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n",
    "import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['modals']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n",
    "const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n",
    "const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n",
    "const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '640px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n",
    "const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n",
    "const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n",
    "const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n",
    "const zIndices = {\r\n  hide: -1,\r\n  auto: 'auto',\r\n  base: 0,\r\n  docked: 10,\r\n  dropdown: 1000,\r\n  sticky: 1100,\r\n  banner: 1200,\r\n  overlay: 1300,\r\n  toast: 1350,\r\n  modal: 1400,\r\n  popover: 1500,\r\n  skipLink: 1600,\r\n  tooltip: 1800\r\n};\r\n\r\nexport default zIndices;\r\n",
    "import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\nimport zIndices from './z-index';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  zIndices,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n",
    "import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n",
    "// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n",
    "type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n",
    "import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Department } from '../data/departments';\r\nimport { Genre, MediaType, SortBy } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @param mediaType - Type of genres\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  handleIsTouchDevice: (): boolean => {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param section - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (section === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleParseDurationForFramer: (time: number): number => {\r\n    return time / 1000;\r\n  },\r\n\r\n  handleCheckHasFilters: (sortBy?: SortBy, genres?: Genre[], departments?: Department[]): boolean => {\r\n    let hasFilters = false;\r\n\r\n    if (!hasFilters && sortBy && sortBy.isActive) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(genres)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    if (!hasFilters && !_.isEmpty(departments)) {\r\n      hasFilters = true;\r\n    }\r\n\r\n    return hasFilters;\r\n  },\r\n\r\n  /**\r\n   * This method will return the proper typed button color depending on the color passed\r\n   *\r\n   * @param color - Current user selected color from display modal\r\n   * @returns - Proper typed color to be used in IconButton/Button\r\n   */\r\n  handleReturnColor: (color: unknown): ButtonProps['color'] => {\r\n    switch (color) {\r\n      case 'orange':\r\n        return 'orange';\r\n      case 'yellow':\r\n        return 'yellow';\r\n      case 'green':\r\n        return 'green';\r\n      case 'teal':\r\n        return 'teal';\r\n      case 'cyan':\r\n        return 'cyan';\r\n      case 'purple':\r\n        return 'purple';\r\n      case 'pink':\r\n        return 'pink';\r\n      default:\r\n        return 'blue';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will return a url that will fetch an img from boringavatars\r\n   * boringavatars - https://boringavatars.com/\r\n   *\r\n   * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n   * @param size - Size of poster\r\n   * @param alt - Image alt\r\n   * @returns - boringavatars URL\r\n   */\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`.replace(/ /g, '');\r\n    const colors: string = [\r\n      theme.colors.red[400],\r\n      theme.colors.orange[400],\r\n      theme.colors.yellow[400],\r\n      theme.colors.green[400],\r\n      theme.colors.teal[400],\r\n      theme.colors.blue[400],\r\n      theme.colors.cyan[400],\r\n      theme.colors.purple[400],\r\n      theme.colors.pink[400]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, width, closeDelay, openDelay, gutter = 12, span = false, ...rest } = props;\r\n\r\n  return !utils.handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms')}\r\n      hasArrow\r\n      gutter={gutter}\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${colorMode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {span ? <span style={{ width: width || 'auto' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = ({ label, path, isLastChild = false }: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const location = useLocation();\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack width='100%' spacing='15px'>\r\n        {sidebarMode === 'expanded' ? (\r\n          <Box height='44px' borderLeft='solid2' borderLeftColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n        ) : null}\r\n        <Tooltip\r\n          aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n          width='100%'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={sidebarMode === 'collapsed' ? label : ''}\r\n          placement='right'\r\n          span>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </Tooltip>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useDisclosure,\r\n  VStack,\r\n  HStack,\r\n  Collapse,\r\n  Icon,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { NavItem as NavItemType } from '../../types';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, icon, iconActive, children } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isOpen : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        closeOnClick={false}\r\n        closeOnMouseDown={false}\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        placement='right'\r\n        span>\r\n        <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onClick={isOpen ? () => onClose() : () => onOpen()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='lg' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: utils.handleParseDurationForFramer(\r\n                    utils.handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes['2xl']} !important`,\r\n                    transform: `rotate(${isOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? '31px' : '0px'}\r\n            pr={sidebarMode === 'expanded' ? 2 : '0px'}\r\n            mb={sidebarMode === 'expanded' ? 1 : '0px'}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.500` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Logo from '../Logo';\r\nimport NavItem from './components/NavItem';\r\nimport { NavItemsProps, NavItem as NavItemType } from './types';\r\n\r\nconst NavItems = ({ navItems }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      <Box width='100%' height='2px' border='solid1' borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem: NavItemType) => (\r\n          <NavItem key={navItem.label} {...navItem} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} blockScrollOnMount={false} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Link as CUILink, useTheme } from '@chakra-ui/react';\r\nimport { Link as RRDLink } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { children, to, isDisabled = false, ...rest } = props;\r\n\r\n  return (\r\n    <CUILink\r\n      {...rest}\r\n      as={RRDLink}\r\n      to={!isDisabled ? { ...to } : {}}\r\n      sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n      _hover={{ textDecoration: 'none' }}\r\n      _focus={{ boxShadow: 'none' }}>\r\n      {children}\r\n    </CUILink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { children, colorMode: colorModeProp, variant = 'outlined', ...rest } = _.omit(props, ['color', 'isFullWidth']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box {...rest} sx={{ ..._.merge(style.card, style[mode][variant]) }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",
    "import { Style } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: Style;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    width: isFullWidth ? '100%' : 'auto',\r\n    height: 'auto',\r\n\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px',\r\n    borderRadius: 'lg',\r\n\r\n    transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, variant = 'transparent', handleScrollChange } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={variant === 'transparent' ? 2 : 0}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border={variant === 'transparent' ? 'solid2' : 'none'}\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        px={variant === 'transparent' ? 2 : 0}\r\n        py={2}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n",
    "import React, { ReactElement, UIEvent, SyntheticEvent, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Card from '../../Card';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport { HorizontalGridProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, title, footer, isLoading, variant = 'transparent' } = props;\r\n\r\n  const location = useLocation();\r\n\r\n  const [gridRef, setGridRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled = ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setGridRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, globalThis.UIEvent> | SyntheticEvent<HTMLDivElement>) => {\r\n    handleGridRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (gridRef) {\r\n        if (direction === 'left') {\r\n          gridRef.scrollLeft = gridRef.scrollLeft - 10;\r\n        } else {\r\n          gridRef.scrollLeft = gridRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Card isFullWidth variant={variant} px={variant === 'outlined' ? 2 : 0}>\r\n      <VStack width='100%' spacing={0}>\r\n        {/* Header */}\r\n        <Header\r\n          title={title}\r\n          isLoading={isLoading}\r\n          reset={resetScrollButtons}\r\n          scrollButtons={scrollButtons}\r\n          variant={variant}\r\n          onScrollClick={handleScrollClick}\r\n        />\r\n\r\n        {/* Grid */}\r\n        <Grid gridRef={handleGridRef} variant={variant} handleScrollChange={handleScrollChange}>\r\n          {children}\r\n        </Grid>\r\n\r\n        {/* Footer */}\r\n        {footer ? (\r\n          <Box\r\n            width='100%'\r\n            borderTop={variant === 'outlined' ? 'solid2' : 'none'}\r\n            borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            pt={1}\r\n            pb={variant === 'outlined' ? 1 : 0}>\r\n            {footer}\r\n          </Box>\r\n        ) : null}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { children, actions, title, colorMode: colorModeProp, isOpen, onClose, size, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n  const transition = `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`;\r\n\r\n  return (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isXs ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' || isXs ? 'none' : 'xl'}\r\n        m={0}\r\n        sx={{ transition }}>\r\n        <ModalHeader\r\n          px={2}\r\n          py={1.25}\r\n          borderBottom='solid2'\r\n          borderBottomColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n          sx={{ transition }}>\r\n          <HStack justifyContent='space-between'>\r\n            {typeof title !== 'string' ? (\r\n              title\r\n            ) : (\r\n              <Text align='left' fontSize='xl' fontWeight='semibold' color={mode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                {title}\r\n              </Text>\r\n            )}\r\n\r\n            <IconButton\r\n              aria-label='Close modal?'\r\n              colorMode={mode}\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            p={2}\r\n            borderTop='solid2'\r\n            borderTopColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n            sx={{ transition }}>\r\n            <Button colorMode={mode} onClick={() => onClose()} size='sm' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n",
    "export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";",
    "export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";",
    "export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";",
    "export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";",
    "export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";",
    "export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";",
    "export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";",
    "export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";",
    "import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          {label || description ? (\r\n            <VStack spacing={0}>\r\n              {label ? (\r\n                <Text\r\n                  align='center'\r\n                  fontSize='md'\r\n                  fontWeight='semibold'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                  {label}\r\n                </Text>\r\n              ) : null}\r\n              {description ? (\r\n                <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                  {description}\r\n                </Text>\r\n              ) : null}\r\n            </VStack>\r\n          ) : null}\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n",
    "export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";",
    "export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";",
    "export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";",
    "export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";",
    "export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";",
    "export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";",
    "export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";",
    "export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";",
    "import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        <VStack width='100%' spacing={2}>\r\n          {hasIllustration ? (\r\n            <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n          ) : null}\r\n          {label || description ? (\r\n            <VStack spacing={0}>\r\n              {label ? (\r\n                <Text\r\n                  align='center'\r\n                  fontSize='md'\r\n                  fontWeight='semibold'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                  {label}\r\n                </Text>\r\n              ) : null}\r\n              {description ? (\r\n                <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                  {description}\r\n                </Text>\r\n              ) : null}\r\n            </VStack>\r\n          ) : null}\r\n          {button || null}\r\n        </VStack>\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    isDisabled = false,\r\n    ...rest\r\n  } = _.omit(props, ['color', 'isFullWidth', 'isLightGray']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(style.card.back, style.card.disabled, style[mode].back, style[mode].disabled)\r\n            }\r\n          : { ..._.merge(style.card.back, style[mode].back) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[mode].front) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype CommonStyle = {\r\n  back: Style;\r\n  front: Style;\r\n  disabled: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle;\r\n  light: Omit<CommonStyle, 'icon'>;\r\n  dark: Omit<CommonStyle, 'icon'>;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isFullWidth = false, isLightGray = false }: CardProps): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '& *': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'stretch',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-2px)',\r\n\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`,\r\n          backgroundColor: 'gray.50',\r\n          color: isLightGray && color === 'gray' ? 'gray.300' : `${color}.500`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`,\r\n      backgroundColor: 'gray.50',\r\n      color: isLightGray && color === 'gray' ? 'gray.200' : `${color}.400`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'gray.50',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.200',\r\n        backgroundColor: 'gray.50',\r\n        color: 'gray.200'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.300',\r\n          backgroundColor: 'gray.50',\r\n          color: 'gray.300'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      'backgroundColor': isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n\r\n        '& .card_front': {\r\n          borderColor: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`,\r\n          backgroundColor: 'gray.900',\r\n          color: isLightGray && color === 'gray' ? 'gray.600' : `${color}.400`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: isLightGray && color === 'gray' ? 'gray.700' : `${color}.500`,\r\n      backgroundColor: 'gray.900',\r\n      color: `${color}.500`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '& .card_front': {\r\n        borderColor: 'gray.700',\r\n        backgroundColor: 'gray.900',\r\n        color: 'gray.700'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: 'gray.600',\r\n          backgroundColor: 'gray.900',\r\n          color: 'gray.600'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport { toggleList } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List } from '../../store/slices/User/types';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = (props: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const list = mediaItem\r\n    ? lists.find((list) => {\r\n        switch (mediaType) {\r\n          case 'movie':\r\n            return list.results.movies.some((movie) => movie.id === mediaItem.id);\r\n          case 'tv':\r\n            return list.results.tv.some((show) => show.id === mediaItem.id);\r\n          default:\r\n            return;\r\n        }\r\n      })\r\n    : undefined;\r\n  const isBookmarked: boolean = list\r\n    ? mediaType === 'movie'\r\n      ? list.results.movies.some((movie) => movie.id === mediaItem?.id)\r\n      : list.results.tv.some((show) => show.id === mediaItem?.id)\r\n    : false;\r\n\r\n  const handleRemoveBookmark = (list: List): void => {\r\n    const results = { ...list.results };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        results.movies = results.movies.filter((movie) => movie.id !== mediaItem?.id) || [];\r\n        break;\r\n      case 'tv':\r\n        results.tv = results.tv.filter((show) => show.id !== mediaItem?.id) || [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      setLists(\r\n        lists.map((paramList) =>\r\n          paramList.id === list.id\r\n            ? {\r\n                ...paramList,\r\n                results: { ...results }\r\n              }\r\n            : paramList\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleOpenListsModal = (): void => {\r\n    if (mediaItem) {\r\n      dispatch(\r\n        toggleList({\r\n          open: true,\r\n          title,\r\n          mediaType,\r\n          mediaItem: {\r\n            ...mediaItem\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n          : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n          : `Add \"${title}\" to a list`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n            : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n        }\r\n        color={isBookmarked ? utils.handleReturnColor(color) : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={isBookmarked && list ? () => handleRemoveBookmark(list) : () => handleOpenListsModal()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n",
    "import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 1000\r\n};\r\n",
    "import { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color): string => {\r\n    switch (color) {\r\n      default:\r\n        return type === 'start' ? 'gray.200' : 'gray.400';\r\n    }\r\n  }\r\n};\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio, Image as CUIImage } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport Skeleton from '../Skeleton';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoading, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio\r\n      width={width || '100%'}\r\n      minWidth={width || '100%'}\r\n      maxWidth={width || '100%'}\r\n      ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n        <CUIImage\r\n          {...rest}\r\n          alt={alt}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/w${size}${src}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc(mediaType, size, alt)}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = (props: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const { isDisabled = false, title, mediaType, mediaItem, size = 'sm' } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const isLiked: boolean =\r\n    liked && mediaItem\r\n      ? mediaType === 'movie'\r\n        ? liked.movies.some((movie) => movie.id === mediaItem.id)\r\n        : mediaType === 'tv'\r\n        ? liked.tv.some((show) => show.id === mediaItem.id)\r\n        : liked.people.some((person) => person.id === mediaItem.id)\r\n      : false;\r\n\r\n  const handleRemoveLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        updatedLiked.movies = updatedLiked.movies.filter((movie) => movie.id !== mediaItem?.id);\r\n        break;\r\n      case 'tv':\r\n        updatedLiked.tv = updatedLiked.tv.filter((show) => show.id !== mediaItem?.id);\r\n        break;\r\n      case 'person':\r\n        updatedLiked.people = updatedLiked.people.filter((person) => person.id !== mediaItem?.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  const handleLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie': {\r\n        const movieMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.movies = [...updatedLiked.movies, movieMediaItem];\r\n        break;\r\n      }\r\n      case 'tv': {\r\n        const showMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.tv = [...updatedLiked.tv, showMediaItem];\r\n        break;\r\n      }\r\n      case 'person': {\r\n        const personMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.people = [...updatedLiked.people, personMediaItem];\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n      label={isLiked ? `Dislike \"${title}\"` : `Like \"${title}\"`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled || !mediaItem}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled || !mediaItem}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={isLiked ? () => handleRemoveLike() : () => handleLike()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport Skeleton from '../../Skeleton';\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonProps } from '../types';\r\n\r\nconst SkeletonText = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <Skeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </Skeleton>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = (props: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { rating = defaultRating, isLoading = false, isHorizontal = false } = props;\r\n\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['lg'],\r\n    'sm': theme.fontSizes['lg'],\r\n    'md': theme.fontSizes['xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n  const fontSize = useBreakpointValue({\r\n    'base': theme.fontSizes['sm'],\r\n    'sm': theme.fontSizes['sm'],\r\n    'md': theme.fontSizes['md'],\r\n    'lg': theme.fontSizes['lg'],\r\n    'xl': theme.fontSizes['lg'],\r\n    '2xl': theme.fontSizes['xl']\r\n  });\r\n\r\n  // const handleRatingColor = (): 'red' | 'yellow' | 'blue' => {\r\n  //   if (rating.rating) {\r\n  //     if (rating.rating < 4) {\r\n  //       return 'red';\r\n  //     } else if (rating.rating < 7) {\r\n  //       return 'yellow';\r\n  //     } else {\r\n  //       return 'blue';\r\n  //     }\r\n  //   } else return 'yellow';\r\n  // };\r\n\r\n  return (\r\n    // <Tooltip\r\n    //   aria-label='Showing rating information'\r\n    //   label={\r\n    //     <Center>\r\n    //       <VStack spacing={1}>\r\n    //         <CircularProgress\r\n    //           color={`${handleRatingColor()}.400`}\r\n    //           value={rating.rating ? rating.rating * 10 : 0}\r\n    //           size='54px'>\r\n    //           <CircularProgressLabel color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>{`${\r\n    //             rating.rating ? rating.rating * 10 : 'N/A'\r\n    //           }%`}</CircularProgressLabel>\r\n    //         </CircularProgress>\r\n    //         {rating.count ? (\r\n    //           <Text color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n    //             {rating.count}\r\n    //           </Text>\r\n    //         ) : null}\r\n    //       </VStack>\r\n    //     </Center>\r\n    //   }\r\n    //   placement='top'\r\n    //   isDisabled={!rating.rating || !isLoaded}>\r\n    <Center\r\n      backgroundColor='transparent'\r\n      // borderRadius='sm'\r\n      // border='solid2'\r\n      // borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      // py='0.5'\r\n      // px='1'\r\n      p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${isHorizontal ? iconSize : theme.fontSizes.xl} !important`\r\n        }}\r\n      />\r\n      <SkeletonText isLoaded={!isLoading} ml={0.5}>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={isHorizontal ? fontSize : 'md'}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n    // </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={!isLoading}\r\n      mt={isLoading ? 0.5 : 0}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='xs'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {subtitle}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={!isLoading}\r\n      mb={isLoading ? 0.5 : 0}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='sm'\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {title}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { VStack, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = <MT extends MediaType>(props: VerticalPosterProps<MT>): ReactElement => {\r\n  const {\r\n    width,\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useState<boolean>(false);\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isHoveringLiked || isHoveringBookmark}\r\n      to={{ pathname: `/${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card isDisabled={isLoading} isLightGray>\r\n        <VStack width={width} position='relative' spacing={1} p={1}>\r\n          {/* Image */}\r\n          <Image\r\n            orientation='vertical'\r\n            mediaType={mediaType}\r\n            alt={image.alt}\r\n            src={image.src}\r\n            size={image.size}\r\n            isLoading={isLoading}\r\n          />\r\n          <VStack width='100%' spacing={mediaType !== 'person' ? 0.5 : 1}>\r\n            {/* Header */}\r\n            {mediaType !== 'person' ? (\r\n              <HStack width='100%' justify='space-between' spacing={0}>\r\n                {/* Rating component */}\r\n                <Rating rating={rating} isLoading={isLoading} />\r\n\r\n                <HStack spacing={0}>\r\n                  {/* Like component */}\r\n                  <Box onMouseEnter={() => setIsHoveringLiked(true)} onMouseLeave={() => setIsHoveringLiked(false)}>\r\n                    <Like isDisabled={isLoading} title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' />\r\n                  </Box>\r\n                  {/* List component */}\r\n                  <Box\r\n                    onMouseEnter={() => setIsHoveringBookmark(true)}\r\n                    onMouseLeave={() => setIsHoveringBookmark(false)}>\r\n                    <Bookmark\r\n                      isDisabled={isLoading}\r\n                      title={title}\r\n                      mediaType={mediaType}\r\n                      mediaItem={mediaItem}\r\n                      size='sm'\r\n                    />\r\n                  </Box>\r\n                </HStack>\r\n              </HStack>\r\n            ) : null}\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n          </VStack>\r\n\r\n          {/* Like component */}\r\n          {mediaType === 'person' ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 2\r\n              }}>\r\n              <Box onMouseEnter={() => setIsHoveringLiked(true)} onMouseLeave={() => setIsHoveringLiked(false)}>\r\n                <Like isDisabled={isLoading} title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' />\r\n              </Box>\r\n            </HStack>\r\n          ) : null}\r\n        </VStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: '780'\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n  // ) : (\r\n  //   <VerticalPoster\r\n  //     width={width || ['185px', '205px', '230px']}\r\n  //     mediaType='movie'\r\n  //     image={{\r\n  //       alt: 'Movie poster',\r\n  //       src: '',\r\n  //       size: '780'\r\n  //     }}\r\n  //     title='Lorem ipsum'\r\n  //     subtitle='Lorem ipsum'\r\n  //     isLoading\r\n  //   />\r\n  // );\r\n};\r\n\r\nexport default VerticalMovie;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n",
    "export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: '780'\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n  // ) : (\r\n  //   <VerticalPoster\r\n  //     width={width || ['185px', '205px', '230px']}\r\n  //     mediaType='person'\r\n  //     image={{\r\n  //       alt: 'Person poster',\r\n  //       src: '',\r\n  //       size: '780'\r\n  //     }}\r\n  //     title='Lorem ipsum'\r\n  //     subtitle='Lorem ipsum'\r\n  //     isLoading\r\n  //   />\r\n  // );\r\n};\r\n\r\nexport default VerticalPerson;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, ListItem, Badge, Text, Kbd, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, label, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isHoveringDelete, setIsHoveringDelete] = useState<boolean>(false);\r\n\r\n  const handleSearch = (): void => {\r\n    if (type === 'isKeyword' && onSearch) {\r\n      onSearch(label);\r\n    } else {\r\n      const search = { query: label, page: 1, mediaType };\r\n\r\n      history.push({\r\n        pathname: history.location.pathname,\r\n        search: queryString.stringify(_.omit(search, 'page'))\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 1}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' ? () => handleSearch() : undefined}\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        isLoaded={state === 'isLoaded'}>\r\n        <HStack spacing={1}>\r\n          {mediaType ? (\r\n            <Badge colorScheme={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}>\r\n              {mediaType}\r\n            </Badge>\r\n          ) : null}\r\n          <Text align='left' fontSize='md'>\r\n            {label}\r\n          </Text>\r\n        </HStack>\r\n      </SkeletonText>\r\n\r\n      <HStack spacing={1}>\r\n        <ScaleFade in={state === 'isFocused'} unmountOnExit>\r\n          <span>\r\n            To select<Kbd>enter</Kbd>\r\n          </span>\r\n        </ScaleFade>\r\n        {type !== 'isKeyword' ? (\r\n          <ScaleFade in={isHovering}>\r\n            <Tooltip label={`Remove \"${label}\"`} placement='top'>\r\n              <IconButton\r\n                aria-label='Remove search'\r\n                icon={ClearOutlinedIcon}\r\n                onClick={() => handleDelete()}\r\n                onMouseEnter={() => setIsHoveringDelete(true)}\r\n                onMouseLeave={() => setIsHoveringDelete(false)}\r\n                size='sm'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </ScaleFade>\r\n        ) : null}\r\n      </HStack>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n",
    "import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration['ultra-fast']} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration['ultra-fast']} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration['ultra-fast']} ${theme.transition.easing['ease-in-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text, ScaleFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport Empty from '../../../Empty';\r\nimport Row from '../Row';\r\n\r\nconst Default = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Card isFullWidth variant='transparent'>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack width='100%' justifyContent='space-between'>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            Recent searches\r\n          </Text>\r\n          <ScaleFade in={recentSearches.length > 0} unmountOnExit>\r\n            <Button onClick={() => dispatch(setRecentSearches([]))} size='sm' variant='text'>\r\n              Clear\r\n            </Button>\r\n          </ScaleFade>\r\n        </HStack>\r\n\r\n        <VStack\r\n          ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n          width='100%'\r\n          alignItems='flex-start'\r\n          spacing={0}\r\n          maxHeight='35vh'\r\n          overflowY='auto'\r\n          pr={isOverflown ? 2 : 0}>\r\n          {recentSearches.length > 0 ? (\r\n            _.sortBy(recentSearches, 'date').map((search) => (\r\n              <Row key={search.id} id={search.id} label={search.label} mediaType={search.mediaType} state='isLoaded' />\r\n            ))\r\n          ) : (\r\n            <Empty hasIllustration={false} label='No recent searches' size='xs' />\r\n          )}\r\n        </VStack>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\n\r\ntype DisplayProps = {\r\n  query: string;\r\n  totalResults?: number;\r\n};\r\n\r\nconst Display = ({ query = '', totalResults = 0 }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n      <Text\r\n        align='right'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'>{`${totalResults} result${totalResults > 1 ? 's' : ''} found`}</Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n",
    "import React, { ReactElement, useRef, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useOutsideClick,\r\n  VStack,\r\n  Box,\r\n  HStack,\r\n  Input,\r\n  List,\r\n  Icon,\r\n  Collapse,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport Default from './components/Default';\r\nimport Display from './components/Display';\r\nimport Row from './components/Row';\r\nimport { SearchFormProps, Keyword } from './types';\r\n\r\nconst SearchForm = (props: SearchFormProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    query,\r\n    sortBy = undefined,\r\n    genres = undefined,\r\n    departments = undefined,\r\n    refetch = false,\r\n    onQueryChange,\r\n    onMoviesChange,\r\n    onTVChange,\r\n    onPeopleChange,\r\n    onIsLoading,\r\n    onIsFetched\r\n  } = props;\r\n\r\n  const [isLocked, setIsLocked] = useState<boolean>(false);\r\n  const [isHoveringLock, setIsHoveringLock] = useState<boolean>(false);\r\n\r\n  const [isFocused, setIsFocused] = useState<boolean>(false);\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\r\n\r\n  const [localQuery, setLocalQuery] = useState<string>('');\r\n  const [totalResults, setTotalResults] = useState<number | undefined>(undefined);\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', localQuery],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query: localQuery },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: localQuery.length > 0 }\r\n  );\r\n\r\n  const searchMovies = useInfiniteQuery(\r\n    'searchMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onMoviesChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchTV = useInfiniteQuery(\r\n    'searchTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onTVChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchPeople = useInfiniteQuery(\r\n    'searchPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onPeopleChange({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFocus = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleSearchQuery = (query: string): void => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    setLocalQuery(query);\r\n    onQueryChange(query.trim());\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          searchPeople.refetch();\r\n          break;\r\n        case 'tv':\r\n          searchTV.refetch();\r\n          break;\r\n        case 'movie':\r\n          searchMovies.refetch();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  };\r\n\r\n  const handleResetSearch = (): void => {\r\n    setIsLocked(false);\r\n    setIsHoveringLock(false);\r\n    setIsFocused(false);\r\n    setIsHovering(false);\r\n    setHasSubmitted(false);\r\n    setTotalResults(undefined);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: inputRef,\r\n    handler: !isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if ((localQuery && localQuery.length > 0) || (query && query.length > 0)) {\r\n      if (params && params.page && params.mediaType) {\r\n        switch (params.mediaType) {\r\n          case 'person': {\r\n            if (searchPeople.hasNextPage) {\r\n              searchPeople.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'tv': {\r\n            if (searchTV.hasNextPage) {\r\n              searchTV.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'movie': {\r\n            if (searchMovies.hasNextPage) {\r\n              searchMovies.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        handleSearchQuery(localQuery || query);\r\n      }\r\n    } else if (params && params.query && typeof params.query === 'string') {\r\n      handleSearchQuery(params.query);\r\n    }\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'movie' && onIsLoading) {\r\n      onIsLoading(searchMovies.isFetching || searchMovies.isLoading);\r\n    }\r\n  }, [searchMovies.isFetching, searchMovies.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'tv' && onIsLoading) {\r\n      onIsLoading(searchTV.isFetching || searchTV.isLoading);\r\n    }\r\n  }, [searchTV.isFetching, searchTV.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'person' && onIsLoading) {\r\n      onIsLoading(searchPeople.isFetching || searchPeople.isLoading);\r\n    }\r\n  }, [searchPeople.isFetching, searchPeople.isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && (localQuery || query)) {\r\n      const totalMovies =\r\n        searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n          ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalTV =\r\n        searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n          ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalPeople =\r\n        searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n          ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n          : 0;\r\n\r\n      setHasSubmitted(true);\r\n      setTotalResults(totalMovies + totalTV + totalPeople);\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: localQuery || query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess, searchTV.isSuccess, searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    handleResetSearch();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (refetch) {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  }, [refetch]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={1}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        py={1.5}\r\n        // pb={isFocused || isLocked ? 2 : 1}\r\n        onClick={() => handleSetFocus()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}>\r\n        <HStack\r\n          borderBottom={isFocused || isLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFocused || isLocked ? 1.5 : 0}\r\n          mb={isFocused || isLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder='Try \"The Godfather\"'\r\n            onFocus={!isHoveringLock && !isLocked ? () => setIsFocused(true) : undefined}\r\n            onBlur={!isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined}\r\n            onKeyPress={(event) => {\r\n              if (event.key === 'Enter' && !hasSubmitted) {\r\n                history.push({\r\n                  pathname: history.location.pathname,\r\n                  search: queryString.stringify({ query: localQuery })\r\n                });\r\n              }\r\n            }}\r\n            onChange={(event) => {\r\n              setLocalQuery(event.target.value);\r\n              setHasSubmitted(false);\r\n\r\n              if (hasSubmitted) {\r\n                searchMovies.remove();\r\n                searchTV.remove();\r\n                searchPeople.remove();\r\n              }\r\n            }}\r\n            variant='unstyled'\r\n            value={localQuery}\r\n          />\r\n          <HStack spacing={0}>\r\n            <ScaleFade in={localQuery.length > 0} unmountOnExit>\r\n              <Tooltip label='Clear search' placement='top' gutter={4}>\r\n                <IconButton\r\n                  aria-label='Clear search'\r\n                  icon={ClearOutlinedIcon}\r\n                  onClick={() => setLocalQuery('')}\r\n                  size='sm'\r\n                  variant='icon'\r\n                />\r\n              </Tooltip>\r\n            </ScaleFade>\r\n            <Tooltip\r\n              label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n              placement='top'\r\n              closeOnClick={false}\r\n              closeOnMouseDown={false}\r\n              gutter={4}\r\n              span>\r\n              <IconButton\r\n                aria-label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n                icon={isLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n                onClick={() => setIsLocked(!isLocked)}\r\n                onMouseEnter={() => setIsHoveringLock(true)}\r\n                onMouseLeave={() => setIsHoveringLock(false)}\r\n                size='sm'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </HStack>\r\n        </HStack>\r\n        <Collapse in={isFocused || isLocked} unmountOnExit>\r\n          <List spacing={0}>\r\n            {keywords.isFetching || keywords.isLoading ? (\r\n              [...Array(5)].map((_dummy, index) => (\r\n                <Row key={index} id={`${index}`} label='' state='isLoading' type='isKeyword' />\r\n              ))\r\n            ) : keywords.isSuccess && keywords.data.length > 0 && !hasSubmitted ? (\r\n              keywords.data.map((keyword, index) =>\r\n                index < 5 ? (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={`${keyword.id}`}\r\n                    label={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => {\r\n                      setLocalQuery(query);\r\n\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({ query })\r\n                      });\r\n                    }}\r\n                  />\r\n                ) : null\r\n              )\r\n            ) : (\r\n              <Default />\r\n            )}\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <ScaleFade in={Boolean(totalResults) || hasSubmitted} unmountOnExit style={{ width: '100%' }}>\r\n        <Display query={query} totalResults={totalResults} />\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <VerticalPoster\r\n      width={width || ['185px', '205px', '230px']}\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: '780'\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'year')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n  // ) : (\r\n  //   <VerticalPoster\r\n  //     width={width || ['185px', '205px', '230px']}\r\n  //     mediaType='tv'\r\n  //     image={{\r\n  //       alt: 'TV Show poster',\r\n  //       src: '',\r\n  //       size: '780'\r\n  //     }}\r\n  //     title='Lorem ipsum'\r\n  //     subtitle='Lorem ipsum'\r\n  //     isLoading\r\n  //   />\r\n  // );\r\n};\r\n\r\nexport default VerticalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack, Box, Fade, Collapse } from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon } from '@material-ui/icons/';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../../../common/types/movie';\r\nimport { PartialPerson } from '../../../../../../common/types/person';\r\nimport { PartialTV } from '../../../../../../common/types/tv';\r\nimport { Response } from '../../../../../../common/types/types';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport Modal from '../../../../../../components/Modal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport SearchForm from '../../../../../../components/SearchForm';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\n\r\nconst Search = (): ReactElement => {\r\n  const { isOpen: isModalOpen, onOpen: onModalOpen, onClose: onModalClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleResetModal = (): void => {\r\n    setQuery('');\r\n\r\n    setMovies(null);\r\n    setTV(null);\r\n    setPeople(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalOpen) {\r\n      setTimeout(() => {\r\n        handleResetModal();\r\n      }, 500);\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  useEffect(() => onModalClose(), [location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open Search'\r\n        disabled={location.pathname.includes('search')}\r\n        icon={SearchOutlinedIcon}\r\n        onClick={() => onModalOpen()}\r\n        variant='icon'\r\n        style={{ cursor: location.pathname.includes('search') ? 'default' : 'pointer' }}\r\n      />\r\n\r\n      <Modal title='Search' isOpen={isModalOpen} onClose={onModalClose} isCentered scrollBehavior='inside' size='full'>\r\n        <VStack width='100%' spacing={0}>\r\n          <Box width='100%' px={2} pt={4} pb={2}>\r\n            <SearchForm\r\n              query={query}\r\n              onQueryChange={(query: string) => setQuery(query)}\r\n              onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n              onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n              onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n              onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            />\r\n          </Box>\r\n\r\n          <Fade\r\n            in={\r\n              (movies && movies.results && movies.results.length > 0) ||\r\n              (tv && tv.results && tv.results.length > 0) ||\r\n              (people && people.results && people.results.length > 0) ||\r\n              false\r\n            }\r\n            unmountOnExit\r\n            style={{ width: '100%' }}>\r\n            <VStack width='100%' spacing={6} pb={4}>\r\n              {/* Movies */}\r\n              <Collapse\r\n                in={(movies && movies.results && movies.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={\r\n                    <Link to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}>\r\n                      <Button\r\n                        color={utils.handleReturnColor(color)}\r\n                        isFullWidth\r\n                        isDisabled={isLoading}\r\n                        onClick={() => onModalClose()}\r\n                        variant='text'>\r\n                        {`View all ${movies?.total_results || 0} movie${\r\n                          movies && movies.total_results\r\n                            ? movies.total_results === 0 || movies.total_results > 1\r\n                              ? 's'\r\n                              : ''\r\n                            : ''\r\n                        } with \"${query}\"`}\r\n                      </Button>\r\n                    </Link>\r\n                  }\r\n                  isLoading={isLoading}>\r\n                  <HorizontalMovies isError={false} isSuccess={!isLoading} movies={movies?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* TV */}\r\n              <Collapse\r\n                in={(tv && tv.results && tv.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  footer={\r\n                    <Link to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}>\r\n                      <Button\r\n                        color={utils.handleReturnColor(color)}\r\n                        isFullWidth\r\n                        isDisabled={isLoading}\r\n                        onClick={() => onModalClose()}\r\n                        variant='text'>\r\n                        {`View all ${tv?.total_results || 0} TV show${\r\n                          tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                        } with \"${query}\"`}\r\n                      </Button>\r\n                    </Link>\r\n                  }\r\n                  isLoading={isLoading}>\r\n                  <HorizontalTV isError={false} isSuccess={!isLoading} tv={tv?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* People */}\r\n              <Collapse\r\n                in={(people && people.results && people.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={\r\n                    <Link to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}>\r\n                      <Button\r\n                        color={utils.handleReturnColor(color)}\r\n                        isFullWidth\r\n                        isDisabled={isLoading}\r\n                        onClick={() => onModalClose()}\r\n                        variant='text'>\r\n                        {`View all ${people?.total_results || 0} ${\r\n                          people && people.total_results\r\n                            ? people.total_results === 0 || people.total_results > 1\r\n                              ? 'people'\r\n                              : 'person'\r\n                            : ''\r\n                        } with \"${query}\"`}\r\n                      </Button>\r\n                    </Link>\r\n                  }\r\n                  isLoading={isLoading}>\r\n                  <HorizontalPeople isError={false} isSuccess={!isLoading} people={people?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n            </VStack>\r\n          </Fade>\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon, Text, Link } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { UserLink as UserLinkType } from '../../types';\r\nimport useStyles from './styles';\r\n\r\nconst UserLink = (props: UserLinkType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { label, path, icon, iconActive, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return path ? (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='flex-start'\r\n        px={2}\r\n        py={1}\r\n        spacing={1}\r\n        sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Link>\r\n  ) : (\r\n    <HStack\r\n      width='100%'\r\n      justifyContent='flex-start'\r\n      px={2}\r\n      py={1}\r\n      spacing={1}\r\n      onClick={onClick ? () => onClick() : undefined}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n      <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n        {label}\r\n      </Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default UserLink;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    link: Style;\r\n    container: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): NavItemStyle => ({\r\n  common: {\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    },\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { toggleDisplay } from '../../../../../../store/slices/Modals';\r\nimport UserLink from './components/UserLink';\r\nimport { UserLink as UserLinkType } from './types';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const userLinks: UserLinkType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink: UserLinkType) => (\r\n                <UserLink key={userLink.label} {...userLink} />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, ScaleFade } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Breadcrumb from './components/Breadcrumb';\r\nimport Menu from './components/Menu';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMdUp] = useMediaQuery('(min-width: 640px)');\r\n  const [isLgUp] = useMediaQuery('(min-width: 1280px)');\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  const { width, left } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      <HStack spacing={1}>\r\n        {!isLgUp ? <Menu /> : null}\r\n        {isMdUp ? <Breadcrumb /> : null}\r\n      </HStack>\r\n      <HStack spacing={1}>\r\n        <ScaleFade in={!location.pathname.includes('search')}>\r\n          <Search />\r\n        </ScaleFade>\r\n        <User />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../store/slices/Modals';\r\n\r\nconst ConfirmModal = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  return (\r\n    <Modal\r\n      title={confirmModal.title}\r\n      actions={confirmModal.submitButton}\r\n      isOpen\r\n      isCentered\r\n      onClose={() => dispatch(toggleConfirm({ ...confirmModal, open: false }))}\r\n      size='md'>\r\n      <Text align='left' fontSize='md' fontWeight='normal' p={2}>\r\n        {confirmModal.description}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultDescriptionModal, toggleDescription } from '../../../../../store/slices/Modals';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        <Link to={{ pathname: `/${defaultDescriptionModal.mediaType}/${descriptionModal.mediaItem?.id}` }}>\r\n          <Button color={utils.handleReturnColor(color)} size='sm'>\r\n            {`View ${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : ''}`}\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen\r\n      onClose={() => dispatch(toggleDescription({ ...defaultDescriptionModal }))}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.mediaItem ? descriptionModal.mediaItem.description : 'N/A'}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title, colorMode }: ContainerProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  return (\r\n    <Card colorMode={colorMode} isFullWidth variant='outlined' p={2} pt={1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={1.5}\r\n          sx={{\r\n            transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n          }}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, background, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      colorMode={background}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Background' colorMode={value}>\r\n          <HStack width='100%' spacing={2}>\r\n            {backgrounds.map((background) => (\r\n              <BackgroundItem\r\n                key={background.value}\r\n                {...background}\r\n                color={color}\r\n                background={value}\r\n                isActive={value === background.value}\r\n                onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport utils from '../../../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, background, isActive, onClick } = props;\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      span>\r\n      <Card\r\n        color={isActive ? utils.handleReturnColor(value) : 'gray'}\r\n        colorMode={background}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        p={2}>\r\n        <VStack width='100%' spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: background === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const background = form.watch('background');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Color' colorMode={background}>\r\n          <SimpleGrid width='100%' columns={isMob ? 2 : 4} spacing={2}>\r\n            {colors.map((color, index) => (\r\n              <ColorItem\r\n                key={index}\r\n                {...color}\r\n                background={background}\r\n                isActive={color.value === value}\r\n                onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </SimpleGrid>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport { setTheme } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n  const background = form.watch('background');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    handleClose();\r\n\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n    }, 2500);\r\n    setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          colorMode={background}\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Save\r\n        </Button>\r\n      }\r\n      colorMode={background}\r\n      isOpen\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n",
    "import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack width='calc(100% - 46px)' alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text\r\n              width='auto'\r\n              maxWidth='100%'\r\n              align='left'\r\n              fontSize='xs'\r\n              fontWeight='400'\r\n              textTransform='capitalize'\r\n              isTruncated>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${\r\n              results.movies.length + results.tv.length > 0\r\n                ? `${results.movies.length + results.tv.length} items  • `\r\n                : ''\r\n            }${results.movies.length + results.tv.length > 0 ? 'Updated' : 'Created'} ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../common/utils/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, toggleList } from '../../../../../store/slices/Modals';\r\nimport { ListModal as ListModalType } from '../../../../../store/slices/Modals/types';\r\nimport { setLists } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\nimport CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal: ListModalType = useSelector((state) => state.modals.ui.listsModal);\r\n  const lists: ListType[] = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.mediaItem && listsModal.mediaItem.id && listsModal.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) => {\r\n          const results = { ...updatedList.results };\r\n\r\n          switch (listsModal.mediaType) {\r\n            case 'movie': {\r\n              const movieMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.movies = [...results.movies, movieMediaItem];\r\n              break;\r\n            }\r\n            case 'tv': {\r\n              const showMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.tv = [...results.tv, showMediaItem];\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n\r\n          return updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: { ...results }\r\n              }\r\n            : updatedList;\r\n        });\r\n      });\r\n\r\n      setSelected([]);\r\n\r\n      dispatch(setLists([...updatedLists]));\r\n      dispatch(toggleList({ ...defaultListsModal }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add \"${listsModal.title} to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleSaveItem()} size='sm'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => onCreateListOpen()} size='sm'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen\r\n        onClose={() => dispatch(toggleList({ ...defaultListsModal }))}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, Modal, ModalContent, ModalBody, VStack, Box, Text } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport useStyles from './styles';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen\r\n      onClose={() => dispatch(toggleSplashscreen(false))}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody zIndex={10000} p={0}>\r\n          <VStack width='100%' height='100vh' justifyContent='space-between' p={3}>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Entertainment database\r\n            </Text>\r\n            <MotionBox\r\n              animate={{\r\n                backgroundPosition: [\r\n                  ..._.range(0, 101, 1).map((number) => `${number}%`),\r\n                  ..._.reverse(_.range(0, 101, 1).map((number) => `${number}%`))\r\n                ]\r\n              }}\r\n              transition={{\r\n                duration: 10,\r\n                ease: [0.76, 0, 0.24, 1],\r\n                repeat: Infinity\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Loading...\r\n            </Text>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n",
    "import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular movies'\r\n        footer={\r\n          <Link to={!popularMovies.isFetching || !popularMovies.isLoading ? { pathname: '/movies/popular' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n              variant='text'>\r\n              View all Popular movies\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n        <HorizontalMovies\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending movies'\r\n        footer={\r\n          <Link to={!trendingMovies.isFetching || !trendingMovies.isLoading ? { pathname: '/trending/movie' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={trendingMovies.isFetching || trendingMovies.isLoading}\r\n              variant='text'>\r\n              View all Trending movies\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={trendingMovies.isFetching || trendingMovies.isLoading}>\r\n        <HorizontalMovies\r\n          isError={trendingMovies.isError}\r\n          isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n          movies={trendingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Popular TV'\r\n        footer={\r\n          <Link to={!popularTV.isFetching || !popularTV.isLoading ? { pathname: '/tv/popular' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n              variant='text'>\r\n              View all Popular TV\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n        <HorizontalTV\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending TV'\r\n        footer={\r\n          <Link to={!trendingTV.isFetching || !trendingTV.isLoading ? { pathname: '/trending/tv' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={trendingTV.isFetching || trendingTV.isLoading}\r\n              variant='text'>\r\n              View all Trending TV\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={trendingTV.isFetching || trendingTV.isLoading}>\r\n        <HorizontalTV\r\n          isError={trendingTV.isError}\r\n          isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n          tv={trendingTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending People'\r\n        footer={\r\n          <Link to={!trendingPeople.isFetching || !trendingPeople.isLoading ? { pathname: '/trending/person' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={trendingPeople.isFetching || trendingPeople.isLoading}\r\n              variant='text'>\r\n              View all Trending People\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={trendingPeople.isFetching || trendingPeople.isLoading}>\r\n        <HorizontalPeople\r\n          isError={trendingPeople.isError}\r\n          isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n          people={trendingPeople.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",
    "import { SortBy } from '../types/types';\r\n\r\nexport const likedListsSortBy: SortBy[] = [\r\n  {\r\n    label: 'Date Added',\r\n    value: 'dateAdded',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsMovieSortBy: SortBy[] = [...movieSortBy, ...likedListsSortBy];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsTvSortBy: SortBy[] = [...tvSortBy, ...likedListsSortBy];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsPeopleSortBy: SortBy[] = [...peopleSortBy, ...likedListsSortBy];\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../Card';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title, actions }: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Card isFullWidth variant='outlined' p={2} pt={actions ? 0.75 : 1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          justifyContent='space-between'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          spacing={2}\r\n          pb={actions ? 0.75 : 1.5}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n          {actions}\r\n        </HStack>\r\n\r\n        {children}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Departments'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n              {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {departments.map((department) => (\r\n              <WrapItem key={department.id}>\r\n                <Genre\r\n                  key={department.id}\r\n                  {...department}\r\n                  isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                  onClick={handleDepartmentClick}\r\n                />\r\n              </WrapItem>\r\n            ))}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      px={3}\r\n      py={1.5}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Display Mode'>\r\n          <HStack width='100%' spacing={2}>\r\n            {displayModes.map((displayMode) => (\r\n              <DisplayModeItem\r\n                key={displayMode.value}\r\n                {...displayMode}\r\n                isActive={value === displayMode.value}\r\n                onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? utils.handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Container from '../Container';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Container\r\n          title='Genres'\r\n          actions={\r\n            <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n              {handleAllLabel()}\r\n            </Button>\r\n          }>\r\n          <Wrap width='100%' spacing={1}>\r\n            {mediaType === 'movie'\r\n              ? movieGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : mediaType === 'tv'\r\n              ? tvGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : null}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Sort by'>\r\n          <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n            {value.sortBy.map((sort) => (\r\n              <SortByItem\r\n                key={sort.value}\r\n                {...sort}\r\n                direction={value.direction}\r\n                onSortChange={handleSortChange}\r\n                onDirectionChange={handleDirectionChange}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  movieSortBy,\r\n  likedListsMovieSortBy,\r\n  tvSortBy,\r\n  likedListsTvSortBy,\r\n  peopleSortBy,\r\n  likedListsPeopleSortBy\r\n} from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = (props: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { mediaType, isLikedLists = false, isDisabled = false, onFilter } = props;\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: isLikedLists\r\n        ? mediaType === 'movie'\r\n          ? [...likedListsMovieSortBy]\r\n          : mediaType === 'tv'\r\n          ? [...likedListsTvSortBy]\r\n          : [...likedListsPeopleSortBy]\r\n        : mediaType === 'movie'\r\n        ? [...movieSortBy]\r\n        : mediaType === 'tv'\r\n        ? [...tvSortBy]\r\n        : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: isLikedLists\r\n            ? pathname.includes('movie')\r\n              ? [...likedListsMovieSortBy]\r\n              : pathname.includes('tv')\r\n              ? [...likedListsTvSortBy]\r\n              : [...likedListsPeopleSortBy]\r\n            : pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? utils.handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        isDisabled={isDisabled}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            isDisabled={!isDirty}\r\n            onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n            size='sm'>\r\n            Submit\r\n          </Button>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={3} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const headerTotal = header?.props?.children?.props?.children?.length || 0;\r\n\r\n  return (\r\n    <Collapse in={Boolean(title || header)} style={{ width: '100%' }} unmountOnExit>\r\n      <Stack\r\n        width='100%'\r\n        direction={isSm && headerTotal > 1 ? 'column' : 'row'}\r\n        alignItems={isSm && headerTotal > 1 ? 'stretch' : 'center'}\r\n        justify={title ? 'space-between' : 'flex-end'}\r\n        wrap='wrap'\r\n        spacing={2}\r\n        p={[2]}>\r\n        {title ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {title}\r\n          </Text>\r\n        ) : null}\r\n\r\n        {header}\r\n      </Stack>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      <Header title={title} header={header} />\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card color={isActive ? utils.handleReturnColor(color) : 'gray'} isFullWidth onClick={() => onClick(value)} p={4}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const { mediaTypes, mediaType, onSetType } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n  };\r\n\r\n  return isXs ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/Modals';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, mediaItem, isLoading = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={!isLoading}\r\n      mb={isLoading ? 0.5 : 0}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              mediaType,\r\n              mediaItem\r\n            })\r\n          )\r\n        }>\r\n        {mediaItem.description}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {subtitle}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n",
    "import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['md', 'lg', 'xl', '2xl']}\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {title}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useMediaQuery, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const {\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    description = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isHoveringLiked, setIsHoveringLiked] = useState<boolean>(false);\r\n  const [isHoveringBookmark, setIsHoveringBookmark] = useState<boolean>(false);\r\n  const [isHoveringDescription, setIsHoveringDescription] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isHoveringLiked || isHoveringBookmark || isHoveringDescription}\r\n      to={{ pathname: `${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card isFullWidth isDisabled={isLoading} isLightGray>\r\n        <HStack width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\r\n          {/* Image */}\r\n          <Image\r\n            width={['100px', '116px', '152px', '188px', '188px', '224px']}\r\n            orientation='vertical'\r\n            mediaType={mediaType}\r\n            alt={image.alt}\r\n            src={image.src}\r\n            size={image.size}\r\n            isLoading={isLoading}\r\n          />\r\n          <VStack\r\n            width={[\r\n              'calc(100% - 108px)',\r\n              'calc(100% - 124px)',\r\n              'calc(100% - 168px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 240px)'\r\n            ]}\r\n            alignItems='flex-start'\r\n            spacing={[1, 1, 2, 2, 2, 2]}>\r\n            {/* Rating component */}\r\n            {mediaType !== 'person' ? <Rating rating={rating} isLoading={isLoading} isHorizontal /> : null}\r\n\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 1 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n\r\n            <Box width='100%'>\r\n              <Box\r\n                onMouseEnter={() => setIsHoveringDescription(true)}\r\n                onMouseLeave={() => setIsHoveringDescription(false)}>\r\n                <Description\r\n                  mediaType={mediaType}\r\n                  mediaItem={{ id: mediaItem?.id || -1, title, description }}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </VStack>\r\n\r\n          {/* Like / List Icon buttons */}\r\n          {mediaItem ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 1\r\n              }}>\r\n              {/* Like component */}\r\n              <Box onMouseEnter={() => setIsHoveringLiked(true)} onMouseLeave={() => setIsHoveringLiked(false)}>\r\n                <Like\r\n                  isDisabled={isLoading}\r\n                  title={title}\r\n                  mediaType={mediaType}\r\n                  mediaItem={mediaItem}\r\n                  size={isMob ? 'sm' : 'md'}\r\n                />\r\n              </Box>\r\n              {/* List component */}\r\n              {mediaType !== 'person' ? (\r\n                <Box onMouseEnter={() => setIsHoveringBookmark(true)} onMouseLeave={() => setIsHoveringBookmark(false)}>\r\n                  <Bookmark\r\n                    isDisabled={isLoading}\r\n                    title={title}\r\n                    mediaType={mediaType}\r\n                    mediaItem={mediaItem}\r\n                    size={isMob ? 'sm' : 'md'}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </HStack>\r\n          ) : null}\r\n        </HStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={movie ? { ...movie } : undefined}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size: '780'\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(movie?.release_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n      ].join(' • ')}`}\r\n      description={movie?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n  // ) : (\r\n  //   <HorizontalPoster\r\n  //     mediaType='movie'\r\n  //     image={{\r\n  //       alt: 'Movie poster',\r\n  //       src: '',\r\n  //       size: '780'\r\n  //     }}\r\n  //     title='Lorem ipsum'\r\n  //     subtitle='Lorem ipsum'\r\n  //     description='Lorem ipsum'\r\n  //     isLoading\r\n  //   />\r\n  // );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const handleKnownFor = (): string => {\r\n    const knownFor = arraySort(person?.known_for || [], 'vote_average');\r\n    const names: string[] = knownFor.map((item) => item.title || item.name || '');\r\n\r\n    return names.join(', ');\r\n  };\r\n\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={person ? { ...person } : undefined}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size: '780'\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={departments.find((department) => department.value === person?.known_for_department)?.name || ''}\r\n      description={handleKnownFor()} // TODO: Add a Link component and on click open item page\r\n      isLoading={isLoading}\r\n    />\r\n    // ) : (\r\n    //   <HorizontalPoster\r\n    //     mediaType='person'\r\n    //     image={{\r\n    //       alt: 'Person poster',\r\n    //       src: '',\r\n    //       size: '780'\r\n    //     }}\r\n    //     title='Lorem ipsum'\r\n    //     subtitle='Lorem ipsum'\r\n    //     description='Lorem ipsum'\r\n    //     isLoaded={false}\r\n    //   />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return (\r\n    <HorizontalPoster\r\n      mediaItem={show ? { ...show } : undefined}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size: '780'\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${[\r\n        `${utils.handleReturnDate(show?.first_air_date || '', 'full')}`,\r\n        `${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n      ].join(' • ')}`}\r\n      description={show?.overview || ''}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n  // ) : (\r\n  //   <HorizontalPoster\r\n  //     mediaType='tv'\r\n  //     image={{\r\n  //       alt: 'TV Show poster',\r\n  //       src: '',\r\n  //       size: '780'\r\n  //     }}\r\n  //     title='Lorem ipsum'\r\n  //     subtitle='Lorem ipsum'\r\n  //     description='Lorem ipsum'\r\n  //     isLoaded={false}\r\n  //   />\r\n  // );\r\n};\r\n\r\nexport default HorizontalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Fade\r\n      in={(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) || false}\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n            }`}\r\n            footer={\r\n              <Link to={{ pathname: '/liked/movie' }}>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth variant='text'>\r\n                  {`View all ${movies.length || 0} liked movie${\r\n                    movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {movies.map((movie, index) =>\r\n                index < 20 ? <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={\r\n              <Link to={{ pathname: '/liked/tv' }}>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth variant='text'>\r\n                  {`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {tv.map((show, index) =>\r\n                index < 20 ? <VerticalShowPoster key={show.id} isLoading={false} show={show} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            footer={\r\n              <Link to={{ pathname: '/liked/person' }}>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth variant='text'>\r\n                  {`View all ${people.length || 0} liked ${\r\n                    (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {people.map((person, index) =>\r\n                index < 20 ? <VerticalPersonPoster key={person.id} isLoading={false} person={person} /> : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, HStack, SimpleGrid, Box, ScaleFade } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalPersonPoster from '../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../components/People/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([...liked.movies]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([...liked.tv]);\r\n  const [people, setPeople] = useState<MediaItem<'person'>[]>([...liked.people]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredMovies: MediaItem<'movie'>[] = [...liked.movies];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setMovies([...filteredMovies]);\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredTV: MediaItem<'tv'>[] = [...liked.tv];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setTV([...filteredTV]);\r\n  };\r\n\r\n  const handleFilterPeople = (sortBy: SortBy[], departments: Department[]): void => {\r\n    let filteredPeople: MediaItem<'person'>[] = [...liked.people];\r\n\r\n    if (departments && departments.length > 0) {\r\n      filteredPeople = filteredPeople.filter((person) =>\r\n        departments.some((department) => person.known_for_department === department.value)\r\n      );\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredPeople = arraySort(filteredPeople, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setPeople([...filteredPeople]);\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      case 'person':\r\n        handleFilterPeople(sortBy, departments);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleHasMediaTypes = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return (tv && tv.length > 0) || (people && people.length > 0);\r\n      case 'tv':\r\n        return (movies && movies.length > 0) || (people && people.length > 0);\r\n      case 'person':\r\n        return (movies && movies.length > 0) || (tv && tv.length > 0);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypes = (): MediaType[] => {\r\n    const mediaTypes: MediaType[] = [];\r\n\r\n    if (movies && movies.length > 0) {\r\n      mediaTypes.push('movie');\r\n    }\r\n    if (tv && tv.length > 0) {\r\n      mediaTypes.push('tv');\r\n    }\r\n    if (people && people.length > 0) {\r\n      mediaTypes.push('person');\r\n    }\r\n\r\n    return mediaTypes;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMediaType(null);\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType === 'movie'\r\n            ? `${movies.length || 0} liked movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`\r\n            : mediaType === 'tv'\r\n            ? `${tv.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`\r\n            : mediaType === 'person'\r\n            ? `${people.length || 0} liked ${\r\n                (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n              }`\r\n            : `You have liked ${[\r\n                `${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`,\r\n                `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`,\r\n                `${people.length || 0} ${(people && people.length === 0) || people.length > 1 ? 'people' : 'person'}`\r\n              ].join(' • ')}`\r\n        }\r\n        header={\r\n          <ScaleFade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <ScaleFade in={handleHasMediaTypes()} unmountOnExit>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n              </ScaleFade>\r\n              {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n            </HStack>\r\n          </ScaleFade>\r\n        }>\r\n        {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n          mediaType === 'movie' ? (\r\n            movies.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {movies.map((movie) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                  ) : (\r\n                    <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have liked no movie!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'tv' ? (\r\n            tv.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {tv.map((show) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                  ) : (\r\n                    <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have no liked no tv show!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : mediaType === 'person' ? (\r\n            people.length > 0 ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}\r\n                px={2}>\r\n                {people.map((person) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalPersonPoster key={person.id} isLoading={false} person={person} />\r\n                  ) : (\r\n                    <VerticalPersonPoster key={person.id} width='100%' isLoading={false} person={person} />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Box width='100%' px={2} py={0}>\r\n                <Empty label='You have no liked nobody!' variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : (\r\n            <All movies={movies} tv={tv} people={people} />\r\n          )\r\n        ) : (\r\n          <Box width='100%' px={2} py={0}>\r\n            <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={handleReturnMediaTypes()}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\nimport VerticalShowPoster from '../../../../components/TV/Poster/Vertical';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`}\r\n            footer={\r\n              <Link to={{ pathname: `/lists/${list.id}/movie` }}>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth variant='text'>\r\n                  {`View all ${movies.length || 0} movie${\r\n                    movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {movies.map((movie) => (\r\n                <VerticalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={\r\n              <Link to={{ pathname: `/lists/${list.id}/tv` }}>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth variant='text'>\r\n                  {`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {tv.map((show) => (\r\n                <VerticalShowPoster key={show.id} isLoading={false} show={show} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n",
    "import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { EditListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst EditList = ({ list, isOpen, onClose }: EditListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    if (list) {\r\n      dispatch(\r\n        setLists(\r\n          lists.map((paramList) =>\r\n            paramList.id === list.id\r\n              ? {\r\n                  ...list,\r\n                  label: values.label,\r\n                  description: values?.description || '',\r\n                  date: moment(new Date()).toISOString(),\r\n                  results: {\r\n                    ...list.results\r\n                  }\r\n                }\r\n              : { ...paramList }\r\n          )\r\n        )\r\n      );\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && list) {\r\n      form.reset({\r\n        label: list.label,\r\n        description: list.description\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`Edit ${list?.label ? `\"${list.label}\"` : ''} List`}\r\n      actions={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${utils.handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, HStack, Text, Icon, useMediaQuery } from '@chakra-ui/react';\r\nimport { TheatersOutlined as TheatersOutlinedIcon, TvOutlined as TvOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { MediaTypeProps } from './types';\r\n\r\nconst MediaType = (props: MediaTypeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const style = useStyles(props);\r\n\r\n  const { mediaType, amount } = props;\r\n\r\n  const handleReturnTitle = (): string => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return `Movie${amount === 0 || amount > 1 ? 's' : ''}`;\r\n      case 'tv':\r\n        return `TV Show${amount === 0 || amount > 1 ? 's' : ''}`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      width={isMob ? `${screen.width - 32}px` : `${400 / 2}px`}\r\n      height={isMob ? `${screen.width - 32}px` : `${400 / 2}px`}\r\n      alignItems='flex-start'\r\n      justifyContent='space-between'\r\n      spacing={0}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack spacing={0.75}>\r\n        <Icon aria-label={handleReturnTitle()} as={mediaType === 'movie' ? TheatersOutlinedIcon : TvOutlinedIcon} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold'>\r\n          {handleReturnTitle()}\r\n        </Text>\r\n      </HStack>\r\n      <Text align='left' fontSize='6xl' fontWeight='bold' lineHeight={theme.fontSizes['5xl']}>\r\n        {amount}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MediaType;\r\n",
    "import { Style } from '../../../../../../common/types/types';\r\nimport { MediaTypeProps } from './types';\r\n\r\ntype MediaTypeStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default ({ mediaType }: MediaTypeProps): MediaTypeStyle => ({\r\n  common: {\r\n    borderRadius: 'xl',\r\n    bgGradient: `linear(to-tr, ${mediaType === 'movie' ? 'blue.400' : 'pink.400'}, ${\r\n      mediaType === 'movie' ? 'cyan.400' : 'red.400'\r\n    })`,\r\n\r\n    padding: 2\r\n  },\r\n  light: {\r\n    '& .chakra-icon': {\r\n      color: 'gray.50'\r\n    },\r\n    '& .chakra-text': {\r\n      color: 'gray.50'\r\n    }\r\n  },\r\n  dark: {\r\n    '& .chakra-icon': {\r\n      color: 'gray.900'\r\n    },\r\n    '& .chakra-text': {\r\n      color: 'gray.900'\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, HStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Modal from '../../../../components/Modal';\r\nimport MediaType from './components/MediaType';\r\nimport { ListInfoProps } from './types';\r\n\r\nconst ListInfo = ({ list, isOpen, onClose }: ListInfoProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {`${list?.label ? `\"${list.label}\"` : ''} List`}\r\n          </Text>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs' fontWeight='normal'>\r\n            {`${(list ? list?.results.movies.length + list?.results.tv.length : 0) > 0 ? 'Updated' : 'Created'} ${\r\n              moment(list?.date).isSame(moment(), 'day')\r\n                ? moment(list?.date).fromNow()\r\n                : moment(list?.date).format('LL')\r\n            }`}\r\n          </Text>\r\n        </VStack>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      isCentered\r\n      size='md'>\r\n      <VStack spacing={3} p={2}>\r\n        {list?.description ? (\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='lg' fontWeight='normal'>\r\n            {list.description}\r\n          </Text>\r\n        ) : null}\r\n\r\n        <HStack wrap='wrap' spacing={2}>\r\n          {['movie', 'tv'].map((mediaType) => (\r\n            <MediaType\r\n              key={mediaType}\r\n              mediaType={mediaType}\r\n              amount={\r\n                mediaType === 'movie'\r\n                  ? list?.results.movies.length || 0\r\n                  : mediaType === 'tv'\r\n                  ? list?.results.tv.length || 0\r\n                  : 0\r\n              }\r\n            />\r\n          ))}\r\n        </HStack>\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ListInfo;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Radio as CUIRadio } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RadioProps } from './types';\r\n\r\nconst Radio = (props: RadioProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { colorMode: colorModeProp, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return <CUIRadio {...rest} sx={{ ..._.merge(style.radio, style[mode]) }} />;\r\n};\r\n\r\nexport default Radio;\r\n",
    "import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { RadioProps } from './types';\r\n\r\ntype RadioStyle = {\r\n  radio: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isChecked = false, isDisabled = false }: RadioProps): RadioStyle => ({\r\n  radio: {\r\n    'opacity': isDisabled ? 0.5 : 1,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none !important'\r\n    },\r\n\r\n    '&.chakra-radio__control': {\r\n      boxShadow: 'none !important',\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '& svg': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n      borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n      color: isChecked ? 'gray.50' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.500` : 'transparent',\r\n        borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n        color: isChecked ? 'gray.50' : 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.500` : 'transparent',\r\n      borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n      color: isChecked ? 'gray.900' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.400` : 'transparent',\r\n        borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n        color: isChecked ? 'gray.900' : 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Text, Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport Radio from '../../../../../../components/Clickable/Radio';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { id, label, results, isActive = false, isSelectable = false, isSelected = false, onSelected, onClick } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isHoveringCheckbox, setIsHoveringCheckbox] = useState<boolean>(false);\r\n\r\n  const movies = results.movies.length;\r\n  const tv = results.tv.length;\r\n\r\n  return (\r\n    <Box width='100%'>\r\n      <Card\r\n        flex={1}\r\n        color={location.pathname.includes(id) ? utils.handleReturnColor(color) : 'gray'}\r\n        onClick={!isActive && !isHoveringCheckbox && onClick ? () => onClick(id) : undefined}>\r\n        <VStack width='100%' spacing={0} sx={{ position: 'relative' }} px={2} py={6}>\r\n          {isSelectable && onSelected ? (\r\n            <Box position='absolute' top={theme.space[2]} left={theme.space[2]}>\r\n              <Radio\r\n                color={utils.handleReturnColor(color)}\r\n                isChecked={isSelected}\r\n                onMouseEnter={() => setIsHoveringCheckbox(true)}\r\n                onMouseLeave={() => setIsHoveringCheckbox(false)}\r\n                onClick={() => onSelected(id)}\r\n                size='lg'\r\n              />\r\n            </Box>\r\n          ) : null}\r\n          <Text\r\n            align='center'\r\n            color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='md'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          <Text\r\n            align='center'\r\n            color={isActive ? `${utils.handleReturnColor(color)}.400` : colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n            fontSize='xs'\r\n            fontWeight='400'\r\n            textTransform='capitalize'>\r\n            {`${[\r\n              `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n              `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n            ].join(' • ')}`}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../components/Modal';\r\nimport { List } from '../../../../store/slices/User/types';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const handleClick = (id: List['id']): void => {\r\n    history.push({\r\n      pathname: `/lists/${id}`,\r\n      search: queryString.stringify({ ...queryString.parse(history.location.search) })\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  InfoTwoTone as InfoTwoToneIcon,\r\n  EditOutlined as EditOutlinedIcon,\r\n  DeleteOutlineOutlined as DeleteOutlineOutlinedIcon,\r\n  CloseOutlined as CloseOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport store from '../../../../store';\r\nimport { ToastProps } from './types';\r\n\r\nconst Toast = (props: ToastProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const color = store.getState().user.ui.theme.color;\r\n\r\n  const { selected, onInfo, onEdit, onDelete, onClose } = props;\r\n\r\n  return (\r\n    <HStack\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      borderRadius='full'\r\n      boxShadow='lg'\r\n      spacing={2}\r\n      px={2}\r\n      py={1.5}\r\n      mb={1.5}>\r\n      <HStack spacing={0.25}>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          fontSize={isMob ? 'sm' : 'md'}\r\n          fontWeight='normal'\r\n          whiteSpace='nowrap'>\r\n          {`\"${selected.label}\" list`}\r\n        </Text>\r\n      </HStack>\r\n\r\n      <HStack spacing={1}>\r\n        {isMob ? (\r\n          <IconButton\r\n            aria-label='Information related to selected list'\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color={utils.handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}>\r\n            Info\r\n          </Button>\r\n        )}\r\n\r\n        {isMob ? (\r\n          <IconButton\r\n            aria-label='Edit selected list'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n\r\n        {isMob ? (\r\n          <IconButton\r\n            aria-label='Delete selected list'\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}>\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n\r\n      <IconButton\r\n        aria-label='Close'\r\n        colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n        icon={CloseOutlinedIcon}\r\n        onClick={() => onClose()}\r\n        size={isMob ? 'sm' : 'md'}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  useToast,\r\n  VStack,\r\n  HStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Text,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport IconButton from '../../components/Clickable/IconButton';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport HorizontalMoviePoster from '../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../components/Movies/Poster/Vertical';\r\nimport HorizontalShowPoster from '../../components/TV/Poster/Horizontal';\r\nimport VerticalShowPoster from '../../components/TV/Poster/Vertical';\r\nimport { toggleConfirm } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport All from './components/All';\r\nimport CreateList from './components/CreateList';\r\nimport EditList from './components/EditList';\r\nimport ListInfo from './components/ListInfo';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Toast from './components/Toast';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n  const { isOpen: isEditListOpen, onOpen: onEditListOpen, onClose: onEditListClose } = useDisclosure();\r\n  const { isOpen: isListInfoOpen, onOpen: onListInfoOpen, onClose: onListInfoClose } = useDisclosure();\r\n\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const toast = useToast();\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([]);\r\n\r\n  const [selected, setSelected] = useState<ListType>();\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.movies) {\r\n      let filteredMovies: MediaItem<'movie'>[] = [...list.results.movies];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n      }\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredMovies = arraySort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setMovies([...filteredMovies]);\r\n    }\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.tv) {\r\n      let filteredTV: MediaItem<'tv'>[] = [...list.results.tv];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n      }\r\n\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredTV = arraySort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setTV([...filteredTV]);\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSelectList = (id: ListType['id']): void => {\r\n    if (selected?.id === id) {\r\n      setSelected(undefined);\r\n    } else {\r\n      setSelected(lists.find((list) => list.id === id));\r\n    }\r\n  };\r\n\r\n  const handleCloseToast = (): void => {\r\n    toast.closeAll();\r\n    setSelected(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies([...activeList.results.movies]);\r\n      setTV([...activeList.results.tv]);\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    toast.closeAll();\r\n\r\n    if (selected) {\r\n      toast({\r\n        duration: null,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n        variant: 'solid',\r\n        render: function RenderToast() {\r\n          return (\r\n            <Toast\r\n              selected={selected}\r\n              onInfo={() => onListInfoOpen()}\r\n              onEdit={() => onEditListOpen()}\r\n              onDelete={() =>\r\n                dispatch(\r\n                  toggleConfirm({\r\n                    open: true,\r\n                    title: isMob ? 'Delete' : `Delete ${selected?.label ? `\"${selected.label}\"` : ''} list`,\r\n                    description: `Are you sure you want to delete the ${\r\n                      selected?.label ? `\"${selected.label}\"` : ''\r\n                    } list? You will not be able to retrieve this list back!`,\r\n                    submitButton: (\r\n                      <Button\r\n                        color='red'\r\n                        onClick={() => {\r\n                          dispatch(setLists(lists.filter((paramList) => paramList.id !== selected?.id)));\r\n                          dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                          handleCloseToast();\r\n                        }}\r\n                        size='sm'>\r\n                        Delete\r\n                      </Button>\r\n                    )\r\n                  })\r\n                )\r\n              }\r\n              onClose={() => handleCloseToast()}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n        <VerticalGrid\r\n          title={\r\n            lists\r\n              ? list\r\n                ? mediaType\r\n                  ? mediaType === 'movie'\r\n                    ? `${movies.length || 0} movie${\r\n                        movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n                      } in \"${list.label}\" list`\r\n                    : mediaType === 'tv'\r\n                    ? `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')} in \"${\r\n                        list.label\r\n                      }\" list`\r\n                    : `${[\r\n                        `${movies.length} movie${movies.length === 0 || movies.length > 1 ? 's' : ''}`,\r\n                        `${tv.length} TV show${tv.length === 0 || tv.length > 1 ? 's' : ''}`\r\n                      ].join(' • ')} results in \"${list.label}\" list`\r\n                  : `\"${list.label}\" list`\r\n                : `${lists.length} list${lists.length === 0 || lists.length > 1 ? 's' : ''}`\r\n              : ''\r\n          }\r\n          header={\r\n            mediaType || (list && lists.length > 0) ? (\r\n              <HStack spacing={2}>\r\n                <ScaleFade in={!!mediaType} unmountOnExit>\r\n                  <HStack spacing={2}>\r\n                    {movies.length > 0 && tv.length > 0 ? (\r\n                      <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                        Change media-type\r\n                      </Button>\r\n                    ) : null}\r\n                    {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n                  </HStack>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n                  <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                    Change list\r\n                  </Button>\r\n                </ScaleFade>\r\n                <ScaleFade in={!!list} unmountOnExit>\r\n                  <IconButton\r\n                    aria-label='Open Information modal'\r\n                    icon={InfoTwoToneIcon}\r\n                    onClick={() => onListInfoOpen()}\r\n                    variant='outlined'\r\n                  />\r\n                </ScaleFade>\r\n              </HStack>\r\n            ) : (\r\n              <Button onClick={() => onCreateListOpen()} variant='outlined'>\r\n                Create new list\r\n              </Button>\r\n            )\r\n          }>\r\n          {list ? (\r\n            movies.length > 0 || tv.length > 0 ? (\r\n              mediaType === 'movie' ? (\r\n                movies.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {movies.map((movie) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalMoviePoster key={movie.id} isLoading={false} movie={movie} />\r\n                      ) : (\r\n                        <VerticalMoviePoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n                      )\r\n                    )}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      button={\r\n                        <HStack spacing={1}>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: `/lists/${list.id}` })}\r\n                            size='sm'\r\n                            variant='outlined'>\r\n                            {`Back to \"${list.label}\" list`}\r\n                          </Button>\r\n                          <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                            OR\r\n                          </Text>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: '/lists' })}\r\n                            size='sm'\r\n                            variant='outlined'>\r\n                            Back to lists\r\n                          </Button>\r\n                        </HStack>\r\n                      }\r\n                      label={`No movies found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : mediaType === 'tv' ? (\r\n                tv.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {tv.map((show) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalShowPoster key={show.id} isLoading={false} show={show} />\r\n                      ) : (\r\n                        <VerticalShowPoster key={show.id} width='100%' isLoading={false} show={show} />\r\n                      )\r\n                    )}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      button={\r\n                        <HStack spacing={1}>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: `/lists/${list.id}` })}\r\n                            size='sm'\r\n                            variant='outlined'>\r\n                            {`Back to \"${list.label}\" list`}\r\n                          </Button>\r\n                          <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                            OR\r\n                          </Text>\r\n                          <Button\r\n                            color={utils.handleReturnColor(color)}\r\n                            onClick={() => history.push({ pathname: '/lists' })}\r\n                            size='sm'\r\n                            variant='outlined'>\r\n                            Back to lists\r\n                          </Button>\r\n                        </HStack>\r\n                      }\r\n                      label={`No tv shows found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : (\r\n                <All list={list} movies={movies} tv={tv} />\r\n              )\r\n            ) : (\r\n              <Box width='100%' px={2}>\r\n                <Empty\r\n                  button={\r\n                    <Button\r\n                      color={utils.handleReturnColor(color)}\r\n                      onClick={() => history.push({ pathname: '/lists' })}\r\n                      size='sm'\r\n                      variant='outlined'>\r\n                      Back to lists\r\n                    </Button>\r\n                  }\r\n                  label={`You have no items in \"${list.label}\" list!`}\r\n                  variant='outlined'\r\n                  size='xl'\r\n                />\r\n              </Box>\r\n            )\r\n          ) : lists && lists.length > 0 ? (\r\n            <SimpleGrid width='100%' columns={[1, 2, 3, 4, 4]} spacing={2} px={2}>\r\n              {lists.map((list) => (\r\n                <List\r\n                  key={list.id}\r\n                  {...list}\r\n                  isSelectable\r\n                  isSelected={selected?.id === list.id || false}\r\n                  onSelected={handleSelectList}\r\n                  onClick={(id: ListType['id']) => history.push({ pathname: `/lists/${id}` })}\r\n                />\r\n              ))}\r\n            </SimpleGrid>\r\n          ) : (\r\n            <Box width='100%' p={2}>\r\n              <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n            </Box>\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n\r\n      <EditList list={selected} isOpen={isEditListOpen} onClose={() => onEditListClose()} />\r\n\r\n      <ListInfo list={list || selected} isOpen={isListInfoOpen} onClose={onListInfoClose} />\r\n\r\n      {!!mediaType && list ? (\r\n        <MediaTypePicker\r\n          mediaTypes={['movie', 'tv']}\r\n          mediaType={mediaType}\r\n          isOpen={isMediaTypePickerOpen}\r\n          onClose={onMediaTypePickerClose}\r\n          onSetType={(mediaType: MediaType) => history.push({ pathname: `/lists/${list.id}/${mediaType}` })}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title=''\r\n        footer={\r\n          <Link to={!popularMovies.isFetching || !popularMovies.isLoading ? { pathname: '/movies/popular' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={popularMovies.isFetching || popularMovies.isLoading}\r\n              variant='text'>\r\n              View all Popular Movies\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={popularMovies.isFetching || popularMovies.isLoading}>\r\n        <HorizontalMovies\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Upcoming Movies'\r\n        footer={\r\n          <Link to={!upcomingMovies.isFetching || !upcomingMovies.isLoading ? { pathname: '/movies/upcoming' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n              variant='text'>\r\n              View all Upcoming Movies\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}>\r\n        <HorizontalMovies\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n          movies={upcomingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Movies Now Playing'\r\n        footer={\r\n          <Link\r\n            to={!moviesNowPlaying.isFetching || !moviesNowPlaying.isLoading ? { pathname: '/movies/now-playing' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n              variant='text'>\r\n              View all Movies Now Playing\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}>\r\n        <HorizontalMovies\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n          movies={moviesNowPlaying.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated Movies'\r\n        footer={\r\n          <Link to={!topRatedMovies.isFetching || !topRatedMovies.isLoading ? { pathname: '/movies/top-rated' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n              variant='text'>\r\n              View all Movies Now Playing\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}>\r\n        <HorizontalMovies\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n          movies={topRatedMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount = 0, total = 0, mediaType, isLoading = false, isError = false, hasNextPage = true, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${utils.handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      <ScaleFade in={hasNextPage && !isError && amount < total} unmountOnExit>\r\n        <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n          Load more\r\n        </Button>\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Movies Now Playing' : ''}\r\n      header={<Filters mediaType='movie' isDisabled={!moviesNowPlaying.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess && !moviesNowPlaying.isFetching && !moviesNowPlaying.isLoading}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={moviesNowPlaying.isFetching || moviesNowPlaying.isLoading}\r\n            isError={moviesNowPlaying.isError}\r\n            hasNextPage={moviesNowPlaying.hasNextPage || true}\r\n            onFetch={moviesNowPlaying.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular Movies' : ''}\r\n      header={<Filters mediaType='movie' isDisabled={!popularMovies.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess && !popularMovies.isFetching && !popularMovies.isLoading}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={popularMovies.isFetching || popularMovies.isLoading}\r\n            isError={popularMovies.isError}\r\n            hasNextPage={popularMovies.hasNextPage || true}\r\n            onFetch={popularMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated Movies' : ''}\r\n      header={<Filters mediaType='movie' isDisabled={!topRatedMovies.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess && !topRatedMovies.isFetching && !topRatedMovies.isLoading}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={topRatedMovies.isFetching || topRatedMovies.isLoading}\r\n            isError={topRatedMovies.isError}\r\n            hasNextPage={topRatedMovies.hasNextPage || true}\r\n            onFetch={topRatedMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Upcoming Movies' : ''}\r\n      header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess && !upcomingMovies.isFetching && !upcomingMovies.isLoading}\r\n          movies={movies?.results || []}\r\n        />\r\n\r\n        {movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={upcomingMovies.isFetching || upcomingMovies.isLoading}\r\n            isError={upcomingMovies.isError}\r\n            hasNextPage={upcomingMovies.hasNextPage || true}\r\n            onFetch={upcomingMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'People' : ''}\r\n      header={<Filters mediaType='person' isDisabled={!popularPeople.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalPeople\r\n          isError={popularPeople.isError}\r\n          isSuccess={popularPeople.isSuccess && !popularPeople.isFetching && !popularPeople.isLoading}\r\n          people={people?.results || []}\r\n        />\r\n\r\n        {people ? (\r\n          <LoadMore\r\n            amount={people.results.length}\r\n            total={people.total_results}\r\n            mediaType='people'\r\n            isLoading={popularPeople.isFetching || popularPeople.isLoading}\r\n            isError={popularPeople.isError}\r\n            hasNextPage={popularPeople.hasNextPage || true}\r\n            onFetch={popularPeople.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBoolean, VStack, HStack, Text, Collapse } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { BioProps } from './types';\r\n\r\nconst Bio = ({ biography, isLoading = false }: BioProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isExpanded, setIsExpanded] = useBoolean();\r\n\r\n  return (\r\n    <Card minWidth='100%' px={2} pt={1.5} pb={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        <HStack\r\n          width='100%'\r\n          justifyContent='space-between'\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          spacing={0}\r\n          pb={1.5}>\r\n          <Text\r\n            width='100%'\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n            fontSize='md'\r\n            fontWeight='medium'>\r\n            Biography\r\n          </Text>\r\n        </HStack>\r\n\r\n        {!isLoading ? (\r\n          <Collapse startingHeight={44} in={isExpanded}>\r\n            <VStack width='100%' spacing={2}>\r\n              {biography.split('\\n'[0]).map((paragraph, index) => (\r\n                <Text\r\n                  key={index}\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                  fontSize='md'\r\n                  fontWeight='medium'>\r\n                  {paragraph}\r\n                </Text>\r\n              ))}\r\n            </VStack>\r\n          </Collapse>\r\n        ) : (\r\n          <VStack width='100%' spacing={2}>\r\n            {_.range(0, 3).map((_dummy, index) => (\r\n              <SkeletonText key={index} width='100%' isLoaded={!isLoading}>\r\n                <Text align='left' fontSize='xs'>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                  dolore magna aliqua.\r\n                </Text>\r\n              </SkeletonText>\r\n            ))}\r\n          </VStack>\r\n        )}\r\n\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isDisabled={isLoading}\r\n          isFullWidth\r\n          onClick={() => setIsExpanded.toggle()}\r\n          size='sm'\r\n          variant='text'>\r\n          {isExpanded ? 'Collapse' : 'Expand'}\r\n        </Button>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Box } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { BackgroundProps } from './types';\r\n\r\n/**\r\n * This method will return 2 colors to be used in a gradient\r\n *\r\n * @returns String - Gradient colors\r\n */\r\nconst handleReturnGradient = (): string => {\r\n  const random: number = Math.floor(Math.random() * 4);\r\n\r\n  switch (random) {\r\n    case 0:\r\n      return 'red.400, pink.400';\r\n    case 1:\r\n      return 'orange.400, yellow.400';\r\n    case 2:\r\n      return 'green.400, teal.400';\r\n    case 3:\r\n      return 'blue.400, cyan.400';\r\n    default:\r\n      return 'purple.400, pink.400';\r\n  }\r\n};\r\n\r\nconst gradient = handleReturnGradient();\r\n\r\nconst Background = ({ children }: BackgroundProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height={['20vh', '22.5vh', '25vh', '27.5vh', '30vh', '35vh']}\r\n      position='relative'\r\n      bgGradient={`linear(to-r, ${gradient})`}\r\n      borderRadius='md'>\r\n      <Box position='absolute' top={theme.space[2]} right={theme.space[2]}>\r\n        {children.socials}\r\n      </Box>\r\n      <Box position='absolute' bottom='-5vw' left='2.5vw'>\r\n        {children.poster}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n",
    "import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { ArrowProps } from './types';\r\n\r\ntype DirectionStyle = {\r\n  left: Style;\r\n  right: Style;\r\n};\r\n\r\ntype ArrowStyle = {\r\n  arrow: Style;\r\n  light: DirectionStyle;\r\n  dark: DirectionStyle;\r\n};\r\n\r\nexport default (theme: Theme, { isDisabled = false }: ArrowProps): ArrowStyle => ({\r\n  arrow: {\r\n    content: '\"\"',\r\n\r\n    width: '30px',\r\n    height: '30px',\r\n\r\n    display: 'block',\r\n\r\n    pointerEvents: 'none'\r\n  },\r\n  light: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement, UIEvent, SyntheticEvent, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Arrow from './components/Arrow';\r\nimport { HorizontalScrollProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalScroll = (props: HorizontalScrollProps): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  const { children, width, spacing } = props;\r\n\r\n  const [containerRef, setContainerRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleContainerRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled = ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setContainerRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, globalThis.UIEvent> | SyntheticEvent<HTMLDivElement>) => {\r\n    handleContainerRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (containerRef) {\r\n        if (direction === 'left') {\r\n          containerRef.scrollLeft = containerRef.scrollLeft - 10;\r\n        } else {\r\n          containerRef.scrollLeft = containerRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [containerRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  return (\r\n    <HStack width={width || '100%'} maxWidth={width || '100%'} position='relative' spacing={0}>\r\n      {/* Left Arrow Button */}\r\n      <Arrow\r\n        direction='left'\r\n        isDisabled={scrollButtons.left}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Scrollable content */}\r\n      <HStack\r\n        ref={handleContainerRef}\r\n        width='100%'\r\n        maxWidth='100%'\r\n        overflowX='auto'\r\n        spacing={spacing ? spacing : 1}\r\n        onLoad={(event) => handleScrollChange(event)}\r\n        onScroll={(event) => handleScrollChange(event)}\r\n        sx={{\r\n          // CSS to hide scrollbar\r\n          'scrollbarWidth': 'none',\r\n          '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n          }\r\n        }}>\r\n        {children}\r\n      </HStack>\r\n\r\n      {/* Right Arrow Button */}\r\n      <Arrow\r\n        direction='right'\r\n        isDisabled={scrollButtons.right}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalScroll;\r\n",
    "import React, { ReactElement, Fragment } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { DepartmentsProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst Departments = (props: DepartmentsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { departments, isLoading = false } = props;\r\n\r\n  return (\r\n    <HStack maxWidth='100%' spacing={isLoading ? 1 : 0}>\r\n      {!isLoading ? (\r\n        <HorizontalScroll>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Text\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                  fontSize='md'\r\n                  whiteSpace='nowrap'>\r\n                  {department}\r\n                </Text>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <Skeleton\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='22px'\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  useBreakpointValue,\r\n  useBoolean,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Image,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n  const fontSize = useBreakpointValue({\r\n    base: theme.fontSizes['4xl'],\r\n    sm: theme.fontSizes['5xl'],\r\n    md: theme.fontSizes['6xl']\r\n  });\r\n\r\n  const { name, path, isLoading = false, onClickPoster } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={isMob ? '100%' : '20vw'}\r\n      border={isMob ? 'none' : '4px'}\r\n      borderColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRadius={isMob ? 'base' : 'full'}\r\n      onClick={!isLoading && path ? () => onClickPoster(path) : undefined}\r\n      onMouseEnter={!isLoading && path ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={!isLoading && path ? () => setIsHovering.off() : undefined}>\r\n      <Center\r\n        width='100%'\r\n        height='100%'\r\n        position='absolute'\r\n        zIndex={1}\r\n        borderRadius={isMob ? 'base' : 'full'}\r\n        sx={{\r\n          cursor: 'pointer',\r\n          backgroundColor: isHovering\r\n            ? colorMode === 'light'\r\n              ? 'rgba(0, 0, 0, 0.25)'\r\n              : 'rgba(255, 255, 255, 0.25)'\r\n            : 'transparent',\r\n          transition: `${theme.transition.duration.fast} ${theme.transition.easing['ease-out']}`\r\n        }}>\r\n        <Fade in={isHovering} unmountOnExit>\r\n          <Icon\r\n            as={SearchOutlinedIcon}\r\n            color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n            sx={{\r\n              fontSize: `${fontSize} !important`\r\n            }}\r\n          />\r\n        </Fade>\r\n      </Center>\r\n      <AspectRatio ratio={1 / 1}>\r\n        <Skeleton isLoaded={!isLoading} borderRadius={isMob ? 'base' : 'full'}>\r\n          <Image\r\n            alt={`${name ? `\"${name}\"` : ''} profile poster`}\r\n            width='100%'\r\n            src={`${process.env.REACT_APP_IMAGE_URL}/original${path}`}\r\n            fallbackSrc={utils.handleReturnFallbackSrc('person', '780', `${name ? `\"${name}\"` : ''} profile poster`)}\r\n          />\r\n        </Skeleton>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link as CUILink, Box, Icon } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { name, type, href, icon, isDisabled = false } = props;\r\n\r\n  const iconComponent = (\r\n    <Skeleton isLoaded={!isDisabled}>\r\n      <Icon as={icon} sx={{ ..._.merge(style.common.icon) }} />\r\n    </Skeleton>\r\n  );\r\n\r\n  return !isDisabled ? (\r\n    <CUILink\r\n      aria-label={`${name ? `\"${name}\"` : ''} ${type} link`}\r\n      href={!isDisabled ? href : ''}\r\n      isExternal\r\n      sx={{ ..._.merge(style.common.link, style[colorMode]) }}>\r\n      {iconComponent}\r\n    </CUILink>\r\n  ) : (\r\n    <Box p={1}>{iconComponent}</Box>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { LinkProps } from './types';\r\n\r\ntype LinkStyle = {\r\n  common: {\r\n    link: Style;\r\n    icon: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color, isDisabled = false }: LinkProps): LinkStyle => ({\r\n  common: {\r\n    link: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'display': 'flex',\r\n      'alignItems': 'center',\r\n      'justifyContent': 'center',\r\n\r\n      'padding': theme.space[1],\r\n\r\n      'opacity': !isDisabled ? 1 : 0.5,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${theme.fontSizes['2xl']} !important`\r\n    }\r\n  },\r\n  light: {\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  },\r\n  dark: {\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useTheme } from '@chakra-ui/react';\r\nimport { Facebook as FacebookIcon, Twitter as TwitterIcon, Instagram as InstagramIcon } from '@material-ui/icons';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Link from '../Link';\r\nimport { LinksProps } from './types';\r\n\r\nconst ImdbIcon = (): ReactElement => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      aria-hidden='true'\r\n      role='img'\r\n      width='24px'\r\n      height='24px'\r\n      preserveAspectRatio='xMidYMid meet'\r\n      viewBox='0 0 448 512'>\r\n      <path\r\n        d='M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9c1.7 7.6 1.4 16.3 1.4 24.4c0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9c-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2c21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7c-6 0-4.9 8.9-4.9 12.7c0 .6-1.1 39.6 1.1 44.7c.8 1.6 2.2 2.4 3.8 2.4c7.8 0 6.2-9 6.2-14.4z'\r\n        fill='currentColor'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Links = (props: LinksProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { socials, name, isLoading = false } = props;\r\n\r\n  return (\r\n    <>\r\n      {/* Facebook */}\r\n      {socials?.facebook_id ? (\r\n        <Link\r\n          color='#4267B2'\r\n          name={name}\r\n          href={`https://www.facebook.com/${socials.facebook_id}`}\r\n          type='Facebook'\r\n          icon={FacebookIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Twitter */}\r\n      {socials?.twitter_id ? (\r\n        <Link\r\n          color='#1DA1F2'\r\n          name={name}\r\n          href={`https://www.twitter.com/${socials.twitter_id}`}\r\n          type='Twitter'\r\n          icon={TwitterIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Instagram */}\r\n      {socials?.instagram_id ? (\r\n        <Link\r\n          color={colorMode === 'light' ? theme.colors.gray[900] : theme.colors.gray[50]}\r\n          name={name}\r\n          href={`https://www.instagram.com/${socials.instagram_id}`}\r\n          type='Instagram'\r\n          icon={InstagramIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* IMDB */}\r\n      {socials?.imdb_id ? (\r\n        <Link\r\n          color='#F5C518'\r\n          name={name}\r\n          href={`https://www.imdb.com/name/${socials.imdb_id}`}\r\n          type='IMDB'\r\n          icon={ImdbIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { HStack, VStack } from '@chakra-ui/react';\r\n\r\nimport Links from './components/Links';\r\nimport { SocialsProps } from './types';\r\n\r\nconst Socials = (props: SocialsProps): ReactElement => {\r\n  const { orientation, ...rest } = props;\r\n\r\n  return orientation === 'vertical' ? (\r\n    <VStack spacing={0}>\r\n      <Links {...rest} />\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' spacing={0}>\r\n      <Links {...rest} />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport Background from './components/Background';\r\nimport Departments from './components/Departments';\r\nimport Poster from './components/Poster';\r\n// import Stats from './components/Stats';\r\nimport Socials from './components/Socials';\r\nimport { DetailsProps } from './types';\r\n\r\nconst Details = (props: DetailsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isMob] = useMediaQuery('(max-width: 640px)');\r\n\r\n  const {\r\n    person,\r\n    // totalMovieCredits,\r\n    // totalTvCredits,\r\n    // totalCrewCredits,\r\n    departments,\r\n    socials,\r\n    isLoading = false,\r\n    onClickPoster\r\n  } = props;\r\n\r\n  return (\r\n    <Card isFullWidth p={2}>\r\n      <VStack width='100%' spacing={2}>\r\n        {isMob ? (\r\n          <Poster name={person?.name} path={person?.profile_path} isLoading={isLoading} onClickPoster={onClickPoster} />\r\n        ) : (\r\n          <Background alt={`${person?.name || ''} background`} size='780'>\r\n            {{\r\n              poster: (\r\n                <Poster\r\n                  name={person?.name}\r\n                  path={person?.profile_path}\r\n                  isLoading={isLoading}\r\n                  onClickPoster={onClickPoster}\r\n                />\r\n              ),\r\n\r\n              socials: <Socials socials={socials} name={person?.name} isLoading={isLoading} orientation='vertical' />\r\n            }}\r\n          </Background>\r\n        )}\r\n\r\n        <VStack\r\n          width={isMob ? '100%' : 'calc(100% - 22.5vw)'}\r\n          maxWidth={isMob ? '100%' : 'calc(100% - 22.5vw)'}\r\n          position='relative'\r\n          left={isMob ? 0 : '11.25vw'}\r\n          alignItems='flex-start'\r\n          spacing={2}>\r\n          <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 1 : 0}>\r\n            <SkeletonText isLoaded={!isLoading}>\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize={isMob ? '2xl' : '4xl'}\r\n                fontWeight='bold'>\r\n                {person?.name || ''}\r\n              </Text>\r\n            </SkeletonText>\r\n\r\n            <Departments departments={departments} isLoading={isLoading} />\r\n          </VStack>\r\n\r\n          <SkeletonText isLoaded={!isLoading}>\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n              {`Born on ${moment(person?.birthday || '', 'YYYY-MM-DD').format('LL')}${\r\n                person?.place_of_birth ? ` in ${person?.place_of_birth}` : ''\r\n              }${person?.deathday ? ` - ${moment(person?.deathday || '', 'YYYY-MM-DD').format('LL')}` : ''} (${moment(\r\n                person?.deathday || new Date()\r\n              ).diff(moment(person?.birthday || '', 'YYYY-MM-DD'), 'years')} years old)`}\r\n            </Text>\r\n          </SkeletonText>\r\n\r\n          {/* <Stats\r\n            totalMovieCredits={totalMovieCredits}\r\n            totalTvCredits={totalTvCredits}\r\n            totalCrewCredits={totalCrewCredits}\r\n            isLoading={isLoading}\r\n          /> */}\r\n        </VStack>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Badge as CUIBadge } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../../../../../../../common/hooks/useSelectorTyped';\r\nimport { BadgeProps } from './types';\r\n\r\nconst Badge = ({ label, ...rest }: BadgeProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <CUIBadge {...rest} color={`${color}.400`} background={`${color}.50`} variant='subtle'>\r\n      {label}\r\n    </CUIBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, VStack, Link as CUILink, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport useSelector from '../../../../../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../../../../../common/utils/utils';\r\nimport Link from '../../../../../../../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\nimport Badge from '../Badge';\r\nimport { MediaItemProps } from './types';\r\n\r\nconst MediaItem = (props: MediaItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, mediaType, title, subtitle, date } = props;\r\n\r\n  /**\r\n   * This method will check if the media item's date is in the future or its already passed\r\n   *\r\n   * @param date - String\r\n   * @returns - Boolean if media item's date is in the future\r\n   */\r\n  const handleIfDateIsFuture = (date: string): boolean => {\r\n    return moment(new Date()).isBefore(moment(date, 'YYYY-MM-DD'));\r\n  };\r\n\r\n  return (\r\n    <HStack justifyContent='space-between' width='100%'>\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <HStack spacing={2}>\r\n          <Link to={{ pathname: `/${mediaType}/${id}` }}>\r\n            <CUILink\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize='md'\r\n              fontWeight='semibold'\r\n              sx={{\r\n                transition: `${theme.transition.duration['ultra-fast']} ${theme.transition.easing['ease-in-out']}`\r\n              }}\r\n              _hover={{ color: `${color}.400` }}>\r\n              {title}\r\n            </CUILink>\r\n          </Link>\r\n\r\n          {!date ? (\r\n            <Badge label='Announced' />\r\n          ) : date && handleIfDateIsFuture(date) ? (\r\n            <Badge label='In Production' />\r\n          ) : null}\r\n        </HStack>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n\r\n      {date ? (\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n          {utils.handleReturnDate(date || '', 'year')}\r\n        </Text>\r\n      ) : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaItem;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastMovies = ({ movies }: { movies: CastMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and it will\r\n   * combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CastMovieCredit[] => {\r\n    const withoutDate: CastMovieCredit[] = movies.filter((movie) => !movie.release_date);\r\n    const withDate: CastMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.character ? `As ${movie.character}` : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastMovies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CastTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastTV = ({ tv }: { tv: CastTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and it will\r\n   * combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CastTVCredit[] => {\r\n    const withoutDate: CastTVCredit[] = tv.filter((show) => !show.first_air_date);\r\n    const withDate: CastTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${\r\n            show.character ? show.character : 'Unknown'\r\n          }`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewMovies = ({ movies }: { movies: CrewMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and it will\r\n   * combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CrewMovieCredit[] => {\r\n    const withoutDate: CrewMovieCredit[] = movies.filter((movie) => !movie.release_date);\r\n    const withDate: CrewMovieCredit[] = arraySort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.job ? movie.job : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewMovies;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport { CrewTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewTV = ({ tv }: { tv: CrewTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and it will\r\n   * combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CrewTVCredit[] => {\r\n    const withoutDate: CrewTVCredit[] = tv.filter((show) => !show.first_air_date);\r\n    const withDate: CrewTVCredit[] = arraySort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${show.job}`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst Panel = ({ children, title }: ListProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Card isFullWidth variant='transparent'>\r\n      <VStack width='100%' alignItems='stretch' spacing={1}>\r\n        <HStack\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          spacing={0}\r\n          pb={1}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xl' fontWeight='medium'>\r\n            {title}\r\n          </Text>\r\n        </HStack>\r\n\r\n        <VStack width='100%' spacing={2}>\r\n          {children}\r\n        </VStack>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  AccordionItem as CUIAccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  VStack,\r\n  VisuallyHidden,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Badge from './components/Badge';\r\nimport CastMovies from './components/CastMovies';\r\nimport CastTV from './components/CastTV';\r\nimport CrewMovies from './components/CrewMovies';\r\nimport CrewTV from './components/CrewTV';\r\nimport Panel from './components/Panel';\r\nimport useStyles from './styles';\r\nimport { AccordionItemProps } from './types';\r\n\r\nconst AccordionItem = (props: AccordionItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { label, credits } = props;\r\n\r\n  return (\r\n    <CUIAccordionItem sx={{ ..._.merge(style.common.accordion, style[colorMode].accordion) }}>\r\n      <VisuallyHidden>\r\n        <span id={`${label.toLowerCase()}-accordion`} />\r\n      </VisuallyHidden>\r\n\r\n      <AccordionButton sx={{ ..._.merge(style.common.button) }}>\r\n        <Text\r\n          textAlign='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='2xl'\r\n          fontWeight='semibold'>\r\n          {label}\r\n          <Badge\r\n            label={`${\r\n              (credits.cast?.movie?.length || 0) +\r\n              (credits.cast?.tv?.length || 0) +\r\n              (credits.crew?.movie?.length || 0) +\r\n              (credits.crew?.tv?.length || 0)\r\n            }`}\r\n            ml={2}\r\n          />\r\n        </Text>\r\n        <Icon\r\n          as={KeyboardArrowDownOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ ..._.merge(style.common.icon) }}\r\n        />\r\n      </AccordionButton>\r\n\r\n      <AccordionPanel pb={4} sx={{ ..._.merge(style.common.panel) }}>\r\n        <VStack width='100%' spacing={3}>\r\n          {label === 'Actor' ? (\r\n            <>\r\n              {credits.cast?.movie && credits.cast?.movie.length > 0 ? (\r\n                <Panel title='Movies'>\r\n                  <CastMovies movies={credits.cast.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.cast?.tv && credits.cast?.tv.length > 0 ? (\r\n                <Panel title='TV Shows'>\r\n                  <CastTV tv={credits.cast.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {credits.crew?.movie && credits.crew?.movie.length > 0 ? (\r\n                <Panel title='Movies'>\r\n                  <CrewMovies movies={credits.crew.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.crew?.tv && credits.crew?.tv.length > 0 ? (\r\n                <Panel title='TV Shows'>\r\n                  <CrewTV tv={credits.crew.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </VStack>\r\n      </AccordionPanel>\r\n    </CUIAccordionItem>\r\n  );\r\n};\r\n\r\nexport default AccordionItem;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { AccordionItemProps } from './types';\r\n\r\ntype Components = {\r\n  accordion: Style;\r\n  button: Style;\r\n  icon: Style;\r\n  panel: Style;\r\n};\r\n\r\ntype AccordionItemStyle = {\r\n  common: Components;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { isExpanded = false }: AccordionItemProps): AccordionItemStyle => ({\r\n  common: {\r\n    accordion: {\r\n      width: '100%',\r\n\r\n      border: 'none',\r\n      borderRadius: 'lg',\r\n\r\n      transition: `${theme.transition.duration.fast} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n\r\n      'padding': `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.fast} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': isExpanded ? 'rotate(360deg)' : 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.fast} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    },\r\n    panel: {\r\n      padding: `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      transition: `${theme.transition.duration.fast} ${theme.transition.easing['ease-in-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.100' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.100',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.800' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.800',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon } from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(300, 5);\r\n\r\nconst DummyAccordion = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme);\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between' sx={{ ..._.merge(style.common.button) }}>\r\n      <Skeleton width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`} height='16px' />\r\n\r\n      <Icon\r\n        as={KeyboardArrowDownOutlinedIcon}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        sx={{ ..._.merge(style.common.icon) }}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DummyAccordion;\r\n",
    "import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype DummyAccordionItemStyle = {\r\n  common: { button: Style; icon: Style };\r\n};\r\n\r\nexport default (theme: Theme): DummyAccordionItemStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    }\r\n  }\r\n});\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Accordion as CUIAccordion, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport AccordionItem from './components/AccordionItem';\r\nimport DummyAccordionItem from './components/DummyAccordionItem';\r\nimport { AccordionProps } from './types';\r\n\r\nconst Accordion = (props: AccordionProps): ReactElement => {\r\n  const { departments, expanded, isLoading = false, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <CUIAccordion\r\n          width='100%'\r\n          allowMultiple\r\n          allowToggle\r\n          defaultIndex={[]}\r\n          index={expanded}\r\n          onChange={(indexes) => onChange(indexes)}>\r\n          <VStack width='100%' spacing={2}>\r\n            {departments.map((department, index) => (\r\n              <AccordionItem\r\n                key={`${department.label.toLowerCase()}-accordion`}\r\n                {...department}\r\n                isExpanded={Array.isArray(expanded) ? expanded.includes(index) : false}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </CUIAccordion>\r\n      ) : (\r\n        _.range(0, 5).map((_dummy, index) => <DummyAccordionItem key={index} />)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { isAccordionsExpanded = false, isLoading = false, isError = false, onToggleAccordions } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='space-between'\r\n        borderBottom='solid2'\r\n        borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        spacing={0}\r\n        pb={1.25}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          Filmography\r\n        </Text>\r\n\r\n        <ScaleFade in={!isError} unmountOnExit>\r\n          <Button isDisabled={isLoading} onClick={() => onToggleAccordions()} size='sm' variant='text'>\r\n            {isAccordionsExpanded ? 'Hide all' : 'Show all'}\r\n          </Button>\r\n        </ScaleFade>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",
    "import React, { Fragment, ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { QuickTogglesProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(200, 4);\r\n\r\nconst QuickToggles = (props: QuickTogglesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { departments, isLoading = false, onToggleAccordion } = props;\r\n\r\n  return (\r\n    <HStack justifyContent='stretch' spacing={isLoading ? 1 : 0}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        whiteSpace='nowrap'\r\n        py={0.75}>\r\n        Jump to:\r\n      </Text>\r\n\r\n      {!isLoading ? (\r\n        <HorizontalScroll width='calc(100% - 61.47px)' spacing='0'>\r\n          <>\r\n            {departments.map((department, index) => (\r\n              <Fragment key={index}>\r\n                <Link to={`${department.toLowerCase()}-accordion`} spy={true} smooth={true} offset={-81}>\r\n                  <Button\r\n                    color={utils.handleReturnColor(color)}\r\n                    onClick={() => onToggleAccordion(department)}\r\n                    size='sm'\r\n                    variant='text'>\r\n                    {department}\r\n                  </Button>\r\n                </Link>\r\n\r\n                {index < departments.length - 1 ? (\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                    •\r\n                  </Text>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n          </>\r\n        </HorizontalScroll>\r\n      ) : (\r\n        _.range(0, 4).map((_dummy, index) => (\r\n          <Fragment key={index}>\r\n            <Skeleton\r\n              width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n              height='16px'\r\n            />\r\n\r\n            {index < 3 ? (\r\n              <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                •\r\n              </Text>\r\n            ) : null}\r\n          </Fragment>\r\n        ))\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default QuickToggles;\r\n",
    "import React, { ReactElement, useState } from 'react';\r\n\r\nimport { ExpandedIndex, useColorMode, VStack, Collapse } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport Accordion from './components/Accordion';\r\nimport Header from './components/Header';\r\nimport QuickToggles from './components/QuickToggles';\r\nimport { FilmographyProps } from './types';\r\n\r\nconst Filmography = (props: FilmographyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { departments, name, isSuccess = false, isLoading = false, isError = false } = props;\r\n\r\n  const [expandedAccordions, setExpandedAccordions] = useState<ExpandedIndex>([]);\r\n\r\n  /**\r\n   * This method will either expand/collapse all accordions at once\r\n   */\r\n  const handleToggleAccordions = (): void => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    setExpandedAccordions(expanded === departments.length ? [] : departments.map((_department, index) => index));\r\n  };\r\n\r\n  /**\r\n   * This method will check if all the accordions are either expanded or collapsed\r\n   *\r\n   * @returns Boolean - If expanded or collapsed\r\n   */\r\n  const handleCheckisAccordionsExpanded = (): boolean => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    return expanded === departments.length;\r\n  };\r\n\r\n  /**\r\n   * This method will either expand/collapse the accordion passed as param\r\n   *\r\n   * @param department String - The accordion clicked\r\n   */\r\n  const handleToggleAccordion = (department: string): void => {\r\n    const expanded: number[] = Array.isArray(expandedAccordions) ? expandedAccordions : [];\r\n    const index: number = departments.findIndex((paramDepartment) => paramDepartment.label === department);\r\n\r\n    if (!expanded.includes(index)) {\r\n      setExpandedAccordions([...expanded, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card colorMode={colorMode} isFullWidth variant='outlined' px={2} pt={1.25} pb={2}>\r\n      <VStack width='100%' spacing={1.5}>\r\n        <Header\r\n          isAccordionsExpanded={handleCheckisAccordionsExpanded()}\r\n          isLoading={isLoading}\r\n          isError={isError}\r\n          onToggleAccordions={handleToggleAccordions}\r\n        />\r\n\r\n        <Collapse in={!isError} unmountOnExit style={{ width: '100%' }}>\r\n          <QuickToggles\r\n            departments={departments.map((department) => department.label)}\r\n            isLoading={isLoading}\r\n            onToggleAccordion={handleToggleAccordion}\r\n          />\r\n        </Collapse>\r\n\r\n        {isError ? (\r\n          <Error\r\n            label='Oh no! Something went wrong'\r\n            description={`Failed to fetch ${name ? `\"${name}\"` : ''} Filmography credits list!`}\r\n            variant='transparent'\r\n          />\r\n        ) : isSuccess && departments && departments.length === 0 ? (\r\n          <Empty label={`${name ? `\"${name}\"` : ''} has no credits`} variant='transparent' />\r\n        ) : (\r\n          <Accordion\r\n            departments={departments}\r\n            expanded={expandedAccordions}\r\n            isLoading={isLoading}\r\n            onChange={(indexes: ExpandedIndex) => setExpandedAccordions(indexes)}\r\n          />\r\n        )}\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Filmography;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { KnownForProps } from './types';\r\n\r\nconst KnownFor = (props: KnownForProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { knownFor, name, isError = false, isSuccess = false, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          width='100%'\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='md'\r\n          fontWeight='medium'>\r\n          Known for\r\n        </Text>\r\n      }\r\n      isLoading={isLoading}\r\n      variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} known for list!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && knownFor && knownFor.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no known for credits`} variant='transparent' />\r\n      ) : isSuccess && knownFor && knownFor.length > 0 ? (\r\n        <>\r\n          {knownFor.map((mediaItem) => (\r\n            <VerticalPoster\r\n              key={mediaItem.id}\r\n              width={['185px', '205px', '230px']}\r\n              mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n              mediaType={mediaItem ? 'movie' : 'tv'}\r\n              image={{\r\n                alt: `${mediaItem?.title || mediaItem?.name || ''} ${mediaItem?.title ? 'movie' : 'tv'} poster`,\r\n                src: mediaItem?.poster_path || '',\r\n                size: '780'\r\n              }}\r\n              rating={{\r\n                rating: mediaItem?.vote_average || null,\r\n                count: mediaItem?.vote_count || null\r\n              }}\r\n              title={mediaItem?.title || mediaItem?.name || ''}\r\n              subtitle={`${utils.handleReturnDate(mediaItem?.release_date || mediaItem?.first_air_date || '', 'year')}`}\r\n              isLoading={false}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {[...Array(knownFor ? knownFor.length : 10)].map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='movie'\r\n              image={{\r\n                alt: 'Movie poster',\r\n                src: '',\r\n                size: '780'\r\n              }}\r\n              title='Lorem ipsum'\r\n              subtitle='Lorem ipsum'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default KnownFor;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useBoolean, VStack } from '@chakra-ui/react';\r\nimport {\r\n  CloseOutlined as CloseOutlinedIcon,\r\n  DashboardOutlined as DashboardOutlinedIcon,\r\n  FullscreenOutlined as FullscreenOutlinedIcon,\r\n  FullscreenExitOutlined as FullscreenExitOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const [isFullscreen, setIsFullscreen] = useBoolean();\r\n\r\n  const { onClose, onGalleryClick } = props;\r\n\r\n  /**\r\n   * This method will open fullscreen mode\r\n   */\r\n  const handleOpenFullscreen = (): void => {\r\n    document.documentElement.requestFullscreen();\r\n    setIsFullscreen.on();\r\n  };\r\n\r\n  /**\r\n   * This method will close fullscreen mode\r\n   */\r\n  const handleCloseFullscreen = (): void => {\r\n    document.exitFullscreen();\r\n    setIsFullscreen.off();\r\n  };\r\n\r\n  /**\r\n   * This method will close the modal and will close fullscreen if fullscreen is open\r\n   */\r\n  const handleClose = (): void => {\r\n    if (isFullscreen) {\r\n      handleCloseFullscreen();\r\n    }\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <VStack position='absolute' top={2} right={2} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {/* Close button */}\r\n      <IconButton aria-label='Close modal' icon={CloseOutlinedIcon} onClick={() => handleClose()} variant='icon' />\r\n\r\n      {/* Gallery button */}\r\n      <IconButton\r\n        aria-label='Open Gallery'\r\n        icon={DashboardOutlinedIcon}\r\n        onClick={() => onGalleryClick()}\r\n        variant='icon'\r\n      />\r\n\r\n      {/* Fullscreen button */}\r\n      <IconButton\r\n        aria-label={isFullscreen ? 'Exit fullscreen ' : 'Enter fullscreen'}\r\n        icon={isFullscreen ? FullscreenExitOutlinedIcon : FullscreenOutlinedIcon}\r\n        onClick={isFullscreen ? () => handleCloseFullscreen() : () => handleOpenFullscreen()}\r\n        variant='icon'\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, SimpleGrid, Text } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = ({ children, title }: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <VStack width='100%' justifyContent='stretch' spacing={2}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='xl'\r\n        fontWeight='semibold'>\r\n        {title}\r\n      </Text>\r\n\r\n      <SimpleGrid width='100%' columns={4} spacing={2}>\r\n        {children}\r\n      </SimpleGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Image as CUIImage,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon, CheckOutlined as CheckOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport utils from '../../../../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    base: theme.fontSizes['4xl'],\r\n    sm: theme.fontSizes['5xl'],\r\n    md: theme.fontSizes['6xl']\r\n  });\r\n\r\n  const { image, index, name, isActive = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height='100%'\r\n      position='relative'\r\n      onClick={() => onClickImage(index)}\r\n      onMouseEnter={() => setIsHovering.on()}\r\n      onMouseLeave={() => setIsHovering.off()}>\r\n      <Center\r\n        width='100%'\r\n        height='100%'\r\n        position='absolute'\r\n        zIndex={1}\r\n        borderRadius='base'\r\n        sx={{\r\n          cursor: 'pointer',\r\n          backgroundColor:\r\n            isHovering || isActive\r\n              ? colorMode === 'light'\r\n                ? 'rgba(0, 0, 0, 0.25)'\r\n                : 'rgba(255, 255, 255, 0.25)'\r\n              : 'transparent',\r\n          transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n        }}>\r\n        <Fade in={isHovering || isActive} unmountOnExit>\r\n          <Icon\r\n            as={isActive ? CheckOutlinedIcon : SearchOutlinedIcon}\r\n            color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n            sx={{\r\n              fontSize: `${fontSize} !important`\r\n            }}\r\n          />\r\n        </Fade>\r\n      </Center>\r\n      <AspectRatio borderRadius='base' ratio={1 / 1}>\r\n        <CUIImage\r\n          alt={`${name ? `\"${name}\"` : ''} image`}\r\n          maxWidth='none'\r\n          height='100%'\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/original${image.file_path}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc('person', '780', `${name ? `\"${name}\"` : ''} image`)}\r\n        />\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Modal, ModalContent, ModalBody, Box, VStack } from '@chakra-ui/react';\r\nimport { CloseOutlined as CloseOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Grid from './components/Grid';\r\nimport Image from './components/Image';\r\nimport { GalleryProps } from './types';\r\n\r\nconst Gallery = (props: GalleryProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { isOpen, name, activeIndex, images, onClick, onClose } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody position='relative' p={0}>\r\n          {/* Close button */}\r\n          <Box position='fixed' top={2} right={2}>\r\n            <IconButton aria-label='Close modal' icon={CloseOutlinedIcon} onClick={() => onClose()} variant='icon' />\r\n          </Box>\r\n\r\n          <VStack px={9} py={8}>\r\n            {/* Photos Section */}\r\n            <Grid title='Photos'>\r\n              <>\r\n                {images.map((image, index) => (\r\n                  <Image\r\n                    key={index}\r\n                    image={image}\r\n                    index={index}\r\n                    name={name}\r\n                    isActive={index === activeIndex}\r\n                    onClickImage={onClick}\r\n                  />\r\n                ))}\r\n              </>\r\n            </Grid>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport { NavigationProps } from './types';\r\n\r\nconst Navigation = (props: NavigationProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { current, total, onNavigation } = props;\r\n\r\n  return (\r\n    <HStack position='absolute' bottom={2} right={2} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {/* Left button */}\r\n      <IconButton\r\n        aria-label='Previous photo'\r\n        icon={ArrowBackOutlinedIcon}\r\n        isDisabled={current <= 1}\r\n        onClick={() => onNavigation('prev')}\r\n        variant='icon'\r\n      />\r\n\r\n      <Text\r\n        align='center'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='md'>{`${current} / ${total}`}</Text>\r\n\r\n      {/* Right button */}\r\n      <IconButton\r\n        aria-label='Next photo'\r\n        icon={ArrowForwardOutlinedIcon}\r\n        isDisabled={current >= total}\r\n        onClick={() => onNavigation('next')}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Center, Image } from '@chakra-ui/react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport { ViewerProps } from './types';\r\n\r\nconst Viewer = (props: ViewerProps): ReactElement => {\r\n  const { name, images, onSwiper, onSlideChange } = props;\r\n\r\n  return (\r\n    <Swiper\r\n      spaceBetween={96}\r\n      slidesPerView={1}\r\n      onSwiper={(swiper) => onSwiper(swiper)}\r\n      onSlideChange={(swiper) => onSlideChange(swiper)}>\r\n      {images.map((image, index) => (\r\n        <SwiperSlide key={index}>\r\n          <Center height='100vh' py={2}>\r\n            <Image\r\n              alt={`${name ? `\"${name}\"` : ''} image`}\r\n              width='auto'\r\n              maxWidth='none'\r\n              height='calc(100% - 96px)'\r\n              borderRadius='xl'\r\n              src={`${process.env.REACT_APP_IMAGE_URL}/original${image.file_path}`}\r\n              fallbackSrc={utils.handleReturnFallbackSrc('person', '780', `${name ? `\"${name}\"` : ''} image`)}\r\n            />\r\n          </Center>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Viewer;\r\n",
    "import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Modal, ModalContent, ModalBody } from '@chakra-ui/react';\r\nimport { Swiper } from 'swiper';\r\n\r\nimport Actions from './components/Actions';\r\nimport Gallery from './components/Gallery';\r\nimport Navigation from './components/Navigation';\r\nimport Viewer from './components/Viewer';\r\nimport { MediaViewerProps, NavigationDirection } from './types';\r\n\r\nconst MediaViewer = (props: MediaViewerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isGalleryOpen, onOpen: onGalleryOpen, onClose: onGalleryClose } = useDisclosure();\r\n\r\n  const { isOpen, name, selectedImage, images, onClose } = props;\r\n\r\n  const [swiper, setSwiper] = useState<Swiper | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n\r\n  /**\r\n   * This method will slide to the image\r\n   *\r\n   * @param index Number - The index of the image in the list\r\n   * @param speed Number - The speed of the slide transition\r\n   */\r\n  const handleSlideTo = useCallback(\r\n    (index: number, speed: number) => {\r\n      if (swiper) {\r\n        swiper.slideTo(index, speed);\r\n        setActiveIndex(index);\r\n      }\r\n    },\r\n    [swiper]\r\n  );\r\n\r\n  /**\r\n   * This method will either slide to the previous slide or to the next slide depending on the direction passed\r\n   *\r\n   * @param direction - Either 'prev' or 'next'\r\n   */\r\n  const handleNavigationClick = (direction: NavigationDirection): void => {\r\n    handleSlideTo(direction === 'prev' ? activeIndex - 1 : activeIndex + 1, 500);\r\n  };\r\n\r\n  /**\r\n   * This method will close the gallery and will slide to the index passed\r\n   *\r\n   * @param index Number - The slide index\r\n   */\r\n  const handleGalleryClick = (index: number): void => {\r\n    onGalleryClose();\r\n    handleSlideTo(index, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiper && selectedImage) {\r\n      handleSlideTo(images.findIndex((image) => image.file_path === selectedImage.file_path) || 0, 0);\r\n    }\r\n  }, [swiper, selectedImage]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        blockScrollOnMount\r\n        preserveScrollBarGap\r\n        motionPreset='scale'\r\n        scrollBehavior='inside'\r\n        size='full'>\r\n        <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n          <ModalBody position='relative' p={0}>\r\n            <Actions onClose={onClose} onGalleryClick={() => onGalleryOpen()} />\r\n\r\n            <Viewer\r\n              name={name}\r\n              images={images}\r\n              onSwiper={(swiper) => setSwiper(swiper)}\r\n              onSlideChange={(swiper) => setActiveIndex(swiper.activeIndex)}\r\n            />\r\n\r\n            <Navigation current={activeIndex + 1} total={images.length} onNavigation={handleNavigationClick} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Gallery\r\n        isOpen={isGalleryOpen}\r\n        name={name}\r\n        activeIndex={activeIndex}\r\n        images={images}\r\n        onClick={handleGalleryClick}\r\n        onClose={onGalleryClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaViewer;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  useBreakpointValue,\r\n  Box,\r\n  Center,\r\n  AspectRatio,\r\n  Image as CUIImage,\r\n  Icon,\r\n  Fade\r\n} from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport utils from '../../../../../../common/utils/utils';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n  const fontSize = useBreakpointValue({\r\n    base: theme.fontSizes['4xl'],\r\n    sm: theme.fontSizes['5xl'],\r\n    md: theme.fontSizes['6xl']\r\n  });\r\n\r\n  const { image, name, isLoading = false, onClickImage } = props;\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      width={width}\r\n      minWidth={width}\r\n      maxWidth={width}\r\n      onClick={image ? () => onClickImage(image) : undefined}\r\n      onMouseEnter={image ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={image ? () => setIsHovering.off() : undefined}>\r\n      <Center\r\n        width={width}\r\n        height='100%'\r\n        position='absolute'\r\n        zIndex={1}\r\n        borderRadius='base'\r\n        sx={{\r\n          cursor: 'pointer',\r\n          backgroundColor: isHovering\r\n            ? colorMode === 'light'\r\n              ? 'rgba(0, 0, 0, 0.25)'\r\n              : 'rgba(255, 255, 255, 0.25)'\r\n            : 'transparent',\r\n          transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n        }}>\r\n        <Fade in={isHovering} unmountOnExit>\r\n          <Icon\r\n            as={SearchOutlinedIcon}\r\n            color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n            sx={{\r\n              fontSize: `${fontSize} !important`\r\n            }}\r\n          />\r\n        </Fade>\r\n      </Center>\r\n      <AspectRatio ratio={2 / 3}>\r\n        <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n          <CUIImage\r\n            alt={`${name ? `\"${name}\"` : ''} image`}\r\n            maxWidth='none'\r\n            height='100%'\r\n            borderRadius='base'\r\n            src={`${process.env.REACT_APP_IMAGE_URL}/w780${image?.file_path}`}\r\n            fallbackSrc={utils.handleReturnFallbackSrc('person', '780', `${name ? `\"${name}\"` : ''} image`)}\r\n          />\r\n        </Skeleton>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Image as ImageType } from '../../../../common/types/person';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport Image from './components/Image';\r\nimport { PhotosProps } from './types';\r\n\r\nconst Photos = (props: PhotosProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { images, name, isError = false, isSuccess = false, isLoading = false, onClickImage } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          width='100%'\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='md'\r\n          fontWeight='medium'>\r\n          Photos\r\n        </Text>\r\n      }\r\n      footer={\r\n        <Button\r\n          color={utils.handleReturnColor(color)}\r\n          isFullWidth\r\n          isDisabled={isLoading || isError}\r\n          onClick={() => onClickImage()}\r\n          variant='text'>\r\n          {`View all ${name ? `\"${name}\"` : ''} photos`}\r\n        </Button>\r\n      }\r\n      isLoading={isLoading}\r\n      variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} photos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && images && images.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no photos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(images && images.length > 0 ? images : Array(5))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: ImageType | number, index) => (\r\n              <Image\r\n                key={index}\r\n                image={typeof image !== 'number' && image ? image : undefined}\r\n                name={name}\r\n                isLoading={isLoading}\r\n                onClickImage={onClickImage}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport arraySort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport {\r\n  FullPerson,\r\n  Credits,\r\n  MovieCredits,\r\n  TVCredits,\r\n  ExternalIDs,\r\n  ImageResponse,\r\n  Image\r\n} from '../../common/types/person';\r\nimport { Response } from '../../common/types/types';\r\nimport Bio from './components/Bio';\r\nimport Details from './components/Details';\r\nimport Filmography from './components/Filmography';\r\nimport KnownFor from './components/KnownFor';\r\nimport MediaViewer from './components/MediaViewer';\r\nimport Photos from './components/Photos';\r\nimport { Department, KnownFor as KnownForType } from './types';\r\n\r\nconst Person = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState<Image | undefined>();\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person known for list\r\n  const creditsQuery = useQuery([`person-combined_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Credits>(`/person/${id}/combined_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person external ids\r\n  const externalIdsQuery = useQuery([`person-external_ids-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ExternalIDs>(`/person/${id}/external_ids`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person images\r\n  const imagesQuery = useQuery([`person-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/person/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tagged images\r\n  const taggedImagesQuery = useQuery([`person-tagged_images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<ImageResponse>>(`/person/${id}/tagged_images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  /**\r\n   * This method will take all the credits and place them in their respective object\r\n   *\r\n   * @returns Array of Objects - Of Departments containing all credits\r\n   */\r\n  const handleGetDepartments = (): Department[] => {\r\n    let departments: Department[] = [];\r\n\r\n    if ((movieCreditsQuery.data?.cast.length || 0) > 0 || (tvCreditsQuery.data?.cast.length || 0) > 0) {\r\n      departments.push({\r\n        label: 'Actor',\r\n        credits: {\r\n          cast: {\r\n            movie: movieCreditsQuery.data?.cast || [],\r\n            tv: tvCreditsQuery.data?.cast || []\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    movieCreditsQuery.data?.crew.forEach((mediaItem) => {\r\n      if (departments.some((department) => department.label === mediaItem.job)) {\r\n        departments = departments.map((department) =>\r\n          department.label === mediaItem.job\r\n            ? {\r\n                ...department,\r\n                credits: {\r\n                  ...department.credits,\r\n                  crew: {\r\n                    ...department.credits.crew,\r\n                    movie: [...(department.credits.crew?.movie || []), { ...mediaItem }]\r\n                  }\r\n                }\r\n              }\r\n            : department\r\n        );\r\n      } else {\r\n        departments.push({\r\n          label: mediaItem.job,\r\n          credits: {\r\n            crew: {\r\n              movie: [{ ...mediaItem }],\r\n              tv: []\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    tvCreditsQuery.data?.crew.forEach((mediaItem) => {\r\n      if (departments.some((department) => department.label === mediaItem.job)) {\r\n        departments = departments.map((department) =>\r\n          department.label === mediaItem.job\r\n            ? {\r\n                ...department,\r\n                credits: {\r\n                  ...department.credits,\r\n                  crew: {\r\n                    ...department.credits.crew,\r\n                    tv: [...(department.credits.crew?.tv || []), { ...mediaItem }]\r\n                  }\r\n                }\r\n              }\r\n            : department\r\n        );\r\n      } else {\r\n        departments.push({\r\n          label: mediaItem.job,\r\n          credits: {\r\n            crew: {\r\n              movie: [],\r\n              tv: [{ ...mediaItem }]\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return arraySort([...departments], 'label');\r\n  };\r\n\r\n  /**\r\n   * This method will filter from known for list and will return the 8 most voted movies/tv shows\r\n   *\r\n   * @returns Array of Objects - Known for list\r\n   */\r\n  const handleGetKnownFor = (): KnownForType => {\r\n    const filtered = new Set();\r\n    const credits = [...(creditsQuery.data?.cast || []), ...(creditsQuery.data?.crew || [])];\r\n    const knownFor = arraySort(\r\n      credits.filter((mediaItem) => {\r\n        const duplicate = filtered.has(mediaItem.id);\r\n        filtered.add(mediaItem.id);\r\n        return !duplicate;\r\n      }),\r\n      'vote_count',\r\n      { reverse: true }\r\n    ).filter((_item, index) => index < 8);\r\n\r\n    return [...knownFor];\r\n  };\r\n\r\n  /**\r\n   * This method will open the image passed in the media modal\r\n   *\r\n   * @param image - Image object\r\n   */\r\n  const handleOnImageClick = (image?: Image): void => {\r\n    setSelectedPhoto(image || undefined);\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  /**\r\n   * This method will find the image object from images and then it will open the media modal\r\n   *\r\n   * @param path - Image path\r\n   */\r\n  const handleOnPosterClick = (path: string): void => {\r\n    const image = imagesQuery.data?.profiles.find((image) => image.file_path === path);\r\n    handleOnImageClick(image);\r\n  };\r\n\r\n  const knownFor = creditsQuery.isSuccess ? handleGetKnownFor() : [];\r\n  const departments = movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess ? handleGetDepartments() : [];\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={4} p={2}>\r\n      <Details\r\n        person={personQuery.data}\r\n        // totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n        // totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n        // totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n        departments={departments.map((department) => department.label)}\r\n        socials={externalIdsQuery.data}\r\n        isLoading={\r\n          personQuery.isFetching || personQuery.isLoading || externalIdsQuery.isFetching || externalIdsQuery.isLoading\r\n        }\r\n        onClickPoster={handleOnPosterClick}\r\n      />\r\n\r\n      {personQuery.data?.biography || personQuery.isFetching || personQuery.isLoading ? (\r\n        <Bio\r\n          biography={personQuery.data?.biography || ''}\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      <KnownFor\r\n        knownFor={knownFor}\r\n        name={personQuery.data?.name}\r\n        isError={creditsQuery.isError}\r\n        isSuccess={creditsQuery.isSuccess}\r\n        isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n      />\r\n\r\n      <Filmography\r\n        departments={departments}\r\n        isLoading={\r\n          movieCreditsQuery.isFetching ||\r\n          movieCreditsQuery.isLoading ||\r\n          tvCreditsQuery.isFetching ||\r\n          tvCreditsQuery.isLoading\r\n        }\r\n        isError={movieCreditsQuery.isError || tvCreditsQuery.isError}\r\n      />\r\n\r\n      <Photos\r\n        images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n        name={personQuery.data?.name}\r\n        isError={imagesQuery.isError || taggedImagesQuery.isError}\r\n        isSuccess={imagesQuery.isSuccess && taggedImagesQuery.isSuccess}\r\n        isLoading={\r\n          imagesQuery.isFetching || imagesQuery.isLoading || taggedImagesQuery.isFetching || taggedImagesQuery.isLoading\r\n        }\r\n        onClickImage={handleOnImageClick}\r\n      />\r\n\r\n      {imagesQuery.isSuccess || taggedImagesQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selectedImage={selectedPhoto}\r\n          images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  return isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  ) : isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../components/TV/Grid/Horizontal';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, isLoading = false, movies, tv, people }: AllProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Fade\r\n      in={\r\n        (movies && movies.results && movies.results.length > 0) ||\r\n        (tv && tv.results && tv.results.length > 0) ||\r\n        (people && people.results && people.results.length > 0) ||\r\n        false\r\n      }\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse\r\n          in={(movies && movies.results && movies.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={\r\n              <Link\r\n                to={\r\n                  !isLoading\r\n                    ? { pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }\r\n                    : {}\r\n                }>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth isDisabled={isLoading} variant='text'>\r\n                  {`View all ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={isLoading}>\r\n            <HorizontalMovies isError={false} isSuccess={!isLoading} movies={movies?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.results && tv.results.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={\r\n              <Link\r\n                to={\r\n                  !isLoading ? { pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) } : {}\r\n                }>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth isDisabled={isLoading} variant='text'>\r\n                  {`View all ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={isLoading}>\r\n            <HorizontalTV isError={false} isSuccess={!isLoading} tv={tv?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse\r\n          in={(people && people.results && people.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            footer={\r\n              <Link\r\n                to={\r\n                  !isLoading\r\n                    ? { pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }\r\n                    : {}\r\n                }>\r\n                <Button color={utils.handleReturnColor(color)} isFullWidth isDisabled={isLoading} variant='text'>\r\n                  {`View all ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                </Button>\r\n              </Link>\r\n            }\r\n            isLoading={isLoading}>\r\n            <HorizontalPeople isError={false} isSuccess={!isLoading} people={people?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\n\r\nconst Search = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [refetch, setRefetch] = useState<boolean>(false);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setRefetch(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else {\r\n          setMediaType(null);\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0}>\r\n        <Box width='100%' backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} px={2} pt={4} pb={2}>\r\n          <SearchForm\r\n            query={query}\r\n            sortBy={sortBy}\r\n            genres={genres}\r\n            departments={departments}\r\n            refetch={refetch}\r\n            onQueryChange={(query: string) => setQuery(query)}\r\n            onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n            onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n            onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n            onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            onIsFetched={() => setRefetch(false)}\r\n          />\r\n        </Box>\r\n\r\n        <VerticalGrid\r\n          title={\r\n            query\r\n              ? mediaType === 'movie'\r\n                ? `Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'tv'\r\n                ? `Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'person'\r\n                ? `Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : ''\r\n              : ''\r\n          }\r\n          header={\r\n            <Fade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </Fade>\r\n          }>\r\n          {mediaType === 'movie' && movies ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalMovies isError={false} isSuccess={!isLoading} movies={movies.results || []} />\r\n\r\n                {movies ? (\r\n                  <LoadMore\r\n                    amount={movies.results.length}\r\n                    total={movies.total_results}\r\n                    mediaType={`movies for \"${query}\"`}\r\n                    isLoading={isLoading}\r\n                    onFetch={() =>\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({\r\n                          ...queryString.parse(history.location.search),\r\n                          page: movies.page + 1\r\n                        })\r\n                      })\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'tv' && tv ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalTV isError={false} isSuccess={!isLoading} tv={tv.results || []} />\r\n\r\n                {tv ? (\r\n                  <LoadMore\r\n                    amount={tv.results.length}\r\n                    total={tv.total_results}\r\n                    mediaType={`tv shows for \"${query}\"`}\r\n                    isLoading={isLoading}\r\n                    onFetch={() =>\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({\r\n                          ...queryString.parse(history.location.search),\r\n                          page: tv.page + 1\r\n                        })\r\n                      })\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'person' && people ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalPeople isError={false} isSuccess={!isLoading} people={people.results || []} />\r\n\r\n                {people ? (\r\n                  <LoadMore\r\n                    amount={people.results.length}\r\n                    total={people.total_results}\r\n                    mediaType={`people for \"${query}\"`}\r\n                    isLoading={isLoading}\r\n                    onFetch={() =>\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({\r\n                          ...queryString.parse(history.location.search),\r\n                          page: people.page + 1\r\n                        })\r\n                      })\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            </VStack>\r\n          ) : (\r\n            <All query={query} isLoading={isLoading} movies={movies} tv={tv} people={people} />\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          const search = { ...queryString.parse(history.location.search), page: 1, mediaType };\r\n\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(_.omit(search, 'page'))\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useInfiniteQuery(\r\n    'trendingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'movie') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending tv shows\r\n  const trendingTV = useInfiniteQuery(\r\n    'trendingTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'tv') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending people\r\n  const trendingPeople = useInfiniteQuery(\r\n    'trendingPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'person') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleRefetch = (): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        trendingMovies.refetch();\r\n        break;\r\n      case 'tv':\r\n        trendingTV.refetch();\r\n        break;\r\n      case 'person':\r\n        trendingPeople.refetch();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => handleRefetch(), 0);\r\n  };\r\n\r\n  const handleDisabledFilters = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return !trendingMovies.isSuccess;\r\n      case 'tv':\r\n        return !trendingTV.isSuccess;\r\n      case 'person':\r\n        return !trendingPeople.isSuccess;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      handleRefetch();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Select media-type'\r\n        }\r\n        header={\r\n          <Fade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              {mediaType ? (\r\n                <Filters mediaType={mediaType} isDisabled={handleDisabledFilters()} onFilter={handleSetFilters} />\r\n              ) : null}\r\n            </HStack>\r\n          </Fade>\r\n        }>\r\n        {mediaType ? (\r\n          <VStack width='100%' spacing={4} px={2}>\r\n            {mediaType === 'movie' ? (\r\n              <>\r\n                <VerticalMovies\r\n                  isError={trendingMovies.isError}\r\n                  isSuccess={trendingMovies.isSuccess && !trendingMovies.isFetching && !trendingMovies.isLoading}\r\n                  movies={movies?.results || []}\r\n                />\r\n\r\n                {movies ? (\r\n                  <LoadMore\r\n                    amount={movies.results.length}\r\n                    total={movies.total_results}\r\n                    mediaType='movies'\r\n                    isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                    isError={trendingMovies.isError}\r\n                    hasNextPage={trendingMovies.hasNextPage || true}\r\n                    onFetch={trendingMovies.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'tv' ? (\r\n              <>\r\n                <VerticalTV\r\n                  isError={trendingTV.isError}\r\n                  isSuccess={trendingTV.isSuccess && !trendingTV.isFetching && !trendingTV.isLoading}\r\n                  tv={tv?.results || []}\r\n                />\r\n\r\n                {tv ? (\r\n                  <LoadMore\r\n                    amount={tv.results.length}\r\n                    total={tv.total_results}\r\n                    mediaType='tv shows'\r\n                    isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                    isError={trendingTV.isError}\r\n                    hasNextPage={trendingTV.hasNextPage || true}\r\n                    onFetch={trendingTV.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'person' ? (\r\n              <>\r\n                <VerticalPeople\r\n                  isError={trendingPeople.isError}\r\n                  isSuccess={trendingPeople.isSuccess && !trendingPeople.isFetching && !trendingPeople.isLoading}\r\n                  people={people?.results || []}\r\n                />\r\n\r\n                {people ? (\r\n                  <LoadMore\r\n                    amount={people.results.length}\r\n                    total={people.total_results}\r\n                    mediaType='people'\r\n                    isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                    isError={trendingPeople.isError}\r\n                    hasNextPage={trendingPeople.hasNextPage || true}\r\n                    onFetch={trendingPeople.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </VStack>\r\n        ) : (\r\n          <Box width='100%' px={2}>\r\n            <Empty\r\n              button={\r\n                <MediaTypes\r\n                  mediaType={mediaType}\r\n                  onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n                />\r\n              }\r\n              hasIllustration={false}\r\n              label=''\r\n              size='xl'\r\n              variant='outlined'\r\n            />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Link from '../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular TV Shows'\r\n        footer={\r\n          <Link to={!popularTV.isFetching || !popularTV.isLoading ? { pathname: '/tv/popular' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={popularTV.isFetching || popularTV.isLoading}\r\n              variant='text'>\r\n              View all Popular TV Shows\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={popularTV.isFetching || popularTV.isLoading}>\r\n        <HorizontalTV\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows Airing Today'\r\n        footer={\r\n          <Link to={!tvAiringToday.isFetching || !tvAiringToday.isLoading ? { pathname: '/tv/airing-today' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n              variant='text'>\r\n              View all TV Shows Airing Today\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}>\r\n        <HorizontalTV\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n          tv={tvAiringToday.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows on at the moment'\r\n        footer={\r\n          <Link to={!onTV.isFetching || !onTV.isLoading ? { pathname: '/tv/on-tv' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={onTV.isFetching || onTV.isLoading}\r\n              variant='text'>\r\n              View all TV Shows on at the moment\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={onTV.isFetching || onTV.isLoading}>\r\n        <HorizontalTV\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n          tv={onTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated TV Shows'\r\n        footer={\r\n          <Link to={!topRatedTV.isFetching || !topRatedTV.isLoading ? { pathname: '/tv/top-rated' } : {}}>\r\n            <Button\r\n              color={utils.handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={topRatedTV.isFetching || topRatedTV.isLoading}\r\n              variant='text'>\r\n              View all Top Rated TV Shows\r\n            </Button>\r\n          </Link>\r\n        }\r\n        isLoading={topRatedTV.isFetching || topRatedTV.isLoading}>\r\n        <HorizontalTV\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n          tv={topRatedTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      tvAiringToday.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      tvAiringToday.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows Airing Today' : ''}\r\n      header={<Filters mediaType='tv' isDisabled={!tvAiringToday.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess && !tvAiringToday.isFetching && !tvAiringToday.isLoading}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={tvAiringToday.isFetching || tvAiringToday.isLoading}\r\n            isError={tvAiringToday.isError}\r\n            hasNextPage={tvAiringToday.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      onTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      onTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'TV Shows On At The Moment' : ''}\r\n      header={<Filters mediaType='tv' isDisabled={!onTV.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess && !onTV.isFetching && !onTV.isLoading}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={onTV.isFetching || onTV.isLoading}\r\n            isError={onTV.isError}\r\n            hasNextPage={onTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      popularTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      popularTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular TV Shows' : ''}\r\n      header={<Filters mediaType='tv' isDisabled={!popularTV.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess && !popularTV.isFetching && !popularTV.isLoading}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={popularTV.isFetching || popularTV.isLoading}\r\n            isError={popularTV.isError}\r\n            hasNextPage={popularTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n",
    "import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../store/slices/Modals';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 640px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      topRatedTV.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (utils.handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={utils.handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      topRatedTV.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Top Rated TV Shows' : ''}\r\n      header={<Filters mediaType='tv' isDisabled={!topRatedTV.isSuccess} onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess && !topRatedTV.isFetching && !topRatedTV.isLoading}\r\n          tv={tv?.results || []}\r\n        />\r\n\r\n        {tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={topRatedTV.isFetching || topRatedTV.isLoading}\r\n            isError={topRatedTV.isError}\r\n            hasNextPage={topRatedTV.hasNextPage || true}\r\n            onFetch={handleFetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ComponentBox = motion(Box);\r\n\r\nconst Page = ({ children }: { children: ReactElement }): ReactElement => {\r\n  return (\r\n    <ComponentBox\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{\r\n        duration: 1,\r\n        ease: [0.76, 0, 0.24, 1]\r\n      }}>\r\n      {children}\r\n    </ComponentBox>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n",
    "import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { useLocation, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../../../../pages/Home';\r\nimport Liked from '../../../../pages/Liked';\r\nimport Lists from '../../../../pages/Lists';\r\nimport Movies from '../../../../pages/Movies';\r\nimport MoviesNowPlaying from '../../../../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../../../../pages/Movies/Popular';\r\nimport TopRatedMovies from '../../../../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../../../../pages/Movies/Upcoming';\r\nimport People from '../../../../pages/People';\r\nimport Person from '../../../../pages/Person';\r\nimport Search from '../../../../pages/Search';\r\nimport Trending from '../../../../pages/Trending';\r\nimport TV from '../../../../pages/TV';\r\nimport TVAiringToday from '../../../../pages/TV/AiringToday';\r\nimport OnTV from '../../../../pages/TV/OnTV';\r\nimport PopularTV from '../../../../pages/TV/Popular';\r\nimport TopRatedTV from '../../../../pages/TV/TopRated';\r\nimport Page from '../../../Page';\r\n\r\nconst Routes = (): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    document.scrollingElement?.scrollTo(0, 0);\r\n  }, [location]);\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location} key={location.pathname}>\r\n        {/* Home Route */}\r\n        <Route exact path='/'>\r\n          <Page>\r\n            <Home />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Liked Routes */}\r\n        <Route exact path='/liked'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/liked/:mediaType'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Lists Routes */}\r\n        <Route exact path='/lists'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id/:mediaType'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Search Route */}\r\n        <Route exact path='/search'>\r\n          <Page>\r\n            <Search />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Trending Routes */}\r\n        <Route exact path='/trending'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/trending/:mediaType'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Movies Routes */}\r\n        <Route exact path='/movies'>\r\n          <Page>\r\n            <Movies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/popular'>\r\n          <Page>\r\n            <PopularMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/upcoming'>\r\n          <Page>\r\n            <UpcomingMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/now-playing'>\r\n          <Page>\r\n            <MoviesNowPlaying />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/top-rated'>\r\n          <Page>\r\n            <TopRatedMovies />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* TV Routes */}\r\n        <Route exact path='/tv'>\r\n          <Page>\r\n            <TV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/popular'>\r\n          <Page>\r\n            <PopularTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/airing-today'>\r\n          <Page>\r\n            <TVAiringToday />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/on-tv'>\r\n          <Page>\r\n            <OnTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/top-rated'>\r\n          <Page>\r\n            <TopRatedTV />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* People Route */}\r\n        <Route exact path='/people'>\r\n          <Page>\r\n            <People />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/person/:id'>\r\n          <Page>\r\n            <Person />\r\n          </Page>\r\n        </Route>\r\n      </Switch>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n",
    "import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Box, ScaleFade } from '@chakra-ui/react';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../components/Tooltip';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst ScrollToTop = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [scrollHeight, setScrollHeight] = useState<number>(0);\r\n\r\n  const handleScroll = useCallback(\r\n    () => setScrollHeight(document?.scrollingElement?.scrollTop || 0),\r\n    [document, setScrollHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      position='fixed'\r\n      bottom={theme.space[2]}\r\n      right={theme.space[2]}\r\n      borderRadius='lg'\r\n      boxShadow='lg'\r\n      backgroundColor='transparent'>\r\n      <ScaleFade in={scrollHeight > screen.height} unmountOnExit>\r\n        <Tooltip aria-label='Scroll to top' label='Scroll to the top' placement='left'>\r\n          <IconButton\r\n            aria-label='Scroll to top'\r\n            color={utils.handleReturnColor(color)}\r\n            icon={ArrowUpwardOutlinedIcon}\r\n            onClick={() => document.scrollingElement?.scrollTo(0, 0)}\r\n          />\r\n        </Tooltip>\r\n      </ScaleFade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",
    "import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Box, ScaleFade } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth } from './common/data/sidebar';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Header from './components/Header';\r\nimport ConfirmModal from './components/Modals/Confirm';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Routes from './components/Routes';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Sidebar from './components/Sidebar';\r\nimport { GenreResponse } from './types';\r\n\r\nconst Layout = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n  const isDisplayModalOpen = useSelector((state) => state.modals.ui.isDisplayModalOpen);\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const listsModal = useSelector((state) => state.modals.ui.listsModal);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>(`${sidebarWidth[sidebarMode]}px`);\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return isSplashscreenOpen ? (\r\n    <ScaleFade in={isSplashscreenOpen} unmountOnExit>\r\n      <SplashscreenModal />\r\n    </ScaleFade>\r\n  ) : (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        {/* <Container maxWidth='container.xl' overflow='hidden' position='relative'> */}\r\n        {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n        <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n          <Header width={width} left={left} />\r\n          <Box width='100%' maxWidth='100%' position='relative' top='66px' left='0px' pb={4} sx={{ ...transition }}>\r\n            <Routes />\r\n          </Box>\r\n\r\n          <ScrollToTop />\r\n        </Box>\r\n\r\n        {/* </Container> */}\r\n      </BrowserRouter>\r\n\r\n      <ScaleFade in={confirmModal.open} unmountOnExit>\r\n        <ConfirmModal />\r\n      </ScaleFade>\r\n\r\n      <ScaleFade in={isDisplayModalOpen} unmountOnExit>\r\n        <DisplayModal />\r\n      </ScaleFade>\r\n\r\n      <ScaleFade in={listsModal.open} unmountOnExit>\r\n        <ListsModal />\r\n      </ScaleFade>\r\n\r\n      <ScaleFade in={descriptionModal.open} unmountOnExit>\r\n        <DescriptionModal />\r\n      </ScaleFade>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n",
    "import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport default function useQueriesTyped<TQueries extends readonly UseQueryOptions[]>(\r\n  queries: [...TQueries]\r\n): {\r\n  [ArrayElement in keyof TQueries]: UseQueryResult<\r\n    TQueries[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<TQueries[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n} {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n}\r\n\r\n// Using John Reilly code: https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n",
    "import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Layout from '../../containers/Layout';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: false\r\n    }\r\n  }\r\n});\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Layout />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",
    "import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nimport './index.css';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"
  ],
  "sourceRoot": ""
}
