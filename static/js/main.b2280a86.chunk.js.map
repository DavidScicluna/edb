{"version":3,"sources":["common/hooks/useEventListener.ts","common/hooks/useElementSize.ts","common/hooks/useImageOnLoad.ts","common/hooks/useInterval.ts","common/hooks/useQueriesTyped.ts","common/hooks/useSelectorTyped.ts","common/hooks/useTimeout.ts","common/hooks/useWindowSize.ts","common/scripts/axios.ts","store/slices/App/index.ts","store/slices/Options/index.ts","containers/Layout/common/data/dimensions.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/common/data/navItems.ts","components/Clickable/Link/index.tsx","components/Clickable/Link/styles.ts","containers/Layout/components/Footer/components/NavItem/index.tsx","containers/Layout/components/Footer/index.tsx","components/Clickable/IconButton/index.tsx","components/Clickable/IconButton/styles.ts","components/Clickable/Button/index.tsx","components/Clickable/Button/styles.ts","store/slices/Modals/index.tsx","store/slices/User/index.ts","store/rootReducer.ts","store/index.ts","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/sizes.ts","theme/foundations/spacing.ts","theme/foundations/transition.ts","theme/foundations/typography.ts","theme/foundations/z-index.ts","theme/foundations/index.ts","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/index.ts","components/Tooltip/index.tsx","components/NavItem/components/NavItemChild/index.tsx","components/NavItem/components/NavItemChild/styles.ts","components/NavItem/index.tsx","components/NavItem/styles.ts","containers/Layout/components/Logo/index.tsx","containers/Layout/components/Logo/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","components/Modal/index.tsx","containers/Layout/components/Modals/Confirm/index.tsx","containers/Layout/components/Modals/Description/index.tsx","components/Card/components/Divider/index.tsx","components/Card/components/Footer/index.tsx","components/Card/components/Header/index.tsx","components/Card/index.tsx","components/Card/styles.ts","components/Clickable/Card/index.tsx","components/Clickable/Card/styles.ts","containers/Layout/components/Modals/Display/components/Background/components/BackgroundItem/index.tsx","containers/Layout/components/Modals/Display/components/Background/index.tsx","containers/Layout/components/Modals/Display/components/Color/components/ColorItem/index.tsx","containers/Layout/components/Modals/Display/components/Color/index.tsx","containers/Layout/components/Modals/Display/index.tsx","pages/Lists/components/CreateList/validation.ts","pages/Lists/components/CreateList/index.tsx","containers/Layout/components/Modals/Lists/components/List/index.tsx","containers/Layout/components/Modals/Lists/index.tsx","components/MediaViewer/components/Actions/index.tsx","components/Image/index.tsx","components/MediaViewer/components/BackdropViewer/index.tsx","components/MediaViewer/components/Gallery/components/Grid/index.tsx","components/Clickable/Image/index.tsx","components/MediaViewer/components/Gallery/components/Photo/index.tsx","components/MediaViewer/components/Gallery/components/Video/index.tsx","components/MediaViewer/components/Gallery/index.tsx","components/MediaViewer/components/PhotoViewer/index.tsx","components/MediaViewer/components/VideoViewer/index.tsx","components/MediaViewer/components/Navigation/index.tsx","components/MediaViewer/components/Viewer/index.tsx","components/MediaViewer/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/index.ts","components/Skeleton/index.tsx","components/Skeleton/Text/index.tsx","pages/Person/components/Bio/index.tsx","components/Like/index.tsx","pages/Person/components/Details/components/Background/index.tsx","pages/Person/components/Details/components/Date/index.tsx","components/HorizontalScroll/components/Arrow/index.tsx","components/HorizontalScroll/components/Arrow/styles.ts","components/HorizontalScroll/index.tsx","pages/Person/components/Details/components/Departments/index.tsx","pages/Person/components/Details/components/Poster/index.tsx","pages/Person/components/Details/components/Socials/components/Link/index.tsx","pages/Person/components/Details/components/Socials/components/Link/styles.ts","pages/Person/components/Details/components/Socials/components/Links/index.tsx","pages/Person/components/Details/components/Socials/index.tsx","pages/Person/components/Details/index.tsx","common/assets/illustrations/empty/blue.svg","common/assets/illustrations/empty/cyan.svg","common/assets/illustrations/empty/green.svg","common/assets/illustrations/empty/orange.svg","common/assets/illustrations/empty/pink.svg","common/assets/illustrations/empty/purple.svg","common/assets/illustrations/empty/teal.svg","common/assets/illustrations/empty/yellow.svg","common/assets/illustrations/empty/index.ts","components/Empty/index.tsx","common/assets/illustrations/error/blue.svg","common/assets/illustrations/error/cyan.svg","common/assets/illustrations/error/green.svg","common/assets/illustrations/error/orange.svg","common/assets/illustrations/error/pink.svg","common/assets/illustrations/error/purple.svg","common/assets/illustrations/error/teal.svg","common/assets/illustrations/error/yellow.svg","common/assets/illustrations/error/index.ts","components/Error/index.tsx","components/Badge/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/MediaItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CastTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewMovies/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/CrewTV/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/components/Panel/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/AccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/index.tsx","pages/Person/components/Filmography/components/Accordion/components/DummyAccordionItem/styles.ts","pages/Person/components/Filmography/components/Accordion/index.tsx","pages/Person/components/Filmography/components/QuickToggles/index.tsx","pages/Person/components/Filmography/index.tsx","components/Grid/Horizontal/components/Arrow/index.tsx","components/Grid/Horizontal/components/Grid/index.tsx","components/Grid/Horizontal/index.tsx","components/Rating/index.tsx","components/Bookmark/index.tsx","components/Poster/components/Bookmark/index.tsx","components/Poster/components/Like/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","pages/Person/components/KnownFor/index.tsx","pages/Person/components/Photos/index.tsx","pages/Person/index.tsx","containers/Layout/components/Modals/QuickView/components/Poster/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/components/Stats/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/components/Container/index.tsx","containers/Layout/components/Modals/QuickView/components/Person/index.tsx","containers/Layout/components/Modals/QuickView/index.tsx","containers/Layout/components/Modals/Splashscreen/index.tsx","containers/Layout/components/Modals/Splashscreen/styles.ts","pages/Error/components/Code/index.tsx","pages/Error/components/Description/index.tsx","pages/Error/index.tsx","containers/Page/components/Divider/index.tsx","containers/Page/components/Breadcrumbs/index.tsx","containers/Page/components/Breadcrumbs/styles.ts","containers/Page/components/Title/index.tsx","containers/Page/index.tsx","pages/Movies/components/HorizontalMovies/index.tsx","common/data/departments.ts","pages/People/components/HorizontalPeople/index.tsx","pages/TV/components/HorizontalTV/index.tsx","pages/Home/components/HorizontalGrid/index.tsx","pages/Home/index.tsx","common/data/sort.ts","components/Filters/components/Departments/components/Department/index.tsx","components/Filters/components/Departments/index.tsx","components/Filters/components/DisplayMode/components/DisplayModeItem/index.tsx","components/Filters/components/DisplayMode/index.tsx","components/Filters/components/Genres/components/Genre/index.tsx","components/Filters/components/Genres/index.tsx","components/Filters/components/SortBy/components/SortByItem/index.tsx","components/Filters/components/SortBy/components/SortByItem/styles.ts","components/Filters/components/SortBy/index.tsx","components/Filters/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/MediaTypePicker/components/MediaTypeItem/index.tsx","components/MediaTypePicker/components/MediaTypes/index.tsx","components/MediaTypePicker/index.tsx","containers/Page/common/data/breadcrumbs.ts","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/Movies/components/VerticalMovies/index.tsx","pages/People/components/VerticalPeople/index.tsx","pages/TV/components/VerticalTV/index.tsx","pages/Liked/components/All/index.tsx","pages/Liked/index.tsx","pages/Lists/components/Actions/index.tsx","pages/Lists/components/All/index.tsx","pages/Lists/components/EditList/validation.ts","pages/Lists/components/EditList/index.tsx","pages/Lists/components/Empty/index.tsx","pages/Lists/components/ListInfo/components/Stats/index.tsx","pages/Lists/components/ListInfo/index.tsx","components/Clickable/Radio/index.tsx","components/Clickable/Radio/styles.ts","pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/Lists/components/ListPicker/index.tsx","pages/Lists/components/Toast/index.tsx","pages/Lists/index.tsx","pages/Movie/components/Actions/index.tsx","pages/Movie/components/CastCrewTab/components/Panel/index.tsx","pages/Movie/components/CastCrewTab/components/Cast/index.tsx","pages/Movie/components/CastCrewTab/components/Crew/index.tsx","pages/Movie/components/CastCrewTab/components/QuickToggles/index.tsx","pages/Movie/components/CastCrewTab/index.tsx","pages/Movie/components/HomeTab/components/Cast/index.tsx","pages/Movie/components/HomeTab/components/Collection/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Label/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Credits/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Info/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Overview/index.tsx","pages/Movie/components/HomeTab/components/Details/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Cover/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Cover/components/Backdrop/index.tsx","pages/Movie/components/HomeTab/components/Details/components/Cover/components/Poster/index.tsx","pages/Movie/components/HomeTab/components/Media/components/Backdrops/index.tsx","pages/Movie/components/HomeTab/components/Media/components/Footer/index.tsx","pages/Movie/components/HomeTab/components/Media/components/Photos/index.tsx","pages/Movie/components/HomeTab/components/Media/components/TabList/components/Tab/index.tsx","pages/Movie/components/HomeTab/components/Media/components/TabList/components/Tab/styles.ts","pages/Movie/components/HomeTab/components/Media/components/TabList/index.tsx","pages/Movie/components/HomeTab/components/Media/components/Videos/components/Video/index.tsx","pages/Movie/components/HomeTab/components/Media/components/Videos/index.tsx","pages/Movie/components/HomeTab/components/Media/index.tsx","pages/Movie/components/HomeTab/components/Recommendations/index.tsx","pages/Movie/components/HomeTab/index.tsx","components/LoadMore/index.tsx","pages/Movie/components/ReviewsTab/components/Review/components/Header/index.tsx","pages/Movie/components/ReviewsTab/components/Review/index.tsx","pages/Movie/components/ReviewsTab/index.tsx","pages/Movie/components/TabList/components/Tab/index.tsx","pages/Movie/components/TabList/components/Tab/styles.ts","pages/Movie/components/TabList/index.tsx","pages/Movie/components/Title/index.tsx","pages/Movie/index.tsx","pages/Movies/components/HorizontalGrid/index.tsx","pages/Movies/index.tsx","pages/Movies/pages/NowPlaying/index.tsx","pages/Movies/pages/Popular/index.tsx","pages/Movies/pages/TopRated/index.tsx","pages/Movies/pages/Upcoming/index.tsx","pages/People/index.tsx","pages/Search/components/All/components/Movies/index.tsx","pages/Search/components/All/components/People/index.tsx","pages/Search/components/All/components/TV/index.tsx","pages/Search/components/All/index.tsx","pages/Search/components/Form/components/Actions/index.tsx","pages/Search/components/Form/components/Display/index.tsx","pages/Search/components/Form/components/List/index.tsx","pages/Search/components/Form/components/Row/index.tsx","pages/Search/components/Form/components/Row/styles.ts","pages/Search/components/Form/index.tsx","pages/Search/index.tsx","pages/Trending/index.tsx","pages/TV/components/HorizontalGrid/index.tsx","pages/TV/index.tsx","pages/TV/pages/AiringToday/index.tsx","pages/TV/pages/OnTV/index.tsx","pages/TV/pages/Popular/index.tsx","pages/TV/pages/TopRated/index.tsx","containers/Layout/components/Routes/index.tsx","containers/Layout/components/ScrollToTop/index.tsx","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","containers/App/index.tsx","index.tsx"],"names":["useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useElementSize","elementRef","useState","width","height","size","setSize","updateSize","useCallback","node","offsetWidth","offsetHeight","useImageOnLoad","theme","isLoaded","setIsLoaded","css","thumbnail","filter","opacity","visibility","transition","duration","slower","easing","fullSize","handleIsLoaded","bool","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","useQueriesTyped","queries","useQueries","useSelectorTyped","useSelector","useTimeout","setTimeout","clearTimeout","useWindowSize","windowSize","setWindowSize","innerWidth","innerHeight","handleDelay","response","a","Promise","resolve","_","instance","axios","create","baseURL","process","interceptors","request","use","headers","appSlice","createSlice","name","initialState","data","sortDirection","ui","displayMode","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","sidebarWidth","expanded","collapsed","navItems","label","path","iconActive","HomeTwoToneIcon","icon","HomeOutlinedIcon","SearchTwoToneIcon","SearchOutlinedIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","children","renderChild","TheatersTwoToneIcon","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","Link","props","useTheme","to","isDisabled","isFullWidth","rest","style","faster","textDecoration","boxShadow","useStyles","as","RRDLink","onClick","preventDefault","undefined","sx","NavItem","colorMode","useColorMode","location","useLocation","color","user","isActive","pathname","renderChildren","every","child","alignItems","justifyContent","cursor","align","fontSize","fontWeight","textTransform","_hover","length","map","index","Footer","useMediaQuery","isSm","backgroundColor","spacing","p","mt","navItem","moment","format","IconButton","forwardRef","ref","variant","isLoading","isLight","button","back","transform","front","display","borderStyle","borderWidth","borderRadius","padding","space","disabled","fontSizes","xl","light","contained","borderColor","outlined","dark","omit","colorModeProp","mode","merge","_disabled","className","thickness","speed","slow","Button","whiteSpace","sm","md","lg","text","leftIcon","rightIcon","handleReturnSpacing","mr","ml","defaultListsModal","open","title","mediaType","mediaItem","defaultDescriptionModal","defaultConfirmModal","description","submitButton","defaultQuickViewModal","listsModal","descriptionModal","confirmModal","quickViewModal","isDisplayModalOpen","isSplashscreenOpen","modalsSlice","toggleList","toggleDescription","toggleConfirm","toggleQuickView","toggleDisplay","toggleSplashscreen","recentSearches","recentlyViewed","movies","people","liked","lists","uuid","date","Date","toISOString","results","background","userSlice","setTheme","setRecentSearches","setRecentlyViewed","setLiked","setLists","rootReducer","combineReducers","app","appReducer","options","optionsReducer","modals","modalsReducer","userReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","base","full","sizes","container","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","property","common","colors","dimensions","position","typography","fonts","body","heading","mono","zIndices","hide","auto","docked","dropdown","sticky","banner","overlay","toast","modal","popover","skipLink","tooltip","radius","styles","global","fontFamily","bg","overflowX","lineHeight","wordWrap","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","handleReturnNumberFromString","number","string","parseInt","replace","handleFormatMoney","money","toString","handleFormatIntoParagraphs","content","split","handleReturnGenresByID","getState","genre","includes","join","handleIsTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","handleReturnDate","section","month","find","handleReturnRuntime","runtime","hours","rhours","Math","floor","minutes","rminutes","round","handleParseDurationForFramer","time","handleCheckHasFilters","sortBy","departments","hasFilters","isEmpty","handleReturnColor","handleIsOverflowing","overflow","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","handleReturnDummyWidths","range","amount","Tooltip","closeDelay","openDelay","shouldWrapChildren","arrowSize","normal","hasArrow","gray","NavItemChild","sidebarModeState","isLastChild","sidebarModeProp","useBoolean","isHoveringChild","setIsHoveringChild","link","aria-label","isOpen","placement","gutter","px","py","onMouseEnter","on","onMouseLeave","off","parts","initials","forEach","part","handleGetInitials","isChildrenOpen","setIsChildrenOpen","isHoveringNav","setIsHoveringNav","isHoveringIcon","setIsHoveringIcon","isChildActive","some","isExpanded","main","handleToggleChildren","debounce","toggle","in","unmountOnExit","enter","exit","ChevronRightOutlinedIcon","pl","pr","mb","Logo","minHeight","alignSelf","border","paddingTop","paddingBottom","paddingLeft","paddingRight","NavItems","Menu","useDisclosure","onOpen","onClose","MenuOutlinedIcon","blockScrollOnMount","User","dispatch","useDispatch","userLinks","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","PaletteTwoToneIcon","PaletteOutlinedIcon","minWidth","userLink","Header","isLgUp","useTransitionsStyle","left","maxWidth","top","zIndex","borderBottom","borderBottomColor","Modal","isConfirm","isMounted","setIsMounted","preserveScrollBarGap","motionPreset","scrollBehavior","m","CloseOutlinedIcon","borderTop","borderTopColor","ConfirmModal","isCentered","DescriptionModal","Divider","footer","Card","box","hasDivider","card","transparent","divider","header","isClickable","BackgroundItem","backgrounds","WbSunnyOutlinedIcon","Brightness2OutlinedIcon","Background","form","watch","control","render","field","pb","pt","setValue","shouldDirty","ColorItem","isHovering","setIsHovering","CheckOutlinedIcon","Color","columns","Display","toggleColorMode","useForm","defaultValues","useFormState","isDirty","dirtyFields","handleClose","reset","handleSubmit","values","newTheme","schema","yup","shape","required","CreateList","reValidateMode","resolver","yupResolver","handleKeyDown","onChange","error","fieldState","isRequired","autoComplete","errorBorderColor","focusBorderColor","isInvalid","Boolean","placeholder","onKeyDown","message","isFullWidthname","List","isSelected","isTruncated","fromNow","CheckBoxTwoToneIcon","CheckBoxOutlineBlankOutlinedIcon","ListsModal","isCreateListOpen","onCreateListOpen","onCreateListClose","selected","setSelected","handleIsSelected","list","handleCloseLists","updatedLists","updatedList","movieMediaItem","dateAdded","showMediaItem","handleSaveItem","Actions","activeType","onGalleryClick","isFullscreen","setIsFullscreen","isfullscreenNotSupported","setIsfullscreenNotSupported","handleCloseFullscreen","doc","document","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","console","DashboardOutlinedIcon","FullscreenExitOutlinedIcon","FullscreenOutlinedIcon","documentElement","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","handleOpenFullscreen","right","reverse","Image","imageRef","elementWidth","alt","src","fallbackSrc","setFallbackSrc","handleFallbackSrc","random","substring","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","handleReturnFallbackSrc","String","onError","ignoreFallback","onLoad","BackdropViewer","useBreakpointValue","Grid","isSmallMob","ratio","Photo","photo","type","onClickImage","file_path","Video","video","onClickVideo","opts","playerVars","autoplay","controls","enablejsapi","disablekb","mute","fs","loop","modestbranding","showinfo","PlayArrowIcon","videoId","containerClassName","Gallery","activePath","photos","backdrops","videos","backdrop","PhotoViewer","VideoViewer","Navigation","total","onNavigation","bottom","ArrowBackOutlinedIcon","ArrowForwardOutlinedIcon","Viewer","renderSlide","isGalleryOpen","onSwiper","onSlideChange","activeIndex","setActiveIndex","handleKeyPress","handleSetActiveIndex","findIndex","item","allowSlideNext","allowSlidePrev","spaceBetween","slidesPerView","onUpdate","swiper","onTouchEnd","swipeDirection","handleSwipe","slide","offsetY","MediaViewer","onGalleryOpen","onGalleryClose","setSwiper","setActivePath","setActiveType","handleSlideTo","slideTo","handleNavigation","direction","slidePrev","slideNext","handleSlideChange","_item","image","asset","handleReturnColors","Skeleton","commonProps","fadeDuration","startColor","endColor","SkeletonText","Bio","biography","biographyRef","setIsExpanded","windowWidth","elementHeight","setHeight","handleBiographyRef","_dummy","startingHeight","paragraph","Like","renderButton","isLiked","show","person","updatedLiked","handleRemoveLike","personMediaItem","handleLike","gradient","setGradient","handleReturnGradient","bgGradient","socials","poster","PersonDate","birthday","place_of_birth","deathday","isError","diff","Arrow","arrow","pointerEvents","onScrollClick","isMouseDown","setIsMouseDown","_after","_before","ChevronLeftOutlinedIcon","handleOnClick","onMouseDown","handleIsMouseDown","onMouseUp","handleIsMouseUp","defaultScrollButtonsState","HorizontalScroll","containerRef","scrollButtons","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleContainerRef","maxScroll","scrollLeft","isLeftDisabled","isRightDisabled","handleScrollClick","onScroll","dummyTextWidths","Departments","mx","department","Poster","onClickPoster","isImageError","setIsImageError","href","iconComponent","isExternal","ImdbIcon","xmlns","aria-hidden","role","preserveAspectRatio","viewBox","d","fill","Links","facebook_id","FacebookIcon","twitter_id","TwitterIcon","instagram_id","InstagramIcon","imdb_id","Socials","isMd","orientation","orientationProp","Details","profile_path","Empty","hasIllustration","handleReturnPadding","empty","handleReturnIllustration","Error","Badge","handleReturnBackground","MediaItem","subtitle","isBefore","handleIfDateIsFuture","CastMovies","withDate","sort","release_date","withoutDate","handleSort","character","CastTV","first_air_date","episode_count","CrewMovies","job","CrewTV","Panel","AccordionItem","accordion","panel","credits","toLowerCase","textAlign","cast","crew","KeyboardArrowDownOutlinedIcon","DummyAccordion","Accordion","DummyAccordionItem","allowMultiple","allowToggle","defaultIndex","indexes","Array","isArray","QuickToggles","onToggleAccordion","spy","smooth","offset","Filmography","isSuccess","expandedAccordions","setExpandedAccordions","_department","handleToggleAccordions","paramDepartment","closeOnClick","closeOnMouseDown","gridRef","handleScrollChange","HorizontalGrid","handleGridRef","defaultRating","rating","count","Rating","iconFontsize","textFontsize","StarOutlinedIcon","Bookmark","isBookmarked","paramList","handleRemoveBookmark","PosterBookmark","PosterLike","Subtitle","setIsTruncated","handleIsTruncated","Title","VerticalPoster","isHoveringPoster","setIsHoveringPoster","setIsDisabled","justify","KnownFor","knownFor","Horizontal","Vertical","poster_path","vote_average","vote_count","Photos","images","_image","handleGetDepartments","push","Person","source","CancelToken","isMediaViewerOpen","onMediaViewerOpen","onMediaViewerClose","useParams","selectedPhoto","setSelectedPhoto","personQuery","useQuery","axiosInstance","get","cancelToken","token","creditsQuery","movieCreditsQuery","tvCreditsQuery","externalIdsQuery","imagesQuery","taggedImagesQuery","handleOnImageClick","filtered","Set","duplicate","has","add","handleGetKnownFor","cancel","isFetching","profiles","Stats","totalMovieCredits","totalTvCredits","totalCrewCredits","stats","wrap","stat","Container","handleOnPosterClick","QuickView","MotionBox","motion","Box","Splashscreen","closeOnEsc","closeOnOverlayClick","animate","backgroundPosition","ease","repeat","Infinity","bgSize","bgClip","Code","code","Description","descriptionRef","headerHeight","Breadcrumbs","iconFontSize","breadcrumbItem","breadcrumbLink","breadcrumbActive","breadcrumbs","separator","breadcrumb","isCurrentPage","Page","HorizontalMovies","genre_ids","HorizontalPeople","known_for_department","HorizontalTV","HomeHorizontalGrid","useInView","triggerOnce","threshold","inView","Home","popularMoviesQuery","trendingMoviesQuery","popularTVQuery","trendingTVQuery","trendingPeopleQuery","likedListsSortBy","movieSortBy","likedListsMovieSortBy","tvSortBy","likedListsTvSortBy","peopleSortBy","likedListsPeopleSortBy","Department","handleDepartmentClick","getValues","activeDepartment","DisplayModeItem","displayModes","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","DisplayMode","Genre","Genres","movieGenres","tvGenres","handleGenreClick","activeGenre","handleAllLabel","handleAllClick","SortByItem","onSortChange","onDirectionChange","ArrowDownwardOutlinedIcon","SortBy","handleSortChange","paramSort","next","handleDirectionChange","Filters","isLikedLists","onFilter","VisibilityOutlinedIcon","handleSubmitFilters","headerTotal","VerticalGrid","MediaTypeItem","mediaTypesList","MediaTypes","mediaTypes","onSetType","handleClick","mediaTypeItem","MediaTypePicker","home","search","trending","HorizontalPoster","iconSize","VerticalMovies","overview","VerticalPeople","known_for","VerticalTV","All","handleRenderTitle","Liked","isMediaTypePickerOpen","onMediaTypePickerOpen","onMediaTypePickerClose","history","useHistory","paramMediaType","setMediaType","setMovies","setTV","setPeople","likedBreadcrumb","handleReturnBreadcrumbs","handleHasMediaTypes","filteredMovies","handleFilterMovies","filteredTV","handleFilterTV","filteredPeople","handleFilterPeople","handleReturnMediaTypes","onListPickerOpen","onListInfoOpen","InfoTwoToneIcon","EditList","EmptyList","mediaTypeLabel","totalMovies","totalTvs","ListInfo","isSame","Radio","isChecked","radio","ListItem","listRef","isSelectable","onSelected","isHoveringRadio","setIsHoveringRadio","activeList","Toast","onInfo","onEdit","onDelete","EditOutlinedIcon","DeleteOutlineOutlinedIcon","Lists","isListPickerOpen","onListPickerClose","isEditListOpen","onEditListOpen","onEditListClose","isListInfoOpen","onListInfoClose","useToast","setList","handleSelectList","handleCloseToast","closeAll","isClosable","listsBreadcrumb","ListPicker","Cast","Crew","CastCrewTab","crewPerson","handleReturnCrew","onViewCastCrewTab","scrollingElement","scrollTo","_person","Collection","Label","Credits","directors","executiveProducer","producers","writers","renderCredits","handleMaxWidth","elements","credit","flex","Info","budget","revenue","languages","originalLanguage","renderInfo","language","iso_639_1","english_name","Overview","renderCover","tagline","details","fontStyle","Cover","Backdrop","YouTubeIcon","Backdrops","handleReturnLabel","Tab","tab","TabList","renderTabs","Videos","_video","Media","activeTab","setActiveTab","isLazy","ScaleFade","Recommendations","recommendations","HomeTab","movieQuery","videosQuery","collectionsQuery","recommendationsQuery","onCoverClick","onMediaClick","onChangeTab","backdrop_path","original_language","spoken_languages","posters","LoadMore","hasNextPage","onFetch","max","avatar","username","Review","contentRef","author","author_details","created_at","updated_at","contentChildrenRefs","setContentChildrenRefs","handleContentRef","maxHeight","handleCalculateMaxHeight","hasFooter","avatar_path","ReviewsTab","reviews","onFetchNextPage","review","total_results","badge","castCrew","certification","release_dates","Movie","selectedAsset","setSelectedAsset","setReviews","params","append_to_response","belongs_to_collection","enabled","reviewsQuery","useInfiniteQuery","pageParam","page","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","_result","handleMediaClick","iso_3166_1","adult","original_title","popularity","SlideFade","trailer","official","fetchNextPage","site","Movies","upcomingMoviesQuery","moviesNowPlayingQuery","topRatedMoviesQuery","MoviesNowPlaying","setSortBy","setGenres","moviesBreadcrumb","active","refetch","PopularMovies","TopRatedMovies","UpcomingMovies","People","setDepartments","popularPeopleQuery","peopleBreadcrumb","_genres","stringify","TV","hasQuery","isFormLocked","isHoveringLock","onToggleLock","onHoverLock","onClearQuery","isHoveringClear","setIsHoveringClear","ClearOutlinedIcon","LockOutlinedIcon","LockOpenOutlinedIcon","hasUnsubmitted","totalResults","handleMultiply","handleReturnMediaTypeResults","handleReturnMediaTypeLabel","isOverflown","setIsOverflown","handleIsOverflown","overflowY","Row","onSearch","isHoveringRow","setIsHoveringRow","isHoveringDelete","setIsHoveringDelete","placeholders","Form","inputRef","keywords","submittedQuery","isInputDisabled","onInputKeyPress","onInputChange","onSubmitQuery","setIsFormLocked","setIsHoveringLock","isHoveringForm","setIsHoveringForm","isFormFocused","setIsFormFocused","focus","onFocus","onBlur","onKeyPress","keyword","Search","setQuery","setSubmittedQuery","setHasUnsubmitted","setTotalResults","searchMovies","parse","cacheTime","searchTV","searchPeople","handleSetLocation","Object","assign","handleSubmitQuery","remove","handleClearQuery","target","Trending","trendingMovies","trendingTV","trendingPeople","handleRefetch","handleDisabledFilters","tvAiringTodayQuery","onTVQuery","topRatedTVQuery","TVAiringToday","tvBreadcrumb","OnTV","PopularTV","TopRatedTV","ComponentBox","initial","Routes","AnimatePresence","exitBeforeEnter","exact","Popular","Upcoming","TopRated","reload","ScrollToTop","setScrollHeight","handleScroll","scroll","scrollTop","screen","ArrowUpwardOutlinedIcon","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","breakpoints","setWidth","setLeft","queryKey","queryFn","basename","Confirm","queryClient","QueryClient","defaultOptions","refetchOnWindowFocus","refetchOnReconnect","retry","App","QueryClientProvider","client","persistor","persistStore","ReactDOM","loading","getElementById"],"mappings":"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","file":"static/js/main.b2280a86.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { RefObject, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-event-listener\r\n */\r\nconst useEventListener = <T extends HTMLElement = HTMLDivElement>(\r\n  eventName: keyof WindowEventMap,\r\n  handler: (event: any) => void,\r\n  element?: RefObject<T>\r\n): void => {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<(event: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: Event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => targetElement.removeEventListener(eventName, eventListener);\r\n  }, [eventName, element, handler]);\r\n};\r\n\r\nexport default useEventListener;\r\n","import { RefObject, useCallback, useEffect, useState } from 'react';\r\n\r\nimport useEventListener from './useEventListener';\r\n\r\ntype Size = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-element-size\r\n */\r\nconst useElementSize = <T extends HTMLElement = HTMLDivElement>(elementRef: RefObject<T>): Size => {\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const updateSize = useCallback(() => {\r\n    const node = elementRef?.current;\r\n\r\n    if (node) {\r\n      setSize({\r\n        width: node.offsetWidth || 0,\r\n        height: node.offsetHeight || 0\r\n      });\r\n    }\r\n  }, [elementRef]);\r\n\r\n  // Initial size on mount\r\n  useEffect(() => updateSize(), []);\r\n\r\n  useEventListener('resize', updateSize);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useElementSize;\r\n","import { CSSProperties, useState } from 'react';\r\n\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype ImageStyle = {\r\n  thumbnail: CSSProperties;\r\n  fullSize: CSSProperties;\r\n};\r\n\r\ntype ImageOnLoadType = {\r\n  css: ImageStyle;\r\n  isLoaded: boolean;\r\n  handleIsLoaded: (bool: boolean) => void;\r\n};\r\n\r\n/**\r\n * Based on: https://usehooks-typescript.com/react-hook/use-image-on-load\r\n */\r\nconst useImageOnLoad = (theme: Theme): ImageOnLoadType => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const handleIsLoaded = (bool: boolean) => {\r\n    setIsLoaded(bool);\r\n  };\r\n\r\n  const css: ImageStyle = {\r\n    // Thumbnail style.\r\n    thumbnail: {\r\n      filter: 'blur(2.5px)',\r\n      opacity: isLoaded ? 0 : 1,\r\n      visibility: isLoaded ? 'hidden' : 'visible',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    // Full image style.\r\n    fullSize: {\r\n      opacity: isLoaded ? 1 : 0,\r\n      visibility: isLoaded ? 'visible' : 'hidden',\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    }\r\n  };\r\n\r\n  return { css, isLoaded, handleIsLoaded };\r\n};\r\n\r\nexport default useImageOnLoad;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-interval\r\n */\r\nconst useInterval = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\ntype Return<T> = {\r\n  [ArrayElement in keyof T]: UseQueryResult<\r\n    T[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<T[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n};\r\n\r\n/**\r\n * https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n */\r\nconst useQueriesTyped = <T extends readonly UseQueryOptions[]>(queries: [...T]): Return<T> => {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n};\r\n\r\nexport default useQueriesTyped;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-timeout\r\n */\r\nconst useTimeout = (callback: () => void, delay: number | null): void => {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the timeout.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n};\r\n\r\nexport default useTimeout;\r\n","import { useEffect, useState } from 'react';\r\n\r\ntype WindowSize = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\n/**\r\n * https://usehooks-typescript.com/react-hook/use-window-size\r\n */\r\nconst useWindowSize = (): WindowSize => {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n\r\n    // Set size at the first client-side load\r\n    handler();\r\n\r\n    window.addEventListener('resize', handler);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handler);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst handleDelay = async (response: AxiosResponse): Promise<AxiosResponse> => {\r\n  await new Promise((resolve) => _.delay(resolve, 1250));\r\n\r\n  return response;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\ninstance.interceptors.response.use(handleDelay);\r\n\r\nexport default instance;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    sortDirection: 'desc'\r\n  },\r\n  ui: {\r\n    displayMode: 'grid',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.ui.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.ui.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 58\r\n};\r\n\r\nexport const headerHeight = 66;\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import {\r\n  HomeTwoTone as HomeTwoToneIcon,\r\n  HomeOutlined as HomeOutlinedIcon,\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  SearchTwoTone as SearchTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TheatersTwoTone as TheatersTwoToneIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon,\r\n  WhatshotOutlined as WhatshotOutlinedIcon,\r\n  WhatshotTwoTone as WhatshotTwoToneIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport { NavItem } from '../../../../components/NavItem/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Link as CUILink, useTheme } from '@chakra-ui/react';\r\nimport { Link as RRDLink } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { children, to, isDisabled = false, isFullWidth = false, ...rest } = props;\r\n\r\n  const style = useStyles(theme, isFullWidth);\r\n\r\n  return (\r\n    <CUILink\r\n      {...rest}\r\n      as={RRDLink}\r\n      to={{ ...to }}\r\n      onClick={isDisabled ? (event) => event.preventDefault() : undefined}\r\n      sx={{ ...style }}>\r\n      {children}\r\n    </CUILink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\n\r\nexport default (theme: Theme, isFullWidth = false): Style => ({\r\n  'width': isFullWidth ? '100%' : 'auto',\r\n\r\n  'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n  '&:hover': {\r\n    textDecoration: 'none'\r\n  },\r\n\r\n  '&:focus': {\r\n    boxShadow: 'none'\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, useTheme } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport { NavItem as NavItemProps } from '../../../../../../components/NavItem/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\nconst NavItem = (props: NavItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  return (\r\n    <VStack alignItems='flex-start' justifyContent='flex-start'>\r\n      <Link to={{ pathname: path }} isDisabled={isActive}>\r\n        <Text\r\n          cursor={isActive ? 'default' : 'pointer'}\r\n          align='left'\r\n          color={\r\n            isActive ? `${color}.${colorMode === 'light' ? 400 : 500}` : colorMode === 'light' ? 'gray.400' : 'gray.500'\r\n          }\r\n          fontSize='md'\r\n          fontWeight='semibold'\r\n          textTransform='uppercase'\r\n          sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n          _hover={{\r\n            color: isActive\r\n              ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n              : colorMode === 'light'\r\n              ? 'gray.900'\r\n              : 'gray.50'\r\n          }}>\r\n          {label}\r\n        </Text>\r\n      </Link>\r\n\r\n      {children && children.length > 0 && renderChildren\r\n        ? children.map((child, index) => (\r\n            <Link key={index} to={{ pathname: child.path }} isDisabled={location.pathname === child.path}>\r\n              <Text\r\n                cursor={location.pathname === child.path ? 'default' : 'pointer'}\r\n                align='left'\r\n                color={\r\n                  location.pathname === child.path\r\n                    ? `${color}.${colorMode === 'light' ? 400 : 500}`\r\n                    : colorMode === 'light'\r\n                    ? 'gray.400'\r\n                    : 'gray.500'\r\n                }\r\n                fontSize='md'\r\n                fontWeight='medium'\r\n                textTransform='capitalize'\r\n                sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}\r\n                _hover={{\r\n                  color:\r\n                    location.pathname === child.path\r\n                      ? `${color}.${colorMode === 'light' ? 500 : 400}`\r\n                      : colorMode === 'light'\r\n                      ? 'gray.900'\r\n                      : 'gray.50'\r\n                }}>\r\n                {child.label}\r\n              </Text>\r\n            </Link>\r\n          ))\r\n        : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, HStack, Box, Center, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport navItems from '../../common/data/navItems';\r\nimport NavItem from './components/NavItem';\r\n\r\nconst Footer = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  return (\r\n    <VStack width='100%' backgroundColor={colorMode === 'light' ? 'gray.100' : 'gray.800'} spacing={4} p={4} mt={4}>\r\n      {isSm ? (\r\n        <VStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={4}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' alignItems='flex-start' justifyContent='space-between' spacing={2}>\r\n          {navItems.map((navItem, index) => (\r\n            <NavItem key={index} {...navItem} />\r\n          ))}\r\n        </HStack>\r\n      )}\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <Center width='100%'>\r\n        <Text align='center' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          {`© ${moment().format('YYYY')} EDB, All rights reserved.`}\r\n        </Text>\r\n      </Center>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonRef, IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef<IconButtonRef, IconButtonProps>(function IconButton(props, ref): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    colorMode: colorModeProp,\r\n    icon,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = _.omit(props, 'isLight');\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='icon_button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <Icon as={icon} sx={{ ..._.merge(style.button.icon) }} />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  icon: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype IconButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  {\r\n    color = 'gray',\r\n    size = 'md',\r\n    variant = 'contained',\r\n    isLoading = false,\r\n    isLight = false\r\n  }: Omit<IconButtonProps, 'aria-label' | 'icon'>\r\n): IconButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'icon' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding: size === 'sm' ? theme.space[0.5] : size === 'md' ? theme.space[1] : theme.space[1.5],\r\n\r\n      transform: variant !== 'icon' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .icon_button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .icon_button_front': {\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .icon_button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.xl : size === 'md' ? theme.fontSizes.xl : theme.fontSizes['2xl']\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: `${color}.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: `${color}.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.${isLight ? 200 : 400}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.${isLight ? 200 : 400}`,\r\n        backgroundColor: `${color}.${isLight ? 200 : 400}`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.${isLight ? 200 : 400}`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.${isLight ? 200 : 400}`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.${isLight ? 200 : 400}`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `gray.${isLight ? 200 : 400}`,\r\n          backgroundColor: `gray.${isLight ? 200 : 400}`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `gray.${isLight ? 200 : 400}`,\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `gray.${isLight ? 200 : 400}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `gray.${isLight ? 200 : 400}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `gray.${isLight ? 200 : 400}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: `${color}.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: `${color}.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.${isLight ? 700 : 500}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.${isLight ? 700 : 500}`,\r\n        backgroundColor: `${color}.${isLight ? 700 : 500}`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.${isLight ? 700 : 500}`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.${isLight ? 700 : 500}`\r\n      },\r\n      icon: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.${isLight ? 700 : 500}`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `gray.${isLight ? 700 : 500}`,\r\n          backgroundColor: `gray.${isLight ? 700 : 500}`,\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `gray.${isLight ? 700 : 500}`,\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: `gray.${isLight ? 700 : 500}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `gray.${isLight ? 700 : 500}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .icon_button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `gray.${isLight ? 700 : 500}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .icon_button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonRef, ButtonProps } from './types';\r\n\r\nconst Button = forwardRef<ButtonRef, ButtonProps>(function Button(props, ref): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    variant = 'contained',\r\n    ...rest\r\n  } = _.omit(props, 'isLight');\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  /**\r\n   * This method will return the appropriate spacing depending on the size passed\r\n   *\r\n   * @returns - Spacing number\r\n   */\r\n  const handleReturnSpacing = (): number => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 0.5;\r\n      case 'lg':\r\n        return 1.5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      variant='unstyled'\r\n      sx={{ ..._.merge(style.button.back, style[mode].back[variant]) }}\r\n      _disabled={{ ..._.merge(style.button.disabled, style[mode].disabled[variant]) }}>\r\n      <Center className='button_front' sx={{ ..._.merge(style.button.front, style[mode].front[variant]) }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'sm' ? '2px' : size === 'md' ? '3px' : '4px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n            sx={{ ..._.merge(style.button.icon) }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon as={leftIcon} mr={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon as={rightIcon} ml={children ? handleReturnSpacing() : 0} sx={{ ..._.merge(style.button.icon) }} />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  contained: Style;\r\n  outlined: Style;\r\n  text: Style;\r\n};\r\n\r\ntype CommonStyle<S> = {\r\n  back: S;\r\n  front: S;\r\n  disabled: S;\r\n  icon: Style;\r\n};\r\n\r\ntype ButtonStyle = {\r\n  button: CommonStyle<Style>;\r\n  light: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n  dark: Omit<CommonStyle<VariantStyle>, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  {\r\n    color = 'gray',\r\n    size = 'md',\r\n    variant = 'contained',\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    isLight = false\r\n  }: ButtonProps\r\n): ButtonStyle => ({\r\n  button: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': '0',\r\n      'borderRadius': size === 'sm' ? 'base' : size === 'md' ? 'md' : 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      fontWeight: 'semibold',\r\n      fontSize: size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'md',\r\n      textTransform: 'uppercase',\r\n      whiteSpace: 'nowrap',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: variant !== 'text' ? (size !== 'sm' ? '2px 2px 0' : '1px 1px 0') : '0',\r\n      borderRadius: 'inherit',\r\n\r\n      padding:\r\n        size === 'sm'\r\n          ? `${theme.space[0.75]} ${theme.space[1.5]}`\r\n          : size === 'md'\r\n          ? `${theme.space[1]} ${theme.space[2]}`\r\n          : `${theme.space[1.5]} ${theme.space[3]}`,\r\n\r\n      transform: variant !== 'text' ? `translateY(${size !== 'sm' ? '-4px' : '-3px'})` : 'none',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .button_front': { opacity: 1 }\r\n      },\r\n\r\n      '& .button_front': {\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active .button_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '0px' : size !== 'sm' ? '-2px' : '-1px'})`\r\n            : 'none'\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${\r\n        size === 'sm' ? theme.fontSizes.sm : size === 'md' ? theme.fontSizes.md : theme.fontSizes.lg\r\n      } !important`\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: `${color}.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 400 : 600}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: `${color}.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.${isLight ? 200 : 400}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.${isLight ? 200 : 400}`,\r\n        backgroundColor: `${color}.${isLight ? 200 : 400}`,\r\n        color: 'gray.50'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.${isLight ? 200 : 400}`,\r\n        backgroundColor: 'gray.50',\r\n        color: `${color}.${isLight ? 200 : 400}`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.${isLight ? 200 : 400}`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n        '& .button_front': {\r\n          borderColor: `gray.${isLight ? 200 : 400}`,\r\n          backgroundColor: `gray.${isLight ? 200 : 400}`,\r\n          color: 'gray.50'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 400 : 600}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: `gray.${isLight ? 300 : 500}`,\r\n            color: 'gray.50'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `gray.${isLight ? 200 : 400}`,\r\n\r\n        '& .button_front': {\r\n          borderColor: `gray.${isLight ? 200 : 400}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `gray.${isLight ? 200 : 400}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 300 : 500}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 300 : 500}`,\r\n            backgroundColor: 'gray.50',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `gray.${isLight ? 200 : 400}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 300 : 500}`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      contained: {\r\n        'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: `${color}.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 500 : 300}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: `${color}.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `${color}.${isLight ? 700 : 500}`,\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `${color}.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n        'borderColor': 'transparent',\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n          'borderColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `${color}.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      contained: {\r\n        borderColor: `${color}.${isLight ? 700 : 500}`,\r\n        backgroundColor: `${color}.${isLight ? 700 : 500}`,\r\n        color: 'gray.900'\r\n      },\r\n      outlined: {\r\n        borderColor: `${color}.${isLight ? 700 : 500}`,\r\n        backgroundColor: 'gray.900',\r\n        color: `${color}.${isLight ? 700 : 500}`\r\n      },\r\n      text: {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: `${color}.${isLight ? 700 : 500}`\r\n      }\r\n    },\r\n    disabled: {\r\n      contained: {\r\n        'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n        '& .button_front': {\r\n          borderColor: `gray.${isLight ? 700 : 500}`,\r\n          backgroundColor: `gray.${isLight ? 700 : 500}`,\r\n          color: 'gray.900'\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 500 : 300}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: `gray.${isLight ? 600 : 400}`,\r\n            color: 'gray.900'\r\n          }\r\n        }\r\n      },\r\n      outlined: {\r\n        'backgroundColor': `gray.${isLight ? 700 : 500}`,\r\n\r\n        '& .button_front': {\r\n          borderColor: `gray.${isLight ? 700 : 500}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `gray.${isLight ? 700 : 500}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': `gray.${isLight ? 600 : 400}`,\r\n\r\n          '& .button_front': {\r\n            borderColor: `gray.${isLight ? 600 : 400}`,\r\n            backgroundColor: 'gray.900',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      },\r\n      text: {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .button_front': {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: `gray.${isLight ? 700 : 500}`\r\n        },\r\n\r\n        '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:hover': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        },\r\n\r\n        '&:active': {\r\n          'backgroundColor': 'transparent',\r\n\r\n          '& .button_front': {\r\n            borderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            color: `gray.${isLight ? 600 : 400}`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport Button from '../../../components/Clickable/Button';\r\nimport { StateProps, ListModal, DescriptionModal, ConfirmModal, QuickViewModal } from './types';\r\n\r\nexport const defaultListsModal: ListModal = {\r\n  open: false,\r\n  title: '',\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultDescriptionModal: DescriptionModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nexport const defaultConfirmModal: ConfirmModal = {\r\n  open: false,\r\n  title: 'Lorem ipsum',\r\n  description:\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n  submitButton: (\r\n    <Button isDisabled size='sm'>\r\n      Close\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport const defaultQuickViewModal: QuickViewModal = {\r\n  open: false,\r\n  mediaType: 'movie',\r\n  mediaItem: undefined\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  ui: {\r\n    listsModal: { ...defaultListsModal },\r\n    descriptionModal: { ...defaultDescriptionModal },\r\n    confirmModal: { ...defaultConfirmModal },\r\n    quickViewModal: { ...defaultQuickViewModal },\r\n    isDisplayModalOpen: false,\r\n    isSplashscreenOpen: true\r\n  }\r\n};\r\n\r\nconst modalsSlice = createSlice({\r\n  name: 'modals',\r\n  initialState,\r\n  reducers: {\r\n    toggleList: (state: StateProps, action: PayloadAction<ListModal>) => {\r\n      state.ui.listsModal = action.payload;\r\n    },\r\n    toggleDescription: (state: StateProps, action: PayloadAction<DescriptionModal>) => {\r\n      state.ui.descriptionModal = action.payload;\r\n    },\r\n    toggleConfirm: (state: StateProps, action: PayloadAction<ConfirmModal>) => {\r\n      state.ui.confirmModal = action.payload;\r\n    },\r\n    toggleQuickView: (state: StateProps, action: PayloadAction<QuickViewModal>) => {\r\n      state.ui.quickViewModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isDisplayModalOpen = action.payload;\r\n    },\r\n    toggleSplashscreen: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.ui.isSplashscreenOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleList, toggleDescription, toggleConfirm, toggleQuickView, toggleDisplay, toggleSplashscreen } =\r\n  modalsSlice.actions;\r\n\r\nexport default modalsSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItems, List, Theme } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    liked: {\r\n      movies: [],\r\n      tv: [],\r\n      people: []\r\n    },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        description:\r\n          \"A collection of movies and tv shows that I'm looking forward to watching and hopefully re-watch 🥳 🤓\",\r\n        date: moment(new Date()).toISOString(),\r\n        results: {\r\n          movies: [],\r\n          tv: []\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  ui: {\r\n    theme: {\r\n      color: 'blue',\r\n      background: 'light'\r\n    }\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state: StateProps, action: PayloadAction<Theme>) => {\r\n      state.ui.theme = action.payload;\r\n    },\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItems>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTheme, setRecentSearches, setRecentlyViewed, setLiked, setLists } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport modalsReducer from './slices/Modals';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  modals: modalsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['modals']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '640px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    // sm: {\r\n    //   'xs': '0.5rem', // 8px\r\n    //   'sm': '0.625rem', // 10px\r\n    //   'md': '0.75rem', // 12px\r\n    //   'lg': '0.875rem', // 14px\r\n    //   'xl': '1rem', // 16px\r\n    //   '2xl': '1.25rem', // 20px\r\n    //   '3xl': '1.625rem', // 26px\r\n    //   '4xl': '2.125rem', // 34px\r\n    //   '5xl': '2.875rem', // 46px\r\n    //   '6xl': '3.625rem', // 58px\r\n    //   '7xl': '4.375rem', // 70px\r\n    //   '8xl': '5.875rem', // 94px\r\n    //   '9xl': '7.875rem' // 126px\r\n    // },\r\n    // base: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n    // },\r\n    // lg: {\r\n    //   'xs': '1rem', // 16px\r\n    //   'sm': '1.125rem', // 18px\r\n    //   'md': '1.25rem', // 20px\r\n    //   'lg': '1.375rem', // 22px\r\n    //   'xl': '1.5rem', // 24px\r\n    //   '2xl': '1.75rem', // 28px\r\n    //   '3xl': '2.125rem', // 34px\r\n    //   '4xl': '2.5rem', // 40px\r\n    //   '5xl': '3.25rem', // 52px\r\n    //   '6xl': '4rem', // 64px\r\n    //   '7xl': '4.75rem', // 76px\r\n    //   '8xl': '6.25rem', // 100px\r\n    //   '9xl': '8.25rem' // 132px\r\n    // }\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","const zIndices = {\r\n  hide: -1,\r\n  auto: 'auto',\r\n  base: 0,\r\n  docked: 10,\r\n  dropdown: 1000,\r\n  sticky: 1100,\r\n  banner: 1200,\r\n  overlay: 1300,\r\n  toast: 1350,\r\n  modal: 1400,\r\n  popover: 1500,\r\n  skipLink: 1600,\r\n  tooltip: 1800\r\n};\r\n\r\nexport default zIndices;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\nimport zIndices from './z-index';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  zIndices,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nimport transition from './foundations/transition';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('gray.50', 'gray.900')(props),\r\n      transition: `${transition.duration.slower} ${transition.easing['ease-in-out']}`,\r\n      overflowX: 'hidden',\r\n      lineHeight: 'short'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport { ButtonProps } from '../../components/Clickable/Button/types';\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Department } from '../data/departments';\r\nimport { Genre, MediaType, SortBy } from '../types/types';\r\n\r\nexport const handleReturnNumberFromString = (number: string, string: string): number => {\r\n  return parseInt(_.replace(number, string));\r\n};\r\n\r\nexport const handleFormatMoney = (money: number): string => {\r\n  return money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\n/**\r\n * This method will take a block of string and will format it into paragraphs\r\n *\r\n * @param content String - The content block to format into paragraphs\r\n * @returns Array of paragraphs\r\n */\r\nexport const handleFormatIntoParagraphs = (content: string): string[] => {\r\n  return content.split('\\n'[0]);\r\n};\r\n\r\n/**\r\n * This method will return the genres names from the genre ids\r\n *\r\n * @param genres - Genres ids\r\n * @param mediaType - Type of genres\r\n * @returns - string of genres seperated by a \",\"\r\n */\r\nexport const handleReturnGenresByID = (genres: number[], mediaType: 'movie' | 'tv'): string => {\r\n  const getGenres: Genre[] = store\r\n    .getState()\r\n    .options.data.data.genres[mediaType].filter((genre: Genre) => genres.includes(genre.id));\r\n  return getGenres\r\n    .map((genre) => genre.name)\r\n    .filter((genre) => genre)\r\n    .join(', ');\r\n};\r\n\r\nexport const handleIsTouchDevice = (): boolean => {\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n};\r\n\r\n/**\r\n * This method will return the section of the date depending on the \"type\"\r\n *\r\n * @param date - Full Date\r\n * @param section - Which section of date to return\r\n * @returns - The section of the dat\r\n */\r\nexport const handleReturnDate = (date: string, section: 'year' | 'month' | 'day' | 'full'): string => {\r\n  if (section === 'full') {\r\n    const split = date.split('-');\r\n    const month = months.find((month) => month.value === split[1]);\r\n\r\n    return `${split[2]} ${month?.label} ${split[0]}`;\r\n  } else {\r\n    return date.split('-')[section === 'year' ? 0 : section === 'month' ? 1 : 2];\r\n  }\r\n};\r\n\r\n/**\r\n * This method will take the minutes number passed and will format it to hours and minutes\r\n *\r\n * @param runtime - The runtime in minutes\r\n * @returns - The runtime minutes into a more readable format\r\n */\r\nexport const handleReturnRuntime = (runtime: number): string => {\r\n  const hours = runtime / 60;\r\n  const rhours = Math.floor(hours);\r\n  const minutes = (hours - rhours) * 60;\r\n  const rminutes = Math.round(minutes);\r\n\r\n  const time = [rhours > 0 ? `${rhours}hr` : undefined, rminutes > 0 ? `${rminutes}m` : undefined];\r\n\r\n  return time.filter((date) => date).join(' ');\r\n};\r\n\r\nexport const handleParseDurationForFramer = (time: number): number => {\r\n  return time / 1000;\r\n};\r\n\r\nexport const handleCheckHasFilters = (sortBy?: SortBy, genres?: Genre[], departments?: Department[]): boolean => {\r\n  let hasFilters = false;\r\n\r\n  if (!hasFilters && sortBy && sortBy.isActive) {\r\n    hasFilters = true;\r\n  }\r\n\r\n  if (!hasFilters && !_.isEmpty(genres)) {\r\n    hasFilters = true;\r\n  }\r\n\r\n  if (!hasFilters && !_.isEmpty(departments)) {\r\n    hasFilters = true;\r\n  }\r\n\r\n  return hasFilters;\r\n};\r\n\r\n/**\r\n * This method will return the proper typed button color depending on the color passed\r\n *\r\n * @param color - Current user selected color from display modal\r\n * @returns - Proper typed color to be used in IconButton/Button\r\n */\r\nexport const handleReturnColor = (color: unknown): ButtonProps['color'] => {\r\n  switch (color) {\r\n    case 'orange':\r\n      return 'orange';\r\n    case 'yellow':\r\n      return 'yellow';\r\n    case 'green':\r\n      return 'green';\r\n    case 'teal':\r\n      return 'teal';\r\n    case 'cyan':\r\n      return 'cyan';\r\n    case 'purple':\r\n      return 'purple';\r\n    case 'pink':\r\n      return 'pink';\r\n    default:\r\n      return 'blue';\r\n  }\r\n};\r\n\r\n/**\r\n * This method will return a url that will fetch an img from boringavatars\r\n * boringavatars - https://boringavatars.com/\r\n *\r\n * @param mediaType - Poster mediaType (Movie, TV or Person)\r\n * @param size - Size of poster\r\n * @param alt - Image alt\r\n * @returns - boringavatars URL\r\n */\r\nexport const handleReturnFallbackSrc = (mediaType: MediaType, size: string, alt: string): string => {\r\n  const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`.replace(/ /g, '');\r\n  const colors: string = [\r\n    theme.colors.red[400],\r\n    theme.colors.orange[400],\r\n    theme.colors.yellow[400],\r\n    theme.colors.green[400],\r\n    theme.colors.teal[400],\r\n    theme.colors.blue[400],\r\n    theme.colors.cyan[400],\r\n    theme.colors.purple[400],\r\n    theme.colors.pink[400]\r\n  ].join(',');\r\n\r\n  return queryString.stringifyUrl({\r\n    url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n    query: {\r\n      colors,\r\n      square: true\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * This method will check if the element passed has a bigger width than its parent\r\n *\r\n * @param element - Ref element\r\n * @returns - Boolean value of if element is overflowing\r\n */\r\nexport const handleIsOverflowing = (element: HTMLElement): boolean => {\r\n  const overflow = element.style.overflow;\r\n\r\n  if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n  const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n  element.style.overflow = overflow;\r\n\r\n  return isOverflowing;\r\n};\r\n\r\n/**\r\n * This method will return an array of numbers from 25 to the range passed\r\n *\r\n * @param range - Total range of numbers to use\r\n * @param amount - Amount of numbers to return\r\n * @returns - Array of numbers from 25 to range\r\n */\r\nexport const handleReturnDummyWidths = (range: number, amount: number): number[] => {\r\n  return _.range(25, range, amount);\r\n};\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport { handleIsTouchDevice, handleReturnNumberFromString } from '../../common/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, colorMode: colorModeProp, closeDelay, openDelay, shouldWrapChildren = false, ...rest } = props;\r\n\r\n  const mode = colorModeProp || colorMode;\r\n\r\n  return !handleIsTouchDevice() ? (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={mode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : handleReturnNumberFromString(theme.transition.duration.slow, 'ms')}\r\n      openDelay={openDelay ? openDelay : handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      hasArrow\r\n      sx={{\r\n        '& .chakra-tooltip__arrow': {\r\n          backgroundColor: `${mode === 'light' ? theme.colors.gray[700] : theme.colors.gray[200]} !important`\r\n        }\r\n      }}>\r\n      {shouldWrapChildren ? <span style={{ width: '100%' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = (props: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, path, isLastChild = false, sidebarMode: sidebarModeProp } = props;\r\n\r\n  const [isHoveringChild, setIsHoveringChild] = useBoolean();\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, color, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link to={{ pathname: path || '' }} isFullWidth isDisabled={!path} sx={{ ...style.common.link }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringChild}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        gutter={16}>\r\n        <HStack width='100%' spacing='12px'>\r\n          {sidebarMode === 'expanded' ? (\r\n            <Box width='2px' height='42px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n          ) : null}\r\n\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            onMouseEnter={() => setIsHoveringChild.on()}\r\n            onMouseLeave={() => setIsHoveringChild.off()}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </Tooltip>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isExpanded = false,\r\n  isLastChild = false\r\n): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, useCallback, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBoolean,\r\n  VStack,\r\n  HStack,\r\n  Icon,\r\n  Text,\r\n  Box,\r\n  ScaleFade,\r\n  Collapse\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { handleParseDurationForFramer, handleReturnNumberFromString } from '../../common/utils';\r\nimport Link from '../../components/Clickable/Link';\r\nimport { Theme } from '../../theme/types';\r\nimport Tooltip from '../Tooltip';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\nimport { NavItem as NavItemType } from './types';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { children, label, path, icon, iconActive, sidebarMode, onClick } = props;\r\n\r\n  const [isChildrenOpen, setIsChildrenOpen] = useBoolean();\r\n\r\n  const [isHoveringNav, setIsHoveringNav] = useBoolean();\r\n  const [isHoveringIcon, setIsHoveringIcon] = useBoolean();\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    color,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isChildrenOpen : false\r\n  );\r\n\r\n  const handleToggleChildren = useCallback(\r\n    _.debounce(() => {\r\n      setIsChildrenOpen.toggle();\r\n    }, 250),\r\n    [setIsChildrenOpen]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if ((isActive || isChildActive) && !isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [isActive, isChildActive, isChildrenOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isChildrenOpen) {\r\n      handleToggleChildren();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      onClick={onClick ? () => onClick() : undefined}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        isOpen={isHoveringNav}\r\n        isDisabled={sidebarMode === 'expanded'}\r\n        placement='right'\r\n        shouldWrapChildren\r\n        gutter={16}>\r\n        <Link\r\n          to={{ pathname: path || '' }}\r\n          isFullWidth\r\n          isDisabled={!path || isHoveringIcon}\r\n          sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onMouseEnter={() => setIsHoveringNav.on()}\r\n            onMouseLeave={() => setIsHoveringNav.off()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }}\r\n              />\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: handleParseDurationForFramer(\r\n                    handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Text align='left' fontSize='xl' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade\r\n                in={sidebarMode === 'expanded'}\r\n                unmountOnExit\r\n                delay={{\r\n                  enter: handleParseDurationForFramer(\r\n                    handleReturnNumberFromString(theme.transition.duration.slow, 'ms')\r\n                  ),\r\n                  exit: 0\r\n                }}>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes.xl} !important`,\r\n                    transform: `rotate(${isChildrenOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                  onClick={() => setIsChildrenOpen.toggle()}\r\n                  onMouseEnter={() => setIsHoveringIcon.on()}\r\n                  onMouseLeave={() => setIsHoveringIcon.off()}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isChildrenOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? 3.5 : 0}\r\n            pr={sidebarMode === 'expanded' ? 2 : 0}\r\n            mb={sidebarMode === 'expanded' ? 1 : 0}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../common/types/types';\r\nimport { Theme as UserTheme } from '../../store/slices/User/types';\r\nimport { Theme } from '../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  color: UserTheme['color'],\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.200' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.400` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.400` : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.200' : isActive ? `${color}.500` : 'gray.200',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.500` : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.700' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? `${color}.500` : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? `${color}.500` : isActive ? 'gray.900' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.700' : isActive ? `${color}.400` : 'gray.700',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? `${color}.400` : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    cursor: 'pointer',\r\n\r\n    width: size === 'sm' ? '40px' : '100px',\r\n    minHeight: '40px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '20px' : size === 'md' ? '40px' : '75px',\r\n    textTransform: 'lowercase',\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: [\r\n      `width, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `padding, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `font-size, ${theme.transition.duration['ultra-slow']} ${theme.transition.easing['ease-in-out']}`,\r\n      `background-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `border-color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n      `color ${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    ]\r\n      .filter((style) => style)\r\n      .join(', ')\r\n  },\r\n  light: {\r\n    'backgroundColor': `${color}.400`,\r\n    'borderColor': `${color}.400`,\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.500`,\r\n      borderColor: `${color}.500`,\r\n      color: 'gray.50'\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': `${color}.500`,\r\n    'borderColor': `${color}.500`,\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      backgroundColor: `${color}.400`,\r\n      borderColor: `${color}.400`,\r\n      color: 'gray.900'\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport NavItem from '../../../../components/NavItem';\r\nimport Logo from '../Logo';\r\nimport { NavItemsProps } from './types';\r\n\r\nconst NavItems = ({ navItems, sidebarMode: sidebarModeProp }: NavItemsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarModeState = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const sidebarMode = sidebarModeProp || sidebarModeState;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Link to={{ pathname: '/' }} style={{ alignSelf: 'flex-start' }}>\r\n        <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      </Link>\r\n\r\n      <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem) => (\r\n          <NavItem key={navItem.label} {...navItem} sidebarMode={sidebarMode} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} blockScrollOnMount={false} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} sidebarMode='expanded' />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Box\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport NavItem from '../../../../../../components/NavItem';\r\nimport { NavItem as NavItemType } from '../../../../../../components/NavItem/types';\r\nimport { toggleDisplay } from '../../../../../../store/slices/Modals';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const userLinks: NavItemType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Lists',\r\n      path: '/lists',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          minWidth='225px'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Box\r\n              width='100%'\r\n              height='2px'\r\n              border='solid1'\r\n              borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n            />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink) => (\r\n                <NavItem key={userLink.label} {...userLink} sidebarMode='expanded' />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Menu from './components/Menu';\r\nimport User from './components/User';\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isLgUp] = useMediaQuery('(min-width: 1280px)');\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const { width, left } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent={isLgUp ? 'flex-end' : 'space-between'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      {!isLgUp ? <Menu /> : null}\r\n\r\n      <User />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  useBoolean,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text,\r\n  useColorMode\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport useTimeout from '../../common/hooks/useTimeout';\r\nimport { ColorMode } from '../../common/types/types';\r\nimport { Theme } from '../../theme/types';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement | null => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const {\r\n    children,\r\n    actions,\r\n    title,\r\n    colorMode: colorModeProp,\r\n    isConfirm = false,\r\n    isOpen,\r\n    onClose,\r\n    size,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [isMounted, setIsMounted] = useBoolean();\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n  const transition = `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`;\r\n\r\n  useTimeout(() => setIsMounted.off(), !isOpen ? 1000 : null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsMounted.on();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return isMounted ? (\r\n    <CUIModal\r\n      {...rest}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size={isSm && !isConfirm ? 'full' : size}>\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        backgroundColor={mode === 'light' ? 'gray.50' : 'gray.900'}\r\n        borderRadius={size === 'full' || (isSm && !isConfirm) ? 'none' : 'xl'}\r\n        m={isSm && isConfirm ? 2 : 0}\r\n        sx={{ transition }}>\r\n        <ModalHeader\r\n          px={2}\r\n          py={1.25}\r\n          borderBottom='solid2'\r\n          borderBottomColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n          sx={{ transition }}>\r\n          <HStack justifyContent='space-between'>\r\n            {typeof title !== 'string' ? (\r\n              title\r\n            ) : (\r\n              <Text align='left' fontSize='xl' fontWeight='semibold' color={mode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                {title}\r\n              </Text>\r\n            )}\r\n\r\n            <IconButton\r\n              aria-label='Close modal?'\r\n              colorMode={mode}\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            p={2}\r\n            borderTop='solid2'\r\n            borderTopColor={mode === 'light' ? 'gray.200' : 'gray.700'}\r\n            sx={{ transition }}>\r\n            <Button colorMode={mode} onClick={() => onClose()} size='sm' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../../store/slices/Modals';\r\n\r\nconst ConfirmModal = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  return (\r\n    <Modal\r\n      title={confirmModal.title}\r\n      actions={confirmModal.submitButton}\r\n      isConfirm\r\n      isOpen={confirmModal.open}\r\n      isCentered\r\n      onClose={() => dispatch(toggleConfirm({ ...confirmModal, open: false }))}\r\n      size='md'>\r\n      <Text align='left' fontSize='md' fontWeight='normal' p={2}>\r\n        {confirmModal.description}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../common/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultDescriptionModal, toggleDescription } from '../../../../../store/slices/Modals';\r\n\r\nconst DescriptionModal = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const descriptionModal = useSelector((state) => state.modals.ui.descriptionModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Modal\r\n      title={`${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : 'Unknown'} description`}\r\n      actions={\r\n        <Link to={{ pathname: `/${defaultDescriptionModal.mediaType}/${descriptionModal.mediaItem?.id}` }}>\r\n          <Button color={handleReturnColor(color)} size='sm'>\r\n            {`View ${descriptionModal.mediaItem ? `\"${descriptionModal.mediaItem.title}\"` : ''}`}\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen={descriptionModal.open}\r\n      onClose={() => dispatch(toggleDescription({ ...defaultDescriptionModal }))}\r\n      isCentered\r\n      size='2xl'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='lg'\r\n        fontWeight='normal'\r\n        px={3}\r\n        py={2}>\r\n        {descriptionModal.mediaItem ? descriptionModal.mediaItem.description : 'N/A'}\r\n      </Text>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DescriptionModal;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport { DividerProps } from './types';\r\n\r\nconst Divider = ({ colorMode }: DividerProps): ReactElement => {\r\n  return <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />;\r\n};\r\n\r\nexport default Divider;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\n\r\nimport { FooterProps } from './types';\r\n\r\nconst Footer = (props: FooterProps): ReactElement => {\r\n  const { footer, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' alignItems='stretch' justifyContent='stretch'>\r\n      {footer}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack, Text } from '@chakra-ui/react';\r\n\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { actions, colorMode, title, ...rest } = props;\r\n\r\n  return (\r\n    <HStack {...rest} width='100%' justifyContent='space-between'>\r\n      {title ? (\r\n        typeof title === 'string' ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n            fontSize='lg'\r\n            fontWeight='semibold'>\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          title\r\n        )\r\n      ) : null}\r\n\r\n      {actions ? actions : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Box, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../common/types/types';\r\nimport Divider from './components/Divider';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    children,\r\n    box,\r\n    color,\r\n    colorMode: colorModeProp,\r\n    isFullWidth,\r\n    hasDivider = true,\r\n    variant = 'outlined',\r\n    ...rest\r\n  } = props;\r\n\r\n  const style = useStyles(color, isFullWidth);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <VStack\r\n      {...rest}\r\n      divider={hasDivider ? <Divider colorMode={mode} /> : undefined}\r\n      spacing={0}\r\n      sx={{ ..._.merge(style.card[variant], style[mode][variant]) }}>\r\n      {children.header?.title || children.header?.actions ? (\r\n        <Header {...box?.header} actions={children.header.actions} colorMode={mode} title={children.header.title} />\r\n      ) : null}\r\n\r\n      <Box {...box?.body} width='100%'>\r\n        {children.body}\r\n      </Box>\r\n\r\n      {children.footer ? <Footer {...box?.footer} footer={children.footer} /> : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../common/types/types';\r\nimport { CardProps } from './types';\r\n\r\ntype VariantStyle = {\r\n  outlined: Style;\r\n  transparent: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: VariantStyle;\r\n  light: VariantStyle;\r\n  dark: VariantStyle;\r\n};\r\n\r\nexport default (color: CardProps['color'] = 'gray', isFullWidth = false): CardStyle => ({\r\n  card: {\r\n    outlined: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'lg',\r\n\r\n      transition: 'none'\r\n    },\r\n    transparent: {\r\n      width: isFullWidth ? '100%' : 'auto',\r\n      height: 'auto',\r\n\r\n      transition: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.200' : `${color}.400`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.200' : `${color}.400`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    outlined: {\r\n      'backgroundColor': 'transparent',\r\n      'borderColor': color === 'gray' ? 'gray.700' : `${color}.500`,\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent',\r\n        borderColor: color === 'gray' ? 'gray.700' : `${color}.500`\r\n      }\r\n    },\r\n    transparent: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'transparent'\r\n      },\r\n\r\n      '&:active': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { CardProps } from './types';\r\n\r\nconst Card = (props: CardProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    colorMode: colorModeProp,\r\n    isDisabled = false,\r\n    ...rest\r\n  } = _.omit(props, ['color', 'isFullWidth', 'isLight', 'isClickable']);\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return (\r\n    <Box\r\n      sx={\r\n        isDisabled\r\n          ? {\r\n              ..._.merge(style.card.back, style.card.disabled, style[mode].back, style[mode].disabled)\r\n            }\r\n          : { ..._.merge(style.card.back, style[mode].back) }\r\n      }>\r\n      <Box {...rest} className='card_front' sx={{ ..._.merge(style.card.front, style[mode].front) }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { CardProps } from './types';\r\n\r\ntype CommonStyle = {\r\n  back: Style;\r\n  front: Style;\r\n  disabled: Style;\r\n};\r\n\r\ntype CardStyle = {\r\n  card: CommonStyle;\r\n  light: Omit<CommonStyle, 'icon'>;\r\n  dark: Omit<CommonStyle, 'icon'>;\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', isFullWidth = false, isLight = false, isClickable = true }: CardProps\r\n): CardStyle => ({\r\n  card: {\r\n    back: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': 0,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        transform: isClickable ? 'translateY(0)' : 'translateY(-2px)'\r\n      },\r\n\r\n      '& .MuiSvgIcon-root': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    front: {\r\n      cursor: 'inherit',\r\n\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      justifyContent: 'stretch',\r\n\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n      borderRadius: 'inherit',\r\n\r\n      transform: 'translateY(-2px)',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n\r\n      'opacity': 0.5,\r\n\r\n      '& .card_front': {\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        '& .card_front': { opacity: 1 }\r\n      },\r\n\r\n      '&:hover .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active .card_front': {\r\n        cursor: 'not-allowed',\r\n\r\n        opacity: 1,\r\n\r\n        transform: 'translateY(0)'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    back: {\r\n      'backgroundColor': `${color}.${isLight ? 200 : 400}`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n        '& .card_front': {\r\n          borderColor: `${color}.${isLight ? 300 : 500}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.${isLight ? 300 : 500}`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': `${color}.${isLight ? 300 : 500}`,\r\n\r\n        '& .card_front': {\r\n          borderColor: `${color}.${isLight ? 300 : 500}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `${color}.${isLight ? 300 : 500}`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: `${color}.${isLight ? 200 : 400}`,\r\n      backgroundColor: 'gray.50',\r\n      color: `${color}.${isLight ? 200 : 400}`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'gray.50',\r\n\r\n      '& .card_front': {\r\n        borderColor: `gray.${isLight ? 200 : 400}`,\r\n        backgroundColor: 'gray.50',\r\n        color: `gray.${isLight ? 200 : 400}`\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 300 : 500}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `gray.${isLight ? 300 : 500}`\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 300 : 500}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `gray.${isLight ? 300 : 500}`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'gray.50',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 300 : 500}`,\r\n          backgroundColor: 'gray.50',\r\n          color: `gray.${isLight ? 300 : 500}`\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    back: {\r\n      'backgroundColor': `${color}.${isLight ? 700 : 500}`,\r\n\r\n      '&:hover': {\r\n        'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n        '& .card_front': {\r\n          borderColor: `${color}.${isLight ? 600 : 400}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.${isLight ? 600 : 400}`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': `${color}.${isLight ? 600 : 400}`,\r\n\r\n        '& .card_front': {\r\n          borderColor: `${color}.${isLight ? 600 : 400}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `${color}.${isLight ? 600 : 400}`\r\n        }\r\n      }\r\n    },\r\n    front: {\r\n      borderColor: `${color}.${isLight ? 700 : 500}`,\r\n      backgroundColor: 'gray.900',\r\n      color: `${color}.${isLight ? 700 : 500}`\r\n    },\r\n    disabled: {\r\n      'backgroundColor': 'transparent',\r\n\r\n      '& .card_front': {\r\n        borderColor: `gray.${isLight ? 700 : 500}`,\r\n        backgroundColor: 'gray.900',\r\n        color: `gray.${isLight ? 700 : 500}`\r\n      },\r\n\r\n      '&:hover[disabled], :hover[aria-disabled=true], :hover[data-disabled], [data-hover][data-disabled]': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 600 : 400}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `gray.${isLight ? 600 : 400}`\r\n        }\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 600 : 400}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `gray.${isLight ? 600 : 400}`\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'backgroundColor': 'transparent',\r\n\r\n        '& .card_front': {\r\n          borderColor: `gray.${isLight ? 600 : 400}`,\r\n          backgroundColor: 'gray.900',\r\n          color: `gray.${isLight ? 600 : 400}`\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, Icon, Text, HStack } from '@chakra-ui/react';\r\n\r\nimport { handleReturnColor } from '../../../../../../../../../common/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { BackgroundItemProps } from './types';\r\n\r\nconst BackgroundItem = (props: BackgroundItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, icon, color, background, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? handleReturnColor(color) : 'gray'}\r\n      colorMode={background}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  WbSunnyOutlined as WbSunnyOutlinedIcon,\r\n  Brightness2Outlined as Brightness2OutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport BackgroundItem from './components/BackgroundItem';\r\nimport { Background as BackgroundType } from './types';\r\n\r\nconst backgrounds: BackgroundType[] = [\r\n  {\r\n    label: 'Light',\r\n    value: 'light',\r\n    icon: WbSunnyOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Dark',\r\n    value: 'dark',\r\n    icon: Brightness2OutlinedIcon\r\n  }\r\n];\r\n\r\nconst Background = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const color = form.watch('color');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='background'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} colorMode={value} isFullWidth px={2} pt={1.5} pb={2}>\r\n          {{\r\n            header: {\r\n              title: 'Background'\r\n            },\r\n\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {backgrounds.map((background) => (\r\n                  <BackgroundItem\r\n                    key={background.value}\r\n                    {...background}\r\n                    color={color}\r\n                    background={value}\r\n                    isActive={value === background.value}\r\n                    onClick={() => form.setValue('background', background.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useBoolean, VStack, Box, Icon, Text, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { handleReturnColor } from '../../../../../../../../../common/utils';\r\nimport Card from '../../../../../../../../../components/Clickable/Card';\r\nimport Tooltip from '../../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../../theme/types';\r\nimport { ColorItemProps } from './types';\r\n\r\nconst ColorItem = (props: ColorItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { label, value, background, isActive, onClick } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      colorMode={background}\r\n      isOpen={isHovering}\r\n      isDisabled={isActive}\r\n      label={isActive ? `Current color: ${label}` : `Set color to ${label}`}\r\n      placement='top'\r\n      shouldWrapChildren\r\n      gutter={8}>\r\n      <Card\r\n        color={isActive ? handleReturnColor(value) : 'gray'}\r\n        colorMode={background}\r\n        onClick={!isActive && onClick ? () => onClick(value) : undefined}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        p={2}>\r\n        <VStack width='100%' spacing={0.75}>\r\n          <Box\r\n            sx={{\r\n              width: theme.fontSizes['6xl'],\r\n              height: theme.fontSizes['6xl'],\r\n\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n\r\n              backgroundColor: `${value}.400`,\r\n              borderRadius: 'full'\r\n            }}>\r\n            <ScaleFade in={isActive} unmountOnExit>\r\n              <Icon\r\n                as={CheckOutlinedIcon}\r\n                sx={{\r\n                  fontSize: `${theme.fontSizes['4xl']} !important`,\r\n                  color: background === 'light' ? 'gray.50' : 'gray.900'\r\n                }}\r\n              />\r\n            </ScaleFade>\r\n          </Box>\r\n          <Text align='center' fontSize='sm' fontWeight='medium'>\r\n            {label}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport { UseFormReturn, Controller } from 'react-hook-form';\r\n\r\nimport Card from '../../../../../../../components/Card';\r\nimport { Form } from '../../types';\r\nimport ColorItem from './components/ColorItem';\r\nimport { Color as ColorType } from './types';\r\n\r\nconst colors: ColorType[] = [\r\n  {\r\n    label: 'Orange',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    label: 'Yellow',\r\n    value: 'yellow'\r\n  },\r\n  {\r\n    label: 'Green',\r\n    value: 'green'\r\n  },\r\n  {\r\n    label: 'Teal',\r\n    value: 'teal'\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    value: 'blue'\r\n  },\r\n  {\r\n    label: 'Cyan',\r\n    value: 'cyan'\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    value: 'purple'\r\n  },\r\n  {\r\n    label: 'Pink',\r\n    value: 'pink'\r\n  }\r\n];\r\n\r\nconst Color = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const background = form.watch('background');\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='color'\r\n      render={({ field: { value } }) => (\r\n        <Card\r\n          box={{\r\n            header: { pb: 1.5 },\r\n            body: { pt: 1.5 }\r\n          }}\r\n          colorMode={background}\r\n          isFullWidth\r\n          px={2}\r\n          pt={1.5}\r\n          pb={2}>\r\n          {{\r\n            header: {\r\n              title: 'Color'\r\n            },\r\n            body: (\r\n              <SimpleGrid width='100%' columns={isSm ? 2 : 4} spacing={2}>\r\n                {colors.map((color, index) => (\r\n                  <ColorItem\r\n                    key={index}\r\n                    {...color}\r\n                    background={background}\r\n                    isActive={color.value === value}\r\n                    onClick={() => form.setValue('color', color.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </SimpleGrid>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack } from '@chakra-ui/react';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../common/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay, toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport { setTheme } from '../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../store/slices/User/types';\r\nimport Background from './components/Background';\r\nimport Color from './components/Color';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.modals.ui.isDisplayModalOpen);\r\n  const theme = useSelector((state) => state.user.ui.theme);\r\n\r\n  const form = useForm<Theme>({ defaultValues: { ...theme } });\r\n  const color = form.watch('color');\r\n  const background = form.watch('background');\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (newTheme: Theme): void => {\r\n    handleClose();\r\n\r\n    dispatch(toggleSplashscreen(true));\r\n\r\n    if (dirtyFields.background) {\r\n      toggleColorMode();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      form.reset({ ...newTheme });\r\n\r\n      dispatch(setTheme(newTheme));\r\n    }, 2500);\r\n    setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...theme });\r\n\r\n    dispatch(toggleDisplay(false));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button\r\n          colorMode={background}\r\n          color={handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Save\r\n        </Button>\r\n      }\r\n      colorMode={background}\r\n      isOpen={isDisplayModalOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size='2xl'>\r\n      <VStack spacing={2} p={2}>\r\n        <Color form={form} />\r\n        <Background form={form} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import { ReactElement, KeyboardEvent } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    const id = uuid();\r\n\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id,\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: {\r\n            movies: [],\r\n            tv: []\r\n          }\r\n        }\r\n      ])\r\n    );\r\n\r\n    handleClose(id);\r\n  };\r\n\r\n  const handleClose = (id?: string): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose(id);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      form.handleSubmit((values) => handleSubmit(values));\r\n    }\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color={handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                onKeyDown={handleKeyDown}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../../common/utils';\r\nimport Card from '../../../../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Card\r\n      color={isSelected ? handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={() => onClick(id, isSelected)}\r\n      px={2}\r\n      py={1}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <VStack width='calc(100% - 46px)' alignItems='flex-start' spacing={0}>\r\n          <Text align='left' fontSize='md' fontWeight='semibold' textTransform='capitalize'>\r\n            {label}\r\n          </Text>\r\n          {description && description.length > 0 ? (\r\n            <Text\r\n              width='auto'\r\n              maxWidth='100%'\r\n              align='left'\r\n              fontSize='xs'\r\n              fontWeight='400'\r\n              textTransform='capitalize'\r\n              isTruncated>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n          <Text align='left' fontSize='xs' fontWeight='400' textTransform='capitalize'>\r\n            {`${\r\n              results.movies.length + results.tv.length > 0\r\n                ? `${results.movies.length + results.tv.length} items  • `\r\n                : ''\r\n            }${results.movies.length + results.tv.length > 0 ? 'Updated' : 'Created'} ${moment(date).fromNow()}`}\r\n          </Text>\r\n        </VStack>\r\n\r\n        <Icon\r\n          as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n          sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n        />\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../common/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport CreateList from '../../../../../pages/Lists/components/CreateList';\r\nimport { defaultListsModal, toggleList } from '../../../../../store/slices/Modals';\r\nimport { ListModal as ListModalType } from '../../../../../store/slices/Modals/types';\r\nimport { setLists } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\n// import CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal: ListModalType = useSelector((state) => state.modals.ui.listsModal);\r\n  const lists: ListType[] = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.mediaItem && listsModal.mediaItem.id && listsModal.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) => {\r\n          const results = { ...updatedList.results };\r\n\r\n          switch (listsModal.mediaType) {\r\n            case 'movie': {\r\n              const movieMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.movies = [...results.movies, movieMediaItem];\r\n              break;\r\n            }\r\n            case 'tv': {\r\n              const showMediaItem: any = { ...listsModal.mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n              results.tv = [...results.tv, showMediaItem];\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n\r\n          return updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: { ...results }\r\n              }\r\n            : updatedList;\r\n        });\r\n      });\r\n\r\n      dispatch(setLists([...updatedLists]));\r\n\r\n      handleCloseLists();\r\n    }\r\n  };\r\n\r\n  const handleCloseLists = (): void => {\r\n    setSelected([]);\r\n    dispatch(toggleList({ ...defaultListsModal }));\r\n  };\r\n\r\n  const handleCloseCreateList = (id?: string): void => {\r\n    onCreateListClose();\r\n\r\n    if (id) {\r\n      handleIsSelected(id, false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!listsModal.open) {\r\n      handleCloseLists();\r\n    }\r\n  }, [listsModal.open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add \"${listsModal.title}\" to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color={handleReturnColor(color)} onClick={() => handleSaveItem()} size='sm'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color={handleReturnColor(color)} onClick={() => onCreateListOpen()} size='sm'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={listsModal.open}\r\n        onClose={() => dispatch(toggleList({ ...defaultListsModal }))}\r\n        isCentered\r\n        size='2xl'>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={handleCloseCreateList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n","import { ReactElement, MouseEvent } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  CloseOutlined as CloseOutlinedIcon,\r\n  DashboardOutlined as DashboardOutlinedIcon,\r\n  FullscreenOutlined as FullscreenOutlinedIcon,\r\n  FullscreenExitOutlined as FullscreenExitOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport { ActionsProps, HTMLFullscreenElement, FullscreenDocument } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { activeType, onClose, onGalleryClick } = props;\r\n\r\n  const [isFullscreen, setIsFullscreen] = useBoolean();\r\n  const [isfullscreenNotSupported, setIsfullscreenNotSupported] = useBoolean();\r\n\r\n  /**\r\n   * This method will open fullscreen mode\r\n   */\r\n  const handleOpenFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const element: HTMLFullscreenElement = document.documentElement;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.on();\r\n  };\r\n\r\n  /**\r\n   * This method will close fullscreen mode\r\n   */\r\n  const handleCloseFullscreen = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    event.preventDefault();\r\n\r\n    const doc: FullscreenDocument = document;\r\n\r\n    if (doc.exitFullscreen) {\r\n      doc.exitFullscreen();\r\n    } else if (doc.webkitExitFullscreen) {\r\n      doc.webkitExitFullscreen();\r\n    } else if (doc.mozCancelFullScreen) {\r\n      doc.mozCancelFullScreen();\r\n    } else if (doc.msExitFullscreen) {\r\n      doc.msExitFullscreen();\r\n    } else {\r\n      console.error('Fullscreen API is not supported.');\r\n      setIsfullscreenNotSupported.on();\r\n    }\r\n\r\n    setIsFullscreen.off();\r\n  };\r\n\r\n  /**\r\n   * This method will close the modal and will close fullscreen if fullscreen is open\r\n   */\r\n  const handleClose = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>): void => {\r\n    if (isFullscreen) {\r\n      handleCloseFullscreen(event);\r\n    }\r\n\r\n    onClose();\r\n  };\r\n\r\n  const actions = [\r\n    // Close button\r\n    <IconButton\r\n      key='close_button'\r\n      aria-label='Close modal'\r\n      icon={CloseOutlinedIcon}\r\n      onClick={(event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => handleClose(event)}\r\n      variant='icon'\r\n    />,\r\n\r\n    // Gallery button\r\n    <IconButton\r\n      key='gallery_button'\r\n      aria-label='Open Gallery'\r\n      icon={DashboardOutlinedIcon}\r\n      onClick={() => onGalleryClick()}\r\n      variant='icon'\r\n    />,\r\n\r\n    //  Fullscreen button\r\n    !isfullscreenNotSupported && activeType !== 'video' ? (\r\n      <IconButton\r\n        key='fullscreen_button'\r\n        aria-label={isFullscreen ? 'Exit fullscreen ' : 'Enter fullscreen'}\r\n        icon={isFullscreen ? FullscreenExitOutlinedIcon : FullscreenOutlinedIcon}\r\n        onClick={isFullscreen ? (event) => handleCloseFullscreen(event) : (event) => handleOpenFullscreen(event)}\r\n        variant='icon'\r\n      />\r\n    ) : null\r\n  ].filter((action) => action);\r\n\r\n  return isSm ? (\r\n    <HStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions.reverse()}\r\n    </HStack>\r\n  ) : (\r\n    <VStack position='absolute' top={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {actions}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Image as CUIImage } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useElementSize, useImageOnLoad } from '../../common/hooks';\r\nimport { handleReturnFallbackSrc } from '../../common/utils';\r\nimport { Theme } from '../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const imageRef = useRef<HTMLImageElement | null>(null);\r\n\r\n  const { width: elementWidth } = useElementSize(imageRef);\r\n  const { css, isLoaded, handleIsLoaded } = useImageOnLoad(theme);\r\n\r\n  const { mediaType, alt, src, size, ...rest } = props;\r\n\r\n  const [fallbackSrc, setFallbackSrc] = useState<string>('');\r\n\r\n  /**\r\n   * This method will return the url for the fallback src\r\n   */\r\n  const handleFallbackSrc = useCallback(\r\n    _.debounce(() => {\r\n      const fallbackSrc: string = handleReturnFallbackSrc(mediaType, String(isLoaded ? elementWidth || 780 : 50), alt);\r\n\r\n      setFallbackSrc(fallbackSrc);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleFallbackSrc(), []);\r\n\r\n  return (\r\n    <>\r\n      {/* Thumbnail to load faster */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        alt={`${alt} thumbnail`}\r\n        position='absolute'\r\n        onError={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.thumbnail}${src}`}\r\n        ignoreFallback\r\n        sx={{ ...css.thumbnail }}\r\n      />\r\n\r\n      {/* Full size image */}\r\n      <CUIImage\r\n        {...rest}\r\n        ref={imageRef}\r\n        alt={alt}\r\n        position='absolute'\r\n        onLoad={() => handleIsLoaded(true)}\r\n        src={`${process.env.REACT_APP_IMAGE_URL}/${size.full}${src}`}\r\n        fallbackSrc={fallbackSrc}\r\n        sx={{ ...css.fullSize }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBreakpointValue } from '@chakra-ui/react';\r\n\r\nimport Image from '../../../Image';\r\nimport { BackdropViewerProps } from './types';\r\n\r\nconst BackdropViewer = (props: BackdropViewerProps): ReactElement => {\r\n  const width = useBreakpointValue({\r\n    'base': 'calc(100% - 2rem)',\r\n    'sm': 'calc(100% - 2rem)',\r\n    'md': 'calc(100% - 4rem)',\r\n    'lg': 'calc(100% - 8rem)',\r\n    'xl': 'calc(100% - 16rem)',\r\n    '2xl': 'calc(100% - 32rem)'\r\n  });\r\n\r\n  const { name, path, mediaType } = props;\r\n\r\n  return (\r\n    <Image\r\n      alt={`${name ? `\"${name}\"` : ''} image`}\r\n      width={width}\r\n      maxWidth='none'\r\n      height='auto'\r\n      mediaType={mediaType}\r\n      borderRadius='xl'\r\n      src={path}\r\n      size={{\r\n        thumbnail: 'w300',\r\n        full: 'original'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BackdropViewer;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, SimpleGrid, Text } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = ({ children, title }: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 340px)');\r\n\r\n  return (\r\n    <VStack width='100%' justifyContent='stretch' spacing={2}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='xl'\r\n        fontWeight='semibold'>\r\n        {title}\r\n      </Text>\r\n\r\n      <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 5, 6]} spacing={2}>\r\n        {children}\r\n      </SimpleGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import { ReactElement, useRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, Box, AspectRatio, Center, Icon, Fade } from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon, CheckOutlined as CheckOutlinedIcon } from '@material-ui/icons';\r\n\r\nimport { useElementSize } from '../../../common/hooks';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const imageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { height } = useElementSize(imageRef);\r\n\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    children,\r\n    width = '100%',\r\n    borderRadius = 'base',\r\n    ratio = 2 / 3,\r\n    icon,\r\n    isDisabled = false,\r\n    isActive = false,\r\n    onClick,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  return (\r\n    <Box\r\n      {...rest}\r\n      ref={imageRef}\r\n      position='relative'\r\n      width={width}\r\n      minWidth={width}\r\n      maxWidth={width}\r\n      borderRadius={borderRadius}\r\n      onClick={children && !isDisabled && onClick ? () => onClick() : undefined}\r\n      onMouseEnter={children && !isDisabled ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={children && !isDisabled ? () => setIsHovering.off() : undefined}>\r\n      <AspectRatio ratio={ratio}>\r\n        <>\r\n          <Fade in={!isDisabled} unmountOnExit style={{ width: '100%', height: '100%' }}>\r\n            <Center\r\n              width='100%'\r\n              height='100%'\r\n              position='absolute'\r\n              zIndex={1}\r\n              borderRadius={borderRadius}\r\n              sx={{\r\n                cursor: 'pointer',\r\n                backgroundColor:\r\n                  isHovering || isActive\r\n                    ? colorMode === 'light'\r\n                      ? 'rgba(0, 0, 0, 0.4)'\r\n                      : 'rgba(255, 255, 255, 0.2)'\r\n                    : 'transparent',\r\n                transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-in-out']}`\r\n              }}>\r\n              <Fade in={isHovering || isActive} unmountOnExit>\r\n                {\r\n                  <Icon\r\n                    as={isActive ? CheckOutlinedIcon : icon || SearchOutlinedIcon}\r\n                    color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n                    sx={{\r\n                      fontSize: `${height > 375 ? theme.fontSizes['7xl'] : theme.fontSizes['6xl']} !important`\r\n                    }}\r\n                  />\r\n                }\r\n              </Fade>\r\n            </Center>\r\n          </Fade>\r\n\r\n          {children}\r\n        </>\r\n      </AspectRatio>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { ReactElement } from 'react';\r\n\r\nimport ClickableImage from '../../../../../Clickable/Image';\r\nimport Image from '../../../../../Image';\r\nimport { PhotoProps } from './types';\r\n\r\nconst Photo = (props: PhotoProps): ReactElement => {\r\n  const { photo, name, type, mediaType, isActive = false, onClickImage } = props;\r\n\r\n  return (\r\n    <ClickableImage\r\n      borderRadius='lg'\r\n      ratio={1 / 1}\r\n      isActive={isActive}\r\n      onClick={() => onClickImage(photo.file_path, type)}>\r\n      <Image\r\n        alt={`${name ? `\"${name}\"` : ''} image`}\r\n        maxWidth='none'\r\n        height='100%'\r\n        borderRadius='base'\r\n        mediaType={mediaType}\r\n        src={photo.file_path}\r\n        size={{\r\n          thumbnail: 'w45',\r\n          full: 'original'\r\n        }}\r\n      />\r\n    </ClickableImage>\r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean, Box } from '@chakra-ui/react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport YouTube, { Options } from 'react-youtube';\r\nimport './styles.css';\r\n\r\nimport ClickableImage from '../../../../../Clickable/Image';\r\nimport { VideoProps } from './types';\r\n\r\nconst Video = (props: VideoProps): ReactElement => {\r\n  const { video, isActive = false, onClickVideo } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const opts: Options = {\r\n    playerVars: {\r\n      autoplay: isHovering ? 1 : 0,\r\n      controls: 0,\r\n      color: 'white',\r\n      enablejsapi: 1,\r\n      disablekb: 1,\r\n      mute: 1,\r\n      fs: 0,\r\n      loop: 1,\r\n      modestbranding: 1,\r\n      showinfo: 0\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      borderRadius='lg'\r\n      onMouseEnter={!isActive ? () => setIsHovering.on() : undefined}\r\n      onMouseLeave={!isActive ? () => setIsHovering.off() : undefined}>\r\n      <ClickableImage\r\n        borderRadius='lg'\r\n        ratio={1 / 1}\r\n        icon={PlayArrowIcon}\r\n        isActive={isActive}\r\n        onClick={() => onClickVideo(video.key, 'video')}>\r\n        <YouTube\r\n          videoId={video.key}\r\n          className='VideoGalleryFrame'\r\n          containerClassName='VideoGalleryContainer'\r\n          opts={opts}\r\n        />\r\n      </ClickableImage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack, SlideFade } from '@chakra-ui/react';\r\n\r\nimport Modal from '../../../Modal';\r\nimport Grid from './components/Grid';\r\nimport Photo from './components/Photo';\r\nimport Video from './components/Video';\r\nimport { GalleryProps } from './types';\r\n\r\nconst Gallery = (props: GalleryProps): ReactElement => {\r\n  const { isOpen, name, activePath, photos, backdrops, videos, mediaType, onClick, onClose } = props;\r\n\r\n  return (\r\n    <Modal title='Gallery' isOpen={isOpen} onClose={onClose} isCentered size='full'>\r\n      <VStack width='100%' p={2} spacing={10}>\r\n        {/* Photos Section */}\r\n        <SlideFade in={photos && photos.length > 0} unmountOnExit style={{ width: '100%' }}>\r\n          <Grid title='Photos'>\r\n            <>\r\n              {photos?.map((photo, index) => (\r\n                <Photo\r\n                  key={index}\r\n                  photo={photo}\r\n                  name={name}\r\n                  type='photo'\r\n                  mediaType={mediaType}\r\n                  isActive={photo.file_path === activePath}\r\n                  onClickImage={onClick}\r\n                />\r\n              ))}\r\n            </>\r\n          </Grid>\r\n        </SlideFade>\r\n\r\n        {/* Backdrops Section */}\r\n        <SlideFade in={backdrops && backdrops.length > 0} unmountOnExit style={{ width: '100%' }}>\r\n          <Grid title='Backdrops'>\r\n            <>\r\n              {backdrops?.map((backdrop, index) => (\r\n                <Photo\r\n                  key={index}\r\n                  photo={backdrop}\r\n                  name={name}\r\n                  type='backdrop'\r\n                  mediaType={mediaType}\r\n                  isActive={backdrop.file_path === activePath}\r\n                  onClickImage={onClick}\r\n                />\r\n              ))}\r\n            </>\r\n          </Grid>\r\n        </SlideFade>\r\n\r\n        {/* Videos Section */}\r\n        <SlideFade in={videos && videos.length > 0} unmountOnExit style={{ width: '100%' }}>\r\n          <Grid title='Videos'>\r\n            <>\r\n              {videos?.map((video, index) => (\r\n                <Video key={index} video={video} isActive={video.key === activePath} onClickVideo={onClick} />\r\n              ))}\r\n            </>\r\n          </Grid>\r\n        </SlideFade>\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBreakpointValue } from '@chakra-ui/react';\r\n\r\nimport Image from '../../../Image';\r\nimport { PhotoViewerProps } from './types';\r\n\r\nconst PhotoViewer = (props: PhotoViewerProps): ReactElement => {\r\n  const width = useBreakpointValue({\r\n    'base': 'calc(100% - 2rem)',\r\n    'sm': 'auto',\r\n    'md': 'auto',\r\n    'lg': 'auto',\r\n    'xl': 'auto',\r\n    '2xl': 'auto'\r\n  });\r\n  const height = useBreakpointValue({\r\n    'base': 'auto',\r\n    'sm': 'calc(100% - 8rem)',\r\n    'md': 'calc(100% - 6rem)',\r\n    'lg': 'calc(100% - 6rem)',\r\n    'xl': 'calc(100% - 6rem)',\r\n    '2xl': 'calc(100% - 8rem)'\r\n  });\r\n\r\n  const { name, path, mediaType } = props;\r\n\r\n  return (\r\n    <Image\r\n      alt={`${name ? `\"${name}\"` : ''} image`}\r\n      width={width}\r\n      maxWidth='none'\r\n      height={height}\r\n      borderRadius='xl'\r\n      mediaType={mediaType}\r\n      src={path}\r\n      size={{\r\n        thumbnail: 'w92',\r\n        full: 'original'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoViewer;\r\n","import { ReactElement } from 'react';\r\n\r\nimport YouTube from 'react-youtube';\r\n\r\nimport { VideoViewerProps } from './types';\r\n\r\nimport './styles.css';\r\n\r\nconst VideoViewer = (props: VideoViewerProps): ReactElement => {\r\n  const { path } = props;\r\n\r\n  return <YouTube videoId={path} className='VideoViewerFrame' containerClassName='VideoViewerContainer' />;\r\n};\r\n\r\nexport default VideoViewer;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport { NavigationProps } from './types';\r\n\r\nconst Navigation = (props: NavigationProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { current, total, onNavigation } = props;\r\n\r\n  return (\r\n    <HStack position='absolute' bottom={1} right={1} zIndex={2} backgroundColor='transparent' spacing={0}>\r\n      {/* Left button */}\r\n      <IconButton\r\n        aria-label='Previous photo'\r\n        icon={ArrowBackOutlinedIcon}\r\n        isDisabled={current <= 1}\r\n        onClick={() => onNavigation('prev')}\r\n        variant='icon'\r\n      />\r\n\r\n      {/* Current Slide */}\r\n      <Text\r\n        align='center'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='md'>{`${current} / ${total}`}</Text>\r\n\r\n      {/* Right button */}\r\n      <IconButton\r\n        aria-label='Next photo'\r\n        icon={ArrowForwardOutlinedIcon}\r\n        isDisabled={current >= total}\r\n        onClick={() => onNavigation('next')}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Center, SlideFade } from '@chakra-ui/react';\r\nimport { Swiper as SwiperType } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\n\r\nimport { useEventListener } from '../../../../common/hooks';\r\nimport {\r\n  handleIsTouchDevice,\r\n  handleParseDurationForFramer,\r\n  handleReturnNumberFromString\r\n} from '../../../../common/utils';\r\nimport { Theme } from '../../../../theme/types';\r\nimport Navigation from '../Navigation';\r\nimport { ViewerProps, SwiperDirection } from './types';\r\n\r\nconst Viewer = (props: ViewerProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { renderSlide, isGalleryOpen, activePath, data, onSwiper, onSlideChange, onNavigation, onClose } = props;\r\n\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n\r\n  /**\r\n   * This method will either navigate to the left/right depending on the key pressed\r\n   * And depending if its allowed to navigate left/right\r\n   */\r\n  const handleKeyPress = useCallback(\r\n    (event: globalThis.KeyboardEvent): void => {\r\n      if (!isGalleryOpen) {\r\n        switch (event?.key) {\r\n          case 'ArrowLeft': {\r\n            if (activeIndex >= 1) {\r\n              onNavigation('prev');\r\n            }\r\n            break;\r\n          }\r\n          case 'ArrowRight': {\r\n            if (activeIndex <= (data?.length || 0)) {\r\n              onNavigation('next');\r\n            }\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    [isGalleryOpen, data, activePath, onNavigation]\r\n  );\r\n\r\n  /**\r\n   * This method will set the active index depending on the activePath\r\n   */\r\n  const handleSetActiveIndex = useCallback(() => {\r\n    setActiveIndex((data.findIndex((item) => item.file_path === activePath || item.key === activePath) || 0) + 1);\r\n  }, [data, activePath, setActiveIndex]);\r\n\r\n  /**\r\n   * This method will close the modal if user is on touch device\r\n   * And user swipes either up/down\r\n   *\r\n   * @param Swiper - Swiper data object\r\n   */\r\n  const handleSwipe = (swiper: SwiperDirection): void => {\r\n    if (handleIsTouchDevice() && swiper.swipeDirection === undefined) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEventListener('keydown', handleKeyPress);\r\n\r\n  useEffect(() => handleSetActiveIndex(), [activePath]);\r\n\r\n  return (\r\n    <>\r\n      <Swiper\r\n        allowSlideNext={activeIndex <= (data?.length || 0)}\r\n        allowSlidePrev={activeIndex >= 1}\r\n        spaceBetween={96}\r\n        slidesPerView={1}\r\n        onUpdate={(swiper) => onSwiper(swiper)}\r\n        onSwiper={(swiper) => onSwiper(swiper)}\r\n        onSlideChange={(swiper) => onSlideChange(swiper)}\r\n        onTouchEnd={(swiper: SwiperType) => handleSwipe(swiper)}>\r\n        {data?.map((slide, index) => (\r\n          <SwiperSlide key={index}>\r\n            <SlideFade\r\n              in={activeIndex - 1 === index}\r\n              offsetY='10vh'\r\n              delay={handleParseDurationForFramer(handleReturnNumberFromString(theme.transition.duration.slow, 'ms'))}\r\n              unmountOnExit>\r\n              <Center width='100vw' height='100vh' position='relative'>\r\n                {renderSlide(slide)}\r\n              </Center>\r\n            </SlideFade>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n\r\n      <Navigation current={activeIndex} total={data?.length || 0} onNavigation={onNavigation} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Viewer;\r\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Modal, ModalContent, ModalBody } from '@chakra-ui/react';\r\nimport { Swiper } from 'swiper';\r\n\r\nimport Actions from './components/Actions';\r\nimport BackdropViewer from './components/BackdropViewer';\r\nimport Gallery from './components/Gallery';\r\nimport PhotoViewer from './components/PhotoViewer';\r\nimport VideoViewer from './components/VideoViewer';\r\nimport Viewer from './components/Viewer';\r\nimport { MediaViewerProps, NavigationDirection, MediaViewerType, MediaViewerData } from './types';\r\n\r\nconst MediaViewer = (props: MediaViewerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isGalleryOpen, onOpen: onGalleryOpen, onClose: onGalleryClose } = useDisclosure();\r\n\r\n  const { isOpen, name, selected, photos, backdrops, videos, mediaType, onClose } = props;\r\n\r\n  const [swiper, setSwiper] = useState<Swiper>();\r\n\r\n  const [activePath, setActivePath] = useState<string>('');\r\n  const [activeType, setActiveType] = useState<MediaViewerType>();\r\n\r\n  const data: MediaViewerData[] = [...(photos || []), ...(backdrops || []), ...(videos || [])];\r\n\r\n  /**\r\n   * This method will slide to the image\r\n   *\r\n   * @param index Number - The index of the image in the list\r\n   */\r\n  const handleSlideTo = useCallback(\r\n    (index: number) => {\r\n      if (swiper) {\r\n        swiper.slideTo(index, 0);\r\n      }\r\n    },\r\n    [swiper]\r\n  );\r\n\r\n  /**\r\n   * This method will either slide to the previous slide or to the next slide depending on the direction passed\r\n   *\r\n   * @param direction - Either 'prev' or 'next'\r\n   */\r\n  const handleNavigation = useCallback(\r\n    (direction: NavigationDirection): void => {\r\n      switch (direction) {\r\n        case 'prev': {\r\n          if (swiper?.allowSlidePrev || false) {\r\n            swiper.slidePrev(500);\r\n          }\r\n          break;\r\n        }\r\n        case 'next': {\r\n          if (swiper?.allowSlideNext || false) {\r\n            swiper.slideNext(500);\r\n          }\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [swiper]\r\n  );\r\n\r\n  /**\r\n   * This method will set the active path and active type on every change\r\n   */\r\n  const handleSlideChange = useCallback(\r\n    (swiper: Swiper) => {\r\n      const item = data.find((_item, index) => index === swiper.activeIndex);\r\n      const path = item?.file_path || item?.key || '';\r\n      const type = photos?.some((image) => image.file_path === path)\r\n        ? 'photo'\r\n        : backdrops?.some((image) => image.file_path === path)\r\n        ? 'backdrop'\r\n        : videos?.some((video) => video.key === path)\r\n        ? 'video'\r\n        : '';\r\n\r\n      if (path) {\r\n        setActivePath(path);\r\n      }\r\n\r\n      if (type) {\r\n        setActiveType(type);\r\n      }\r\n    },\r\n    [data, photos, backdrops, videos, setActivePath, setActiveType]\r\n  );\r\n\r\n  /**\r\n   * This method will close the gallery and display the file\r\n   *\r\n   * @param path - The URL path\r\n   * @param type - The type of path\r\n   */\r\n  const handleGalleryClick = (path: string, type: MediaViewerType): void => {\r\n    const index = data.findIndex((item) => item.file_path === path || item.key === path);\r\n\r\n    setActivePath(path);\r\n    setActiveType(type);\r\n\r\n    handleSlideTo(index);\r\n\r\n    onGalleryClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiper && selected && selected.asset && selected.type && data && data.length > 0) {\r\n      setActivePath(selected.asset);\r\n      setActiveType(selected.type);\r\n\r\n      handleSlideTo(data?.findIndex((item) => item.file_path === selected.asset || item.key === selected.asset) || 0);\r\n    }\r\n  }, [swiper, selected]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        blockScrollOnMount\r\n        preserveScrollBarGap\r\n        motionPreset='scale'\r\n        scrollBehavior='inside'\r\n        size='full'>\r\n        <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n          <ModalBody position='relative' p={0}>\r\n            {/* Actions */}\r\n            <Actions activeType={activeType} onClose={onClose} onGalleryClick={() => onGalleryOpen()} />\r\n\r\n            {/* Photo, Backdrop & Video Viewer */}\r\n            <Viewer\r\n              renderSlide={(slide: MediaViewerData) =>\r\n                activeType === 'photo' ? (\r\n                  <PhotoViewer name={name} path={slide.file_path} mediaType={mediaType} />\r\n                ) : activeType === 'backdrop' ? (\r\n                  <BackdropViewer name={name} path={slide.file_path} mediaType={mediaType} />\r\n                ) : (\r\n                  <VideoViewer path={slide.key} />\r\n                )\r\n              }\r\n              isGalleryOpen={isGalleryOpen}\r\n              activePath={activePath}\r\n              data={data}\r\n              onSwiper={(swiper) => setSwiper(swiper)}\r\n              onSlideChange={handleSlideChange}\r\n              onNavigation={handleNavigation}\r\n              onClose={onClose}\r\n            />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Gallery\r\n        isOpen={isGalleryOpen}\r\n        activePath={activePath}\r\n        name={name}\r\n        photos={photos}\r\n        backdrops={backdrops}\r\n        videos={videos}\r\n        mediaType={mediaType}\r\n        onClick={handleGalleryClick}\r\n        onClose={onGalleryClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaViewer;\r\n","import { handleReturnNumberFromString } from '../../../../common/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  speed: handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 750\r\n};\r\n","import { ColorMode } from '../../../../common/types/types';\r\nimport { Color } from '../../../../theme/types';\r\n\r\nexport const handleReturnColors = (type: 'start' | 'end', color: Color, colorMode: ColorMode): string => {\r\n  switch (color) {\r\n    default:\r\n      return colorMode === 'light'\r\n        ? type === 'start'\r\n          ? 'gray.200'\r\n          : 'gray.400'\r\n        : type === 'start'\r\n        ? 'gray.700'\r\n        : 'gray.500';\r\n  }\r\n};\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport { handleReturnNumberFromString } from '../../common/utils';\r\nimport { Theme } from '../../theme/types';\r\nimport commonProps from './common/props';\r\nimport { handleReturnColors } from './common/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', isLoaded = false, type = 'default', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      isLoaded={isLoaded}\r\n      fadeDuration={\r\n        type === 'default' && !isLoaded\r\n          ? handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 250\r\n          : 0\r\n      }\r\n      startColor={handleReturnColors('start', color, colorMode)}\r\n      endColor={handleReturnColors('end', color, colorMode)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, SlideFade, useTheme } from '@chakra-ui/react';\r\n\r\nimport { handleReturnNumberFromString } from '../../../common/utils';\r\nimport { Theme } from '../../../theme/types';\r\nimport Skeleton from '../../Skeleton';\r\nimport commonProps from '../common/props';\r\nimport { handleReturnColors } from '../common/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, color = 'gray', isLoaded = false, offsetY, ...rest } = props;\r\n\r\n  return (\r\n    <Skeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      isLoaded={isLoaded}\r\n      type='text'\r\n      startColor={handleReturnColors('start', color, colorMode)}\r\n      endColor={handleReturnColors('end', color, colorMode)}>\r\n      <SlideFade\r\n        in={isLoaded}\r\n        offsetY={offsetY}\r\n        delay={handleReturnNumberFromString(theme.transition.duration['faster'], 'ms') / 250}>\r\n        {children}\r\n      </SlideFade>\r\n    </Skeleton>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useBoolean, VStack, Text, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useWindowSize, useElementSize } from '../../../../common/hooks';\r\nimport { handleFormatIntoParagraphs } from '../../../../common/utils';\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { BioProps } from './types';\r\n\r\nconst Bio = ({ biography, isLoading = false }: BioProps): ReactElement => {\r\n  const biographyRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [isExpanded, setIsExpanded] = useBoolean();\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { height: elementHeight } = useElementSize(biographyRef);\r\n\r\n  const [height, setHeight] = useState<number>();\r\n\r\n  const handleBiographyRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        setHeight(ref.offsetHeight);\r\n      } else {\r\n        handleBiographyRef(biographyRef.current);\r\n      }\r\n    }, 250),\r\n    [biographyRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleBiographyRef(biographyRef.current);\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { pb: 1.5 },\r\n        body: { pt: 1.5 }\r\n      }}\r\n      isFullWidth\r\n      px={2}\r\n      pt={1.5}\r\n      pb={2}>\r\n      {{\r\n        header: {\r\n          title: 'Biography',\r\n          actions: (\r\n            <ScaleFade in={(height || 0) > 44} unmountOnExit>\r\n              <Button isDisabled={isLoading} onClick={() => setIsExpanded.toggle()} size='sm' variant='text'>\r\n                {isExpanded ? 'Collapse' : 'Expand'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: !isLoading ? (\r\n          <Collapse startingHeight={(height || 44) >= 44 ? 44 : elementHeight || 44} in={isExpanded}>\r\n            <VStack ref={biographyRef} width='100%' alignItems='flex-start' spacing={2}>\r\n              {handleFormatIntoParagraphs(biography).map((paragraph, index) => (\r\n                <Text\r\n                  key={index}\r\n                  align='left'\r\n                  color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                  fontSize='md'\r\n                  fontWeight='medium'>\r\n                  {paragraph}\r\n                </Text>\r\n              ))}\r\n            </VStack>\r\n          </Collapse>\r\n        ) : (\r\n          <VStack width='100%' spacing={1}>\r\n            {_.range(0, 3).map((_dummy, index) => (\r\n              <SkeletonText key={index} width='100%' offsetY={6} isLoaded={!isLoading}>\r\n                <Text align='left' fontSize='xs'>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                  dolore magna aliqua.\r\n                </Text>\r\n              </SkeletonText>\r\n            ))}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import { ReactElement } from 'react';\r\n\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = (props: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const { renderButton, mediaType, mediaItem } = props;\r\n\r\n  const isLiked: boolean =\r\n    liked && mediaItem\r\n      ? mediaType === 'movie'\r\n        ? liked.movies.some((movie) => movie.id === mediaItem.id)\r\n        : mediaType === 'tv'\r\n        ? liked.tv.some((show) => show.id === mediaItem.id)\r\n        : liked.people.some((person) => person.id === mediaItem.id)\r\n      : false;\r\n\r\n  const handleRemoveLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        updatedLiked.movies = updatedLiked.movies.filter((movie) => movie.id !== mediaItem?.id);\r\n        break;\r\n      case 'tv':\r\n        updatedLiked.tv = updatedLiked.tv.filter((show) => show.id !== mediaItem?.id);\r\n        break;\r\n      case 'person':\r\n        updatedLiked.people = updatedLiked.people.filter((person) => person.id !== mediaItem?.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  const handleLike = (): void => {\r\n    const updatedLiked = { ...liked };\r\n\r\n    switch (mediaType) {\r\n      case 'movie': {\r\n        const movieMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.movies = [...updatedLiked.movies, movieMediaItem];\r\n        break;\r\n      }\r\n      case 'tv': {\r\n        const showMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.tv = [...updatedLiked.tv, showMediaItem];\r\n        break;\r\n      }\r\n      case 'person': {\r\n        const personMediaItem: any = { ...mediaItem, dateAdded: moment(new Date()).toISOString() };\r\n\r\n        updatedLiked.people = [...updatedLiked.people, personMediaItem];\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(setLiked({ ...updatedLiked }));\r\n  };\r\n\r\n  return renderButton({\r\n    isLiked,\r\n    onClick: isLiked ? () => handleRemoveLike() : () => handleLike()\r\n  });\r\n};\r\n\r\nexport default Like;\r\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { BackgroundProps } from './types';\r\n\r\nconst Background = ({ children }: BackgroundProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const location = useLocation();\r\n\r\n  const [gradient, setGradient] = useState<string>();\r\n\r\n  /**\r\n   * This method will return 2 colors to be used in a gradient\r\n   */\r\n  const handleReturnGradient = useCallback(\r\n    _.debounce(() => {\r\n      const random: number = Math.floor(Math.random() * 9);\r\n      let gradient = '';\r\n\r\n      switch (random) {\r\n        case 0:\r\n          gradient = 'red.200, red.500';\r\n          break;\r\n        case 1:\r\n          gradient = 'orange.200, orange.500';\r\n          break;\r\n        case 2:\r\n          gradient = 'yellow.200, yellow.500';\r\n          break;\r\n        case 3:\r\n          gradient = 'green.200, green.500';\r\n          break;\r\n        case 4:\r\n          gradient = 'teal.200, teal.500';\r\n          break;\r\n        case 5:\r\n          gradient = 'blue.200, blue.500';\r\n          break;\r\n        case 6:\r\n          gradient = 'cyan.200, cyan.500';\r\n          break;\r\n        case 7:\r\n          gradient = 'purple.200, purple.500';\r\n          break;\r\n        default:\r\n          gradient = 'pink.200, pink.500';\r\n          break;\r\n      }\r\n\r\n      setGradient(gradient);\r\n    }, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => handleReturnGradient(), [location]);\r\n\r\n  return (\r\n    <Box\r\n      width='100%'\r\n      height={['150px', '150px', '200px', '250px', '300px', '350px']}\r\n      position='relative'\r\n      bgGradient={`linear(to-r, ${gradient})`}\r\n      borderRadius='md'>\r\n      <Box position='absolute' top={theme.space[2]} right={theme.space[2]}>\r\n        {children.socials}\r\n      </Box>\r\n      <Box\r\n        position='absolute'\r\n        bottom={['-37.5px', '-37.5px', '-50px', '-62.5px', '-75px', '-87.5px']}\r\n        left={['37.5px', '37.5px', '50px', '62.5px', '75px', '87.5px']}>\r\n        {children.poster}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text, ScaleFade } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { DateProps } from './types';\r\n\r\nconst PersonDate = (props: DateProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { birthday, place_of_birth, deathday, isLoading = false, isError = false } = props;\r\n\r\n  return (\r\n    <ScaleFade in={isLoading ? true : !isError && (birthday || '')?.length > 0} unmountOnExit>\r\n      <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n          {`Born on ${moment(birthday || '', 'YYYY-MM-DD').format('LL')}${\r\n            place_of_birth ? ` in ${place_of_birth}` : ''\r\n          }${deathday ? ` - ${moment(deathday || '', 'YYYY-MM-DD').format('LL')}` : ''} (${moment(\r\n            deathday || new Date()\r\n          ).diff(moment(birthday || '', 'YYYY-MM-DD'), 'years')} years old)`}\r\n        </Text>\r\n      </SkeletonText>\r\n    </ScaleFade>\r\n  );\r\n};\r\n\r\nexport default PersonDate;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ChevronLeftOutlined as ChevronLeftOutlinedIcon,\r\n  ChevronRightOutlined as ChevronRightOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport _ from 'lodash';\r\n\r\nimport useInterval from '../../../../common/hooks/useInterval';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport useStyles from './styles';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { direction, isDisabled = false, reset = false, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Center\r\n      width='auto'\r\n      position='absolute'\r\n      left={direction === 'left' ? 0 : undefined}\r\n      right={direction === 'right' ? 0 : undefined}\r\n      zIndex={1}\r\n      backgroundColor='transparent'\r\n      _after={direction === 'left' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}\r\n      _before={direction === 'right' ? { ..._.merge(style.arrow, style[colorMode][direction]) } : undefined}>\r\n      <ScaleFade in={!isDisabled} unmountOnExit>\r\n        <Center backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}>\r\n          <IconButton\r\n            aria-label={`Scroll ${direction}`}\r\n            icon={direction === 'left' ? ChevronLeftOutlinedIcon : ChevronRightOutlinedIcon}\r\n            onClick={(event: Event) => handleOnClick(event)}\r\n            onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n            onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Center>\r\n      </ScaleFade>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { ArrowProps } from './types';\r\n\r\ntype DirectionStyle = {\r\n  left: Style;\r\n  right: Style;\r\n};\r\n\r\ntype ArrowStyle = {\r\n  arrow: Style;\r\n  light: DirectionStyle;\r\n  dark: DirectionStyle;\r\n};\r\n\r\nexport default (theme: Theme, { isDisabled = false }: ArrowProps): ArrowStyle => ({\r\n  arrow: {\r\n    content: '\"\"',\r\n\r\n    width: '30px',\r\n    height: '30px',\r\n\r\n    display: 'block',\r\n\r\n    pointerEvents: 'none'\r\n  },\r\n  light: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[50]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    left: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to right, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    },\r\n    right: {\r\n      background: !isDisabled\r\n        ? `linear-gradient(to left, ${theme.colors.gray[900]} 25%, rgba(0, 0, 0, 0) 75%)`\r\n        : 'transparent'\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize } from '../../common/hooks';\r\nimport Arrow from './components/Arrow';\r\nimport { HorizontalScrollProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalScroll = (props: HorizontalScrollProps): ReactElement => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, width, spacing, isLoading = false } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleContainerRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleContainerRef(containerRef.current);\r\n      }\r\n    }, 50),\r\n    [containerRef, setScrollButtons, setResetScrollButtons]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (containerRef && containerRef.current) {\r\n        if (direction === 'left') {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft - 10;\r\n        } else {\r\n          containerRef.current.scrollLeft = containerRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [containerRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleContainerRef(containerRef.current);\r\n  }, [windowWidth, isLoading]);\r\n\r\n  return (\r\n    <HStack width={width || '100%'} maxWidth={width || '100%'} position='relative' spacing={0}>\r\n      {/* Left Arrow Button */}\r\n      <Arrow\r\n        direction='left'\r\n        isDisabled={scrollButtons.left}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Scrollable content */}\r\n      <HStack\r\n        ref={containerRef}\r\n        width='100%'\r\n        maxWidth='100%'\r\n        overflowX='auto'\r\n        spacing={spacing ? spacing : 1}\r\n        onLoad={() => handleContainerRef(containerRef.current)}\r\n        onScroll={() => handleContainerRef(containerRef.current)}\r\n        sx={{\r\n          // CSS to hide scrollbar\r\n          'scrollbarWidth': 'none',\r\n          '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n          }\r\n        }}>\r\n        {children}\r\n      </HStack>\r\n\r\n      {/* Right Arrow Button */}\r\n      <Arrow\r\n        direction='right'\r\n        isDisabled={scrollButtons.right}\r\n        reset={resetScrollButtons}\r\n        onScrollClick={handleScrollClick}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalScroll;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { handleReturnDummyWidths } from '../../../../../../common/utils';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { DepartmentsProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(200, 4);\r\n\r\nconst Departments = (props: DepartmentsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { departments, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalScroll isLoading={isLoading}>\r\n      <HStack\r\n        width='100%'\r\n        maxWidth='100%'\r\n        divider={\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' mx={0.75}>\r\n            •\r\n          </Text>\r\n        }>\r\n        {[...(!isLoading ? departments : _.range(0, 4))].map((department, index) => (\r\n          <SkeletonText\r\n            key={index}\r\n            width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'}\r\n            offsetY={9.5}\r\n            isLoaded={!isLoading}>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='md'\r\n              whiteSpace='nowrap'>\r\n              {typeof department !== 'number' ? department : 'Lorem'}\r\n            </Text>\r\n          </SkeletonText>\r\n        ))}\r\n      </HStack>\r\n    </HorizontalScroll>\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, useBoolean } from '@chakra-ui/react';\r\n\r\nimport ClickableImage from '../../../../../../components/Clickable/Image';\r\nimport Image from '../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../components/Skeleton';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { name, path, isLoading = false, isError = false, onClickPoster } = props;\r\n\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <ClickableImage\r\n      width={isSm ? '100%' : ['125px', '125px', '175px', '225px', '275px', '325px']}\r\n      border={isSm ? 'none' : '4px'}\r\n      borderColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRadius={isSm ? 'base' : 'full'}\r\n      ratio={1 / 1}\r\n      isDisabled={isLoading || isError || isImageError}\r\n      onClick={path ? () => onClickPoster(path) : undefined}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius={isSm ? 'base' : 'full'}>\r\n        <Image\r\n          width='100%'\r\n          alt={`${name ? `\"${name}\"` : ''} profile poster`}\r\n          mediaType='person'\r\n          onError={() => setIsImageError.on()}\r\n          onLoad={() => setIsImageError.off()}\r\n          src={path || ''}\r\n          size={{\r\n            thumbnail: 'w45',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </ClickableImage>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link as CUILink, Box, Icon } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { LinkProps } from './types';\r\n\r\nconst Link = (props: LinkProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const { name, type, href, icon, isDisabled = false } = props;\r\n\r\n  const iconComponent = (\r\n    <Skeleton isLoaded={!isDisabled}>\r\n      <Icon as={icon} sx={{ ..._.merge(style.common.icon) }} />\r\n    </Skeleton>\r\n  );\r\n\r\n  return !isDisabled ? (\r\n    <CUILink\r\n      aria-label={`${name ? `\"${name}\"` : ''} ${type} link`}\r\n      href={!isDisabled ? href : ''}\r\n      isExternal\r\n      sx={{ ..._.merge(style.common.link, style[colorMode]) }}>\r\n      {iconComponent}\r\n    </CUILink>\r\n  ) : (\r\n    <Box p={1}>{iconComponent}</Box>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { LinkProps } from './types';\r\n\r\ntype LinkStyle = {\r\n  common: {\r\n    link: Style;\r\n    icon: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color, isDisabled = false }: LinkProps): LinkStyle => ({\r\n  common: {\r\n    link: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'minWidth': 'auto',\r\n      'minHeight': 'auto',\r\n      'maxWidth': 'none',\r\n      'maxHeight': 'none',\r\n\r\n      'display': 'flex',\r\n      'alignItems': 'center',\r\n      'justifyContent': 'center',\r\n\r\n      'padding': theme.space[1],\r\n\r\n      'opacity': !isDisabled ? 1 : 0.5,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '& svg': {\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'block',\r\n\r\n      fontSize: `${theme.fontSizes['2xl']} !important`\r\n    }\r\n  },\r\n  light: {\r\n    'color': 'gray.50',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  },\r\n  dark: {\r\n    'color': 'gray.900',\r\n\r\n    '&:hover': {\r\n      color\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useTheme } from '@chakra-ui/react';\r\nimport { Facebook as FacebookIcon, Twitter as TwitterIcon, Instagram as InstagramIcon } from '@material-ui/icons';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Link from '../Link';\r\nimport { LinksProps } from './types';\r\n\r\nconst ImdbIcon = (): ReactElement => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      aria-hidden='true'\r\n      role='img'\r\n      width='24px'\r\n      height='24px'\r\n      preserveAspectRatio='xMidYMid meet'\r\n      viewBox='0 0 448 512'>\r\n      <path\r\n        d='M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9c1.7 7.6 1.4 16.3 1.4 24.4c0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9c-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2c21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7c-6 0-4.9 8.9-4.9 12.7c0 .6-1.1 39.6 1.1 44.7c.8 1.6 2.2 2.4 3.8 2.4c7.8 0 6.2-9 6.2-14.4z'\r\n        fill='currentColor'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Links = (props: LinksProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { socials, name, isLoading = false } = props;\r\n\r\n  return (\r\n    <>\r\n      {/* Facebook */}\r\n      {socials?.facebook_id ? (\r\n        <Link\r\n          color='#4267B2'\r\n          name={name}\r\n          href={`https://www.facebook.com/${socials.facebook_id}`}\r\n          type='Facebook'\r\n          icon={FacebookIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Twitter */}\r\n      {socials?.twitter_id ? (\r\n        <Link\r\n          color='#1DA1F2'\r\n          name={name}\r\n          href={`https://www.twitter.com/${socials.twitter_id}`}\r\n          type='Twitter'\r\n          icon={TwitterIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* Instagram */}\r\n      {socials?.instagram_id ? (\r\n        <Link\r\n          color={colorMode === 'light' ? theme.colors.gray[900] : theme.colors.gray[50]}\r\n          name={name}\r\n          href={`https://www.instagram.com/${socials.instagram_id}`}\r\n          type='Instagram'\r\n          icon={InstagramIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      {/* IMDB */}\r\n      {socials?.imdb_id ? (\r\n        <Link\r\n          color='#F5C518'\r\n          name={name}\r\n          href={`https://www.imdb.com/name/${socials.imdb_id}`}\r\n          type='IMDB'\r\n          icon={ImdbIcon}\r\n          isDisabled={isLoading}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, HStack, VStack } from '@chakra-ui/react';\r\n\r\nimport Links from './components/Links';\r\nimport { SocialsProps } from './types';\r\n\r\nconst Socials = (props: SocialsProps): ReactElement => {\r\n  const [isMd] = useMediaQuery('(max-width: 768px)');\r\n  const { orientation: orientationProp = 'vertical', ...rest } = props;\r\n\r\n  const orientation = isMd ? 'horizontal' : orientationProp;\r\n\r\n  return orientation === 'vertical' ? (\r\n    <VStack spacing={0}>\r\n      <Links {...rest} />\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' spacing={0}>\r\n      <Links {...rest} />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Like from '../../../../components/Like';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport Background from './components/Background';\r\nimport Date from './components/Date';\r\nimport Departments from './components/Departments';\r\nimport Poster from './components/Poster';\r\nimport Socials from './components/Socials';\r\nimport { DetailsProps } from './types';\r\n\r\nconst width = [\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 162.5px)',\r\n  'calc(100% - 225px)',\r\n  'calc(100% - 287.5px)',\r\n  'calc(100% - 350px)',\r\n  'calc(100% - 412.5px)'\r\n];\r\nconst left = ['162.5px', '162.5px', '225px', '287.5px', '350px', '412.5px'];\r\n\r\nconst Details = (props: DetailsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { person, departments, socials, isLoading = false, isError = false, onClickPoster } = props;\r\n\r\n  return (\r\n    <Card isFullWidth p={2}>\r\n      {{\r\n        body: (\r\n          <VStack width='100%' alignItems='stretch' spacing={2}>\r\n            {isSm ? (\r\n              <Poster\r\n                name={person?.name}\r\n                path={person?.profile_path}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n                onClickPoster={onClickPoster}\r\n              />\r\n            ) : (\r\n              <Background alt={`${person?.name || ''} background`} size='780'>\r\n                {{\r\n                  poster: (\r\n                    <Poster\r\n                      name={person?.name}\r\n                      path={person?.profile_path}\r\n                      isLoading={isLoading}\r\n                      isError={isError}\r\n                      onClickPoster={onClickPoster}\r\n                    />\r\n                  ),\r\n\r\n                  socials: <Socials socials={socials} name={person?.name} isLoading={isLoading} />\r\n                }}\r\n              </Background>\r\n            )}\r\n\r\n            <VStack\r\n              width={isSm ? '100%' : width}\r\n              maxWidth={isSm ? '100%' : width}\r\n              position='relative'\r\n              left={isSm ? 0 : left}\r\n              alignItems='flex-start'\r\n              spacing={2}>\r\n              <VStack width='100%' maxWidth='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n                <SkeletonText offsetY={isSm ? 12 : 18} isLoaded={!isLoading}>\r\n                  <Text\r\n                    align='left'\r\n                    color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                    fontSize={isSm ? '2xl' : '4xl'}\r\n                    fontWeight='bold'>\r\n                    {person?.name || 'Unknown'}\r\n                  </Text>\r\n                </SkeletonText>\r\n\r\n                <Departments departments={departments} isLoading={isLoading} />\r\n              </VStack>\r\n\r\n              <Date\r\n                birthday={person?.birthday}\r\n                place_of_birth={person?.place_of_birth}\r\n                deathday={person?.deathday}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n              />\r\n\r\n              <ScaleFade in={!isError} unmountOnExit>\r\n                <Like\r\n                  renderButton={({ isLiked, onClick }) => (\r\n                    <Button\r\n                      color={isLiked ? 'red' : 'gray'}\r\n                      isFullWidth={isSm}\r\n                      isDisabled={isLoading || !person}\r\n                      leftIcon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n                      onClick={() => onClick()}\r\n                      size='md'\r\n                      variant='outlined'>\r\n                      Like\r\n                    </Button>\r\n                  )}\r\n                  mediaType='person'\r\n                  mediaItem={person}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","export default __webpack_public_path__ + \"static/media/blue.1d509f7b.svg\";","export default __webpack_public_path__ + \"static/media/cyan.c2fe5dfc.svg\";","export default __webpack_public_path__ + \"static/media/green.3e21cb04.svg\";","export default __webpack_public_path__ + \"static/media/orange.dee38c41.svg\";","export default __webpack_public_path__ + \"static/media/pink.02d59418.svg\";","export default __webpack_public_path__ + \"static/media/purple.f3183aac.svg\";","export default __webpack_public_path__ + \"static/media/teal.9e1779fc.svg\";","export default __webpack_public_path__ + \"static/media/yellow.175e6d76.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as empty from '../../common/assets/illustrations/empty';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return empty.default.blue;\r\n      case 'cyan':\r\n        return empty.default.cyan;\r\n      case 'green':\r\n        return empty.default.green;\r\n      case 'orange':\r\n        return empty.default.orange;\r\n      case 'pink':\r\n        return empty.default.pink;\r\n      case 'purple':\r\n        return empty.default.purple;\r\n      case 'teal':\r\n        return empty.default.teal;\r\n      case 'yellow':\r\n        return empty.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Empty illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/blue.8d4e0da3.svg\";","export default __webpack_public_path__ + \"static/media/cyan.1082f641.svg\";","export default __webpack_public_path__ + \"static/media/green.1fbf3586.svg\";","export default __webpack_public_path__ + \"static/media/orange.085621da.svg\";","export default __webpack_public_path__ + \"static/media/pink.83cbc8fa.svg\";","export default __webpack_public_path__ + \"static/media/purple.aab5c0f3.svg\";","export default __webpack_public_path__ + \"static/media/teal.be7f7952.svg\";","export default __webpack_public_path__ + \"static/media/yellow.e55569bc.svg\";","import blue from './blue.svg';\r\nimport cyan from './cyan.svg';\r\nimport green from './green.svg';\r\nimport orange from './orange.svg';\r\nimport pink from './pink.svg';\r\nimport purple from './purple.svg';\r\nimport teal from './teal.svg';\r\nimport yellow from './yellow.svg';\r\n\r\nexport default {\r\n  blue,\r\n  cyan,\r\n  green,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  teal,\r\n  yellow\r\n};\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useBreakpointValue, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport * as error from '../../common/assets/illustrations/error';\r\nimport { useSelector } from '../../common/hooks';\r\nimport Card from '../Card';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const maxWidth = useBreakpointValue({\r\n    'base': '75%',\r\n    'sm': '75%',\r\n    'md': '50%',\r\n    'lg': '50%',\r\n    'xl': '30%',\r\n    '2xl': '30%'\r\n  });\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate Illustration depending on the color selected\r\n   * @returns Illustration path\r\n   */\r\n  const handleReturnIllustration = (): string => {\r\n    switch (color) {\r\n      case 'blue':\r\n        return error.default.blue;\r\n      case 'cyan':\r\n        return error.default.cyan;\r\n      case 'green':\r\n        return error.default.green;\r\n      case 'orange':\r\n        return error.default.orange;\r\n      case 'pink':\r\n        return error.default.pink;\r\n      case 'purple':\r\n        return error.default.purple;\r\n      case 'teal':\r\n        return error.default.teal;\r\n      case 'yellow':\r\n        return error.default.yellow;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <Card isFullWidth variant={variant} p={handleReturnPadding()}>\r\n        {{\r\n          body: (\r\n            <VStack width='100%' spacing={2}>\r\n              {hasIllustration ? (\r\n                <Image maxWidth={maxWidth} alt='Error illustration' src={handleReturnIllustration()} />\r\n              ) : null}\r\n              {label || description ? (\r\n                <VStack spacing={0}>\r\n                  {label ? (\r\n                    <Text\r\n                      align='center'\r\n                      fontSize='md'\r\n                      fontWeight='semibold'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n                      {label}\r\n                    </Text>\r\n                  ) : null}\r\n                  {description ? (\r\n                    <Text align='center' fontSize='xs' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n                      {description}\r\n                    </Text>\r\n                  ) : null}\r\n                </VStack>\r\n              ) : null}\r\n              {button || null}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Badge as CUIBadge } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../theme/types';\r\nimport { BadgeProps } from './types';\r\n\r\nconst Badge = (props: BadgeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, color = 'gray', size = 'sm', ...rest } = props;\r\n\r\n  const handleReturnColor = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '900' : '50'}`;\r\n      default:\r\n        return `${color}.600`;\r\n    }\r\n  };\r\n\r\n  const handleReturnBackground = (): string => {\r\n    switch (color) {\r\n      case 'gray':\r\n        return `gray.${colorMode === 'light' ? '200' : '700'}`;\r\n      default:\r\n        return `${color}.50`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIBadge\r\n      {...rest}\r\n      color={handleReturnColor()}\r\n      background={handleReturnBackground()}\r\n      variant='subtle'\r\n      fontSize={size === 'xs' ? '10px' : size === 'sm' ? 'xs' : size === 'md' ? 'sm' : 'lg'}\r\n      fontWeight='bold'\r\n      lineHeight='none'\r\n      px={size === 'xs' || size === 'sm' ? 0.5 : size === 'md' ? 0.75 : 1}\r\n      py={size === 'xs' || size === 'sm' ? 0.25 : size === 'md' ? 0.5 : 0.5}\r\n      sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n      {label}\r\n    </CUIBadge>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, VStack, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport { useSelector } from '../../../../../../../../../../common/hooks';\r\nimport { handleReturnColor, handleReturnDate } from '../../../../../../../../../../common/utils';\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Link from '../../../../../../../../../../components/Clickable/Link';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\nimport { MediaItemProps } from './types';\r\n\r\nconst MediaItem = (props: MediaItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, mediaType, title, subtitle, date } = props;\r\n\r\n  /**\r\n   * This method will check if the media item's date is in the future or its already passed\r\n   *\r\n   * @param date - String\r\n   * @returns - Boolean if media item's date is in the future\r\n   */\r\n  const handleIfDateIsFuture = (date: string): boolean => {\r\n    return moment(new Date()).isBefore(moment(date, 'YYYY-MM-DD'));\r\n  };\r\n\r\n  return (\r\n    <HStack justifyContent='space-between' width='100%' spacing={2}>\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <HStack spacing={2}>\r\n          <Link to={{ pathname: `/${mediaType}/${id}` }}>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={isSm ? 'sm' : 'md'}\r\n              fontWeight='semibold'\r\n              sx={{\r\n                transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n              }}\r\n              _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n              {isSm ? `${title} ` : title}\r\n              {!date ? (\r\n                <Badge label='Announced' color={handleReturnColor(color)} size={isSm ? 'xs' : 'sm'} ml={isSm ? 0 : 1} />\r\n              ) : date && handleIfDateIsFuture(date) ? (\r\n                <Badge\r\n                  label='In Production'\r\n                  color={handleReturnColor(color)}\r\n                  size={isSm ? 'xs' : 'sm'}\r\n                  ml={isSm ? 0 : 1}\r\n                />\r\n              ) : null}\r\n            </Text>\r\n          </Link>\r\n        </HStack>\r\n\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n\r\n      {date ? (\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize={isSm ? 'xs' : 'sm'}>\r\n          {handleReturnDate(date || '', 'year')}\r\n        </Text>\r\n      ) : null}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport sort from 'array-sort';\r\n\r\nimport { CastMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastMovies = ({ movies }: { movies: CastMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CastMovieCredit[] => {\r\n    const withDate: CastMovieCredit[] = sort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CastMovieCredit[] = sort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.character ? `As ${movie.character}` : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastMovies;\r\n","import { ReactElement } from 'react';\r\n\r\nimport sort from 'array-sort';\r\n\r\nimport { CastTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CastTV = ({ tv }: { tv: CastTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CastTVCredit[] => {\r\n    const withoutDate: CastTVCredit[] = sort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CastTVCredit[] = sort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${\r\n            show.character ? show.character : 'Unknown'\r\n          }`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastTV;\r\n","import { ReactElement } from 'react';\r\n\r\nimport sort from 'array-sort';\r\n\r\nimport { CrewMovieCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewMovies = ({ movies }: { movies: CrewMovieCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with movies that contain a date\r\n   * 2: A list with movies that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'release_date' and sort the second by 'title',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of movies\r\n   */\r\n  const handleSort = (): CrewMovieCredit[] => {\r\n    const withDate: CrewMovieCredit[] = sort(\r\n      movies.filter((movie) => movie.release_date),\r\n      'release_date',\r\n      { reverse: true }\r\n    );\r\n    const withoutDate: CrewMovieCredit[] = sort(\r\n      movies.filter((movie) => !movie.release_date),\r\n      'title',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((movie) => (\r\n        <MediaItem\r\n          key={movie.id}\r\n          id={movie.id}\r\n          mediaType='movie'\r\n          title={movie.title}\r\n          subtitle={movie.job ? movie.job : 'Unknown'}\r\n          date={movie.release_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewMovies;\r\n","import { ReactElement } from 'react';\r\n\r\nimport sort from 'array-sort';\r\n\r\nimport { CrewTVCredit } from '../../../../../../../../../../common/types/person';\r\nimport MediaItem from '../MediaItem';\r\n\r\nconst CrewTV = ({ tv }: { tv: CrewTVCredit[] }): ReactElement => {\r\n  /**\r\n   * This method will split the list into 2:\r\n   * 1: A list with tv shows that contain a date\r\n   * 2: A list with tv shows that don't contain a date\r\n   *\r\n   * It will sort the 1st list in desc by 'first_air_date' and sort the second by 'name',\r\n   * then it will combine both the lists together with the 2nd list being the first\r\n   *\r\n   * @returns - Array of tv shows\r\n   */\r\n  const handleSort = (): CrewTVCredit[] => {\r\n    const withoutDate: CrewTVCredit[] = sort(\r\n      tv.filter((show) => !show.first_air_date),\r\n      'name',\r\n      { reverse: true }\r\n    );\r\n    const withDate: CrewTVCredit[] = sort(\r\n      tv.filter((show) => show.first_air_date),\r\n      'first_air_date',\r\n      { reverse: true }\r\n    );\r\n\r\n    return [...withoutDate, ...withDate];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handleSort().map((show) => (\r\n        <MediaItem\r\n          key={show.id}\r\n          id={show.id}\r\n          mediaType='tv'\r\n          title={show.name}\r\n          subtitle={`${show?.episode_count ? `${show.episode_count} episodes as` : 'As'} ${show.job}`}\r\n          date={show.first_air_date}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrewTV;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\n\r\nimport Badge from '../../../../../../../../../../components/Badge';\r\nimport Card from '../../../../../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst Panel = ({ children, title, total }: ListProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth variant='transparent'>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: <Badge label={String(total)} size={isSm ? 'sm' : 'md'} />\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            {children}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useMediaQuery,\r\n  AccordionItem as CUIAccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  VStack,\r\n  VisuallyHidden,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../../../common/utils';\r\nimport Badge from '../../../../../../../../components/Badge';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport CastMovies from './components/CastMovies';\r\nimport CastTV from './components/CastTV';\r\nimport CrewMovies from './components/CrewMovies';\r\nimport CrewTV from './components/CrewTV';\r\nimport Panel from './components/Panel';\r\nimport useStyles from './styles';\r\nimport { AccordionItemProps } from './types';\r\n\r\nconst AccordionItem = (props: AccordionItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const style = useStyles(theme, props);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, credits, isExpanded } = props;\r\n\r\n  return (\r\n    <CUIAccordionItem sx={{ ..._.merge(style.common.accordion, style[colorMode].accordion) }}>\r\n      <VisuallyHidden>\r\n        <span id={`${label.toLowerCase()}-accordion`} />\r\n      </VisuallyHidden>\r\n\r\n      <AccordionButton sx={{ ..._.merge(style.common.button) }}>\r\n        <Text\r\n          textAlign='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={isSm ? 'xl' : '2xl'}\r\n          fontWeight='semibold'>\r\n          {isSm ? `${label} ` : label}\r\n          <Badge\r\n            label={`${\r\n              (credits.cast?.movie?.length || 0) +\r\n              (credits.cast?.tv?.length || 0) +\r\n              (credits.crew?.movie?.length || 0) +\r\n              (credits.crew?.tv?.length || 0)\r\n            }`}\r\n            color={isExpanded ? handleReturnColor(color) : 'gray'}\r\n            size={isSm ? 'md' : 'lg'}\r\n            ml={isSm ? 0 : 2}\r\n          />\r\n        </Text>\r\n        <Icon\r\n          as={KeyboardArrowDownOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ ..._.merge(style.common.icon) }}\r\n        />\r\n      </AccordionButton>\r\n\r\n      <AccordionPanel sx={{ ..._.merge(style.common.panel) }}>\r\n        <VStack width='100%' spacing={6}>\r\n          {label === 'Actor' ? (\r\n            <>\r\n              {credits.cast?.movie && credits.cast?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.cast.movie.length}>\r\n                  <CastMovies movies={credits.cast.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.cast?.tv && credits.cast?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.cast.tv.length}>\r\n                  <CastTV tv={credits.cast.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {credits.crew?.movie && credits.crew?.movie.length > 0 ? (\r\n                <Panel title='Movies' total={credits.crew.movie.length}>\r\n                  <CrewMovies movies={credits.crew.movie} />\r\n                </Panel>\r\n              ) : null}\r\n\r\n              {credits.crew?.tv && credits.crew?.tv.length > 0 ? (\r\n                <Panel title='TV Shows' total={credits.crew.tv.length}>\r\n                  <CrewTV tv={credits.crew.tv} />\r\n                </Panel>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </VStack>\r\n      </AccordionPanel>\r\n    </CUIAccordionItem>\r\n  );\r\n};\r\n\r\nexport default AccordionItem;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { AccordionItemProps } from './types';\r\n\r\ntype Components = {\r\n  accordion: Style;\r\n  button: Style;\r\n  icon: Style;\r\n  panel: Style;\r\n};\r\n\r\ntype AccordionItemStyle = {\r\n  common: Components;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { isExpanded = false }: AccordionItemProps): AccordionItemStyle => ({\r\n  common: {\r\n    accordion: {\r\n      width: '100%',\r\n\r\n      border: 'none',\r\n      borderRadius: 'lg',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n\r\n      'padding': `${theme.space[1.5]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': isExpanded ? 'rotate(360deg)' : 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    panel: {\r\n      padding: `${theme.space[0.5]} ${theme.space[2]} ${theme.space[2]} ${theme.space[2]}`,\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.100' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.100',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    accordion: {\r\n      'backgroundColor': isExpanded ? 'gray.800' : 'transparent',\r\n\r\n      '&:hover': {\r\n        'backgroundColor': 'gray.800',\r\n\r\n        '& .chakra-accordion__button': {\r\n          backgroundColor: 'transparent'\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n          color: 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon } from '@chakra-ui/react';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { handleReturnDummyWidths } from '../../../../../../../../common/utils';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(300, 5);\r\n\r\nconst DummyAccordion = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const style = useStyles(theme);\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between' sx={{ ..._.merge(style.common.button) }}>\r\n      <Skeleton width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`} height='16px' />\r\n\r\n      <Icon\r\n        as={KeyboardArrowDownOutlinedIcon}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        sx={{ ..._.merge(style.common.icon) }}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DummyAccordion;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype DummyAccordionItemStyle = {\r\n  common: { button: Style; icon: Style };\r\n};\r\n\r\nexport default (theme: Theme): DummyAccordionItemStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': '100%',\r\n\r\n      'display': 'flex',\r\n      'justifyContent': 'space-between',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'border': 'none',\r\n      'borderRadius': 'lg',\r\n\r\n      'padding': `${theme.space[1]} ${theme.space[2]}`,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`,\r\n\r\n      '&:focus': { boxShadow: 'none' }\r\n    },\r\n    icon: {\r\n      'transform': 'rotate(270deg)',\r\n\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: 'xl',\r\n\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-in-out']}`\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Accordion as CUIAccordion, VStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport AccordionItem from './components/AccordionItem';\r\nimport DummyAccordionItem from './components/DummyAccordionItem';\r\nimport { AccordionProps } from './types';\r\n\r\nconst Accordion = (props: AccordionProps): ReactElement => {\r\n  const { departments, expanded, isLoading = false, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <CUIAccordion\r\n          width='100%'\r\n          allowMultiple\r\n          allowToggle\r\n          defaultIndex={[]}\r\n          index={expanded}\r\n          onChange={(indexes) => onChange(indexes)}>\r\n          <VStack width='100%' spacing={2}>\r\n            {departments.map((department, index) => (\r\n              <AccordionItem\r\n                key={`${department.label.toLowerCase()}-accordion`}\r\n                {...department}\r\n                isExpanded={Array.isArray(expanded) ? expanded.includes(index) : false}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </CUIAccordion>\r\n      ) : (\r\n        _.range(0, 5).map((_dummy, index) => <DummyAccordionItem key={index} />)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnDummyWidths, handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { QuickTogglesProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(200, 4);\r\n\r\nconst QuickToggles = (props: QuickTogglesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { departments, isLoading = false, onToggleAccordion } = props;\r\n\r\n  return (\r\n    <HStack justifyContent='stretch' spacing={isLoading ? 1 : 0}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        whiteSpace='nowrap'\r\n        py={0.75}>\r\n        Jump to:\r\n      </Text>\r\n\r\n      <HorizontalScroll width='calc(100% - 61.47px)' spacing='0' isLoading={isLoading}>\r\n        <HStack\r\n          width='100%'\r\n          maxWidth='100%'\r\n          divider={\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='md'\r\n              mx={isLoading ? 0.75 : 0}>\r\n              •\r\n            </Text>\r\n          }>\r\n          {[...(!isLoading ? departments : _.range(0, 4))].map((department, index) => (\r\n            <SkeletonText\r\n              key={index}\r\n              width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'}\r\n              offsetY={14}\r\n              isLoaded={!isLoading}>\r\n              <Link\r\n                to={`${typeof department !== 'number' ? department.toLowerCase() : ''}-accordion`}\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-81}>\r\n                <Button\r\n                  color={handleReturnColor(color)}\r\n                  onClick={typeof department !== 'number' ? () => onToggleAccordion(department) : undefined}\r\n                  isDisabled={isLoading}\r\n                  size='sm'\r\n                  variant='text'>\r\n                  {typeof department !== 'number' ? department : 'Lorem'}\r\n                </Button>\r\n              </Link>\r\n            </SkeletonText>\r\n          ))}\r\n        </HStack>\r\n      </HorizontalScroll>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default QuickToggles;\r\n","import { ReactElement, useState } from 'react';\r\n\r\nimport { ExpandedIndex, VStack, Collapse, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../components/Card';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport Accordion from './components/Accordion';\r\nimport QuickToggles from './components/QuickToggles';\r\nimport { FilmographyProps } from './types';\r\n\r\nconst Filmography = (props: FilmographyProps): ReactElement => {\r\n  const { departments, name, isSuccess = false, isLoading = false, isError = false } = props;\r\n\r\n  const [expandedAccordions, setExpandedAccordions] = useState<ExpandedIndex>([]);\r\n\r\n  /**\r\n   * This method will either expand/collapse all accordions at once\r\n   */\r\n  const handleToggleAccordions = (): void => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    setExpandedAccordions(expanded === departments.length ? [] : departments.map((_department, index) => index));\r\n  };\r\n\r\n  /**\r\n   * This method will check if all the accordions are either expanded or collapsed\r\n   *\r\n   * @returns Boolean - If expanded or collapsed\r\n   */\r\n  const handleCheckisAccordionsExpanded = (): boolean => {\r\n    const expanded: number = Array.isArray(expandedAccordions) ? expandedAccordions.length : 0;\r\n\r\n    return expanded === departments.length;\r\n  };\r\n\r\n  /**\r\n   * This method will either expand/collapse the accordion passed as param\r\n   *\r\n   * @param department String - The accordion clicked\r\n   */\r\n  const handleToggleAccordion = (department: string): void => {\r\n    const expanded: number[] = Array.isArray(expandedAccordions) ? expandedAccordions : [];\r\n    const index: number = departments.findIndex((paramDepartment) => paramDepartment.label === department);\r\n\r\n    if (!expanded.includes(index)) {\r\n      setExpandedAccordions([...expanded, index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth variant='outlined' px={2} pt={1.5} pb={2}>\r\n      {{\r\n        header: {\r\n          title: 'Filmography',\r\n          actions: (\r\n            <ScaleFade in={!isError} unmountOnExit>\r\n              <Button isDisabled={isLoading} onClick={() => handleToggleAccordions()} size='sm' variant='text'>\r\n                {handleCheckisAccordionsExpanded() ? 'Hide all' : 'Show all'}\r\n              </Button>\r\n            </ScaleFade>\r\n          )\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            <Collapse in={!isError} unmountOnExit style={{ width: '100%' }}>\r\n              <QuickToggles\r\n                departments={departments.map((department) => department.label)}\r\n                isLoading={isLoading}\r\n                onToggleAccordion={handleToggleAccordion}\r\n              />\r\n            </Collapse>\r\n\r\n            {isError ? (\r\n              <Error\r\n                label='Oh no! Something went wrong'\r\n                description={`Failed to fetch ${name ? `\"${name}\"` : ''} filmography credits list!`}\r\n                variant='transparent'\r\n              />\r\n            ) : isSuccess && departments && departments.length === 0 ? (\r\n              <Empty label={`${name ? `\"${name}\"` : ''} has no credits`} variant='transparent' />\r\n            ) : (\r\n              <Accordion\r\n                departments={departments}\r\n                expanded={expandedAccordions}\r\n                isLoading={isLoading}\r\n                onChange={(indexes: ExpandedIndex) => setExpandedAccordions(indexes)}\r\n              />\r\n            )}\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Filmography;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  ArrowBackOutlined as ArrowBackOutlinedIcon,\r\n  ArrowForwardOutlined as ArrowForwardOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport useInterval from '../../../../../common/hooks/useInterval';\r\nimport IconButton from '../../../../Clickable/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { ArrowProps, Event } from './types';\r\n\r\nconst Arrow = (props: ArrowProps): ReactElement => {\r\n  const { direction, isLoading = false, isDisabled = false, reset = false, variant, onScrollClick } = props;\r\n\r\n  const [isMouseDown, setIsMouseDown] = useBoolean();\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleOnClick = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    onScrollClick(direction);\r\n  };\r\n\r\n  const handleIsMouseDown = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    if (event.button === 0) {\r\n      setIsMouseDown.on();\r\n    } else {\r\n      setIsMouseDown.off();\r\n    }\r\n  };\r\n\r\n  const handleIsMouseUp = (event: Event): void => {\r\n    event.preventDefault();\r\n\r\n    setIsMouseDown.off();\r\n  };\r\n\r\n  useInterval(() => onScrollClick(direction), isMouseDown ? 25 : null);\r\n\r\n  useEffect(() => {\r\n    if (reset || isDisabled) {\r\n      setIsMouseDown.off();\r\n    }\r\n  }, [reset, isDisabled]);\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={`Scroll ${direction.toLowerCase()}`}\r\n      closeOnClick={false}\r\n      closeOnMouseDown={false}\r\n      label={`Scroll ${direction.toLowerCase()} (${!isMouseDown ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isLoading || isDisabled}\r\n      gutter={isMouseDown ? 8 : 10}>\r\n      <IconButton\r\n        aria-label='Scroll left'\r\n        isDisabled={isLoading || isDisabled}\r\n        icon={direction === 'left' ? ArrowBackOutlinedIcon : ArrowForwardOutlinedIcon}\r\n        onClick={(event: Event) => handleOnClick(event)}\r\n        onMouseDown={(event: Event) => handleIsMouseDown(event)}\r\n        onMouseUp={(event: Event) => handleIsMouseUp(event)}\r\n        onMouseEnter={() => setIsHovering.on()}\r\n        onMouseLeave={() => setIsHovering.off()}\r\n        size={variant === 'transparent' ? 'md' : 'sm'}\r\n        variant='outlined'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, hasDivider = false, handleScrollChange, variant = 'transparent' } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={variant === 'transparent' ? 2 : 0}\r\n      py={hasDivider ? 2 : 0}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border={variant === 'transparent' ? 'solid2' : 'none'}\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        px={variant === 'transparent' ? 2 : 0}\r\n        py={variant === 'transparent' ? 2 : 0}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWindowSize } from '../../../common/hooks';\r\nimport { handleIsTouchDevice } from '../../../common/utils';\r\nimport Card from '../../Card';\r\nimport Arrow from './components/Arrow';\r\nimport Grid from './components/Grid';\r\nimport { HorizontalGridProps, ScrollButtonsState, Direction } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const gridRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { width } = useWindowSize();\r\n\r\n  const location = useLocation();\r\n\r\n  const { children, title, footer, isLoading = true, hasDivider = false, variant = 'transparent' } = props;\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n        const isLeftDisabled = ref.scrollLeft === 0;\r\n        const isRightDisabled =\r\n          ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n        setScrollButtons({\r\n          left: isLeftDisabled,\r\n          right: isRightDisabled\r\n        });\r\n\r\n        setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n      } else {\r\n        handleGridRef(gridRef.current);\r\n      }\r\n    }, 50),\r\n    [gridRef]\r\n  );\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: Direction) => {\r\n      if (gridRef && gridRef.current) {\r\n        if (direction === 'left') {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft - 10;\r\n        } else {\r\n          gridRef.current.scrollLeft = gridRef.current.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setResetScrollButtons(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    handleGridRef(gridRef.current);\r\n  }, [width]);\r\n\r\n  return (\r\n    <Card\r\n      box={{\r\n        header: { px: variant === 'transparent' ? 2 : 0, py: 1.5 },\r\n        footer: { px: variant === 'transparent' ? 2 : 0, py: 1 }\r\n      }}\r\n      isFullWidth\r\n      hasDivider={hasDivider}\r\n      variant={variant}\r\n      px={variant === 'outlined' ? 2 : 0}>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: !handleIsTouchDevice() ? (\r\n            <HStack spacing={1}>\r\n              <Arrow\r\n                direction='left'\r\n                isDisabled={scrollButtons.left}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n              <Arrow\r\n                direction='right'\r\n                isDisabled={scrollButtons.right}\r\n                isLoading={isLoading}\r\n                reset={resetScrollButtons}\r\n                onScrollClick={handleScrollClick}\r\n                variant={variant}\r\n              />\r\n            </HStack>\r\n          ) : undefined\r\n        },\r\n        body: (\r\n          <Grid\r\n            gridRef={gridRef}\r\n            hasDivider={hasDivider}\r\n            handleScrollChange={() => handleGridRef(gridRef.current)}\r\n            variant={variant}>\r\n            {children}\r\n          </Grid>\r\n        ),\r\n        footer\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Center, Icon, Text } from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = (props: RatingProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { rating = defaultRating, isLoading = false, iconFontsize, textFontsize } = props;\r\n\r\n  return (\r\n    <Center backgroundColor='transparent' p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{\r\n          fontSize: `${iconFontsize} !important`\r\n        }}\r\n      />\r\n      <SkeletonText offsetY={8} isLoaded={!isLoading} ml={0.5}>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={textFontsize}\r\n          fontWeight='medium'\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {_.round(rating?.rating || 0, 1) || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { toggleList } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List } from '../../store/slices/User/types';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = (props: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const { renderButton, title, mediaType, mediaItem } = props;\r\n\r\n  const list = mediaItem\r\n    ? lists.find((list) => {\r\n        switch (mediaType) {\r\n          case 'movie':\r\n            return list.results.movies.some((movie) => movie.id === mediaItem.id);\r\n          case 'tv':\r\n            return list.results.tv.some((show) => show.id === mediaItem.id);\r\n          default:\r\n            return;\r\n        }\r\n      })\r\n    : undefined;\r\n  const isBookmarked: boolean = list\r\n    ? mediaType === 'movie'\r\n      ? list.results.movies.some((movie) => movie.id === mediaItem?.id)\r\n      : list.results.tv.some((show) => show.id === mediaItem?.id)\r\n    : false;\r\n\r\n  const handleRemoveBookmark = (list: List): void => {\r\n    const results = { ...list.results };\r\n\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        results.movies = results.movies.filter((movie) => movie.id !== mediaItem?.id) || [];\r\n        break;\r\n      case 'tv':\r\n        results.tv = results.tv.filter((show) => show.id !== mediaItem?.id) || [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      setLists(\r\n        lists.map((paramList) =>\r\n          paramList.id === list.id\r\n            ? {\r\n                ...paramList,\r\n                results: { ...results }\r\n              }\r\n            : paramList\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleOpenListsModal = (): void => {\r\n    if (mediaItem) {\r\n      dispatch(\r\n        toggleList({\r\n          open: true,\r\n          title,\r\n          mediaType,\r\n          mediaItem: {\r\n            ...mediaItem\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderButton({\r\n    list,\r\n    isBookmarked,\r\n    onClick: isBookmarked && list ? () => handleRemoveBookmark(list) : () => handleOpenListsModal()\r\n  });\r\n};\r\n\r\nexport default Bookmark;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { MediaType } from '../../../../common/types/types';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Bookmark from '../../../Bookmark';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport Tooltip from '../../../Tooltip';\r\nimport { PosterBookmarkProps } from './types';\r\n\r\nconst PosterBookmark = <MT extends MediaType>(props: PosterBookmarkProps<MT>): ReactElement => {\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { title, mediaType, mediaItem, isLoading = true, size } = props;\r\n\r\n  return (\r\n    <Bookmark\r\n      renderButton={({ list, isBookmarked, onClick }) => (\r\n        <Tooltip\r\n          aria-label={\r\n            isBookmarked\r\n              ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n              : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n          }\r\n          label={\r\n            isBookmarked\r\n              ? `Remove \"${title}\" from ${list?.label ? `\"${list.label}\"` : ''} list`\r\n              : `Add \"${title}\" to a list`\r\n          }\r\n          placement='top'\r\n          isOpen={isHovering}\r\n          isDisabled={isLoading || !mediaItem}\r\n          gutter={8}>\r\n          <IconButton\r\n            aria-label={\r\n              isBookmarked\r\n                ? `Remove \"${title}\" ${mediaType} from ${list?.label ? `\"${list.label}\"` : ''} (tooltip)`\r\n                : `Add \"${title}\" ${mediaType} to a list (tooltip)`\r\n            }\r\n            color={isBookmarked ? handleReturnColor(color) : 'gray'}\r\n            isDisabled={isLoading || !mediaItem}\r\n            icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n            onClick={() => onClick()}\r\n            onMouseEnter={() => setIsHovering.on()}\r\n            onMouseLeave={() => setIsHovering.off()}\r\n            size={size}\r\n            variant='icon'\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      title={title}\r\n      mediaType={mediaType}\r\n      mediaItem={mediaItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PosterBookmark;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType } from '../../../../common/types/types';\r\nimport IconButton from '../../../Clickable/IconButton';\r\nimport Like from '../../../Like';\r\nimport Tooltip from '../../../Tooltip';\r\nimport { PosterLikeProps } from './types';\r\n\r\nconst PosterLike = <MT extends MediaType>(props: PosterLikeProps<MT>): ReactElement => {\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const { title, mediaType, mediaItem, isLoading = true, size } = props;\r\n\r\n  return (\r\n    <Like\r\n      renderButton={({ isLiked, onClick }) => (\r\n        <Tooltip\r\n          aria-label={isLiked ? `Dislike \"${title}\" ${mediaType} (tooltip)` : `Like \"${title}\" ${mediaType} (tooltip)`}\r\n          label={isLiked ? `Dislike \"${title}\"` : `Like \"${title}\"`}\r\n          placement='top'\r\n          isOpen={isHovering}\r\n          isDisabled={isLoading || !mediaItem}\r\n          gutter={8}>\r\n          <IconButton\r\n            aria-label={isLiked ? `Dislike \"${title}\" ${mediaType}` : `Like \"${title}\" ${mediaType}`}\r\n            color={isLiked ? 'red' : 'gray'}\r\n            isDisabled={isLoading || !mediaItem}\r\n            icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n            onClick={() => onClick()}\r\n            onMouseEnter={() => setIsHovering.on()}\r\n            onMouseLeave={() => setIsHovering.off()}\r\n            size={size}\r\n            variant='icon'\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      mediaType={mediaType}\r\n      mediaItem={mediaItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PosterLike;\r\n","import { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { handleReturnDummyWidths, handleIsOverflowing } from '../../../../../common/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={6}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='xs'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { handleReturnDummyWidths, handleIsOverflowing } from '../../../../../common/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={7}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize='sm'\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useBoolean, VStack, HStack, Box, AspectRatio, ScaleFade } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport { handleIsTouchDevice } from '../../../common/utils';\r\nimport Button from '../../../components/Clickable/Button';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport Skeleton from '../../../components/Skeleton';\r\nimport { toggleQuickView } from '../../../store/slices/Modals';\r\nimport { Theme } from '../../../theme/types';\r\nimport Image from '../../Image';\r\nimport Rating from '../../Rating';\r\nimport Bookmark from '../components/Bookmark';\r\nimport Like from '../components/Like';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = <MT extends MediaType>(props: VerticalPosterProps<MT>): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    width,\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    isLoading = true\r\n  } = props;\r\n\r\n  const [isHoveringPoster, setIsHoveringPoster] = useBoolean();\r\n\r\n  const [isDisabled, setIsDisabled] = useBoolean();\r\n\r\n  return (\r\n    <Link\r\n      isDisabled={isLoading || isDisabled}\r\n      to={{ pathname: `/${mediaType}/${mediaItem?.id || ''}` }}\r\n      onMouseEnter={() => setIsHoveringPoster.on()}\r\n      onMouseLeave={() => setIsHoveringPoster.off()}>\r\n      <Card isDisabled={isLoading} isClickable={!isDisabled} isLight>\r\n        <VStack width={width} position='relative' spacing={1} p={1}>\r\n          {/* Image */}\r\n          <Box position='relative' width='100%' minWidth='100%' maxWidth='100%'>\r\n            <AspectRatio width='100%' minWidth='100%' maxWidth='100%' ratio={2 / 3}>\r\n              <>\r\n                <Skeleton isLoaded={!isLoading && Boolean(image)} borderRadius='base'>\r\n                  <Image\r\n                    alt={image?.alt || ''}\r\n                    mediaType={mediaType}\r\n                    maxWidth='none'\r\n                    height='100%'\r\n                    borderRadius='base'\r\n                    src={image?.src || ''}\r\n                    size={{ thumbnail: image?.size.thumbnail || '', full: image?.size.full || '' }}\r\n                  />\r\n                </Skeleton>\r\n\r\n                {/* Quick View component */}\r\n                {mediaItem && !handleIsTouchDevice() ? (\r\n                  <ScaleFade in={isHoveringPoster && !isLoading} unmountOnExit>\r\n                    <Box\r\n                      position='absolute'\r\n                      bottom={theme.space[1]}\r\n                      width='100%'\r\n                      onMouseEnter={() => setIsDisabled.on()}\r\n                      onMouseLeave={() => setIsDisabled.off()}\r\n                      px={1}>\r\n                      <Button\r\n                        isFullWidth\r\n                        onClick={() =>\r\n                          dispatch(toggleQuickView({ open: true, mediaType, mediaItem: { id: mediaItem.id, title } }))\r\n                        }\r\n                        size='sm'>\r\n                        Quick view\r\n                      </Button>\r\n                    </Box>\r\n                  </ScaleFade>\r\n                ) : null}\r\n              </>\r\n            </AspectRatio>\r\n          </Box>\r\n\r\n          <VStack width='100%' spacing={mediaType !== 'person' ? 0.5 : 1}>\r\n            {/* Header */}\r\n            {mediaType !== 'person' ? (\r\n              <HStack width='100%' justify='space-between' spacing={0}>\r\n                {/* Rating component */}\r\n                <Rating rating={rating} isLoading={isLoading} iconFontsize={theme.fontSizes.xl} textFontsize='md' />\r\n\r\n                <HStack spacing={0}>\r\n                  {/* Like component */}\r\n                  <Box onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n                    <Like title={title} mediaType={mediaType} mediaItem={mediaItem} size='sm' isLoading={isLoading} />\r\n                  </Box>\r\n                  {/* List component */}\r\n                  <Box onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n                    <Bookmark\r\n                      title={title}\r\n                      mediaType={mediaType}\r\n                      mediaItem={mediaItem}\r\n                      isLoading={isLoading}\r\n                      size='sm'\r\n                    />\r\n                  </Box>\r\n                </HStack>\r\n              </HStack>\r\n            ) : null}\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n          </VStack>\r\n\r\n          {/* Like component */}\r\n          {mediaType === 'person' ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 2\r\n              }}>\r\n              <Box onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n                <Like title={title} mediaType={mediaType} mediaItem={mediaItem} isLoading={isLoading} size='sm' />\r\n              </Box>\r\n            </HStack>\r\n          ) : null}\r\n        </VStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import { ReactElement } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { handleReturnDate } from '../../../../common/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { KnownForProps } from './types';\r\n\r\nconst KnownFor = (props: KnownForProps): ReactElement => {\r\n  const { knownFor, name, isError = false, isSuccess = false, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalGrid title='Known for' isLoading={isLoading} hasDivider variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} known for list!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && knownFor && knownFor.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no known for credits`} variant='transparent' />\r\n      ) : isSuccess && knownFor && knownFor.length > 0 ? (\r\n        <>\r\n          {knownFor.map((mediaItem) => (\r\n            <VerticalPoster\r\n              key={mediaItem.id}\r\n              width={['185px', '205px', '230px']}\r\n              mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n              mediaType={mediaItem?.title ? 'movie' : 'tv'}\r\n              image={{\r\n                alt: `${mediaItem?.title || mediaItem?.name || ''} ${mediaItem?.title ? 'movie' : 'tv'} poster`,\r\n                src: mediaItem?.poster_path || '',\r\n                size: {\r\n                  thumbnail: 'w92',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              rating={{\r\n                rating: mediaItem?.vote_average || null,\r\n                count: mediaItem?.vote_count || null\r\n              }}\r\n              title={mediaItem?.title || mediaItem?.name || ''}\r\n              subtitle={\r\n                `${handleReturnDate(mediaItem?.release_date || mediaItem?.first_air_date || '', 'year')}` || 'N/A'\r\n              }\r\n              isLoading={false}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {[..._.range(0, 20)].map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='movie'\r\n              title='Lorem ipsum'\r\n              subtitle='Lorem ipsum'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default KnownFor;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Profile } from '../../../../common/types/person';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport ClickableImage from '../../../../components/Clickable/Image';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport Image from '../../../../components/Image';\r\nimport Skeleton from '../../../../components/Skeleton';\r\nimport { PhotosProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst Photos = (props: PhotosProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { images, name, isError = false, isSuccess = false, isLoading = false, onClickImage } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title='Photos'\r\n      footer={\r\n        images.length > 7 ? (\r\n          <Button\r\n            color={handleReturnColor(color)}\r\n            isFullWidth\r\n            isDisabled={isLoading || isError}\r\n            onClick={() => onClickImage(images[0].file_path)}\r\n            size={isSm ? 'sm' : 'md'}\r\n            variant='text'>\r\n            {`View all ${name ? `\"${name}\"` : ''} photos`}\r\n          </Button>\r\n        ) : undefined\r\n      }\r\n      isLoading={isLoading}\r\n      hasDivider\r\n      variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} photos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && images && images.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no photos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(images && images.length > 0 ? images : _.range(0, 8))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: Profile | number, index) => (\r\n              <ClickableImage\r\n                key={index}\r\n                width={width}\r\n                borderRadius='lg'\r\n                ratio={2 / 3}\r\n                isDisabled={isLoading}\r\n                onClick={typeof image !== 'number' && image ? () => onClickImage(image.file_path) : undefined}>\r\n                <Skeleton isLoaded={!isLoading} borderRadius='lg'>\r\n                  <Image\r\n                    alt={`${name ? `\"${name}\"` : ''} image`}\r\n                    maxWidth='none'\r\n                    height='100%'\r\n                    borderRadius='lg'\r\n                    mediaType='person'\r\n                    src={typeof image !== 'number' && image ? image?.file_path : ''}\r\n                    size={{\r\n                      thumbnail: 'w45',\r\n                      full: 'original'\r\n                    }}\r\n                  />\r\n                </Skeleton>\r\n              </ClickableImage>\r\n            ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { FullPerson, Credits, MovieCredits, TVCredits, ExternalIDs, ImageResponse } from '../../common/types/person';\r\nimport { Response } from '../../common/types/types';\r\nimport MediaViewer from '../../components/MediaViewer';\r\nimport Bio from './components/Bio';\r\nimport Details from './components/Details';\r\nimport Filmography from './components/Filmography';\r\nimport KnownFor from './components/KnownFor';\r\nimport Photos from './components/Photos';\r\nimport { Department, KnownFor as KnownForType } from './types';\r\n\r\n/**\r\n * This method will take all the credits and place them in their respective object\r\n *\r\n * @returns Array of Objects - Of Departments containing all credits\r\n */\r\nexport const handleGetDepartments = (movies: MovieCredits, tv: TVCredits): Department[] => {\r\n  let departments: Department[] = [];\r\n\r\n  if ((movies?.cast.length || 0) > 0 || (tv.cast.length || 0) > 0) {\r\n    departments.push({\r\n      label: 'Actor',\r\n      credits: {\r\n        cast: {\r\n          movie: movies?.cast || [],\r\n          tv: tv.cast || []\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  movies?.crew.forEach((mediaItem) => {\r\n    if (departments.some((department) => department.label === mediaItem.job)) {\r\n      departments = departments.map((department) =>\r\n        department.label === mediaItem.job\r\n          ? {\r\n              ...department,\r\n              credits: {\r\n                ...department.credits,\r\n                crew: {\r\n                  ...department.credits.crew,\r\n                  movie: [...(department.credits.crew?.movie || []), { ...mediaItem }]\r\n                }\r\n              }\r\n            }\r\n          : department\r\n      );\r\n    } else {\r\n      departments.push({\r\n        label: mediaItem.job,\r\n        credits: {\r\n          crew: {\r\n            movie: [{ ...mediaItem }],\r\n            tv: []\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  tv.crew.forEach((mediaItem) => {\r\n    if (departments.some((department) => department.label === mediaItem.job)) {\r\n      departments = departments.map((department) =>\r\n        department.label === mediaItem.job\r\n          ? {\r\n              ...department,\r\n              credits: {\r\n                ...department.credits,\r\n                crew: {\r\n                  ...department.credits.crew,\r\n                  tv: [...(department.credits.crew?.tv || []), { ...mediaItem }]\r\n                }\r\n              }\r\n            }\r\n          : department\r\n      );\r\n    } else {\r\n      departments.push({\r\n        label: mediaItem.job,\r\n        credits: {\r\n          crew: {\r\n            movie: [],\r\n            tv: [{ ...mediaItem }]\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return sort([...departments], 'label');\r\n};\r\n\r\nconst Person = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState<string>();\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person known for list\r\n  const creditsQuery = useQuery([`person-combined_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Credits>(`/person/${id}/combined_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person external ids\r\n  const externalIdsQuery = useQuery([`person-external_ids-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ExternalIDs>(`/person/${id}/external_ids`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person images\r\n  const imagesQuery = useQuery([`person-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/person/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tagged images\r\n  const taggedImagesQuery = useQuery([`person-tagged_images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<ImageResponse>>(`/person/${id}/tagged_images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  /**\r\n   * This method will filter from known for list and will return the 8 most voted movies/tv shows\r\n   *\r\n   * @returns Array of Objects - Known for list\r\n   */\r\n  const handleGetKnownFor = (): KnownForType => {\r\n    const filtered = new Set();\r\n    const credits = [...(creditsQuery.data?.cast || []), ...(creditsQuery.data?.crew || [])];\r\n    const knownFor = sort(\r\n      credits.filter((mediaItem) => {\r\n        const duplicate = filtered.has(mediaItem.id);\r\n        filtered.add(mediaItem.id);\r\n        return !duplicate;\r\n      }),\r\n      'vote_count',\r\n      { reverse: true }\r\n    ).filter((_item, index) => index < 8);\r\n\r\n    return [...knownFor];\r\n  };\r\n\r\n  /**\r\n   * This method will open the image passed in the media modal\r\n   *\r\n   * @param image - Image object\r\n   */\r\n  const handleOnImageClick = (path: string): void => {\r\n    setSelectedPhoto(path || undefined);\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  const knownFor = creditsQuery.isSuccess ? handleGetKnownFor() : [];\r\n  const departments =\r\n    movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess\r\n      ? handleGetDepartments(movieCreditsQuery.data, tvCreditsQuery.data)\r\n      : [];\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={4} p={2}>\r\n      <Details\r\n        person={personQuery.data}\r\n        departments={departments.map((department) => department.label)}\r\n        socials={externalIdsQuery.data}\r\n        isLoading={\r\n          personQuery.isFetching || personQuery.isLoading || externalIdsQuery.isFetching || externalIdsQuery.isLoading\r\n        }\r\n        isError={personQuery.isError || personQuery.isError}\r\n        onClickPoster={handleOnImageClick}\r\n      />\r\n\r\n      {personQuery.data?.biography || personQuery.isFetching || personQuery.isLoading ? (\r\n        <Bio\r\n          biography={personQuery.data?.biography || ''}\r\n          isLoading={personQuery.isFetching || personQuery.isLoading}\r\n        />\r\n      ) : null}\r\n\r\n      <KnownFor\r\n        knownFor={knownFor}\r\n        name={personQuery.data?.name}\r\n        isError={creditsQuery.isError}\r\n        isSuccess={creditsQuery.isSuccess}\r\n        isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n      />\r\n\r\n      <Filmography\r\n        departments={departments}\r\n        isLoading={\r\n          movieCreditsQuery.isFetching ||\r\n          movieCreditsQuery.isLoading ||\r\n          tvCreditsQuery.isFetching ||\r\n          tvCreditsQuery.isLoading\r\n        }\r\n        isError={movieCreditsQuery.isError || tvCreditsQuery.isError}\r\n      />\r\n\r\n      <Photos\r\n        images={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n        name={personQuery.data?.name}\r\n        isError={imagesQuery.isError || taggedImagesQuery.isError}\r\n        isSuccess={imagesQuery.isSuccess && taggedImagesQuery.isSuccess}\r\n        isLoading={\r\n          imagesQuery.isFetching || imagesQuery.isLoading || taggedImagesQuery.isFetching || taggedImagesQuery.isLoading\r\n        }\r\n        onClickImage={handleOnImageClick}\r\n      />\r\n\r\n      {imagesQuery.isSuccess || taggedImagesQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selected={{\r\n            type: 'photo',\r\n            asset: selectedPhoto\r\n          }}\r\n          photos={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n          mediaType='person'\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, useBoolean } from '@chakra-ui/react';\r\n\r\nimport ClickableImage from '../../../../../../../components/Clickable/Image';\r\nimport Image from '../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../components/Skeleton';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { name, path, mediaType, isLoading = false, onClickPoster } = props;\r\n\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <ClickableImage\r\n      borderRadius='lg'\r\n      ratio={isSm ? 1 / 1 : 2 / 3}\r\n      isDisabled={isLoading || isImageError}\r\n      onClick={path ? () => onClickPoster(path) : undefined}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius='lg'>\r\n        <Image\r\n          alt={`${name ? `\"${name}\"` : ''} ${\r\n            mediaType === 'movie' ? 'movie' : mediaType === 'tv' ? 'tv show' : 'profile'\r\n          } poster`}\r\n          mediaType={mediaType}\r\n          maxWidth='none'\r\n          height={isSm ? 'auto' : '100%'}\r\n          width={isSm ? '100%' : 'auto'}\r\n          borderRadius='lg'\r\n          onError={() => setIsImageError.on()}\r\n          onLoad={() => setIsImageError.off()}\r\n          src={path || ''}\r\n          size={{\r\n            thumbnail: mediaType === 'person' ? 'w45' : 'w92',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </ClickableImage>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, StatGroup, Stat, StatLabel, StatNumber, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport SkeletonText from '../../../../../../../../../components/Skeleton/Text';\r\nimport { StatsProps, Stat as StatType } from './types';\r\n\r\nconst Stats = (props: StatsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { totalMovieCredits, totalTvCredits, totalCrewCredits, isLoading = false } = props;\r\n\r\n  const stats: StatType[] = [\r\n    {\r\n      label: 'Total',\r\n      number: totalMovieCredits + totalTvCredits + totalCrewCredits\r\n    },\r\n    {\r\n      label: 'Movies',\r\n      number: totalMovieCredits\r\n    },\r\n    {\r\n      label: 'TV Shows',\r\n      number: totalTvCredits\r\n    },\r\n    {\r\n      label: 'Crew',\r\n      number: totalCrewCredits\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <StatGroup\r\n      width='100%'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      borderRadius='base'\r\n      p={1}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='space-between'\r\n        wrap='wrap'\r\n        divider={<Box width='2px' height='44px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />}\r\n        spacing={1}>\r\n        {stats.map((stat: StatType, index: number) => (\r\n          <Stat key={index} justifyContent='center'>\r\n            <VStack spacing={0}>\r\n              <SkeletonText offsetY='14px' isLoaded={!isLoading}>\r\n                <StatNumber color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='3xl' lineHeight='normal'>\r\n                  {!isLoading ? stat.number || 0 : '12'}\r\n                </StatNumber>\r\n              </SkeletonText>\r\n              <StatLabel\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                fontSize='xs'\r\n                whiteSpace='nowrap'\r\n                textTransform='uppercase'>\r\n                {stat.label}\r\n              </StatLabel>\r\n            </VStack>\r\n          </Stat>\r\n        ))}\r\n      </HStack>\r\n    </StatGroup>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport Button from '../../../../../../../../../components/Clickable/Button';\r\nimport Like from '../../../../../../../../../components/Like';\r\nimport SkeletonText from '../../../../../../../../../components/Skeleton/Text';\r\nimport Date from '../../../../../../../../../pages/Person/components/Details/components/Date';\r\nimport Departments from '../../../../../../../../../pages/Person/components/Details/components/Departments';\r\nimport Stats from '../Stats';\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = (props: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const {\r\n    person,\r\n    departments,\r\n    totalMovieCredits,\r\n    totalTvCredits,\r\n    totalCrewCredits,\r\n    isLoading = false,\r\n    isError = false\r\n  } = props;\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' spacing={6}>\r\n      <VStack width='100%' alignItems='flex-start' spacing={2}>\r\n        <VStack width='100%' maxWidth='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n          <SkeletonText offsetY={isSm ? 12 : 18} isLoaded={!isLoading}>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={isSm ? '2xl' : '4xl'}\r\n              fontWeight='bold'>\r\n              {person?.name || 'Unknown'}\r\n            </Text>\r\n          </SkeletonText>\r\n\r\n          <Departments departments={departments} isLoading={isLoading} />\r\n        </VStack>\r\n\r\n        <Date\r\n          birthday={person?.birthday}\r\n          place_of_birth={person?.place_of_birth}\r\n          deathday={person?.deathday}\r\n          isLoading={isLoading}\r\n          isError={isError}\r\n        />\r\n\r\n        <ScaleFade in={!isError} unmountOnExit>\r\n          <Like\r\n            renderButton={({ isLiked, onClick }) => (\r\n              <Button\r\n                color={isLiked ? 'red' : 'gray'}\r\n                isFullWidth={isSm}\r\n                isDisabled={isLoading || !person}\r\n                leftIcon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n                onClick={() => onClick()}\r\n                size='md'\r\n                variant='outlined'>\r\n                Like\r\n              </Button>\r\n            )}\r\n            mediaType='person'\r\n            mediaItem={person}\r\n          />\r\n        </ScaleFade>\r\n      </VStack>\r\n\r\n      <Stats\r\n        totalMovieCredits={totalMovieCredits}\r\n        totalTvCredits={totalTvCredits}\r\n        totalCrewCredits={totalCrewCredits}\r\n        isLoading={isLoading}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import { ReactElement, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../../../../../../common/scripts/axios';\r\nimport { FullPerson, Profile, ImageResponse, MovieCredits, TVCredits } from '../../../../../../../common/types/person';\r\nimport { Response } from '../../../../../../../common/types/types';\r\nimport MediaViewer from '../../../../../../../components/MediaViewer';\r\nimport { handleGetDepartments } from '../../../../../../../pages/Person';\r\nimport Poster from '../Poster';\r\nimport Container from './components/Container';\r\nimport { PersonProps } from './types';\r\n\r\nconst Person = (props: PersonProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { id } = props;\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState<Profile | undefined>();\r\n\r\n  // Fetching person details\r\n  const personQuery = useQuery([`person-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person movie credits\r\n  const movieCreditsQuery = useQuery([`person-movie_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<MovieCredits>(`/person/${id}/movie_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tv credits\r\n  const tvCreditsQuery = useQuery([`person-tv_credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<TVCredits>(`/person/${id}/tv_credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person images\r\n  const imagesQuery = useQuery([`person-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/person/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching person tagged images\r\n  const taggedImagesQuery = useQuery([`person-tagged_images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<ImageResponse>>(`/person/${id}/tagged_images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  const departments =\r\n    movieCreditsQuery.isSuccess && tvCreditsQuery.isSuccess\r\n      ? handleGetDepartments(movieCreditsQuery.data, tvCreditsQuery.data)\r\n      : [];\r\n\r\n  /**\r\n   * This method will find the image object from images and then it will open the media modal\r\n   *\r\n   * @param path - Image path\r\n   */\r\n  const handleOnPosterClick = (path: string): void => {\r\n    setSelectedPhoto(imagesQuery.data?.profiles.find((image) => image.file_path === path) || undefined);\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isSm ? (\r\n        <VStack width='100%' maxWidth='100%' spacing={2} p={2}>\r\n          <Poster\r\n            name={personQuery.data?.name || ''}\r\n            path={personQuery.data?.profile_path || ''}\r\n            mediaType='person'\r\n            isLoading={personQuery.isFetching || personQuery.isLoading}\r\n            onClickPoster={handleOnPosterClick}\r\n          />\r\n          <Container\r\n            person={personQuery.data}\r\n            departments={departments.map((department) => department.label)}\r\n            totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n            totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n            totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n            isLoading={personQuery.isFetching || personQuery.isLoading}\r\n            isError={personQuery.isError || personQuery.isError}\r\n          />\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' maxWidth='100%' spacing={2} p={2}>\r\n          <Box width='40%' maxWidth='40%'>\r\n            <Poster\r\n              name={personQuery.data?.name || ''}\r\n              path={personQuery.data?.profile_path || ''}\r\n              mediaType='person'\r\n              isLoading={personQuery.isFetching || personQuery.isLoading}\r\n              onClickPoster={handleOnPosterClick}\r\n            />\r\n          </Box>\r\n          <Box width='60%' maxWidth='60%'>\r\n            <Container\r\n              person={personQuery.data}\r\n              departments={departments.map((department) => department.label)}\r\n              totalMovieCredits={movieCreditsQuery.data?.cast.length || 0}\r\n              totalTvCredits={tvCreditsQuery.data?.cast.length || 0}\r\n              totalCrewCredits={(movieCreditsQuery.data?.crew.length || 0) + (tvCreditsQuery.data?.crew.length || 0)}\r\n              isLoading={personQuery.isFetching || personQuery.isLoading}\r\n              isError={personQuery.isError || personQuery.isError}\r\n            />\r\n          </Box>\r\n        </HStack>\r\n      )}\r\n\r\n      {imagesQuery.isSuccess || taggedImagesQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selected={{ type: 'photo', asset: selectedPhoto?.file_path }}\r\n          photos={[...(imagesQuery.data?.profiles || []), ...(taggedImagesQuery.data?.results.profiles || [])]}\r\n          mediaType='person'\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../common/utils';\r\nimport Button from '../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../components/Clickable/Link';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultQuickViewModal, toggleQuickView } from '../../../../../store/slices/Modals';\r\nimport Person from './components/Person';\r\n\r\nconst QuickView = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const quickViewModal = useSelector((state) => state.modals.ui.quickViewModal);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleQuickView({ ...defaultQuickViewModal }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`Quick View ${quickViewModal.mediaItem ? `\"${quickViewModal.mediaItem.title}\"` : 'Unknown'}`}\r\n      actions={\r\n        <Link to={{ pathname: `/${quickViewModal.mediaType}/${quickViewModal.mediaItem?.id}` }}>\r\n          <Button color={handleReturnColor(color)} onClick={() => handleClose()} size='sm'>\r\n            View full details\r\n          </Button>\r\n        </Link>\r\n      }\r\n      isOpen={quickViewModal.open}\r\n      onClose={() => handleClose()}\r\n      isCentered\r\n      size='2xl'>\r\n      {quickViewModal.mediaType === 'movie' ? (\r\n        <h1>Hello Movies</h1>\r\n      ) : quickViewModal.mediaType === 'tv' ? (\r\n        <h1>Hello TV Shows</h1>\r\n      ) : quickViewModal.mediaType === 'person' ? (\r\n        <Person id={quickViewModal.mediaItem?.id} />\r\n      ) : (\r\n        <h1>Hello Movies</h1>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuickView;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useColorMode, Modal, ModalContent, ModalBody, VStack, Box, Text } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../common/hooks';\r\nimport { toggleSplashscreen } from '../../../../../store/slices/Modals';\r\nimport useStyles from './styles';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nconst Splashscreen = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const style = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isSplashscreenOpen) {\r\n      setTimeout(() => dispatch(toggleSplashscreen(false)), 5000);\r\n    }\r\n  }, [isSplashscreenOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n      isOpen={isSplashscreenOpen}\r\n      onClose={() => dispatch(toggleSplashscreen(false))}\r\n      blockScrollOnMount\r\n      preserveScrollBarGap\r\n      motionPreset='scale'\r\n      scrollBehavior='inside'\r\n      size='full'>\r\n      <ModalContent backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'} borderRadius='none' m={0}>\r\n        <ModalBody zIndex={10000} p={0}>\r\n          <VStack width='100%' height='100vh' justifyContent='space-between' p={3}>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Entertainment database\r\n            </Text>\r\n            <MotionBox\r\n              animate={{\r\n                backgroundPosition: [\r\n                  ..._.range(0, 101, 1).map((number) => `${number}%`),\r\n                  ..._.reverse(_.range(0, 101, 1).map((number) => `${number}%`))\r\n                ]\r\n              }}\r\n              transition={{\r\n                duration: 10,\r\n                ease: [0.76, 0, 0.24, 1],\r\n                repeat: Infinity\r\n              }}\r\n              bgSize='500%'\r\n              bgGradient='linear(to-r, red.400, orange.400, yellow.400, green.400, teal.400, blue.400, cyan.400, purple.400, pink.400)'\r\n              bgClip='text'\r\n              sx={{ ...style }}>\r\n              edb\r\n            </MotionBox>\r\n            <Text\r\n              align='center'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='sm'\r\n              fontWeight='medium'>\r\n              Loading...\r\n            </Text>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Splashscreen;\r\n","import { Style } from '../../../../../common/types/types';\r\n\r\nexport default (): Style => ({\r\n  fontFamily: '\"Pacifico\", cursive',\r\n  fontSize: '9xl',\r\n  fontWeight: 'extrabold',\r\n  textTransform: 'lowercase',\r\n\r\n  padding: 6\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { CodeProps } from './types';\r\n\r\nconst Code = ({ code }: CodeProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Text\r\n      align='right'\r\n      color={`${color}.${colorMode === 'light' ? 400 : 500}`}\r\n      fontSize='6xl'\r\n      fontWeight='bold'\r\n      lineHeight='normal'>\r\n      {code}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { ReactElement, forwardRef } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport { DescriptionRef } from '../../types';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst Description = forwardRef<DescriptionRef, DescriptionProps>(function Description(props, ref): ReactElement {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, subtitle } = props;\r\n\r\n  return (\r\n    <VStack ref={ref} alignItems='flex-start' spacing={0}>\r\n      <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='4xl' fontWeight='bold'>\r\n        {title}\r\n      </Text>\r\n      <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n        {subtitle}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n});\r\n\r\nexport default Description;\r\n","import { ReactElement, useRef } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Center, HStack, Box, VStack } from '@chakra-ui/react';\r\n\r\nimport { useElementSize } from '../../common/hooks';\r\nimport { headerHeight } from '../../containers/Layout/common/data/dimensions';\r\nimport Code from './components/Code';\r\nimport Description from './components/Description';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const descriptionRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { height } = useElementSize(descriptionRef);\r\n\r\n  const { code = 404, title, subtitle, actions } = props;\r\n\r\n  return (\r\n    <Center width='100%' minHeight={`calc(100vh - ${headerHeight + 32}px)`}>\r\n      <VStack spacing={4} p={isSm ? 2 : 4}>\r\n        {isSm ? (\r\n          <VStack alignItems='flex-start' spacing={1}>\r\n            <Code code={code} />\r\n            <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            <Description ref={descriptionRef} title={title} subtitle={subtitle} />\r\n          </VStack>\r\n        ) : (\r\n          <HStack spacing={2}>\r\n            <Code code={code} />\r\n            <Box width='2px' height={height} backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            <Description ref={descriptionRef} title={title} subtitle={subtitle} />\r\n          </HStack>\r\n        )}\r\n\r\n        <HStack alignItems='flex-start' spacing={2}>\r\n          {actions}\r\n        </HStack>\r\n      </VStack>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Box } from '@chakra-ui/react';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst Divider = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      width={`calc(100% - ${theme.space[4]})`}\r\n      height='2px'\r\n      backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Text,\r\n  Icon\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { BreadcrumbsProps } from './types';\r\n\r\nconst Breadcrumbs = (props: BreadcrumbsProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const iconFontSize = useBreakpointValue({\r\n    'base': theme.fontSizes.md,\r\n    'sm': theme.fontSizes.md,\r\n    'md': theme.fontSizes.lg,\r\n    'lg': theme.fontSizes.lg,\r\n    'xl': theme.fontSizes.lg,\r\n    '2xl': theme.fontSizes.lg\r\n  });\r\n\r\n  const style = useStyles(theme);\r\n\r\n  const { breadcrumbs } = props;\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${iconFontSize} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {breadcrumbs.map((breadcrumb, index) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={index === breadcrumbs.length - 1}\r\n          fontSize={['sm', 'sm', 'md', 'md', 'md', 'md']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          <SkeletonText offsetY={8} isLoaded={!breadcrumb.isLoading}>\r\n            {index === breadcrumbs.length - 1 ? (\r\n              <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n                {breadcrumb.label || ''}\r\n              </Text>\r\n            ) : (\r\n              <BreadcrumbLink\r\n                as={Link}\r\n                to={{ ...breadcrumb.to }}\r\n                sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n                {breadcrumb.label || ''}\r\n              </BreadcrumbLink>\r\n            )}\r\n          </SkeletonText>\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport { TitleProps } from './types';\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, breadcrumbs } = props;\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n      <Breadcrumbs breadcrumbs={breadcrumbs} />\r\n      {typeof title === 'string' ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n          fontWeight='bold'>\r\n          {title || 'Page title'}\r\n        </Text>\r\n      ) : (\r\n        title\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport Divider from './components/Divider';\r\nimport Title from './components/Title';\r\nimport { PageProps } from './types';\r\n\r\nconst Page = (props: PageProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { children, title, breadcrumbs } = props;\r\n\r\n  return (\r\n    <VStack width='100%' divider={<Divider />} spacing={0}>\r\n      {/* Header */}\r\n      {isSm ? (\r\n        <VStack width='100%' p={2} spacing={2}>\r\n          <Title title={title} breadcrumbs={breadcrumbs} />\r\n\r\n          {children?.actions || null}\r\n        </VStack>\r\n      ) : (\r\n        <HStack width='100%' justifyContent='space-between' p={2}>\r\n          <Title title={title} breadcrumbs={breadcrumbs} />\r\n\r\n          {children?.actions || null}\r\n        </HStack>\r\n      )}\r\n\r\n      <Box width='100%'>{children.body}</Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { ReactElement } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { HorizontalMoviesProps } from './types';\r\n\r\nconst HorizontalMovies = (props: HorizontalMoviesProps): ReactElement => {\r\n  const { isError = false, isSuccess = false, isLoading = true, movies } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster\r\n          key={movie.id}\r\n          width={['185px', '205px', '230px']}\r\n          mediaItem={movie ? { ...movie } : undefined}\r\n          mediaType='movie'\r\n          image={{\r\n            alt: `${movie?.title || ''} movie poster`,\r\n            src: movie?.poster_path || '',\r\n            size: {\r\n              thumbnail: 'w92',\r\n              full: 'original'\r\n            }\r\n          }}\r\n          rating={{\r\n            rating: movie?.vote_average || null,\r\n            count: movie?.vote_count || null\r\n          }}\r\n          title={movie?.title || ''}\r\n          subtitle={`${[\r\n            `${handleReturnDate(movie?.release_date || '', 'year')} ` || 'N/A',\r\n            `${handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n          ]\r\n            .filter((subtitle) => subtitle)\r\n            .join(' • ')}`}\r\n          isLoading={isLoading}\r\n        />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {_.range(0, 20).map((_dummy, index: number) => (\r\n        <VerticalPoster\r\n          key={index}\r\n          width={['185px', '205px', '230px']}\r\n          mediaType='movie'\r\n          title='Lorem ipsum'\r\n          subtitle='2021 • Lorem ipsum dolor sit amet'\r\n          isLoading\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n","export type Department = {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\nconst departments: Department[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Actor',\r\n    value: 'Acting'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Director',\r\n    value: 'Directing'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Producer',\r\n    value: 'Production'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Writer',\r\n    value: 'Writing'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Cinematography',\r\n    value: 'Camera'\r\n  }\r\n];\r\n\r\nexport default departments;\r\n","import { ReactElement } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { HorizontalPeopleProps } from './types';\r\n\r\nconst HorizontalPeople = (props: HorizontalPeopleProps): ReactElement => {\r\n  const { isError = false, isSuccess = false, isLoading = true, people } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && people && people.length > 0 ? (\r\n    <>\r\n      {people.map((person: PartialPerson) => (\r\n        <VerticalPoster\r\n          key={person.id}\r\n          width={['185px', '205px', '230px']}\r\n          mediaItem={person ? { ...person } : undefined}\r\n          mediaType='person'\r\n          image={{\r\n            alt: `${person?.name || ''} person poster`,\r\n            src: person?.profile_path || '',\r\n            size: {\r\n              thumbnail: 'w45',\r\n              full: 'original'\r\n            }\r\n          }}\r\n          title={person?.name || ''}\r\n          subtitle={\r\n            departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n            person?.known_for_department ||\r\n            'N/A'\r\n          }\r\n          isLoading={isLoading}\r\n        />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {_.range(0, 20).map((_dummy, index: number) => (\r\n        <VerticalPoster\r\n          key={index}\r\n          width={['185px', '205px', '230px']}\r\n          mediaType='person'\r\n          title='Lorem ipsum'\r\n          subtitle='2021 • Lorem ipsum dolor sit amet'\r\n          isLoading\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n","import { ReactElement } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { HorizontalTVProps } from './types';\r\n\r\nconst HorizontalTV = (props: HorizontalTVProps): ReactElement => {\r\n  const { isError = false, isSuccess = false, isLoading = true, tv } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV Shows list!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV Shows list is currently empty!' variant='transparent' />\r\n  ) : !isLoading && isSuccess && tv && tv.length > 0 ? (\r\n    <>\r\n      {tv.map((show: PartialTV) => (\r\n        <VerticalPoster\r\n          key={show.id}\r\n          width={['185px', '205px', '230px']}\r\n          mediaItem={show ? { ...show } : undefined}\r\n          mediaType='tv'\r\n          image={{\r\n            alt: `${show?.name || ''} tv show poster`,\r\n            src: show?.poster_path || '',\r\n            size: {\r\n              thumbnail: 'w92',\r\n              full: 'original'\r\n            }\r\n          }}\r\n          rating={{\r\n            rating: show?.vote_average || null,\r\n            count: show?.vote_count || null\r\n          }}\r\n          title={show?.name || ''}\r\n          subtitle={`${[\r\n            `${handleReturnDate(show?.first_air_date || '', 'year')}` || 'N/A',\r\n            `${handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n          ]\r\n            .filter((subtitle) => subtitle)\r\n            .join(' • ')}`}\r\n          isLoading={isLoading}\r\n        />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {_.range(0, 20).map((_dummy, index: number) => (\r\n        <VerticalPoster\r\n          key={index}\r\n          width={['185px', '205px', '230px']}\r\n          mediaType='tv'\r\n          title='Lorem ipsum'\r\n          subtitle='2021 • Lorem ipsum dolor sit amet'\r\n          isLoading\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Box, Text, Fade } from '@chakra-ui/react';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport { HomeHorizontalGridProps } from './types';\r\n\r\nconst HomeHorizontalGrid = (props: HomeHorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true,\r\n    threshold: 1\r\n  });\r\n\r\n  const { children, title, pathname, isLoading = false } = props;\r\n\r\n  return (\r\n    <Box ref={ref} width='100%' maxWidth='100%'>\r\n      <Fade in={isLoading || inView} unmountOnExit style={{ width: 'inherit' }}>\r\n        <HorizontalGrid\r\n          title={\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n              fontWeight='semibold'\r\n              textTransform='capitalize'>\r\n              {title}\r\n            </Text>\r\n          }\r\n          footer={\r\n            <Link to={{ pathname }} isFullWidth isDisabled={isLoading}>\r\n              <Button\r\n                color={handleReturnColor(color)}\r\n                isFullWidth\r\n                isDisabled={isLoading}\r\n                size={isSm ? 'sm' : 'md'}\r\n                variant='text'>\r\n                {`View all ${title}`}\r\n              </Button>\r\n            </Link>\r\n          }\r\n          isLoading={isLoading}>\r\n          {children}\r\n        </HorizontalGrid>\r\n      </Fade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomeHorizontalGrid;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport Page from '../../containers/Page';\r\nimport HorizontalMovies from '../Movies/components/HorizontalMovies';\r\nimport HorizontalPeople from '../People/components/HorizontalPeople';\r\nimport HorizontalTV from '../TV/components/HorizontalTV';\r\nimport HorizontalGrid from './components/HorizontalGrid';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMoviesQuery = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMoviesQuery = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTVQuery = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTVQuery = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeopleQuery = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Home' breadcrumbs={[]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              title='Popular movies'\r\n              pathname='/movies/popular'\r\n              isLoading={popularMoviesQuery.isFetching || popularMoviesQuery.isLoading}>\r\n              <HorizontalMovies\r\n                isError={popularMoviesQuery.isError}\r\n                isSuccess={popularMoviesQuery.isSuccess}\r\n                isLoading={popularMoviesQuery.isFetching || popularMoviesQuery.isLoading}\r\n                movies={popularMoviesQuery.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title='Trending movies'\r\n              pathname='/trending/movie'\r\n              isLoading={trendingMoviesQuery.isFetching || trendingMoviesQuery.isLoading}>\r\n              <HorizontalMovies\r\n                isError={trendingMoviesQuery.isError}\r\n                isSuccess={trendingMoviesQuery.isSuccess}\r\n                isLoading={trendingMoviesQuery.isFetching || trendingMoviesQuery.isLoading}\r\n                movies={trendingMoviesQuery.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title='Popular TV shows'\r\n              pathname='/tv/popular'\r\n              isLoading={popularTVQuery.isFetching || popularTVQuery.isLoading}>\r\n              <HorizontalTV\r\n                isError={popularTVQuery.isError}\r\n                isSuccess={popularTVQuery.isSuccess}\r\n                isLoading={popularTVQuery.isFetching || popularTVQuery.isLoading}\r\n                tv={popularTVQuery.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title='Trending TV shows'\r\n              pathname='/trending/tv'\r\n              isLoading={trendingTVQuery.isFetching || trendingTVQuery.isLoading}>\r\n              <HorizontalTV\r\n                isError={trendingTVQuery.isError}\r\n                isSuccess={trendingTVQuery.isSuccess}\r\n                isLoading={trendingTVQuery.isFetching || trendingTVQuery.isLoading}\r\n                tv={trendingTVQuery.data}\r\n              />\r\n            </HorizontalGrid>\r\n\r\n            <HorizontalGrid\r\n              title='Trending People'\r\n              pathname='/trending/person'\r\n              isLoading={trendingPeopleQuery.isFetching || trendingPeopleQuery.isLoading}>\r\n              <HorizontalPeople\r\n                isError={trendingPeopleQuery.isError}\r\n                isSuccess={trendingPeopleQuery.isSuccess}\r\n                isLoading={trendingPeopleQuery.isFetching || trendingPeopleQuery.isLoading}\r\n                people={trendingPeopleQuery.data}\r\n              />\r\n            </HorizontalGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const likedListsSortBy: SortBy[] = [\r\n  {\r\n    label: 'Date Added',\r\n    value: 'dateAdded',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsMovieSortBy: SortBy[] = [...movieSortBy, ...likedListsSortBy];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsTvSortBy: SortBy[] = [...tvSortBy, ...likedListsSortBy];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const likedListsPeopleSortBy: SortBy[] = [...peopleSortBy, ...likedListsSortBy];\r\n","import { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { DepartmentProps } from './types';\r\n\r\nconst Department = ({ id, name, value, isActive = false, onClick }: DepartmentProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name, value })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport departments, { Department } from '../../../../common/data/departments';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport Genre from './components/Department';\r\n\r\nconst Departments = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleDepartmentClick = (department: Department): void => {\r\n    const departments = form.getValues().departments;\r\n\r\n    if (form.getValues().departments.some((activeDepartment) => activeDepartment.id === department.id)) {\r\n      form.setValue(\r\n        'departments',\r\n        departments.filter((activeDepartment) => activeDepartment.id !== department.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('departments', [...departments, department], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    if (form.getValues().departments.length === departments.length) {\r\n      form.setValue('departments', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('departments', [...departments], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='departments'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth px={2} pt={1.5} pb={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {`${form.getValues().departments.length === departments.length ? 'Remove' : 'Select'} All`}\r\n                </Button>\r\n              ),\r\n              title: 'Departments'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {departments.map((department) => (\r\n                  <WrapItem key={department.id}>\r\n                    <Genre\r\n                      key={department.id}\r\n                      {...department}\r\n                      isActive={value.some((activeDepartment) => activeDepartment.id === department.id)}\r\n                      onClick={handleDepartmentClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Departments;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, HStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Card from '../../../../../Clickable/Card';\r\nimport { DisplayModeItemProps } from './types';\r\n\r\nconst DisplayModeItem = (props: DisplayModeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card\r\n      color={isActive ? handleReturnColor(color) : 'gray'}\r\n      isFullWidth\r\n      onClick={onClick ? () => onClick(value) : undefined}\r\n      p={2}>\r\n      <HStack width='100%' justifyContent='center' spacing={1}>\r\n        <Icon as={icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayModeItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport DisplayModeItem from './components/DisplayModeItem';\r\nimport { DisplayMode as DisplayModeType } from './types';\r\n\r\nconst displayModes: DisplayModeType[] = [\r\n  {\r\n    label: 'Grid',\r\n    value: 'grid',\r\n    iconActive: GridOnTwoToneIcon,\r\n    icon: GridOnOutlinedIcon\r\n  },\r\n  {\r\n    label: 'List',\r\n    value: 'list',\r\n    iconActive: ListAltTwoToneIcon,\r\n    icon: ListAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth px={2} pt={1.5} pb={2}>\r\n          {{\r\n            header: { title: 'Display Mode' },\r\n            body: (\r\n              <HStack width='100%' spacing={2}>\r\n                {displayModes.map((displayMode) => (\r\n                  <DisplayModeItem\r\n                    key={displayMode.value}\r\n                    {...displayMode}\r\n                    isActive={value === displayMode.value}\r\n                    onClick={() => form.setValue('displayMode', displayMode.value, { shouldDirty: true })}\r\n                  />\r\n                ))}\r\n              </HStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import { ReactElement } from 'react';\r\n\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../Clickable/Button';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <Button\r\n      color={isActive ? handleReturnColor(color) : 'gray'}\r\n      leftIcon={isActive ? CheckOutlinedIcon : undefined}\r\n      onClick={() => onClick({ id, name })}\r\n      size='sm'\r\n      variant='outlined'>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Card from '../../../Card';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (form.getValues().genres.some((activeGenre) => activeGenre.id === genre.id)) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllClick = (): void => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    if (form.getValues().genres.length === genres.length) {\r\n      form.setValue('genres', [], { shouldDirty: true });\r\n    } else {\r\n      form.setValue('genres', [...genres], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  const handleAllLabel = (): string => {\r\n    const genres = mediaType === 'movie' ? [...movieGenres] : [...tvGenres];\r\n\r\n    return `${form.getValues().genres.length === genres.length ? 'Remove' : 'Select'} All`;\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth px={2} pt={1.5} pb={2}>\r\n          {{\r\n            header: {\r\n              actions: (\r\n                <Button onClick={() => handleAllClick()} size='sm' variant='text'>\r\n                  {handleAllLabel()}\r\n                </Button>\r\n              ),\r\n              title: 'Genres'\r\n            },\r\n            body: (\r\n              <Wrap width='100%' spacing={1}>\r\n                {mediaType === 'movie'\r\n                  ? movieGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : mediaType === 'tv'\r\n                  ? tvGenres.map((genre) => (\r\n                      <WrapItem key={genre.id}>\r\n                        <Genre\r\n                          {...genre}\r\n                          isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                          onClick={handleGenreClick}\r\n                        />\r\n                      </WrapItem>\r\n                    ))\r\n                  : null}\r\n              </Wrap>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? `${color}.400` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.500` : 'gray.200',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? `${color}.500` : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? `${color}.400` : 'gray.700',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport Card from '../../../Card';\r\nimport { Form } from '../../types';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth px={2} pt={1.5} pb={2}>\r\n          {{\r\n            header: {\r\n              title: 'Sort by'\r\n            },\r\n            body: (\r\n              <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n                {value.sortBy.map((sort) => (\r\n                  <SortByItem\r\n                    key={sort.value}\r\n                    {...sort}\r\n                    direction={value.direction}\r\n                    onSortChange={handleSortChange}\r\n                    onDirectionChange={handleDirectionChange}\r\n                  />\r\n                ))}\r\n              </VStack>\r\n            )\r\n          }}\r\n        </Card>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  movieSortBy,\r\n  likedListsMovieSortBy,\r\n  tvSortBy,\r\n  likedListsTvSortBy,\r\n  peopleSortBy,\r\n  likedListsPeopleSortBy\r\n} from '../../common/data/sort';\r\nimport { useSelector } from '../../common/hooks';\r\nimport { handleReturnColor } from '../../common/utils';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Clickable/Button';\r\nimport IconButton from '../Clickable/IconButton';\r\nimport Departments from './components/Departments';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = (props: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { mediaType, isLikedLists = false, isDisabled = false, onFilter } = props;\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: isLikedLists\r\n        ? mediaType === 'movie'\r\n          ? [...likedListsMovieSortBy]\r\n          : mediaType === 'tv'\r\n          ? [...likedListsTvSortBy]\r\n          : [...likedListsPeopleSortBy]\r\n        : mediaType === 'movie'\r\n        ? [...movieSortBy]\r\n        : mediaType === 'tv'\r\n        ? [...tvSortBy]\r\n        : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: [],\r\n    departments: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, [], []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres, []);\r\n    }\r\n\r\n    if (dirtyFields.departments) {\r\n      onFilter([], [], values.departments);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: isLikedLists\r\n            ? pathname.includes('movie')\r\n              ? [...likedListsMovieSortBy]\r\n              : pathname.includes('tv')\r\n              ? [...likedListsTvSortBy]\r\n              : [...likedListsPeopleSortBy]\r\n            : pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? handleReturnColor(color) : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        isDisabled={isDisabled}\r\n        onClick={() => onOpen()}\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <Button\r\n            color={handleReturnColor(color)}\r\n            isDisabled={!isDirty}\r\n            onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n            size='sm'>\r\n            Submit\r\n          </Button>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size='3xl'>\r\n        <VStack spacing={2} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : <Departments form={form} />}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, Text } from '@chakra-ui/react';\r\n\r\nimport { VerticalGridProps } from '../../types';\r\n\r\nconst Header = ({ title, header }: Omit<VerticalGridProps, 'children'>): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const headerTotal = header?.props?.children?.props?.children?.length || 0;\r\n\r\n  return (\r\n    <Stack\r\n      width='100%'\r\n      direction={isSm && headerTotal > 1 ? 'column' : 'row'}\r\n      alignItems={isSm && headerTotal > 1 ? 'stretch' : 'center'}\r\n      justify={title ? 'space-between' : 'flex-end'}\r\n      wrap='wrap'\r\n      spacing={2}\r\n      p={[2]}>\r\n      {title ? (\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize='2xl'\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n      ) : null}\r\n\r\n      {header}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\nimport { VerticalGridProps } from './types';\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      {title || header ? <Header title={title} header={header} /> : null}\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, VStack, Icon, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Card from '../../../../components/Clickable/Card';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  return (\r\n    <Card color={isActive ? handleReturnColor(color) : 'gray'} isFullWidth onClick={() => onClick(value)} px={2} py={6}>\r\n      <VStack width='100%' spacing={0}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }} />\r\n        <Text align='center' fontSize='xl' fontWeight='semibold' textTransform='uppercase'>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport {\r\n  PeopleAltOutlined as PeopleAltOutlinedIcon,\r\n  PeopleAltTwoTone as PeopleAltTwoToneIcon,\r\n  TheatersOutlined as TheatersOutlinedIcon,\r\n  TvOutlined as TvOutlinedIcon,\r\n  TvTwoTone as TvTwoToneIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport { MediaTypeItem as MediaTypeItemType } from '../../types';\r\nimport MediaTypeItem from '../MediaTypeItem';\r\nimport { MediaTypesProps } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypes = <MT extends unknown>(props: MediaTypesProps<MT>): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { mediaTypes, mediaType, onSetType, onClose } = props;\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return isSm ? (\r\n    <VStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </VStack>\r\n  ) : (\r\n    <HStack width='100%' justifyContent='space-between' spacing={3}>\r\n      {mediaTypesList.map((mediaTypeItem) =>\r\n        (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n          <MediaTypeItem\r\n            key={mediaTypeItem.value}\r\n            {...mediaTypeItem}\r\n            isActive={mediaTypeItem.value === mediaType}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypes;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport Modal from '../Modal';\r\nimport MediaTypes from './components/MediaTypes';\r\nimport { MediaTypePickerProps } from './types';\r\n\r\nconst MediaTypePicker = <MT extends unknown>(props: MediaTypePickerProps<MT>): ReactElement => {\r\n  const { isOpen, onClose, ...rest } = props;\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        <MediaTypes {...rest} onClose={onClose} />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import { Breadcrumb } from '../../types';\r\n\r\nconst home: Breadcrumb = {\r\n  label: 'Home',\r\n  to: { pathname: '/' }\r\n};\r\n\r\nconst search = {\r\n  label: 'Search',\r\n  to: { pathname: '/search' }\r\n};\r\n\r\nconst trending = {\r\n  label: 'Trending',\r\n  to: { pathname: '/trending' }\r\n};\r\n\r\nconst movies: Breadcrumb = {\r\n  label: 'Movies',\r\n  to: { pathname: '/movies' }\r\n};\r\n\r\nconst tv: Breadcrumb = {\r\n  label: 'TV Shows',\r\n  to: { pathname: '/tv' }\r\n};\r\n\r\nconst people: Breadcrumb = {\r\n  label: 'People',\r\n  to: { pathname: '/people' }\r\n};\r\n\r\nconst liked = {\r\n  label: 'Liked',\r\n  to: { pathname: '/liked' }\r\n};\r\n\r\nconst lists = {\r\n  label: 'Lists',\r\n  to: { pathname: '/lists' }\r\n};\r\n\r\n// '/person/:id': {\r\n//   label: 'Person',\r\n//   consistsOf: ['/', '/people', '/person/:id']\r\n// }\r\n\r\nexport { home, search, trending, movies, tv, people, liked, lists };\r\n","import { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { handleReturnDummyWidths, handleIsOverflowing } from '../../../../../common/utils';\r\nimport { toggleDescription } from '../../../../../store/slices/Modals';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, mediaItem, isLoading = false } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        cursor={isTruncated ? 'pointer' : 'text'}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'\r\n        onClick={() =>\r\n          dispatch(\r\n            toggleDescription({\r\n              open: true,\r\n              mediaType,\r\n              mediaItem\r\n            })\r\n          )\r\n        }>\r\n        {!isLoading\r\n          ? mediaItem.description\r\n          : 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { handleReturnDummyWidths, handleIsOverflowing } from '../../../../../common/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={8.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['sm', 'md', 'lg', 'xl']}\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? subtitle : 'Lorem ipsum dolor sit amet'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport { handleReturnDummyWidths, handleIsOverflowing } from '../../../../../common/utils';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoading = false } = props;\r\n\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      offsetY={11.5}\r\n      isLoaded={!isLoading}>\r\n      <Text\r\n        ref={handleIsTruncated}\r\n        align='left'\r\n        fontSize={['lg', 'xl', '2xl', '3xl']}\r\n        fontWeight='semibold'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        isTruncated\r\n        overflow='hidden'\r\n        whiteSpace='nowrap'>\r\n        {!isLoading ? title : 'Lorem ipsum'}\r\n      </Text>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useMediaQuery,\r\n  useBreakpointValue,\r\n  useBoolean,\r\n  HStack,\r\n  VStack,\r\n  Box,\r\n  AspectRatio\r\n} from '@chakra-ui/react';\r\n\r\nimport { MediaType } from '../../../common/types/types';\r\nimport Card from '../../../components/Clickable/Card';\r\nimport Link from '../../../components/Clickable/Link';\r\nimport { Theme } from '../../../theme/types';\r\nimport Image from '../../Image';\r\nimport Rating from '../../Rating';\r\nimport Skeleton from '../../Skeleton';\r\nimport Bookmark from '../components/Bookmark';\r\nimport Like from '../components/Like';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\r\n\r\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n  const iconSize = useBreakpointValue({\r\n    'base': theme.fontSizes['lg'],\r\n    'sm': theme.fontSizes['lg'],\r\n    'md': theme.fontSizes['xl'],\r\n    'lg': theme.fontSizes['2xl'],\r\n    'xl': theme.fontSizes['2xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  const {\r\n    mediaItem,\r\n    mediaType,\r\n    image,\r\n    rating,\r\n    title = 'Lorem ipsum',\r\n    subtitle = 'Lorem ipsum',\r\n    description = 'Lorem ipsum',\r\n    isLoading = false\r\n  } = props;\r\n\r\n  const [isDisabled, setIsDisabled] = useBoolean();\r\n\r\n  return (\r\n    <Link isDisabled={isLoading || isDisabled} to={{ pathname: `${mediaType}/${mediaItem?.id || ''}` }}>\r\n      <Card isFullWidth isDisabled={isLoading} isClickable={!isDisabled} isLight>\r\n        <HStack width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\r\n          {/* Image */}\r\n          <AspectRatio width={width} minWidth={width} maxWidth={width} borderRadius='base' ratio={2 / 3}>\r\n            <Skeleton isLoaded={!isLoading && Boolean(image)} borderRadius='base'>\r\n              <Image\r\n                alt={image?.alt || ''}\r\n                mediaType={mediaType}\r\n                maxWidth='none'\r\n                height='100%'\r\n                borderRadius='base'\r\n                src={image?.src || ''}\r\n                size={{ thumbnail: image?.size.thumbnail || '', full: image?.size.full || '' }}\r\n              />\r\n            </Skeleton>\r\n          </AspectRatio>\r\n\r\n          <VStack\r\n            width={[\r\n              'calc(100% - 108px)',\r\n              'calc(100% - 124px)',\r\n              'calc(100% - 168px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 204px)',\r\n              'calc(100% - 240px)'\r\n            ]}\r\n            alignItems='flex-start'\r\n            spacing={[1, 1, 2, 2, 2, 2]}>\r\n            {/* Rating component */}\r\n            {mediaType !== 'person' ? (\r\n              <Rating\r\n                rating={rating}\r\n                isLoading={isLoading}\r\n                iconFontsize={iconSize}\r\n                textFontsize={['sm', 'sm', 'md', 'lg', 'lg', 'xl']}\r\n              />\r\n            ) : null}\r\n\r\n            {/* Text */}\r\n            <VStack width='100%' alignItems='flex-start' spacing={isLoading ? 0.5 : 0}>\r\n              <Title title={title} isLoading={isLoading} />\r\n              <Subtitle subtitle={subtitle} isLoading={isLoading} />\r\n            </VStack>\r\n\r\n            <Box width='100%' onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n              {typeof description === 'string' ? (\r\n                <Description\r\n                  mediaType={mediaType}\r\n                  mediaItem={{ id: mediaItem?.id || -1, title, description }}\r\n                  isLoading={isLoading}\r\n                />\r\n              ) : (\r\n                description\r\n              )}\r\n            </Box>\r\n          </VStack>\r\n\r\n          {/* Like / List Icon buttons */}\r\n          {mediaItem ? (\r\n            <HStack\r\n              spacing={0}\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 1\r\n              }}>\r\n              {/* Like component */}\r\n              <Box onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n                <Like\r\n                  title={title}\r\n                  mediaType={mediaType}\r\n                  mediaItem={mediaItem}\r\n                  isLoading={isLoading}\r\n                  size={isSm ? 'md' : 'lg'}\r\n                />\r\n              </Box>\r\n              {/* List component */}\r\n              {mediaType !== 'person' ? (\r\n                <Box onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\r\n                  <Bookmark\r\n                    title={title}\r\n                    mediaType={mediaType}\r\n                    mediaItem={mediaItem}\r\n                    isLoading={isLoading}\r\n                    size={isSm ? 'md' : 'lg'}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </HStack>\r\n          ) : null}\r\n        </HStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { VerticalMoviesProps } from './types';\r\n\r\nconst VerticalMovies = (props: VerticalMoviesProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const { isError = false, isSuccess = false, isLoading = true, movies } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && movies && movies.length === 0 ? (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={movie.id}\r\n            mediaItem={movie ? { ...movie } : undefined}\r\n            mediaType='movie'\r\n            image={{\r\n              alt: `${movie?.title || ''} movie poster`,\r\n              src: movie?.poster_path || '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            rating={{\r\n              rating: movie?.vote_average || null,\r\n              count: movie?.vote_count || null\r\n            }}\r\n            title={movie?.title || ''}\r\n            subtitle={`${[\r\n              `${handleReturnDate(movie?.release_date || '', 'full')}` || 'N/A',\r\n              `${handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n            ]\r\n              .filter((subtitle) => subtitle)\r\n              .join(' • ')}`}\r\n            description={movie?.overview || ''}\r\n            isLoading={isLoading}\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={movie.id}\r\n            width='100%'\r\n            mediaItem={movie ? { ...movie } : undefined}\r\n            mediaType='movie'\r\n            image={{\r\n              alt: `${movie?.title || ''} movie poster`,\r\n              src: movie?.poster_path || '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            rating={{\r\n              rating: movie?.vote_average || null,\r\n              count: movie?.vote_count || null\r\n            }}\r\n            title={movie?.title || ''}\r\n            subtitle={`${[\r\n              `${handleReturnDate(movie?.release_date || '', 'year')}` || 'N/A',\r\n              `${handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n            ]\r\n              .filter((subtitle) => subtitle)\r\n              .join(' • ')}`}\r\n            isLoading={isLoading}\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {_.range(0, isSuccess && movies && movies.length > 0 ? movies.length : 20).map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={index}\r\n            mediaType='movie'\r\n            image={{\r\n              alt: 'Movie poster',\r\n              src: '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            description='Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\r\n            isLoading\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={index}\r\n            width='100%'\r\n            mediaType='movie'\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            isLoading\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, SimpleGrid, HStack, Text } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport _ from 'lodash';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport { handleReturnDummyWidths } from '../../../../common/utils';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalScroll from '../../../../components/HorizontalScroll';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { VerticalPeopleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 3);\r\n\r\nconst VerticalPeople = (props: VerticalPeopleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { isError = false, isSuccess = false, isLoading = true, people } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && people && people.length === 0 ? (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && people && people.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {people.map((person: PartialPerson) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={person.id}\r\n            mediaItem={person ? { ...person } : undefined}\r\n            mediaType='person'\r\n            image={{\r\n              alt: `${person?.name || ''} person poster`,\r\n              src: person?.profile_path || '',\r\n              size: {\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            title={person?.name || ''}\r\n            subtitle={\r\n              departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n              person?.known_for_department ||\r\n              'N/A'\r\n            }\r\n            description={\r\n              <HorizontalScroll isLoading={isLoading}>\r\n                <HStack\r\n                  divider={\r\n                    <Text\r\n                      align='left'\r\n                      fontSize={['sm', 'md', 'lg', 'xl']}\r\n                      color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                      pr={0.75}>\r\n                      ,\r\n                    </Text>\r\n                  }>\r\n                  {sort(person?.known_for || [], 'vote_average').map((mediaItem, index) => (\r\n                    <Link\r\n                      key={index}\r\n                      to={{ pathname: `/${mediaItem?.title ? 'movie' : mediaItem?.name ? 'tv' : ''}/${mediaItem.id}` }}\r\n                      isDisabled={isLoading}>\r\n                      <SkeletonText\r\n                        width={\r\n                          isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'\r\n                        }\r\n                        offsetY={8.5}\r\n                        isLoaded={!isLoading}>\r\n                        <Text\r\n                          align='left'\r\n                          fontSize={['sm', 'md', 'lg', 'xl']}\r\n                          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                          isTruncated\r\n                          overflow='hidden'\r\n                          whiteSpace='nowrap'\r\n                          sx={{\r\n                            transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n                          }}\r\n                          _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n                          {mediaItem?.title || mediaItem?.name || ''}\r\n                        </Text>\r\n                      </SkeletonText>\r\n                    </Link>\r\n                  ))}\r\n                </HStack>\r\n              </HorizontalScroll>\r\n            }\r\n            isLoading={isLoading}\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={person.id}\r\n            width='100%'\r\n            mediaItem={person ? { ...person } : undefined}\r\n            mediaType='person'\r\n            image={{\r\n              alt: `${person?.name || ''} person poster`,\r\n              src: person?.profile_path || '',\r\n              size: {\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            title={person?.name || ''}\r\n            subtitle={\r\n              departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n              person?.known_for_department ||\r\n              'N/A'\r\n            }\r\n            isLoading={isLoading}\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {_.range(0, isSuccess && people && people.length > 0 ? people.length : 20).map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={index}\r\n            mediaType='person'\r\n            image={{\r\n              alt: 'Person poster',\r\n              src: '',\r\n              size: {\r\n                thumbnail: 'w45',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            description='Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\r\n            isLoading\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={index}\r\n            width='100%'\r\n            mediaType='person'\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            isLoading\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { VerticalTVProps } from './types';\r\n\r\nconst VerticalTV = (props: VerticalTVProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 320px)');\r\n\r\n  const displayMode = useSelector((state) => state.app.ui.displayMode);\r\n\r\n  const { isError = false, isSuccess = false, isLoading = true, tv } = props;\r\n\r\n  return !isLoading && isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV Shows list!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && tv && tv.length === 0 ? (\r\n    <Empty label='TV Shows list is currently empty!' variant='outlined' />\r\n  ) : !isLoading && isSuccess && tv && tv.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {tv.map((show: PartialTV) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={show.id}\r\n            mediaItem={show ? { ...show } : undefined}\r\n            mediaType='tv'\r\n            image={{\r\n              alt: `${show?.name || ''} tv show poster`,\r\n              src: show?.poster_path || '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            rating={{\r\n              rating: show?.vote_average || null,\r\n              count: show?.vote_count || null\r\n            }}\r\n            title={show?.name || ''}\r\n            subtitle={`${[\r\n              `${handleReturnDate(show?.first_air_date || '', 'full')}` || 'N/A',\r\n              `${handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n            ]\r\n              .filter((subtitle) => subtitle)\r\n              .join(' • ')}`}\r\n            description={show?.overview || ''}\r\n            isLoading={isLoading}\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={show.id}\r\n            width='100%'\r\n            mediaItem={show ? { ...show } : undefined}\r\n            mediaType='tv'\r\n            image={{\r\n              alt: `${show?.name || ''} tv show poster`,\r\n              src: show?.poster_path || '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            rating={{\r\n              rating: show?.vote_average || null,\r\n              count: show?.vote_count || null\r\n            }}\r\n            title={show?.name || ''}\r\n            subtitle={`${[\r\n              `${handleReturnDate(show?.first_air_date || '', 'year')}` || 'N/A',\r\n              `${handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n            ]\r\n              .filter((subtitle) => subtitle)\r\n              .join(' • ')}`}\r\n            isLoading={isLoading}\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5, 6]} spacing={2}>\r\n      {_.range(0, isSuccess && tv && tv.length > 0 ? tv.length : 20).map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster\r\n            key={index}\r\n            mediaType='tv'\r\n            image={{\r\n              alt: 'TV Show poster',\r\n              src: '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            description='Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\r\n            isLoading\r\n          />\r\n        ) : (\r\n          <VerticalPoster\r\n            key={index}\r\n            width='100%'\r\n            mediaType='tv'\r\n            title='Lorem ipsum'\r\n            subtitle='2021 • Lorem ipsum dolor sit amet'\r\n            isLoading\r\n          />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Collapse } from '@chakra-ui/react';\r\n\r\nimport departments from '../../../../common/data/departments';\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor, handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n          <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n        </Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('Movies', movies.length)}\r\n          footer={\r\n            movies.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/movie' }} isFullWidth>\r\n                <Button color={handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${movies.length || 0} liked movie${\r\n                    movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {movies.map((movie, index) =>\r\n              index < 20 ? (\r\n                <VerticalPoster\r\n                  key={movie.id}\r\n                  width={['185px', '205px', '230px']}\r\n                  mediaItem={movie ? { ...movie } : undefined}\r\n                  mediaType='movie'\r\n                  image={{\r\n                    alt: `${movie?.title || ''} movie poster`,\r\n                    src: movie?.poster_path || '',\r\n                    size: {\r\n                      thumbnail: 'w92',\r\n                      full: 'original'\r\n                    }\r\n                  }}\r\n                  rating={{\r\n                    rating: movie?.vote_average || null,\r\n                    count: movie?.vote_count || null\r\n                  }}\r\n                  title={movie?.title || ''}\r\n                  subtitle={`${[\r\n                    `${handleReturnDate(movie?.release_date || '', 'year')}` || 'N/A',\r\n                    `${handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n                  ]\r\n                    .filter((subtitle) => subtitle)\r\n                    .join(' • ')}`}\r\n                  isLoading={false}\r\n                />\r\n              ) : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* TV */}\r\n      <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('TV shows', tv.length)}\r\n          footer={\r\n            tv.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/tv' }} isFullWidth>\r\n                <Button color={handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {tv.map((show, index) =>\r\n              index < 20 ? (\r\n                <VerticalPoster\r\n                  key={show.id}\r\n                  width={['185px', '205px', '230px']}\r\n                  mediaItem={show ? { ...show } : undefined}\r\n                  mediaType='tv'\r\n                  image={{\r\n                    alt: `${show?.name || ''} tv show poster`,\r\n                    src: show?.poster_path || '',\r\n                    size: {\r\n                      thumbnail: 'w92',\r\n                      full: 'original'\r\n                    }\r\n                  }}\r\n                  rating={{\r\n                    rating: show?.vote_average || null,\r\n                    count: show?.vote_count || null\r\n                  }}\r\n                  title={show?.name || ''}\r\n                  subtitle={`${[\r\n                    `${handleReturnDate(show?.first_air_date || '', 'year')}` || 'N/A',\r\n                    `${handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n                  ]\r\n                    .filter((subtitle) => subtitle)\r\n                    .join(' • ')}`}\r\n                  isLoading={false}\r\n                />\r\n              ) : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n\r\n      {/* People */}\r\n      <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n        <HorizontalGrid\r\n          title={handleRenderTitle('People', people.length)}\r\n          footer={\r\n            people.length > 20 ? (\r\n              <Link to={{ pathname: '/liked/person' }} isFullWidth>\r\n                <Button color={handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                  {`View all ${people.length || 0} liked ${\r\n                    (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n                  }`}\r\n                </Button>\r\n              </Link>\r\n            ) : undefined\r\n          }\r\n          isLoading={false}>\r\n          <>\r\n            {people.map((person, index) =>\r\n              index < 20 ? (\r\n                <VerticalPoster\r\n                  key={person.id}\r\n                  width={['185px', '205px', '230px']}\r\n                  mediaItem={person ? { ...person } : undefined}\r\n                  mediaType='person'\r\n                  image={{\r\n                    alt: `${person?.name || ''} person poster`,\r\n                    src: person?.profile_path || '',\r\n                    size: {\r\n                      thumbnail: 'w45',\r\n                      full: 'original'\r\n                    }\r\n                  }}\r\n                  title={person?.name || ''}\r\n                  subtitle={\r\n                    departments.find((department) => department.value === person?.known_for_department)?.name ||\r\n                    person?.known_for_department ||\r\n                    'N/A'\r\n                  }\r\n                  isLoading={false}\r\n                />\r\n              ) : null\r\n            )}\r\n          </>\r\n        </HorizontalGrid>\r\n      </Collapse>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, useMediaQuery, HStack, Box, Center, Text, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport { handleReturnColor } from '../../common/utils';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport Page from '../../containers/Page';\r\nimport { home, liked as likedBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport VerticalMovies from '../Movies/components/VerticalMovies';\r\nimport VerticalPeople from '../People/components/VerticalPeople';\r\nimport VerticalTV from '../TV/components/VerticalTV';\r\nimport All from './components/All';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([...liked.movies]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([...liked.tv]);\r\n  const [people, setPeople] = useState<MediaItem<'person'>[]>([...liked.people]);\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredMovies: MediaItem<'movie'>[] = [...liked.movies];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredMovies = sort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setMovies([...filteredMovies]);\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    let filteredTV: MediaItem<'tv'>[] = [...liked.tv];\r\n\r\n    if (genres && genres.length > 0) {\r\n      filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredTV = sort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setTV([...filteredTV]);\r\n  };\r\n\r\n  const handleFilterPeople = (sortBy: SortBy[], departments: Department[]): void => {\r\n    let filteredPeople: MediaItem<'person'>[] = [...liked.people];\r\n\r\n    if (departments && departments.length > 0) {\r\n      filteredPeople = filteredPeople.filter((person) =>\r\n        departments.some((department) => person.known_for_department === department.value)\r\n      );\r\n    }\r\n\r\n    if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n      filteredPeople = sort(filteredPeople, sortBy.find((sort) => sort.isActive)?.value, {\r\n        reverse: sortDirection === 'desc'\r\n      });\r\n    }\r\n\r\n    setPeople([...filteredPeople]);\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      case 'person':\r\n        handleFilterPeople(sortBy, departments);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleHasMediaTypes = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return (tv && tv.length > 0) || (people && people.length > 0);\r\n      case 'tv':\r\n        return (movies && movies.length > 0) || (people && people.length > 0);\r\n      case 'person':\r\n        return (movies && movies.length > 0) || (tv && tv.length > 0);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypes = (): MediaType[] => {\r\n    const mediaTypes: MediaType[] = [];\r\n\r\n    if (movies && movies.length > 0) {\r\n      mediaTypes.push('movie');\r\n    }\r\n    if (tv && tv.length > 0) {\r\n      mediaTypes.push('tv');\r\n    }\r\n    if (people && people.length > 0) {\r\n      mediaTypes.push('person');\r\n    }\r\n\r\n    return mediaTypes;\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, likedBreadcrumb];\r\n\r\n    switch (mediaType) {\r\n      case 'person':\r\n        breadcrumbs.push({\r\n          label: 'People',\r\n          to: { pathname: '/liked/person' }\r\n        });\r\n        break;\r\n      case 'tv':\r\n        breadcrumbs.push({\r\n          label: 'TV Shows',\r\n          to: { pathname: '/liked/tv' }\r\n        });\r\n        break;\r\n      case 'movie':\r\n        breadcrumbs.push({\r\n          label: 'Movies',\r\n          to: { pathname: '/liked/movie' }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(null);\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {mediaType === 'movie'\r\n                ? 'Movies'\r\n                : mediaType === 'tv'\r\n                ? 'TV shows'\r\n                : mediaType === 'person'\r\n                ? 'People'\r\n                : 'Liked'}\r\n              <Badge\r\n                label={\r\n                  mediaType === 'movie'\r\n                    ? String(movies.length)\r\n                    : mediaType === 'tv'\r\n                    ? String(tv.length)\r\n                    : mediaType === 'person'\r\n                    ? String(people.length)\r\n                    : String(movies.length + tv.length + people.length)\r\n                }\r\n                color={mediaType ? handleReturnColor(color) : 'gray'}\r\n                size='lg'\r\n                ml={2}\r\n              />\r\n            </Text>\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType} unmountOnExit style={{ width: isSm ? '100%' : 'auto' }}>\r\n              <HStack width={isSm ? '100%' : 'auto'} spacing={2}>\r\n                <ScaleFade in={handleHasMediaTypes()} unmountOnExit style={{ width: isSm ? '100%' : 'auto' }}>\r\n                  <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                    Change media type\r\n                  </Button>\r\n                </ScaleFade>\r\n                {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n                mediaType === 'movie' ? (\r\n                  <VerticalMovies isError={false} isSuccess isLoading={false} movies={movies} />\r\n                ) : mediaType === 'tv' ? (\r\n                  <VerticalTV isError={false} isSuccess isLoading={false} tv={tv} />\r\n                ) : mediaType === 'person' ? (\r\n                  <VerticalPeople isError={false} isSuccess isLoading={false} people={people} />\r\n                ) : (\r\n                  <All movies={movies} tv={tv} people={people} />\r\n                )\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaTypes={handleReturnMediaTypes()}\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/liked' ? '/liked/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, HStack, VStack, Fade, ScaleFade } from '@chakra-ui/react';\r\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\r\n\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport Filters from '../../../../components/Filters';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const {\r\n    mediaType,\r\n    lists,\r\n    list,\r\n    movies,\r\n    tv,\r\n    onFilter,\r\n    onMediaTypePickerOpen,\r\n    onListPickerOpen,\r\n    onListInfoOpen,\r\n    onCreateListOpen\r\n  } = props;\r\n\r\n  return mediaType || (list && lists.length > 0) ? (\r\n    isSm ? (\r\n      <Fade in={!!mediaType || (!!list && lists.length > 1)} unmountOnExit style={{ width: '100%' }}>\r\n        <VStack width='100%' spacing={2}>\r\n          {mediaType ? (\r\n            <HStack width='100%' spacing={2}>\r\n              {movies.length > 0 && tv.length > 0 ? (\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n              ) : null}\r\n              {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={onFilter} /> : null}\r\n            </HStack>\r\n          ) : null}\r\n          {!!list && lists.length > 1 ? (\r\n            <Button onClick={() => onListPickerOpen()} isFullWidth variant='outlined'>\r\n              Change list\r\n            </Button>\r\n          ) : null}\r\n        </VStack>\r\n      </Fade>\r\n    ) : (\r\n      <HStack spacing={2}>\r\n        <ScaleFade in={!!mediaType} unmountOnExit>\r\n          <HStack spacing={2}>\r\n            {movies.length > 0 && tv.length > 0 ? (\r\n              <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n            ) : null}\r\n            {mediaType ? <Filters mediaType={mediaType} isLikedLists onFilter={onFilter} /> : null}\r\n          </HStack>\r\n        </ScaleFade>\r\n        <ScaleFade in={!!list && lists.length > 1} unmountOnExit>\r\n          <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n            Change list\r\n          </Button>\r\n        </ScaleFade>\r\n        <ScaleFade in={!!list} unmountOnExit>\r\n          <IconButton\r\n            aria-label='Open Information modal'\r\n            icon={InfoTwoToneIcon}\r\n            onClick={() => onListInfoOpen()}\r\n            variant='outlined'\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    )\r\n  ) : (\r\n    <Button onClick={() => onCreateListOpen()} isFullWidth={isSm} variant='outlined'>\r\n      Create new list\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, VStack, Center, Text, Fade, Collapse } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor, handleReturnDate, handleReturnGenresByID } from '../../../../common/utils';\r\nimport Badge from '../../../../components/Badge';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ list, movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const handleRenderTitle = (title: string, total: number): ReactElement => {\r\n    return (\r\n      <Center>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {title}\r\n        </Text>\r\n        <Badge label={String(total)} color='gray' size='lg' ml={2} />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('Movies', movies.length)}\r\n            footer={\r\n              movies.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/movie` }} isFullWidth>\r\n                  <Button color={handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${movies.length || 0} movie${\r\n                      movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n                    }`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {movies.map((movie, index) =>\r\n                index < 20 ? (\r\n                  <VerticalPoster\r\n                    key={movie.id}\r\n                    width={['185px', '205px', '230px']}\r\n                    mediaItem={movie ? { ...movie } : undefined}\r\n                    mediaType='movie'\r\n                    image={{\r\n                      alt: `${movie?.title || ''} movie poster`,\r\n                      src: movie?.poster_path || '',\r\n                      size: {\r\n                        thumbnail: 'w92',\r\n                        full: 'original'\r\n                      }\r\n                    }}\r\n                    rating={{\r\n                      rating: movie?.vote_average || null,\r\n                      count: movie?.vote_count || null\r\n                    }}\r\n                    title={movie?.title || ''}\r\n                    subtitle={`${[\r\n                      `${handleReturnDate(movie?.release_date || '', 'year')} ` || 'N/A',\r\n                      `${handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`\r\n                    ]\r\n                      .filter((subtitle) => subtitle)\r\n                      .join(' • ')}`}\r\n                    isLoading={false}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={handleRenderTitle('TV shows', tv.length)}\r\n            footer={\r\n              tv.length > 20 ? (\r\n                <Link to={{ pathname: `/lists/${list.id}/tv` }} isFullWidth>\r\n                  <Button color={handleReturnColor(color)} isFullWidth size={isSm ? 'sm' : 'md'} variant='text'>\r\n                    {`View all ${tv?.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n                  </Button>\r\n                </Link>\r\n              ) : undefined\r\n            }\r\n            isLoading={false}>\r\n            <>\r\n              {tv.map((show, index) =>\r\n                index < 20 ? (\r\n                  <VerticalPoster\r\n                    key={show.id}\r\n                    width={['185px', '205px', '230px']}\r\n                    mediaItem={show ? { ...show } : undefined}\r\n                    mediaType='tv'\r\n                    image={{\r\n                      alt: `${show?.name || ''} tv show poster`,\r\n                      src: show?.poster_path || '',\r\n                      size: {\r\n                        thumbnail: 'w92',\r\n                        full: 'original'\r\n                      }\r\n                    }}\r\n                    rating={{\r\n                      rating: show?.vote_average || null,\r\n                      count: show?.vote_count || null\r\n                    }}\r\n                    title={show?.name || ''}\r\n                    subtitle={`${[\r\n                      `${handleReturnDate(show?.first_air_date || '', 'year')}` || 'N/A',\r\n                      `${handleReturnGenresByID(show?.genre_ids || [], 'tv')}`\r\n                    ]\r\n                      .filter((subtitle) => subtitle)\r\n                      .join(' • ')}`}\r\n                    isLoading={false}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, FormControl, FormLabel, Input, Textarea, FormHelperText, Collapse } from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Modal from '../../../../components/Modal';\r\nimport { toggleConfirm } from '../../../../store/slices/Modals';\r\nimport { setLists } from '../../../../store/slices/User';\r\nimport { EditListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst EditList = ({ list, isOpen, onClose }: EditListProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    if (list) {\r\n      dispatch(\r\n        setLists(\r\n          lists.map((paramList) =>\r\n            paramList.id === list.id\r\n              ? {\r\n                  ...list,\r\n                  label: values.label,\r\n                  description: values?.description || '',\r\n                  date: moment(new Date()).toISOString(),\r\n                  results: {\r\n                    ...list.results\r\n                  }\r\n                }\r\n              : { ...paramList }\r\n          )\r\n        )\r\n      );\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleCheckClose = (): void => {\r\n    if (!isDirty) {\r\n      handleClose();\r\n    } else {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Unsaved data!',\r\n          description: 'Are you sure you want to close the modal, the data inserted will be lost unless you save it!',\r\n          submitButton: (\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              onClick={() => {\r\n                dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                handleClose();\r\n              }}\r\n              size='sm'>\r\n              Close\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && list) {\r\n      form.reset({\r\n        label: list.label,\r\n        description: list.description\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title={`Edit ${list?.label ? `\"${list.label}\"` : ''} List`}\r\n      actions={\r\n        <Button\r\n          color={handleReturnColor(color)}\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleCheckClose}\r\n      isCentered\r\n      size='lg'>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${handleReturnColor(color)}.400`}\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                autoComplete='off'\r\n                errorBorderColor='red.400'\r\n                focusBorderColor={`${handleReturnColor(color)}.400`}\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { Box, HStack, Text } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport { EmptyListProps } from './types';\r\n\r\nconst EmptyList = (props: EmptyListProps): ReactElement => {\r\n  const history = useHistory();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { id, label, mediaTypeLabel } = props;\r\n\r\n  return (\r\n    <Box width='100%' px={2} pt={2}>\r\n      <Empty\r\n        button={\r\n          <HStack spacing={1}>\r\n            {mediaTypeLabel ? (\r\n              <>\r\n                <Button\r\n                  color={handleReturnColor(color)}\r\n                  onClick={() => history.push({ pathname: `/lists/${id}` })}\r\n                  size='sm'\r\n                  variant='outlined'>\r\n                  {`Back to \"${label}\" list`}\r\n                </Button>\r\n                <Text align='center' fontSize='xs' fontWeight='medium'>\r\n                  OR\r\n                </Text>\r\n              </>\r\n            ) : null}\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              onClick={() => history.push({ pathname: '/lists' })}\r\n              size='sm'\r\n              variant='outlined'>\r\n              Back to lists\r\n            </Button>\r\n          </HStack>\r\n        }\r\n        label={\r\n          mediaTypeLabel ? `No ${mediaTypeLabel} found in \"${label}\" list!` : `You have no items in \"${label}\" list!`\r\n        }\r\n        variant='outlined'\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, StatGroup, Stat, StatLabel, StatNumber, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport { StatsProps, Stat as StatType } from './types';\r\n\r\nconst Stats = (props: StatsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { totalMovies, totalTvs } = props;\r\n\r\n  const stats: StatType[] = [\r\n    {\r\n      label: 'Total',\r\n      number: totalMovies + totalTvs\r\n    },\r\n    {\r\n      label: 'Movies',\r\n      number: totalMovies\r\n    },\r\n    {\r\n      label: 'TV Shows',\r\n      number: totalTvs\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <StatGroup\r\n      width='100%'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      borderRadius='base'\r\n      p={1}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='space-between'\r\n        divider={<Box width='2px' height='44px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />}\r\n        spacing={1}>\r\n        {stats.map((stat: StatType, index: number) => (\r\n          <Stat key={index} justifyContent='center'>\r\n            <VStack spacing={0}>\r\n              <StatNumber color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='2xl' lineHeight='normal'>\r\n                {stat.number}\r\n              </StatNumber>\r\n              <StatLabel\r\n                color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n                fontSize='xs'\r\n                whiteSpace='nowrap'\r\n                textTransform='uppercase'>\r\n                {stat.label}\r\n              </StatLabel>\r\n            </VStack>\r\n          </Stat>\r\n        ))}\r\n      </HStack>\r\n    </StatGroup>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport Modal from '../../../../components/Modal';\r\nimport Stats from './components/Stats';\r\nimport { ListInfoProps } from './types';\r\n\r\nconst ListInfo = ({ list, isOpen, onClose }: ListInfoProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Text fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {`${list?.label ? `\"${list.label}\"` : ''} List`}\r\n          </Text>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs' fontWeight='normal'>\r\n            {`${(list ? list?.results.movies.length + list?.results.tv.length : 0) > 0 ? 'Updated' : 'Created'} ${\r\n              moment(list?.date).isSame(moment(), 'day')\r\n                ? moment(list?.date).fromNow()\r\n                : moment(list?.date).format('LL')\r\n            }`}\r\n          </Text>\r\n        </VStack>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      isCentered\r\n      size='md'>\r\n      <VStack width='100%' spacing={2} p={2}>\r\n        {list?.description ? (\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='lg' fontWeight='normal'>\r\n            {list.description}\r\n          </Text>\r\n        ) : null}\r\n\r\n        <Stats totalMovies={list?.results.movies.length || 0} totalTvs={list?.results.tv.length || 0} />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ListInfo;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Radio as CUIRadio } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ColorMode } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RadioProps } from './types';\r\n\r\nconst Radio = (props: RadioProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { colorMode: colorModeProp, ...rest } = props;\r\n\r\n  const mode: ColorMode = colorModeProp || colorMode;\r\n\r\n  return <CUIRadio {...rest} sx={{ ..._.merge(style.radio, style[mode]) }} />;\r\n};\r\n\r\nexport default Radio;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { RadioProps } from './types';\r\n\r\ntype RadioStyle = {\r\n  radio: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, { color = 'gray', isChecked = false, isDisabled = false }: RadioProps): RadioStyle => ({\r\n  radio: {\r\n    'opacity': isDisabled ? 0.5 : 1,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none !important'\r\n    },\r\n\r\n    '&.chakra-radio__control': {\r\n      width: theme.space[3],\r\n      height: theme.space[3],\r\n\r\n      boxShadow: 'none !important',\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '& svg': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.400` : 'transparent',\r\n      borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n      color: isChecked ? 'gray.50' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.500` : 'transparent',\r\n        borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n        color: isChecked ? 'gray.50' : 'transparent'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    '&.chakra-radio__control': {\r\n      background: isChecked ? `${color}.500` : 'transparent',\r\n      borderColor: isChecked ? `${color}.500` : 'gray.500',\r\n      color: isChecked ? 'gray.900' : 'transparent'\r\n    },\r\n\r\n    '&:hover': {\r\n      '&.chakra-radio__control': {\r\n        background: isChecked ? `${color}.400` : 'transparent',\r\n        borderColor: isChecked ? `${color}.400` : 'gray.400',\r\n        color: isChecked ? 'gray.900' : 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, useRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Text, Box } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useElementSize, useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Card from '../../../../../../components/Clickable/Card';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport Radio from '../../../../../../components/Clickable/Radio';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const listRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { width } = useElementSize(listRef);\r\n\r\n  const { id, label, results, isActive = false, isSelectable = false, isSelected = false, onSelected } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [isHoveringRadio, setIsHoveringRadio] = useBoolean();\r\n\r\n  const movies = results.movies.length;\r\n  const tv = results.tv.length;\r\n\r\n  return (\r\n    <Link isFullWidth isDisabled={isHoveringRadio} to={{ pathname: `/lists/${id}` }}>\r\n      <Card\r\n        height={`${width}px`}\r\n        color={location.pathname.includes(id) || isSelected ? handleReturnColor(color) : 'gray'}\r\n        isFullWidth\r\n        isClickable={!isHoveringRadio}>\r\n        <VStack position='relative' width='100%' spacing={0} px={2} py={6}>\r\n          {isSelectable && onSelected ? (\r\n            <Box position='absolute' top={theme.space[2]} left={theme.space[2]}>\r\n              <Radio\r\n                color={handleReturnColor(color)}\r\n                isChecked={isSelected}\r\n                onMouseEnter={() => setIsHoveringRadio.on()}\r\n                onMouseLeave={() => setIsHoveringRadio.off()}\r\n                onClick={() => onSelected(id)}\r\n              />\r\n            </Box>\r\n          ) : null}\r\n          <Text\r\n            align='center'\r\n            color={\r\n              isActive || isSelected\r\n                ? `${handleReturnColor(color)}.400`\r\n                : colorMode === 'light'\r\n                ? 'gray.900'\r\n                : 'gray.50'\r\n            }\r\n            fontSize='md'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'\r\n            sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n            {label}\r\n          </Text>\r\n          <Text\r\n            align='center'\r\n            color={\r\n              isActive || isSelected\r\n                ? `${handleReturnColor(color)}.400`\r\n                : colorMode === 'light'\r\n                ? 'gray.400'\r\n                : 'gray.500'\r\n            }\r\n            fontSize='xs'\r\n            fontWeight='400'\r\n            textTransform='capitalize'\r\n            sx={{ transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}` }}>\r\n            {`${[\r\n              `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n              `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n            ]\r\n              .filter((item) => item)\r\n              .join(' • ')}`}\r\n          </Text>\r\n        </VStack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Modal from '../../../../components/Modal';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const location = useLocation();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  useEffect(() => onClose(), [location]);\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size='2xl'>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isSm ? (\r\n          <VStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={3}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  InfoTwoTone as InfoTwoToneIcon,\r\n  EditOutlined as EditOutlinedIcon,\r\n  DeleteOutlineOutlined as DeleteOutlineOutlinedIcon,\r\n  CloseOutlined as CloseOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport store from '../../../../store';\r\nimport { ToastProps } from './types';\r\n\r\nconst Toast = (props: ToastProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = store.getState().user.ui.theme.color;\r\n\r\n  const { selected, onInfo, onEdit, onDelete, onClose } = props;\r\n\r\n  return (\r\n    <HStack\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      borderRadius='full'\r\n      boxShadow='lg'\r\n      spacing={2}\r\n      px={2}\r\n      py={1.5}\r\n      mb={1.5}>\r\n      <HStack spacing={0.25}>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n          fontSize={isSm ? 'sm' : 'md'}\r\n          fontWeight='normal'\r\n          whiteSpace='nowrap'>\r\n          {`\"${selected.label}\" list`}\r\n        </Text>\r\n      </HStack>\r\n\r\n      <HStack spacing={1}>\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Information related to selected list'\r\n            color={handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color={handleReturnColor(color)}\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={InfoTwoToneIcon}\r\n            onClick={() => onInfo()}>\r\n            Info\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Edit selected list'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={EditOutlinedIcon}\r\n            onClick={() => onEdit()}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n\r\n        {isSm ? (\r\n          <IconButton\r\n            aria-label='Delete selected list'\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            icon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}\r\n            size='sm'\r\n          />\r\n        ) : (\r\n          <Button\r\n            color='red'\r\n            colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n            leftIcon={DeleteOutlineOutlinedIcon}\r\n            onClick={() => onDelete()}>\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n\r\n      <IconButton\r\n        aria-label='Close'\r\n        colorMode={colorMode === 'light' ? 'dark' : 'light'}\r\n        icon={CloseOutlinedIcon}\r\n        onClick={() => onClose()}\r\n        size={isSm ? 'sm' : 'md'}\r\n        variant='icon'\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  useToast,\r\n  VStack,\r\n  SimpleGrid,\r\n  Box,\r\n  Center,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { Genre, MediaType, SortBy } from '../../common/types/types';\r\nimport Badge from '../../components/Badge';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport Page from '../../containers/Page';\r\nimport { home, lists as listsBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { toggleConfirm } from '../../store/slices/Modals';\r\nimport { setLists } from '../../store/slices/User';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport VerticalMovies from '../Movies/components/VerticalMovies';\r\nimport VerticalTV from '../TV/components/VerticalTV';\r\nimport Actions from './components/Actions';\r\nimport All from './components/All';\r\nimport CreateList from './components/CreateList';\r\nimport EditList from './components/EditList';\r\nimport EmptyList from './components/Empty';\r\nimport ListInfo from './components/ListInfo';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Toast from './components/Toast';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n  const { isOpen: isEditListOpen, onOpen: onEditListOpen, onClose: onEditListClose } = useDisclosure();\r\n  const { isOpen: isListInfoOpen, onOpen: onListInfoOpen, onClose: onListInfoClose } = useDisclosure();\r\n\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const toast = useToast();\r\n\r\n  const { id, mediaType: paramMediaType } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const confirmModal = useSelector((state) => state.modals.ui.confirmModal);\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem<'movie'>[]>([]);\r\n  const [tv, setTV] = useState<MediaItem<'tv'>[]>([]);\r\n\r\n  const [selected, setSelected] = useState<ListType>();\r\n\r\n  const handleFilterMovies = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.movies) {\r\n      let filteredMovies: MediaItem<'movie'>[] = [...list.results.movies];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredMovies = filteredMovies.filter((movie) => genres.some((genre) => movie.genre_ids.includes(genre.id)));\r\n      }\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredMovies = sort(filteredMovies, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setMovies([...filteredMovies]);\r\n    }\r\n  };\r\n\r\n  const handleFilterTV = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    if (list && list.results.tv) {\r\n      let filteredTV: MediaItem<'tv'>[] = [...list.results.tv];\r\n\r\n      if (genres && genres.length > 0) {\r\n        filteredTV = filteredTV.filter((show) => genres.some((genre) => show.genre_ids.includes(genre.id)));\r\n      }\r\n\r\n      if (sortBy && sortBy.find((sort) => sort.isActive)) {\r\n        filteredTV = sort(filteredTV, sortBy.find((sort) => sort.isActive)?.value, {\r\n          reverse: sortDirection === 'desc'\r\n        });\r\n      }\r\n\r\n      setTV([...filteredTV]);\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        handleFilterMovies(sortBy, genres);\r\n        break;\r\n      case 'tv':\r\n        handleFilterTV(sortBy, genres);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, listsBreadcrumb];\r\n\r\n    if (list) {\r\n      breadcrumbs.push({\r\n        label: list.label,\r\n        to: { pathname: `/lists/${list.id}` }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: { pathname: `/lists/${list.id}/tv` }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: { pathname: `/lists/${list.id}/movie` }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  const handleSelectList = (id: ListType['id']): void => {\r\n    if (selected?.id === id) {\r\n      setSelected(undefined);\r\n    } else {\r\n      setSelected(lists.find((list) => list.id === id));\r\n    }\r\n  };\r\n\r\n  const handleCloseToast = (): void => {\r\n    toast.closeAll();\r\n    setSelected(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies([...activeList.results.movies]);\r\n      setTV([...activeList.results.tv]);\r\n    }\r\n\r\n    if (paramMediaType) {\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    toast.closeAll();\r\n\r\n    if (selected) {\r\n      toast({\r\n        duration: null,\r\n        isClosable: true,\r\n        position: 'bottom',\r\n        variant: 'solid',\r\n        render: function RenderToast() {\r\n          return (\r\n            <Toast\r\n              selected={selected}\r\n              onInfo={() => onListInfoOpen()}\r\n              onEdit={() => onEditListOpen()}\r\n              onDelete={() =>\r\n                dispatch(\r\n                  toggleConfirm({\r\n                    open: true,\r\n                    title: isSm ? 'Delete' : `Delete ${selected?.label ? `\"${selected.label}\"` : ''} list`,\r\n                    description: `Are you sure you want to delete the ${\r\n                      selected?.label ? `\"${selected.label}\"` : ''\r\n                    } list? You will not be able to retrieve this list back!`,\r\n                    submitButton: (\r\n                      <Button\r\n                        color='red'\r\n                        onClick={() => {\r\n                          dispatch(setLists(lists.filter((paramList) => paramList.id !== selected?.id)));\r\n                          dispatch(toggleConfirm({ ...confirmModal, open: false }));\r\n                          handleCloseToast();\r\n                        }}\r\n                        size='sm'>\r\n                        Delete\r\n                      </Button>\r\n                    )\r\n                  })\r\n                )\r\n              }\r\n              onClose={() => handleCloseToast()}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Center>\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n              fontWeight='bold'>\r\n              {list\r\n                ? `\"${list.label}\" list ${mediaType === 'movie' ? 'Movies' : mediaType === 'tv' ? 'TV shows' : ''}`\r\n                : 'Lists'}\r\n            </Text>\r\n            <Badge\r\n              label={\r\n                list\r\n                  ? mediaType === 'movie'\r\n                    ? String(movies.length)\r\n                    : mediaType === 'tv'\r\n                    ? String(tv.length)\r\n                    : String(movies.length + tv.length)\r\n                  : String(lists.length)\r\n              }\r\n              size='lg'\r\n              ml={2}\r\n            />\r\n          </Center>\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <Actions\r\n              mediaType={mediaType}\r\n              lists={lists}\r\n              list={list}\r\n              movies={movies}\r\n              tv={tv}\r\n              onFilter={handleSetFilters}\r\n              onMediaTypePickerOpen={onMediaTypePickerOpen}\r\n              onListPickerOpen={onListPickerOpen}\r\n              onListInfoOpen={onListInfoOpen}\r\n              onCreateListOpen={onCreateListOpen}\r\n            />\r\n          ),\r\n          body: (\r\n            <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n              <VerticalGrid>\r\n                {list ? (\r\n                  movies.length > 0 || tv.length > 0 ? (\r\n                    mediaType === 'movie' ? (\r\n                      movies.length > 0 ? (\r\n                        <VerticalMovies isError={false} isSuccess isLoading={false} movies={movies} />\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='movies' />\r\n                      )\r\n                    ) : mediaType === 'tv' ? (\r\n                      tv.length > 0 ? (\r\n                        <VerticalTV isError={false} isSuccess isLoading={false} tv={tv} />\r\n                      ) : (\r\n                        <EmptyList id={list.id} label={list.label} mediaTypeLabel='tv shows' />\r\n                      )\r\n                    ) : (\r\n                      <All list={list} movies={movies} tv={tv} />\r\n                    )\r\n                  ) : (\r\n                    <EmptyList id={list.id} label={list.label} />\r\n                  )\r\n                ) : lists && lists.length > 0 ? (\r\n                  <SimpleGrid width='100%' columns={[1, 2, 3, 4, 4]} spacing={2} px={2} pt={2}>\r\n                    {lists.map((list) => (\r\n                      <List\r\n                        {...list}\r\n                        key={list.id}\r\n                        isSelectable\r\n                        isSelected={selected?.id === list.id || false}\r\n                        onSelected={handleSelectList}\r\n                      />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' p={2}>\r\n                    <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n                  </Box>\r\n                )}\r\n              </VerticalGrid>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n\r\n      <EditList list={selected} isOpen={isEditListOpen} onClose={() => onEditListClose()} />\r\n\r\n      <ListInfo list={list || selected} isOpen={isListInfoOpen} onClose={onListInfoClose} />\r\n\r\n      {!!mediaType && list ? (\r\n        <MediaTypePicker\r\n          mediaTypes={['movie', 'tv']}\r\n          mediaType={mediaType}\r\n          isOpen={isMediaTypePickerOpen}\r\n          onClose={onMediaTypePickerClose}\r\n          onSetType={(mediaType: MediaType) => history.push({ pathname: `/lists/${list.id}/${mediaType}` })}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import { ReactElement, useRef } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, HStack, Box } from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon\r\n} from '@material-ui/icons';\r\n\r\nimport { useElementSize, useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Bookmark from '../../../../components/Bookmark';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Like from '../../../../components/Like';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { height } = useElementSize(ref);\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { title, isLoading = false, mediaItem } = props;\r\n\r\n  return (\r\n    <HStack\r\n      ref={ref}\r\n      width='100%'\r\n      divider={<Box width='2px' height={height} backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />}\r\n      spacing={2}>\r\n      <Bookmark\r\n        renderButton={({ list, isBookmarked, onClick }) => (\r\n          <Button\r\n            color={isBookmarked ? handleReturnColor(color) : 'gray'}\r\n            isFullWidth={isSm}\r\n            isDisabled={isLoading || !mediaItem}\r\n            onClick={() => onClick()}\r\n            size='md'\r\n            variant='outlined'>\r\n            {isBookmarked ? `In ${list?.label ? `\"${list.label}\"` : ''} list` : 'Add to a list'}\r\n          </Button>\r\n        )}\r\n        title={title || ''}\r\n        mediaType='movie'\r\n        mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n      />\r\n      <Like\r\n        renderButton={({ isLiked, onClick }) => (\r\n          <Button\r\n            color={isLiked ? 'red' : 'gray'}\r\n            isFullWidth={isSm}\r\n            isDisabled={isLoading || !mediaItem}\r\n            leftIcon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n            onClick={() => onClick()}\r\n            size='md'\r\n            variant='outlined'>\r\n            Like\r\n          </Button>\r\n        )}\r\n        mediaType='movie'\r\n        mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, VStack, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport Badge from '../../../../../../components/Badge';\r\nimport Card from '../../../../../../components/Card';\r\nimport { PanelProps } from './types';\r\n\r\nconst Panel = ({ children, title, total }: PanelProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n  const [isSmallMob] = useMediaQuery('(max-width: 340px)');\r\n\r\n  return (\r\n    <Card box={{ header: { pb: 1.5 }, body: { pt: 1.5 } }} isFullWidth hasDivider px={2} pt={1.5} pb={2}>\r\n      {{\r\n        header: {\r\n          title,\r\n          actions: <Badge label={String(total)} size={isSm ? 'sm' : 'md'} />\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 4, 5]} spacing={2}>\r\n              {children}\r\n            </SimpleGrid>\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VisuallyHidden } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Cast as CastType } from '../../../../../../common/types/movie';\r\nimport Empty from '../../../../../../components/Empty';\r\nimport Error from '../../../../../../components/Error';\r\nimport VerticalPoster from '../../../../../../components/Poster/Vertical';\r\nimport Panel from '../Panel';\r\nimport { CastProps } from './types';\r\n\r\nconst Cast = (props: CastProps): ReactElement => {\r\n  const { cast, isLoading = true, isError = false, isSuccess = false } = props;\r\n\r\n  return (\r\n    <Panel title='Cast' total={cast?.length || 0}>\r\n      <>\r\n        <VisuallyHidden>\r\n          <span id='cast' />\r\n        </VisuallyHidden>\r\n\r\n        {!isLoading && isError ? (\r\n          <Error\r\n            label='Oh no! Something went wrong'\r\n            description='Failed to fetch {MOVIE TITLE} Cast list!'\r\n            variant='outlined'\r\n          />\r\n        ) : !isLoading && isSuccess && cast && cast.length === 0 ? (\r\n          <Empty label='{MOVIE TITLE} Cast list is currently empty!' variant='outlined' />\r\n        ) : !isLoading && isSuccess && cast && cast.length > 0 ? (\r\n          <>\r\n            {cast.map((person: CastType) => (\r\n              <VerticalPoster\r\n                key={person.id}\r\n                width='100%'\r\n                mediaItem={person ? { ...person } : undefined}\r\n                mediaType='person'\r\n                image={{\r\n                  alt: `${person?.name || ''} person poster`,\r\n                  src: person?.profile_path || '',\r\n                  size: {\r\n                    thumbnail: 'w45',\r\n                    full: 'original'\r\n                  }\r\n                }}\r\n                title={person?.name || ''}\r\n                subtitle={`As ${person.character}` || 'N/A'}\r\n                isLoading={isLoading}\r\n              />\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {_.range(0, isSuccess && cast && cast.length > 0 ? cast.length : 20).map((_dummy, index: number) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width='100%'\r\n                mediaType='person'\r\n                title='Lorem ipsum'\r\n                subtitle='2021 • Lorem ipsum dolor sit amet'\r\n                isLoading\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VisuallyHidden } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Crew as CrewType } from '../../../../../../common/types/movie';\r\nimport Empty from '../../../../../../components/Empty';\r\nimport Error from '../../../../../../components/Error';\r\nimport VerticalPoster from '../../../../../../components/Poster/Vertical';\r\nimport Panel from '../Panel';\r\nimport { CrewProps } from './types';\r\n\r\nconst Crew = (props: CrewProps): ReactElement => {\r\n  const { crew, title, isLoading = true, isError = false, isSuccess = false } = props;\r\n\r\n  return (\r\n    <Panel title={title} total={crew?.length || 0}>\r\n      <>\r\n        <VisuallyHidden>\r\n          <span id={`${title.toLowerCase()}-crew`} />\r\n        </VisuallyHidden>\r\n\r\n        {!isLoading && isError ? (\r\n          <Error\r\n            label='Oh no! Something went wrong'\r\n            description='Failed to fetch {MOVIE TITLE} ${title} Crew list!'\r\n            variant='outlined'\r\n          />\r\n        ) : !isLoading && isSuccess && crew && crew.length === 0 ? (\r\n          <Empty label='{MOVIE TITLE} ${title} Crew list is currently empty!' variant='outlined' />\r\n        ) : !isLoading && isSuccess && crew && crew.length > 0 ? (\r\n          <>\r\n            {crew.map((person: CrewType) => (\r\n              <VerticalPoster\r\n                key={person.id}\r\n                width='100%'\r\n                mediaItem={person ? { ...person } : undefined}\r\n                mediaType='person'\r\n                image={{\r\n                  alt: `${person?.name || ''} person poster`,\r\n                  src: person?.profile_path || '',\r\n                  size: {\r\n                    thumbnail: 'w45',\r\n                    full: 'original'\r\n                  }\r\n                }}\r\n                title={person?.name || ''}\r\n                subtitle={person.job || 'N/A'}\r\n                isLoading={false}\r\n              />\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {_.range(0, isSuccess && crew && crew.length > 0 ? crew.length : 20).map((_dummy, index: number) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width='100%'\r\n                mediaType='person'\r\n                title='Lorem ipsum'\r\n                subtitle='2021 • Lorem ipsum dolor sit amet'\r\n                isLoading\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Crew;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnDummyWidths, handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { QuickTogglesProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(200, 4);\r\n\r\nconst QuickToggles = (props: QuickTogglesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { departments, isLoading = true } = props;\r\n\r\n  return (\r\n    <HStack width='100%' maxWidth='100%' spacing={isLoading ? 1 : 0}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        whiteSpace='nowrap'\r\n        py={0.75}>\r\n        Jump to:\r\n      </Text>\r\n\r\n      <HorizontalScroll width='calc(100% - 61.47px)' spacing='0' isLoading={isLoading}>\r\n        <HStack\r\n          width='100%'\r\n          divider={\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n              fontSize='md'\r\n              mx={isLoading ? 0.75 : 0}>\r\n              •\r\n            </Text>\r\n          }>\r\n          {[...(!isLoading ? departments : _.range(0, 4))].map((department, index) => (\r\n            <SkeletonText\r\n              key={index}\r\n              width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'}\r\n              offsetY={14}\r\n              isLoaded={!isLoading}>\r\n              <Link\r\n                to={`${\r\n                  typeof department !== 'number'\r\n                    ? `${department.toLowerCase()}${department !== 'cast' ? '-crew' : ''}`\r\n                    : ''\r\n                }`}\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-145}>\r\n                <Button color={handleReturnColor(color)} isDisabled={isLoading} size='sm' variant='text'>\r\n                  {typeof department !== 'number' ? department : 'Lorem'}\r\n                </Button>\r\n              </Link>\r\n            </SkeletonText>\r\n          ))}\r\n        </HStack>\r\n      </HorizontalScroll>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default QuickToggles;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\n\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport Cast from './components/Cast';\r\nimport Crew from './components/Crew';\r\nimport QuickToggles from './components/QuickToggles';\r\nimport { CastCrewTabProps, Department } from './types';\r\n\r\nconst CastCrewTab = (props: CastCrewTabProps): ReactElement => {\r\n  const { cast, crew, isError = false, isSuccess = false, isLoading = true } = props;\r\n\r\n  const handleReturnCrew = (): Department[] => {\r\n    let departments: Department[] = [];\r\n\r\n    crew?.forEach((person) => {\r\n      if (departments.some((department) => department.title === person.department)) {\r\n        departments = departments.map((department) =>\r\n          department.title === person.department\r\n            ? {\r\n                ...department,\r\n                crew: department.crew.some((crewPerson) => crewPerson.id === person.id)\r\n                  ? department.crew.map((crewPerson) =>\r\n                      crewPerson.id === person.id\r\n                        ? {\r\n                            ...crewPerson,\r\n                            job: [crewPerson.job, person.job].filter((job) => job).join(', ')\r\n                          }\r\n                        : crewPerson\r\n                    )\r\n                  : [...department.crew, person]\r\n              }\r\n            : department\r\n        );\r\n      } else {\r\n        departments.push({\r\n          title: person.department,\r\n          crew: [person]\r\n        });\r\n      }\r\n    });\r\n\r\n    return sort([...departments], 'title');\r\n  };\r\n\r\n  const departments = handleReturnCrew();\r\n\r\n  return (\r\n    <VerticalGrid>\r\n      <VStack width='100%' spacing={2}>\r\n        <QuickToggles\r\n          departments={['cast', ...departments.map((department) => department.title)]}\r\n          isLoading={isLoading}\r\n        />\r\n\r\n        <VStack width='100%' spacing={4}>\r\n          <Cast cast={cast} isLoading={isLoading} isError={isError} isSuccess={isSuccess} />\r\n\r\n          {departments.map((department, index) => (\r\n            <Crew\r\n              key={index}\r\n              title={department.title}\r\n              crew={department.crew}\r\n              isLoading={isLoading}\r\n              isError={isError}\r\n              isSuccess={isSuccess}\r\n            />\r\n          ))}\r\n        </VStack>\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default CastCrewTab;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { Cast as CastType } from '../../../../../../common/types/movie';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Empty from '../../../../../../components/Empty';\r\nimport Error from '../../../../../../components/Error';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../../../components/Poster/Vertical';\r\nimport { CastProps } from './types';\r\n\r\nconst Cast = (props: CastProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { cast, isError = false, isSuccess = false, isLoading = false, onViewCastCrewTab } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title='Cast'\r\n      footer={\r\n        <Button\r\n          color={handleReturnColor(color)}\r\n          isFullWidth\r\n          isDisabled={isLoading}\r\n          onClick={() => {\r\n            document.scrollingElement?.scrollTo(0, 0);\r\n            onViewCastCrewTab();\r\n          }}\r\n          size={isSm ? 'sm' : 'md'}\r\n          variant='text'>\r\n          {`View all ${cast?.length || 0} cast member${cast && (cast.length === 0 || cast.length > 1 ? 's' : '')}`}\r\n        </Button>\r\n      }\r\n      isLoading={isLoading}\r\n      hasDivider\r\n      variant='outlined'>\r\n      {!isLoading && isError ? (\r\n        <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n      ) : !isLoading && isSuccess && cast && cast.length === 0 ? (\r\n        <Empty label='People list is currently empty!' variant='transparent' />\r\n      ) : !isLoading && isSuccess && cast && cast.length > 0 ? (\r\n        <>\r\n          {cast\r\n            .filter((_person, index) => index < 20)\r\n            .map((person: CastType) => (\r\n              <VerticalPoster\r\n                key={person.id}\r\n                width={['185px', '205px', '230px']}\r\n                mediaItem={person ? { ...person } : undefined}\r\n                mediaType='person'\r\n                image={{\r\n                  alt: `${person?.name || ''} person poster`,\r\n                  src: person?.profile_path || '',\r\n                  size: {\r\n                    thumbnail: 'w45',\r\n                    full: 'original'\r\n                  }\r\n                }}\r\n                title={person?.name || ''}\r\n                subtitle={`As ${person.character}`}\r\n                isLoading={isLoading}\r\n              />\r\n            ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {_.range(0, 20).map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='person'\r\n              title='Lorem ipsum'\r\n              subtitle='2021 • Lorem ipsum dolor sit amet'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { handleReturnDate } from '../../../../../../common/utils';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../../../components/Poster/Vertical';\r\nimport { CollectionProps } from './types';\r\n\r\nconst Collection = (props: CollectionProps): ReactElement => {\r\n  const { name, parts } = props;\r\n\r\n  const handleTitle = (): string => {\r\n    const nameSplit = name.split(' ');\r\n\r\n    return nameSplit.filter((string) => string.toLowerCase() !== 'collection').join(' ');\r\n  };\r\n\r\n  return (\r\n    <HorizontalGrid title={`Part of the \"${handleTitle()}\" franchise`} isLoading={false} hasDivider variant='outlined'>\r\n      <>\r\n        {parts.map((mediaItem) => (\r\n          <VerticalPoster\r\n            key={mediaItem.id}\r\n            width={['185px', '205px', '230px']}\r\n            mediaItem={mediaItem ? { ...mediaItem } : undefined}\r\n            mediaType={mediaItem?.title ? 'movie' : 'tv'}\r\n            image={{\r\n              alt: `${\r\n                mediaItem?.title ? `${mediaItem.title} movie` : mediaItem?.name ? `${mediaItem.name} tv show` : ''\r\n              } poster`,\r\n              src: mediaItem?.poster_path || '',\r\n              size: {\r\n                thumbnail: 'w92',\r\n                full: 'original'\r\n              }\r\n            }}\r\n            rating={{\r\n              rating: mediaItem?.vote_average || null,\r\n              count: mediaItem?.vote_count || null\r\n            }}\r\n            title={mediaItem?.title || mediaItem?.name || ''}\r\n            subtitle={\r\n              `${handleReturnDate(mediaItem?.release_date || mediaItem?.first_air_date || '', 'year')}` || 'N/A'\r\n            }\r\n            isLoading={false}\r\n          />\r\n        ))}\r\n      </>\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport { LabelProps } from './types';\r\n\r\nconst Label = ({ children, label, ...rest }: LabelProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <VStack {...rest} alignItems='flex-start' spacing={0}>\r\n      <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='semibold'>\r\n        {label}\r\n      </Text>\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, Stack, HStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../../../common/hooks';\r\nimport { handleReturnDummyWidths } from '../../../../../../../../common/utils';\r\nimport Link from '../../../../../../../../components/Clickable/Link';\r\nimport HorizontalScroll from '../../../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport Label from '../Label';\r\nimport { CreditsProps, Credit } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(200, 4);\r\n\r\nconst Credits = (props: CreditsProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { directors, executiveProducer, producers, writers, isLoading = true } = props;\r\n\r\n  const renderCredits: Credit[] = [\r\n    {\r\n      label: `Director${(directors?.length || 0) > 1 ? 's' : ''}`,\r\n      data: directors || []\r\n    },\r\n    {\r\n      label: `Executive Producer${(executiveProducer?.length || 0) > 1 ? 's' : ''}`,\r\n      data: executiveProducer || []\r\n    },\r\n    {\r\n      label: `Producer${(producers?.length || 0) > 1 ? 's' : ''}`,\r\n      data: producers || []\r\n    },\r\n    {\r\n      label: `Writer${(writers?.length || 0) > 1 ? 's' : ''}`,\r\n      data: writers || []\r\n    }\r\n  ];\r\n\r\n  const handleMaxWidth = (): string => {\r\n    let elements = 0;\r\n\r\n    renderCredits.forEach((credit) => {\r\n      if (credit.data.length > 0) {\r\n        elements = elements + 1;\r\n      }\r\n    });\r\n\r\n    return `${100 / elements}%`;\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      width='100%'\r\n      maxWidth='100%'\r\n      justifyContent='stretch'\r\n      direction={isSm ? 'column' : 'row'}\r\n      spacing={isSm ? 2 : 4}>\r\n      {renderCredits.map((credit, index) =>\r\n        isLoading || credit.data.length > 0 ? (\r\n          <Label\r\n            key={index}\r\n            width={isSm ? '100%' : 'auto'}\r\n            maxWidth={isSm ? '100%' : !isLoading ? handleMaxWidth() : `${100 / 4}%`}\r\n            flex={1}\r\n            label={credit.label}>\r\n            <HorizontalScroll isLoading={isLoading}>\r\n              <HStack\r\n                wrap='nowrap'\r\n                divider={\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm' pr={0.75}>\r\n                    ,\r\n                  </Text>\r\n                }>\r\n                {[...(!isLoading ? credit.data : _.range(0, 2))].map((person, index) => (\r\n                  <Link\r\n                    key={index}\r\n                    to={typeof person !== 'number' ? { pathname: `/person/${person.id}` } : {}}\r\n                    isDisabled={isLoading}\r\n                    whiteSpace='nowrap'>\r\n                    <SkeletonText\r\n                      width={\r\n                        isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'\r\n                      }\r\n                      offsetY={8}\r\n                      isLoaded={!isLoading}>\r\n                      <Text\r\n                        align='left'\r\n                        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                        fontSize='md'\r\n                        sx={{\r\n                          transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n                        }}\r\n                        _hover={{ color: `${color}.${colorMode === 'light' ? 500 : 400}` }}>\r\n                        {typeof person !== 'number' ? person.name : 'Lorem Ipsum'}\r\n                      </Text>\r\n                    </SkeletonText>\r\n                  </Link>\r\n                ))}\r\n              </HStack>\r\n            </HorizontalScroll>\r\n          </Label>\r\n        ) : null\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Stack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport { handleReturnDummyWidths, handleFormatMoney } from '../../../../../../../../common/utils';\r\nimport HorizontalScroll from '../../../../../../../../components/HorizontalScroll';\r\nimport SkeletonText from '../../../../../../../../components/Skeleton/Text';\r\nimport Label from '../Label';\r\nimport { InfoProps, List } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(200, 4);\r\n\r\nconst Info = (props: InfoProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const { budget, revenue, languages, originalLanguage, isLoading = true } = props;\r\n\r\n  const renderInfo: List[] = [\r\n    {\r\n      label: 'Budget',\r\n      children: (\r\n        <SkeletonText offsetY={8} isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' whiteSpace='nowrap'>\r\n            {budget ? `$${handleFormatMoney(budget)}` : isLoading ? '1,000,000' : 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n      )\r\n    },\r\n    {\r\n      label: 'Revenue',\r\n      children: (\r\n        <SkeletonText offsetY={8} isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' whiteSpace='nowrap'>\r\n            {revenue ? `$${handleFormatMoney(revenue)}` : isLoading ? '1,000,000' : 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n      )\r\n    },\r\n    {\r\n      label: (languages?.length || 0) > 1 ? 'Original Language' : 'Language',\r\n      children: (\r\n        <SkeletonText\r\n          width={isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'}\r\n          offsetY={8}\r\n          isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' whiteSpace='nowrap'>\r\n            {languages?.find((language) => language.iso_639_1 === originalLanguage)?.english_name || 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n      )\r\n    },\r\n    {\r\n      label: 'Other Languages',\r\n      children:\r\n        (languages?.length || 0) > 1 ? (\r\n          <HorizontalScroll isLoading={isLoading}>\r\n            <HStack\r\n              divider={\r\n                <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm' pr={0.75}>\r\n                  ,\r\n                </Text>\r\n              }>\r\n              {languages\r\n                ?.filter((language) => language.iso_639_1 !== originalLanguage)\r\n                ?.map((language, index) => (\r\n                  <SkeletonText\r\n                    key={index}\r\n                    width={\r\n                      isLoading ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px` : 'auto'\r\n                    }\r\n                    offsetY={8}\r\n                    isLoaded={!isLoading}>\r\n                    <Text\r\n                      align='left'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                      fontSize='md'\r\n                      whiteSpace='nowrap'>\r\n                      {language.english_name || ''}\r\n                    </Text>\r\n                  </SkeletonText>\r\n                ))}\r\n            </HStack>\r\n          </HorizontalScroll>\r\n        ) : undefined\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Stack\r\n      width='100%'\r\n      maxWidth='100%'\r\n      justifyContent='stretch'\r\n      direction={isSm ? 'column' : 'row'}\r\n      spacing={isSm ? 2 : 4}>\r\n      {renderInfo.map((item, index) =>\r\n        item.children ? (\r\n          <Label key={index} width={isSm ? '100%' : 'auto'} flex={1} label={item.label}>\r\n            {item.children}\r\n          </Label>\r\n        ) : null\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack, Text, useColorMode } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport SkeletonText from '../../../../../../../../components/Skeleton/Text';\r\nimport { OverviewProps } from './types';\r\n\r\nconst Overview = ({ overview, isLoading = true }: OverviewProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return !isLoading ? (\r\n    <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md'>\r\n      {overview}\r\n    </Text>\r\n  ) : (\r\n    <VStack width='100%' spacing={1}>\r\n      {_.range(0, 2).map((_dummy, index) => (\r\n        <SkeletonText key={index} width='100%' offsetY={6} isLoaded={!isLoading}>\r\n          <Text align='left' fontSize='xs'>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          </Text>\r\n        </SkeletonText>\r\n      ))}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../components/Card';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport Credits from './components/Credits';\r\nimport Info from './components/Info';\r\nimport Label from './components/Label';\r\nimport Overview from './components/Overview';\r\nimport { DetailsProps } from './types';\r\n\r\nconst Details = (props: DetailsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    renderCover,\r\n    tagline,\r\n    overview,\r\n    directors,\r\n    executiveProducer,\r\n    producers,\r\n    writers,\r\n    budget,\r\n    revenue,\r\n    originalLanguage,\r\n    languages,\r\n    isLoading\r\n  } = props;\r\n\r\n  return (\r\n    <Card isFullWidth p={2}>\r\n      {{\r\n        body: (\r\n          <VStack position='relative' alignItems='stretch' spacing={2}>\r\n            {renderCover}\r\n\r\n            <ScaleFade in={(tagline?.length || 0) > 0 && !isLoading} unmountOnExit>\r\n              <Label width='100%' label='Tagline'>\r\n                <SkeletonText offsetY={8} isLoaded={!isLoading?.details}>\r\n                  <Text\r\n                    align='left'\r\n                    color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                    fontSize='md'\r\n                    fontStyle='italic'>\r\n                    {tagline}\r\n                  </Text>\r\n                </SkeletonText>\r\n              </Label>\r\n            </ScaleFade>\r\n\r\n            <Label width='100%' label='Overview'>\r\n              <Overview overview={overview} isLoading={isLoading?.details} />\r\n            </Label>\r\n\r\n            <Credits\r\n              directors={directors}\r\n              executiveProducer={executiveProducer}\r\n              producers={producers}\r\n              writers={writers}\r\n              isLoading={isLoading?.credits}\r\n            />\r\n\r\n            <Info\r\n              budget={budget}\r\n              revenue={revenue}\r\n              originalLanguage={originalLanguage}\r\n              languages={languages}\r\n              isLoading={isLoading?.details}\r\n            />\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { CoverProps } from './types';\r\n\r\nconst Cover = ({ children }: CoverProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  return isSm ? (\r\n    children.poster\r\n  ) : (\r\n    <HStack width='100%' maxWidth='100%' spacing={2}>\r\n      <Box width='25%' maxWidth='25%'>\r\n        {children.poster}\r\n      </Box>\r\n      <Box width='75%' maxWidth='75%'>\r\n        {children.backdrop}\r\n      </Box>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Cover;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\n\r\nimport ClickableImage from '../../../../../../../../../../components/Clickable/Image';\r\nimport Image from '../../../../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../../../../components/Skeleton';\r\nimport { BackdropProps } from './types';\r\n\r\nconst Backdrop = (props: BackdropProps): ReactElement => {\r\n  const { title, path, video = true, isLoading = false, isError = false, onClick } = props;\r\n\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <ClickableImage\r\n      width='100%'\r\n      borderRadius='base'\r\n      ratio={6 / 3}\r\n      icon={video ? YouTubeIcon : undefined}\r\n      isDisabled={isLoading || isError || isImageError}\r\n      onClick={path ? () => onClick(path, video ? 'video' : 'backdrop') : undefined}>\r\n      <Skeleton width='100%' position='absolute' top={0} isLoaded={!isLoading} borderRadius='base'>\r\n        <Image\r\n          width='100%'\r\n          alt={`${title ? `\"${title}\"` : ''} movie backdrop`}\r\n          borderRadius='base'\r\n          mediaType='movie'\r\n          onError={() => setIsImageError.on()}\r\n          onLoad={() => setIsImageError.off()}\r\n          src={path || ''}\r\n          size={{\r\n            thumbnail: 'w300',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </ClickableImage>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean } from '@chakra-ui/react';\r\n\r\nimport ClickableImage from '../../../../../../../../../../components/Clickable/Image';\r\nimport Image from '../../../../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../../../../components/Skeleton';\r\nimport { PosterProps } from './types';\r\n\r\nconst Poster = (props: PosterProps): ReactElement => {\r\n  const { title, path, isLoading = false, isError = false, onClick } = props;\r\n\r\n  const [isImageError, setIsImageError] = useBoolean();\r\n\r\n  return (\r\n    <ClickableImage\r\n      width='100%'\r\n      borderRadius='base'\r\n      ratio={2 / 3}\r\n      isDisabled={isLoading || isError || isImageError}\r\n      onClick={path ? () => onClick(path, 'photo') : undefined}>\r\n      <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n        <Image\r\n          alt={`${title ? `\"${title}\"` : ''} movie poster`}\r\n          height='100%'\r\n          maxWidth='none'\r\n          borderRadius='base'\r\n          mediaType='movie'\r\n          onError={() => setIsImageError.on()}\r\n          onLoad={() => setIsImageError.off()}\r\n          src={path || ''}\r\n          size={{\r\n            thumbnail: 'w92',\r\n            full: 'original'\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </ClickableImage>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ImageResponse as ImageType } from '../../../../../../../../common/types/types';\r\nimport ClickableImage from '../../../../../../../../components/Clickable/Image';\r\nimport Empty from '../../../../../../../../components/Empty';\r\nimport Error from '../../../../../../../../components/Error';\r\nimport Image from '../../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { BackdropsProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst Backdrops = (props: BackdropsProps): ReactElement => {\r\n  const { name, backdrops, isError = false, isSuccess = false, isLoading = false, onClick } = props;\r\n\r\n  return (\r\n    <HStack spacing={2}>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} backdrops!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && backdrops && backdrops.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no backdrops`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(backdrops && backdrops.length > 0 ? backdrops : _.range(0, 8))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: ImageType | number, index) => (\r\n              <ClickableImage\r\n                key={index}\r\n                width={width}\r\n                borderRadius='base'\r\n                ratio={2 / 3}\r\n                isDisabled={isLoading}\r\n                onClick={typeof image !== 'number' && image ? () => onClick(image.file_path, 'backdrop') : undefined}>\r\n                <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n                  <Image\r\n                    alt={`${name ? `\"${name}\"` : ''} image`}\r\n                    maxWidth='none'\r\n                    height='100%'\r\n                    borderRadius='base'\r\n                    mediaType='movie'\r\n                    src={typeof image !== 'number' && image ? image?.file_path : ''}\r\n                    size={{\r\n                      thumbnail: 'w300',\r\n                      full: 'original'\r\n                    }}\r\n                  />\r\n                </Skeleton>\r\n              </ClickableImage>\r\n            ))}\r\n        </>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Backdrops;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../../../common/utils';\r\nimport Button from '../../../../../../../../components/Clickable/Button';\r\nimport { FooterProps } from './types';\r\n\r\nconst Footer = (props: FooterProps): ReactElement => {\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { activeIndex, name, isDisabled, onClick } = props;\r\n\r\n  const handleReturnLabel = (): string => {\r\n    switch (activeIndex) {\r\n      case 0:\r\n        return 'photos';\r\n      case 1:\r\n        return 'backdrops';\r\n      case 2:\r\n        return 'videos';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color={handleReturnColor(color)}\r\n      isFullWidth\r\n      isDisabled={isDisabled}\r\n      onClick={onClick ? () => onClick() : undefined}\r\n      size={isSm ? 'sm' : 'md'}\r\n      variant='text'>\r\n      {`View all ${name ? `\"${name}\"` : ''} ${handleReturnLabel()}`}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { ImageResponse as ImageType } from '../../../../../../../../common/types/types';\r\nimport ClickableImage from '../../../../../../../../components/Clickable/Image';\r\nimport Empty from '../../../../../../../../components/Empty';\r\nimport Error from '../../../../../../../../components/Error';\r\nimport Image from '../../../../../../../../components/Image';\r\nimport Skeleton from '../../../../../../../../components/Skeleton';\r\nimport { PhotosProps } from './types';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst Photos = (props: PhotosProps): ReactElement => {\r\n  const { name, photos, isError = false, isSuccess = false, isLoading = false, onClick } = props;\r\n\r\n  return (\r\n    <HStack spacing={2}>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} photos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && photos && photos.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no photos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(photos && photos.length > 0 ? photos : _.range(0, 8))]\r\n            .filter((_image, index) => index < 8)\r\n            .map((image: ImageType | number, index) => (\r\n              <ClickableImage\r\n                key={index}\r\n                width={width}\r\n                borderRadius='base'\r\n                ratio={2 / 3}\r\n                isDisabled={isLoading}\r\n                onClick={typeof image !== 'number' && image ? () => onClick(image.file_path, 'photo') : undefined}>\r\n                <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n                  <Image\r\n                    alt={`${name ? `\"${name}\"` : ''} image`}\r\n                    maxWidth='none'\r\n                    height='100%'\r\n                    borderRadius='base'\r\n                    mediaType='movie'\r\n                    src={typeof image !== 'number' && image ? image?.file_path : ''}\r\n                    size={{\r\n                      thumbnail: 'w92',\r\n                      full: 'original'\r\n                    }}\r\n                  />\r\n                </Skeleton>\r\n              </ClickableImage>\r\n            ))}\r\n        </>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Tab as CUITab } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../../../../../common/hooks';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { TabProps } from './types';\r\n\r\nconst Tab = ({ label, isSelected = false, isDisabled = false }: TabProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isSelected);\r\n\r\n  return (\r\n    <CUITab\r\n      px={1.5}\r\n      py={0.75}\r\n      isSelected={isSelected}\r\n      isDisabled={isDisabled}\r\n      sx={{ ..._.merge(style.tab, style[colorMode]) }}\r\n      _disabled={{ ...style.disabled }}>\r\n      {label}\r\n    </CUITab>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { Style } from '../../../../../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../../../../../theme/types';\r\n\r\nexport type TabStyle = {\r\n  tab: Style;\r\n  disabled: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isSelected = false): TabStyle => ({\r\n  tab: {\r\n    'fontSize': 'sm',\r\n    'fontWeight': 'semibold',\r\n    'textTransform': 'uppercase',\r\n    'whiteSpace': 'nowrap',\r\n\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:hover': {\r\n      textDecoration: 'none'\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  disabled: {\r\n    cursor: 'not-allowed',\r\n\r\n    opacity: 0.5\r\n  },\r\n  light: {\r\n    'color': isSelected ? 'gray.50' : 'gray.400',\r\n    'backgroundColor': isSelected ? `${color}.400` : 'transparent',\r\n\r\n    '&:hover': {\r\n      color: isSelected ? 'gray.50' : 'gray.500',\r\n      backgroundColor: isSelected ? `${color}.500` : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    'color': isSelected ? 'gray.900' : 'gray.500',\r\n    'backgroundColor': isSelected ? `${color}.500` : 'transparent',\r\n\r\n    '&:hover': {\r\n      color: isSelected ? 'gray.900' : 'gray.400',\r\n      backgroundColor: isSelected ? `${color}.400` : 'transparent'\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { TabList as CUITabList } from '@chakra-ui/react';\r\n\r\nimport Tab from './components/Tab';\r\nimport { TabListProps } from './types';\r\n\r\nconst TabList = ({ activeIndex, isLoading }: TabListProps): ReactElement => {\r\n  const renderTabs = [\r\n    {\r\n      label: 'photos',\r\n      isDisabled: isLoading.images\r\n    },\r\n    {\r\n      label: 'backdrops',\r\n      isDisabled: isLoading.images\r\n    },\r\n    {\r\n      label: 'videos',\r\n      isDisabled: isLoading.videos\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <CUITabList>\r\n      {renderTabs.map((tab, index) => (\r\n        <Tab key={index} label={tab.label} isSelected={activeIndex === index} isDisabled={tab.isDisabled} />\r\n      ))}\r\n    </CUITabList>\r\n  );\r\n};\r\n\r\nexport default TabList;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean, Box } from '@chakra-ui/react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport YouTube, { Options } from 'react-youtube';\r\n\r\nimport ClickableImage from '../../../../../../../../../../components/Clickable/Image';\r\nimport Skeleton from '../../../../../../../../../../components/Skeleton';\r\nimport { VideoProps } from './types';\r\nimport './styles.css';\r\n\r\nconst width = ['185px', '205px', '230px'];\r\n\r\nconst Video = (props: VideoProps): ReactElement => {\r\n  const { video, isLoading = false, onClick } = props;\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const opts: Options = {\r\n    playerVars: {\r\n      autoplay: isHovering ? 1 : 0,\r\n      controls: 0,\r\n      enablejsapi: 1,\r\n      disablekb: 1,\r\n      mute: 1,\r\n      fs: 0,\r\n      loop: 1,\r\n      modestbranding: 1,\r\n      showinfo: 0\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width={width}\r\n      borderRadius='base'\r\n      onMouseEnter={() => setIsHovering.on()}\r\n      onMouseLeave={() => setIsHovering.off()}>\r\n      <ClickableImage\r\n        borderRadius='base'\r\n        ratio={1 / 1}\r\n        icon={PlayArrowIcon}\r\n        onClick={typeof video !== 'number' && video ? () => onClick(video.key, 'video') : undefined}>\r\n        <Skeleton isLoaded={!isLoading} borderRadius='base'>\r\n          <YouTube\r\n            videoId={typeof video !== 'number' && video ? video?.key : ''}\r\n            className='VideoGalleryFrame'\r\n            containerClassName='VideoGalleryContainer'\r\n            opts={opts}\r\n          />\r\n        </Skeleton>\r\n      </ClickableImage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { VideoResponse as VideoType } from '../../../../../../../../common/types/types';\r\nimport Empty from '../../../../../../../../components/Empty';\r\nimport Error from '../../../../../../../../components/Error';\r\nimport Video from './components/Video';\r\nimport { VideosProps } from './types';\r\n\r\nconst Videos = (props: VideosProps): ReactElement => {\r\n  const { name, videos, isError = false, isSuccess = false, isLoading = false, onClick } = props;\r\n\r\n  return (\r\n    <HStack spacing={2}>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} videos!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && videos && videos.length === 0 ? (\r\n        <Empty label={`${name ? `\"${name}\"` : ''} has no videos`} variant='transparent' />\r\n      ) : (\r\n        <>\r\n          {[...(videos && videos.length > 0 ? videos : _.range(0, 8))]\r\n            .filter((_video, index) => index < 8)\r\n            .map((video: VideoType | number, index) => (\r\n              <Video key={index} video={video} isLoading={isLoading} onClick={onClick} />\r\n            ))}\r\n        </>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","import { ReactElement, useState } from 'react';\r\n\r\nimport { Tabs, TabPanels, TabPanel, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport Backdrops from './components/Backdrops';\r\nimport Footer from './components/Footer';\r\nimport Photos from './components/Photos';\r\nimport TabList from './components/TabList';\r\nimport Videos from './components/Videos';\r\nimport { MediaProps } from './types';\r\n\r\nconst Media = (props: MediaProps): ReactElement => {\r\n  const { name, photos, backdrops, videos, isError, isSuccess, isLoading, onClick } = props;\r\n\r\n  const [activeTab, setActiveTab] = useState<number>(0);\r\n\r\n  const handleFooterOnClick = (): void => {\r\n    switch (activeTab) {\r\n      case 0: {\r\n        if (photos && photos.length > 0) {\r\n          onClick(photos[0].file_path, 'photo');\r\n        }\r\n        break;\r\n      }\r\n      case 1: {\r\n        if (backdrops && backdrops.length > 0) {\r\n          onClick(backdrops[0].file_path, 'backdrop');\r\n        }\r\n        break;\r\n      }\r\n      case 2: {\r\n        if (videos && videos.length > 0) {\r\n          onClick(videos[0].key, 'video');\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tabs width='100%' index={activeTab} onChange={(index) => setActiveTab(index)} isLazy variant='unstyled'>\r\n      <HorizontalGrid\r\n        title={<TabList activeIndex={activeTab} isLoading={isLoading} />}\r\n        footer={\r\n          (activeTab === 0 && (photos?.length || 0) > 7) ||\r\n          (activeTab === 1 && (backdrops?.length || 0) > 7) ||\r\n          (activeTab === 2 && (videos?.length || 0) > 7) ? (\r\n            <Footer\r\n              activeIndex={activeTab}\r\n              name={name}\r\n              isDisabled={\r\n                activeTab === 2\r\n                  ? isLoading.videos || isError.videos || false\r\n                  : isLoading.images || isError.images || false\r\n              }\r\n              onClick={handleFooterOnClick}\r\n            />\r\n          ) : undefined\r\n        }\r\n        isLoading={activeTab === 2 ? isLoading.videos || false : isLoading.images || false}\r\n        hasDivider\r\n        variant='outlined'>\r\n        <TabPanels>\r\n          <TabPanel as={ScaleFade} in={activeTab === 0} p={0}>\r\n            <Photos\r\n              name={name}\r\n              photos={photos}\r\n              isError={isError.images}\r\n              isSuccess={isSuccess.images}\r\n              isLoading={isLoading.images}\r\n              onClick={onClick}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel as={ScaleFade} in={activeTab === 1} p={0}>\r\n            <Backdrops\r\n              name={name}\r\n              backdrops={backdrops}\r\n              isError={isError.images}\r\n              isSuccess={isSuccess.images}\r\n              isLoading={isLoading.images}\r\n              onClick={onClick}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel as={ScaleFade} in={activeTab === 2} p={0}>\r\n            <Videos\r\n              name={name}\r\n              videos={videos}\r\n              isError={isError.images}\r\n              isSuccess={isSuccess.images}\r\n              isLoading={isLoading.images}\r\n              onClick={onClick}\r\n            />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </HorizontalGrid>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import { ReactElement } from 'react';\r\n\r\nimport sort from 'array-sort';\r\nimport _ from 'lodash';\r\n\r\nimport { handleReturnDate } from '../../../../../../common/utils';\r\nimport Empty from '../../../../../../components/Empty';\r\nimport Error from '../../../../../../components/Error';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../../../../../components/Poster/Vertical';\r\nimport { RecommendationsProps } from './types';\r\n\r\nconst Recommendations = (props: RecommendationsProps): ReactElement => {\r\n  const { recommendations, name, isError = false, isSuccess = false, isLoading = false } = props;\r\n\r\n  return (\r\n    <HorizontalGrid title='Recommended Movies' isLoading={isLoading} hasDivider variant='outlined'>\r\n      {isError ? (\r\n        <Error\r\n          label='Oh no! Something went wrong'\r\n          description={`Failed to fetch ${name ? `\"${name}\"` : ''} recommended movies list!`}\r\n          variant='transparent'\r\n        />\r\n      ) : isSuccess && recommendations && recommendations.length === 0 ? (\r\n        <Empty label={`No recommended movies found for ${name ? `\"${name}\"` : ''}`} variant='transparent' />\r\n      ) : isSuccess && recommendations && recommendations.length > 0 ? (\r\n        <>\r\n          {sort(recommendations, 'popularity', { reverse: true }).map((movie) => (\r\n            <VerticalPoster\r\n              key={movie.id}\r\n              width={['185px', '205px', '230px']}\r\n              mediaItem={movie ? { ...movie } : undefined}\r\n              mediaType='movie'\r\n              image={{\r\n                alt: `${movie?.title || ''} movie poster`,\r\n                src: movie?.poster_path || '',\r\n                size: {\r\n                  thumbnail: 'w92',\r\n                  full: 'original'\r\n                }\r\n              }}\r\n              rating={{\r\n                rating: movie?.vote_average || null,\r\n                count: movie?.vote_count || null\r\n              }}\r\n              title={movie?.title || ''}\r\n              subtitle={`${handleReturnDate(movie?.release_date || '', 'year')}` || 'N/A'}\r\n              isLoading={false}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {[..._.range(0, 20)].map((_dummy, index: number) => (\r\n            <VerticalPoster\r\n              key={index}\r\n              width={['185px', '205px', '230px']}\r\n              mediaType='movie'\r\n              title='Lorem ipsum'\r\n              subtitle='Lorem ipsum'\r\n              isLoading\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport Cast from './components/Cast';\r\nimport Collection from './components/Collection';\r\nimport Details from './components/Details';\r\nimport Cover from './components/Details/components/Cover';\r\nimport Backdrop from './components/Details/components/Cover/components/Backdrop';\r\nimport Poster from './components/Details/components/Cover/components/Poster';\r\nimport Media from './components/Media';\r\nimport Recommendations from './components/Recommendations';\r\nimport { HomeTabProps } from './types';\r\n\r\nconst HomeTab = (props: HomeTabProps): ReactElement => {\r\n  const {\r\n    movieQuery,\r\n    creditsQuery,\r\n    imagesQuery,\r\n    videosQuery,\r\n    collectionsQuery,\r\n    recommendationsQuery,\r\n    onCoverClick,\r\n    onMediaClick,\r\n    onChangeTab\r\n  } = props;\r\n\r\n  return (\r\n    <VStack width='100%' maxWidth='100%' spacing={4}>\r\n      <Details\r\n        renderCover={\r\n          <Cover>\r\n            {{\r\n              poster: (\r\n                <Poster\r\n                  title={movieQuery.data?.title}\r\n                  path={movieQuery.data?.poster_path}\r\n                  isLoading={movieQuery.isFetching || movieQuery.isLoading}\r\n                  isError={movieQuery.isError}\r\n                  onClick={onCoverClick}\r\n                />\r\n              ),\r\n              backdrop: (\r\n                <Backdrop\r\n                  title={movieQuery.data?.title}\r\n                  path={movieQuery.data?.backdrop_path}\r\n                  video={movieQuery.data?.video || (videosQuery.data?.results.length || 0) > 0}\r\n                  isLoading={\r\n                    movieQuery.isFetching || movieQuery.isLoading || videosQuery.isFetching || videosQuery.isLoading\r\n                  }\r\n                  isError={movieQuery.isError || videosQuery.isError}\r\n                  onClick={onCoverClick}\r\n                />\r\n              )\r\n            }}\r\n          </Cover>\r\n        }\r\n        tagline={movieQuery.data?.tagline}\r\n        overview={movieQuery.data?.overview}\r\n        directors={creditsQuery.data?.crew.filter((crew) => crew.job === 'Director')}\r\n        executiveProducer={creditsQuery.data?.crew.filter((crew) => crew.job === 'Executive Producer')}\r\n        producers={creditsQuery.data?.crew.filter((crew) => crew.job === 'Producer')}\r\n        writers={creditsQuery.data?.crew.filter((crew) => crew.job === 'Writer')}\r\n        budget={movieQuery.data?.budget}\r\n        revenue={movieQuery.data?.revenue}\r\n        originalLanguage={movieQuery.data?.original_language}\r\n        languages={movieQuery.data?.spoken_languages}\r\n        isLoading={{\r\n          details: imagesQuery.isFetching || imagesQuery.isLoading,\r\n          credits: creditsQuery.isFetching || creditsQuery.isLoading\r\n        }}\r\n      />\r\n\r\n      <Cast\r\n        cast={creditsQuery.data?.cast}\r\n        name={movieQuery.data?.title}\r\n        isError={creditsQuery.isError}\r\n        isSuccess={creditsQuery.isSuccess}\r\n        isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n        onViewCastCrewTab={() => onChangeTab(1)}\r\n      />\r\n\r\n      <Media\r\n        name={movieQuery.data?.title}\r\n        photos={imagesQuery.data?.posters}\r\n        backdrops={imagesQuery.data?.backdrops}\r\n        videos={videosQuery.data?.results}\r\n        isError={{\r\n          images: imagesQuery.isError,\r\n          videos: videosQuery.isError\r\n        }}\r\n        isSuccess={{\r\n          images: imagesQuery.isSuccess,\r\n          videos: videosQuery.isSuccess\r\n        }}\r\n        isLoading={{\r\n          images: imagesQuery.isFetching || imagesQuery.isLoading,\r\n          videos: videosQuery.isFetching || videosQuery.isLoading\r\n        }}\r\n        onClick={onMediaClick}\r\n      />\r\n\r\n      <ScaleFade\r\n        in={collectionsQuery.isSuccess && Boolean(collectionsQuery.data)}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <Collection name={collectionsQuery.data?.name || ''} parts={collectionsQuery.data?.parts || []} />\r\n      </ScaleFade>\r\n\r\n      <Recommendations\r\n        recommendations={recommendationsQuery.data}\r\n        name={movieQuery.data?.title}\r\n        isError={recommendationsQuery.isError}\r\n        isSuccess={recommendationsQuery.isSuccess}\r\n        isLoading={recommendationsQuery.isFetching || recommendationsQuery.isLoading}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HomeTab;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress, ScaleFade } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport { handleReturnColor } from '../../common/utils';\r\nimport Button from '../Clickable/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount = 0, total = 0, mediaType, isLoading = false, isError = false, hasNextPage = true, onFetch } = props;\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          background={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n          sx={{ '& div': { backgroundColor: `${handleReturnColor(color)}.400` } }}\r\n        />\r\n      </VStack>\r\n\r\n      <ScaleFade in={hasNextPage && !isError && amount < total} unmountOnExit>\r\n        <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n          Load more\r\n        </Button>\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, VStack, Avatar, Text } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\n\r\nimport { HeaderProps } from './types';\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { avatar, name, username, date } = props;\r\n\r\n  return (\r\n    <HStack>\r\n      <Avatar name={name} src={`${process.env.REACT_APP_IMAGE_URL}${avatar}`} />\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='xl' fontWeight='semibold'>\r\n          {`Review by ${name}`}\r\n        </Text>\r\n        <HStack\r\n          divider={\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm' mx={0.75}>\r\n              •\r\n            </Text>\r\n          }>\r\n          {[`@${username}`, moment(date).format('LLL')].map((item, index) => (\r\n            <Text key={index} align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n              {item}\r\n            </Text>\r\n          ))}\r\n        </HStack>\r\n      </VStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactElement, useRef, useState, useCallback, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useBreakpointValue,\r\n  useBoolean,\r\n  VStack,\r\n  Text,\r\n  Collapse,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { useWindowSize, useElementSize } from '../../../../../../common/hooks';\r\nimport { handleFormatIntoParagraphs } from '../../../../../../common/utils';\r\nimport Card from '../../../../../../components/Card';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Rating from '../../../../../../components/Rating';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport Header from './components/Header';\r\nimport { ReviewProps } from './types';\r\n\r\nconst Review = (props: ReviewProps): ReactElement => {\r\n  const contentRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const iconFontsize = useBreakpointValue({\r\n    'base': theme.fontSizes['2xl'],\r\n    'sm': theme.fontSizes['2xl'],\r\n    'md': theme.fontSizes['3xl'],\r\n    'lg': theme.fontSizes['3xl'],\r\n    'xl': theme.fontSizes['3xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  const { width: windowWidth } = useWindowSize();\r\n  const { height: elementHeight } = useElementSize(contentRef);\r\n\r\n  const { author, author_details, created_at, updated_at, content, isLoading = true } = props;\r\n\r\n  const [contentChildrenRefs, setContentChildrenRefs] = useState<(HTMLParagraphElement | null)[]>([]);\r\n\r\n  const [isExpanded, setIsExpanded] = useBoolean();\r\n\r\n  const [height, setHeight] = useState<number>();\r\n\r\n  const handleContentRef = useCallback(\r\n    _.debounce((ref: HTMLDivElement | null) => {\r\n      if (ref) {\r\n        setHeight(ref.offsetHeight);\r\n      } else {\r\n        handleContentRef(contentRef.current);\r\n      }\r\n    }, 250),\r\n    [contentRef]\r\n  );\r\n\r\n  const handleCalculateMaxHeight = useCallback((): number => {\r\n    let index = -1;\r\n    let maxHeight = 0;\r\n\r\n    if (contentChildrenRefs && contentChildrenRefs.length > 0) {\r\n      contentChildrenRefs.forEach((child) => {\r\n        if (child && maxHeight <= 88) {\r\n          index = index + 1;\r\n          maxHeight = maxHeight + child?.offsetHeight;\r\n        }\r\n      });\r\n    }\r\n\r\n    const marginHeight = 16 * index;\r\n    const finalMaxHeight = maxHeight + marginHeight;\r\n\r\n    return finalMaxHeight;\r\n  }, [contentChildrenRefs]);\r\n\r\n  const maxHeight = handleCalculateMaxHeight();\r\n  const hasFooter = updated_at && !moment(updated_at).isSame(created_at);\r\n\r\n  useEffect(() => {\r\n    setIsExpanded.off();\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    handleContentRef(contentRef.current);\r\n  }, [windowWidth]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setContentChildrenRefs([]);\r\n      setHeight(undefined);\r\n\r\n      setIsExpanded.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      box={{ header: { pb: 1.5 }, body: { pt: 1.5, pb: hasFooter ? 1.5 : 0 }, footer: { pt: 1.5 } }}\r\n      isFullWidth\r\n      px={2}\r\n      pt={1.5}\r\n      pb={hasFooter ? 1.5 : 2}>\r\n      {{\r\n        header: {\r\n          title: (\r\n            <Header\r\n              avatar={author_details?.avatar_path || ''}\r\n              name={author_details?.name || author || ''}\r\n              username={author_details?.username || ''}\r\n              date={created_at || ''}\r\n            />\r\n          ),\r\n          actions: author_details?.rating ? (\r\n            <Rating\r\n              rating={{\r\n                rating: author_details?.rating || null,\r\n                count: null\r\n              }}\r\n              isLoading={isLoading}\r\n              iconFontsize={iconFontsize}\r\n              textFontsize={['lg', 'lg', 'xl', 'xl', 'xl', 'xl']}\r\n            />\r\n          ) : undefined\r\n        },\r\n        body: (\r\n          <VStack width='100%' spacing={2}>\r\n            {!isLoading && content ? (\r\n              <Collapse\r\n                in={isExpanded}\r\n                startingHeight={(height || maxHeight) >= maxHeight ? maxHeight : elementHeight || maxHeight}\r\n                style={{ width: '100%' }}>\r\n                <VStack ref={contentRef} width='100%' alignItems='flex-start' spacing={2}>\r\n                  {handleFormatIntoParagraphs(content).map((paragraph, index) => (\r\n                    <Text\r\n                      key={index}\r\n                      ref={_.debounce((ref) => {\r\n                        if (ref && !contentChildrenRefs.includes(ref)) {\r\n                          setContentChildrenRefs([...contentChildrenRefs, ref]);\r\n                        }\r\n                      }, 50)}\r\n                      align='left'\r\n                      color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                      fontSize='md'\r\n                      fontWeight='medium'>\r\n                      {paragraph}\r\n                    </Text>\r\n                  ))}\r\n                </VStack>\r\n              </Collapse>\r\n            ) : (\r\n              <VStack width='100%' spacing={1}>\r\n                {_.range(0, 3).map((_dummy, index) => (\r\n                  <SkeletonText key={index} width='100%' offsetY={6} isLoaded={!isLoading}>\r\n                    <Text align='left' fontSize='xs'>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                      labore et dolore magna aliqua.\r\n                    </Text>\r\n                  </SkeletonText>\r\n                ))}\r\n              </VStack>\r\n            )}\r\n\r\n            <ScaleFade in={(height || 0) > maxHeight} unmountOnExit style={{ width: '100%' }}>\r\n              <Button\r\n                isFullWidth\r\n                isDisabled={isLoading}\r\n                onClick={() => setIsExpanded.toggle()}\r\n                size='sm'\r\n                variant='text'>\r\n                {isExpanded ? 'Collapse' : 'Expand'}\r\n              </Button>\r\n            </ScaleFade>\r\n          </VStack>\r\n        ),\r\n        footer:\r\n          updated_at && !moment(updated_at).isSame(created_at) ? (\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs'>\r\n              {`* Updated on: ${moment(updated_at).format('LLL')}`}\r\n            </Text>\r\n          ) : undefined\r\n      }}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Review from './components/Review';\r\nimport { ReviewsTabProps } from './types';\r\n\r\n// TODO: Implement Create Review Modal & Button\r\n// TODO: Split reviews in 2 (My Reviews) & (Other Reviews) hide my reviews if user has made no reviews and set Other Reviews to Reviews\r\n// TODO: Implement Edit Review Modal & Button\r\n// TODO: Implement Delete Confirm Modal & Button\r\n\r\nconst ReviewsTab = (props: ReviewsTabProps): ReactElement => {\r\n  const { reviews, isError = false, isSuccess = false, isLoading = true, hasNextPage = false, onFetchNextPage } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={4}>\r\n      {!isLoading && isError ? (\r\n        <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n      ) : !isLoading && isSuccess && reviews && reviews.results.length === 0 ? (\r\n        <Empty label='Movies list is currently empty!' variant='transparent' />\r\n      ) : !isLoading && isSuccess && reviews && reviews.results.length > 0 ? (\r\n        <>\r\n          {reviews?.results.map((review) => (\r\n            <Review key={review.id} {...review} isLoading={isLoading} />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {_.range(0, 5).map((_dummy, index: number) => (\r\n            <Review key={index} isLoading />\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <ScaleFade in={!isError && hasNextPage} unmountOnExit>\r\n        <LoadMore\r\n          amount={reviews?.results.length || 0}\r\n          total={reviews?.total_results || 0}\r\n          mediaType='reviews'\r\n          isLoading={isLoading}\r\n          isError={isError}\r\n          hasNextPage={hasNextPage}\r\n          onFetch={onFetchNextPage}\r\n        />\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default ReviewsTab;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, Tab as CUITab } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Badge from '../../../../../../components/Badge';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { TabsProps } from './types';\r\n\r\nconst Tab = ({ label, badge, isDisabled, isSelected }: TabsProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const style = useStyles(theme, color, isSelected);\r\n\r\n  return (\r\n    <CUITab\r\n      isDisabled={isDisabled}\r\n      isSelected={isSelected}\r\n      sx={{ ..._.merge(style.tab, style[colorMode]) }}\r\n      _disabled={{ ...style.disabled }}>\r\n      {label}\r\n      {badge ? (\r\n        <Badge color={isSelected ? handleReturnColor(color) : 'gray'} label={badge} size={isSm ? 'sm' : 'md'} ml={1} />\r\n      ) : null}\r\n    </CUITab>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme as UserTheme } from '../../../../../../store/slices/User/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\nexport type TabStyle = {\r\n  tab: Style;\r\n  disabled: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, color: UserTheme['color'], isSelected = false): TabStyle => ({\r\n  tab: {\r\n    'fontSize': 'sm',\r\n    'fontWeight': 'semibold',\r\n    'textTransform': 'uppercase',\r\n    'whiteSpace': 'nowrap',\r\n\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '&:hover': {\r\n      textDecoration: 'none'\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  disabled: {\r\n    cursor: 'not-allowed',\r\n\r\n    opacity: 0.5\r\n  },\r\n  light: {\r\n    'color': isSelected ? 'gray.50' : 'gray.400',\r\n    'backgroundColor': isSelected ? `${color}.400` : 'transparent',\r\n\r\n    '&:hover': {\r\n      color: isSelected ? 'gray.50' : 'gray.500',\r\n      backgroundColor: isSelected ? `${color}.500` : 'transparent'\r\n    }\r\n  },\r\n  dark: {\r\n    'color': isSelected ? 'gray.900' : 'gray.500',\r\n    'backgroundColor': isSelected ? `${color}.500` : 'transparent',\r\n\r\n    '&:hover': {\r\n      color: isSelected ? 'gray.900' : 'gray.400',\r\n      backgroundColor: isSelected ? `${color}.400` : 'transparent'\r\n    }\r\n  }\r\n});\r\n","import { ReactElement } from 'react';\r\n\r\nimport { TabList as CUITabList } from '@chakra-ui/react';\r\n\r\nimport Tab from './components/Tab';\r\nimport { TabListProps, Tab as TabType } from './types';\r\n\r\nconst TabList = (props: TabListProps): ReactElement => {\r\n  const { activeTab, reviews, castCrew, isDisabled } = props;\r\n\r\n  const renderTabs: TabType[] = [\r\n    {\r\n      label: 'Overview'\r\n    },\r\n    {\r\n      label: 'Cast & Crew',\r\n      isDisabled: isDisabled.credits,\r\n      badge: castCrew ? String(castCrew) : undefined\r\n    },\r\n    {\r\n      label: 'Reviews',\r\n      isDisabled: isDisabled.reviews || reviews === 0,\r\n      badge: String(reviews)\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <CUITabList mb={2}>\r\n      {renderTabs.map((tab, index) => (\r\n        <Tab\r\n          key={index}\r\n          label={tab.label}\r\n          badge={tab.badge}\r\n          isSelected={activeTab === index}\r\n          isDisabled={tab.isDisabled || false}\r\n        />\r\n      ))}\r\n    </CUITabList>\r\n  );\r\n};\r\n\r\nexport default TabList;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBreakpointValue, HStack, VStack, Text, SlideFade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n  handleReturnDummyWidths,\r\n  handleReturnDate,\r\n  handleReturnNumberFromString,\r\n  handleReturnRuntime\r\n} from '../../../../common/utils';\r\nimport Rating from '../../../../components/Rating';\r\nimport SkeletonText from '../../../../components/Skeleton/Text';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 3);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const offsetY = useBreakpointValue({\r\n    'base': '12px',\r\n    'sm': '12px',\r\n    'md': '15px',\r\n    'lg': '15px',\r\n    'xl': '15px',\r\n    '2xl': '15px'\r\n  });\r\n  const iconFontsize = useBreakpointValue({\r\n    'base': theme.fontSizes['2xl'],\r\n    'sm': theme.fontSizes['2xl'],\r\n    'md': theme.fontSizes['3xl'],\r\n    'lg': theme.fontSizes['3xl'],\r\n    'xl': theme.fontSizes['3xl'],\r\n    '2xl': theme.fontSizes['3xl']\r\n  });\r\n\r\n  const { title, rating, release_date, certification, genres, runtime, isLoading = true } = props;\r\n\r\n  return (\r\n    <VStack alignItems='flex-start' spacing={isLoading ? 1 : 0}>\r\n      <HStack>\r\n        <SkeletonText offsetY={offsetY} isLoaded={!isLoading}>\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize={['2xl', '2xl', '3xl', '3xl', '3xl', '3xl']}\r\n            fontWeight='bold'>\r\n            {title || 'Movie Title'}\r\n          </Text>\r\n        </SkeletonText>\r\n        <Rating\r\n          rating={rating}\r\n          isLoading={isLoading}\r\n          iconFontsize={iconFontsize}\r\n          textFontsize={['lg', 'lg', 'xl', 'xl', 'xl', 'xl']}\r\n        />\r\n      </HStack>\r\n      <HStack\r\n        spacing={isLoading ? 1 : 0}\r\n        wrap='wrap'\r\n        divider={\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm' mx={1}>\r\n            •\r\n          </Text>\r\n        }>\r\n        <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n            {handleReturnDate(release_date || '', 'year') || 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n\r\n        <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n            {certification && certification?.release_dates.length > 0 && certification?.release_dates[0].certification\r\n              ? certification?.release_dates[0].certification\r\n              : isLoading\r\n              ? 'PG-13'\r\n              : 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n\r\n        <HStack\r\n          spacing={isLoading ? 1 : 0}\r\n          divider={\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm' pr={0.75}>\r\n              ,\r\n            </Text>\r\n          }>\r\n          {!isLoading && genres\r\n            ? genres.map((genre, index) => (\r\n                <SlideFade\r\n                  key={index}\r\n                  in\r\n                  offsetY={7}\r\n                  delay={handleReturnNumberFromString(theme.transition.duration['faster'], 'ms') / 250}>\r\n                  <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n                    {genre.name}\r\n                  </Text>\r\n                </SlideFade>\r\n              ))\r\n            : _.range(0, 2).map((_dummy, index) => (\r\n                <SkeletonText\r\n                  key={index}\r\n                  width={`${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}px`}\r\n                  height='19px'\r\n                  offsetY={7}\r\n                />\r\n              ))}\r\n        </HStack>\r\n\r\n        <SkeletonText offsetY={7} isLoaded={!isLoading}>\r\n          <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>\r\n            {runtime ? handleReturnRuntime(runtime) : '1hr 15m'}\r\n          </Text>\r\n        </SkeletonText>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useMediaQuery, useDisclosure, Tabs, TabPanels, TabPanel, ScaleFade, SlideFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport {\r\n  Review,\r\n  FullMovie,\r\n  Credits,\r\n  // ExternalIDs,\r\n  ImageResponse,\r\n  VideoResponse,\r\n  PartialMovie\r\n} from '../../common/types/movie';\r\nimport { Response, Collection as CollectionType } from '../../common/types/types';\r\nimport MediaViewer from '../../components/MediaViewer';\r\nimport { MediaViewerType, MediaViewerProps } from '../../components/MediaViewer/types';\r\nimport Page from '../../containers/Page';\r\nimport Actions from './components/Actions';\r\nimport CastCrewTab from './components/CastCrewTab';\r\nimport HomeTab from './components/HomeTab';\r\nimport ReviewsTab from './components/ReviewsTab';\r\nimport TabList from './components/TabList';\r\nimport Title from './components/Title';\r\n\r\nconst Movie = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n  const { isOpen: isMediaViewerOpen, onOpen: onMediaViewerOpen, onClose: onMediaViewerClose } = useDisclosure();\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [selectedAsset, setSelectedAsset] = useState<MediaViewerProps['selected']>();\r\n\r\n  const [activeTab, setActiveTab] = useState<number>(0);\r\n\r\n  const [reviews, setReviews] = useState<Response<Review[]>>();\r\n\r\n  // Fetching movie details\r\n  const movieQuery = useQuery([`movie-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<FullMovie>(`/movie/${id}`, {\r\n      params: {\r\n        append_to_response: 'release_dates'\r\n      },\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching movie credits\r\n  const creditsQuery = useQuery([`movie-credits-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Credits>(`/movie/${id}/credits`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching movie external ids\r\n  // const externalIdsQuery = useQuery([`movie-external_ids-${id}`, id], async () => {\r\n  //   const { data } = await axiosInstance.get<ExternalIDs>(`/movie/${id}/external_ids`, {\r\n  //     cancelToken: source.token\r\n  //   });\r\n  //   return data;\r\n  // });\r\n\r\n  // Fetching movie images\r\n  const imagesQuery = useQuery([`movie-images-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<ImageResponse>(`/movie/${id}/images`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching movie videos\r\n  const videosQuery = useQuery([`movie-videos-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<VideoResponse>(`/movie/${id}/videos`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  // Fetching movie reviews\r\n  const collectionsQuery = useQuery(\r\n    `movie-collections-${id}`,\r\n    async () => {\r\n      const { data } = await axiosInstance.get<CollectionType>(\r\n        `/collection/${movieQuery.data?.belongs_to_collection.id}`,\r\n        {\r\n          cancelToken: source.token\r\n        }\r\n      );\r\n      return data;\r\n    },\r\n    { enabled: movieQuery.isSuccess }\r\n  );\r\n\r\n  // Fetching movie reviews\r\n  const reviewsQuery = useInfiniteQuery(\r\n    [`movie-reviews-${id}`, id],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<Review[]>>(`/movie/${id}/reviews`, {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let reviews: Review[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          reviews = [...reviews, ...page.results];\r\n        });\r\n\r\n        setReviews({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(reviews, 'updated_at', { reverse: true }),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching movie recommendations\r\n  const recommendationsQuery = useQuery([`movie-recommendations-${id}`, id], async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>(`/movie/${id}/recommendations`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results.filter((_result, index) => index < 20);\r\n  });\r\n\r\n  const handleMediaClick = (asset: string, type: MediaViewerType): void => {\r\n    setSelectedAsset({ type, asset: asset });\r\n    onMediaViewerOpen();\r\n  };\r\n\r\n  /**\r\n   * This method will find the image object from images and then it will open the media modal\r\n   *\r\n   * @param path - Image path\r\n   */\r\n  const handleOnCoverClick = (path: string, type: MediaViewerType): void => {\r\n    switch (type) {\r\n      case 'video': {\r\n        const trailer = videosQuery.data?.results.find((image) => image.official || image.type === 'Trailer');\r\n\r\n        if (trailer) {\r\n          handleMediaClick(trailer.key, 'video');\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        handleMediaClick(path, type);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          <Title\r\n            title={movieQuery.data?.title}\r\n            rating={{\r\n              rating: movieQuery.data?.vote_average || null,\r\n              count: movieQuery.data?.vote_count || null\r\n            }}\r\n            release_date={movieQuery.data?.release_date}\r\n            certification={movieQuery.data?.release_dates.results.find((item) => item.iso_3166_1 === 'US')}\r\n            genres={movieQuery.data?.genres}\r\n            runtime={movieQuery.data?.runtime}\r\n            isLoading={movieQuery.isFetching || movieQuery.isLoading}\r\n          />\r\n        }\r\n        breadcrumbs={[]}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!movieQuery.isError} unmountOnExit style={{ width: isSm ? '100%' : 'auto' }}>\r\n              <Actions\r\n                title={movieQuery.data?.title}\r\n                isLoading={movieQuery.isFetching || movieQuery.isLoading}\r\n                mediaItem={\r\n                  movieQuery.data\r\n                    ? {\r\n                        adult: movieQuery.data.adult,\r\n                        poster_path: movieQuery.data.poster_path,\r\n                        overview: movieQuery.data.overview,\r\n                        release_date: movieQuery.data.release_date,\r\n                        id: movieQuery.data.id,\r\n                        original_language: movieQuery.data.original_language,\r\n                        original_title: movieQuery.data.original_title,\r\n                        title: movieQuery.data.title,\r\n                        backdrop_path: movieQuery.data.backdrop_path,\r\n                        popularity: movieQuery.data.popularity,\r\n                        video: movieQuery.data.video,\r\n                        vote_average: movieQuery.data.vote_average,\r\n                        vote_count: movieQuery.data.vote_count,\r\n                        genre_ids: movieQuery.data.genres.map((genre) => genre.id)\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <Tabs index={activeTab} onChange={(index: number) => setActiveTab(index)} variant='unstyled' p={2}>\r\n              <TabList\r\n                activeTab={activeTab}\r\n                reviews={reviews?.total_results || 0}\r\n                castCrew={(creditsQuery.data?.cast.length || 0) + (creditsQuery.data?.crew.length || 0)}\r\n                isDisabled={{\r\n                  credits: creditsQuery.isError || creditsQuery.isFetching || creditsQuery.isLoading,\r\n                  reviews: (reviewsQuery.isError || reviewsQuery.isFetching || reviewsQuery.isLoading) && !reviews\r\n                }}\r\n              />\r\n              <TabPanels>\r\n                <TabPanel as={SlideFade} in={activeTab === 0} offsetY='15vh' p={0} unmountOnExit>\r\n                  <HomeTab\r\n                    movieQuery={movieQuery}\r\n                    creditsQuery={creditsQuery}\r\n                    imagesQuery={imagesQuery}\r\n                    videosQuery={videosQuery}\r\n                    collectionsQuery={collectionsQuery}\r\n                    recommendationsQuery={recommendationsQuery}\r\n                    onCoverClick={handleOnCoverClick}\r\n                    onMediaClick={handleMediaClick}\r\n                    onChangeTab={(index: number) => setActiveTab(index)}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel as={SlideFade} in={activeTab === 1} offsetY='15vh' p={0} unmountOnExit>\r\n                  <CastCrewTab\r\n                    cast={creditsQuery.data?.cast}\r\n                    crew={creditsQuery.data?.crew}\r\n                    isError={creditsQuery.isError}\r\n                    isSuccess={creditsQuery.isSuccess}\r\n                    isLoading={creditsQuery.isFetching || creditsQuery.isLoading}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel as={SlideFade} in={activeTab === 2} offsetY='15vh' p={0} unmountOnExit>\r\n                  <ReviewsTab\r\n                    reviews={reviews}\r\n                    isError={reviewsQuery.isError}\r\n                    isSuccess={reviewsQuery.isSuccess}\r\n                    isLoading={reviewsQuery.isFetching || reviewsQuery.isLoading}\r\n                    hasNextPage={reviewsQuery.hasNextPage}\r\n                    onFetchNextPage={reviewsQuery.fetchNextPage}\r\n                  />\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      {imagesQuery.isSuccess || videosQuery.isSuccess ? (\r\n        <MediaViewer\r\n          isOpen={isMediaViewerOpen}\r\n          selected={selectedAsset}\r\n          photos={[...(imagesQuery.data?.posters || [])]}\r\n          backdrops={[...(imagesQuery.data?.backdrops || [])]}\r\n          videos={[...(videosQuery.data?.results.filter((video) => video.site === 'YouTube') || [])]}\r\n          mediaType='movie'\r\n          onClose={onMediaViewerClose}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Box, Text, Fade } from '@chakra-ui/react';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../HorizontalMovies';\r\nimport { HomeHorizontalGridProps } from './types';\r\n\r\nconst HomeHorizontalGrid = (props: HomeHorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true,\r\n    threshold: 1\r\n  });\r\n\r\n  const { movies, title, pathname, isLoading = true, isError = false, isSuccess = false } = props;\r\n\r\n  return (\r\n    <Box ref={ref} width='100%' maxWidth='100%'>\r\n      <Fade in={isLoading || inView} unmountOnExit style={{ width: 'inherit' }}>\r\n        <HorizontalGrid\r\n          title={\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n              fontWeight='semibold'\r\n              textTransform='capitalize'>\r\n              {title}\r\n            </Text>\r\n          }\r\n          footer={\r\n            <Link to={{ pathname }} isFullWidth isDisabled={isLoading}>\r\n              <Button\r\n                color={handleReturnColor(color)}\r\n                isFullWidth\r\n                isDisabled={isLoading}\r\n                size={isSm ? 'sm' : 'md'}\r\n                variant='text'>\r\n                {`View all ${title}`}\r\n              </Button>\r\n            </Link>\r\n          }\r\n          isLoading={isLoading}>\r\n          <HorizontalMovies isError={isError} isSuccess={isSuccess} isLoading={isLoading} movies={movies} />\r\n        </HorizontalGrid>\r\n      </Fade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomeHorizontalGrid;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport Page from '../../containers/Page';\r\nimport { home, movies } from '../../containers/Page/common/data/breadcrumbs';\r\nimport HorizontalGrid from './components/HorizontalGrid';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMoviesQuery = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMoviesQuery = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlayingQuery = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMoviesQuery = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='Movies' breadcrumbs={[home, movies]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              movies={popularMoviesQuery.data}\r\n              title='Popular movies'\r\n              pathname='/movies/popular'\r\n              isError={popularMoviesQuery.isError}\r\n              isSuccess={popularMoviesQuery.isSuccess}\r\n              isLoading={popularMoviesQuery.isFetching || popularMoviesQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              movies={upcomingMoviesQuery.data}\r\n              title='Upcoming Movies'\r\n              pathname='/movies/upcoming'\r\n              isError={upcomingMoviesQuery.isError}\r\n              isSuccess={upcomingMoviesQuery.isSuccess}\r\n              isLoading={upcomingMoviesQuery.isFetching || upcomingMoviesQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              movies={moviesNowPlayingQuery.data}\r\n              title='Movies Now Playing'\r\n              pathname='/movies/now-playing'\r\n              isError={moviesNowPlayingQuery.isError}\r\n              isSuccess={moviesNowPlayingQuery.isSuccess}\r\n              isLoading={moviesNowPlayingQuery.isFetching || moviesNowPlayingQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              movies={topRatedMoviesQuery.data}\r\n              title='Top Rated Movies'\r\n              pathname='/movies/top-rated'\r\n              isError={topRatedMoviesQuery.isError}\r\n              isSuccess={topRatedMoviesQuery.isSuccess}\r\n              isLoading={topRatedMoviesQuery.isFetching || topRatedMoviesQuery.isLoading}\r\n            />\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport VerticalMovies from '../../components/VerticalMovies';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlayingQuery = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlayingQuery.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Movies Now Playing'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Now Playing', to: { pathname: '/movies/now-playing' } }]}>\r\n      {{\r\n        actions: (\r\n          <Filters mediaType='movie' isDisabled={!moviesNowPlayingQuery.isSuccess} onFilter={handleSetFilters} />\r\n        ),\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={moviesNowPlayingQuery.isError}\r\n                isSuccess={moviesNowPlayingQuery.isSuccess}\r\n                isLoading={moviesNowPlayingQuery.isFetching || moviesNowPlayingQuery.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!moviesNowPlayingQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={movies?.results.length || 0}\r\n                  total={movies?.total_results || 0}\r\n                  mediaType='movies'\r\n                  isLoading={moviesNowPlayingQuery.isFetching || moviesNowPlayingQuery.isLoading}\r\n                  isError={moviesNowPlayingQuery.isError}\r\n                  hasNextPage={moviesNowPlayingQuery.hasNextPage || true}\r\n                  onFetch={moviesNowPlayingQuery.fetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport VerticalMovies from '../../components/VerticalMovies';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching popular movies\r\n  const popularMoviesQuery = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMoviesQuery.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Popular', to: { pathname: '/movies/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!popularMoviesQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={popularMoviesQuery.isError}\r\n                isSuccess={popularMoviesQuery.isSuccess}\r\n                isLoading={popularMoviesQuery.isFetching || popularMoviesQuery.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!popularMoviesQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={movies?.results.length || 0}\r\n                  total={movies?.total_results || 0}\r\n                  mediaType='movies'\r\n                  isLoading={popularMoviesQuery.isFetching || popularMoviesQuery.isLoading}\r\n                  isError={popularMoviesQuery.isError}\r\n                  hasNextPage={popularMoviesQuery.hasNextPage || true}\r\n                  onFetch={popularMoviesQuery.fetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport VerticalMovies from '../../components/VerticalMovies';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMoviesQuery = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMoviesQuery.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Top Rated', to: { pathname: '/movies/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' isDisabled={!topRatedMoviesQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={topRatedMoviesQuery.isError}\r\n                isSuccess={topRatedMoviesQuery.isSuccess}\r\n                isLoading={topRatedMoviesQuery.isFetching || topRatedMoviesQuery.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!topRatedMoviesQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={movies?.results.length || 0}\r\n                  total={movies?.total_results || 0}\r\n                  mediaType='movies'\r\n                  isLoading={topRatedMoviesQuery.isFetching || topRatedMoviesQuery.isLoading}\r\n                  isError={topRatedMoviesQuery.isError}\r\n                  hasNextPage={topRatedMoviesQuery.hasNextPage || true}\r\n                  onFetch={topRatedMoviesQuery.fetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, movies as moviesBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport VerticalMovies from '../../components/VerticalMovies';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMoviesQuery = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMoviesQuery.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Upcoming Movies'\r\n      breadcrumbs={[home, moviesBreadcrumb, { label: 'Upcoming', to: { pathname: '/movies/upcoming' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='movie' onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalMovies\r\n                isError={upcomingMoviesQuery.isError}\r\n                isSuccess={upcomingMoviesQuery.isSuccess}\r\n                isLoading={upcomingMoviesQuery.isFetching || upcomingMoviesQuery.isLoading}\r\n                movies={movies?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!upcomingMoviesQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={movies?.results.length || 0}\r\n                  total={movies?.total_results || 0}\r\n                  mediaType='movies'\r\n                  isLoading={upcomingMoviesQuery.isFetching || upcomingMoviesQuery.isLoading}\r\n                  isError={upcomingMoviesQuery.isError}\r\n                  hasNextPage={upcomingMoviesQuery.hasNextPage || true}\r\n                  onFetch={upcomingMoviesQuery.fetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport Page from '../../containers/Page';\r\nimport { home, people as peopleBreadcrumb } from '../../containers/Page/common/data/breadcrumbs';\r\nimport VerticalPeople from './components/VerticalPeople';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching people\r\n  const popularPeopleQuery = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], _genres: unknown[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setDepartments(departments);\r\n\r\n    popularPeopleQuery.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='People' breadcrumbs={[home, peopleBreadcrumb]}>\r\n      {{\r\n        actions: <Filters mediaType='person' isDisabled={!popularPeopleQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalPeople\r\n                isError={popularPeopleQuery.isError}\r\n                isSuccess={popularPeopleQuery.isSuccess}\r\n                isLoading={popularPeopleQuery.isFetching || popularPeopleQuery.isLoading}\r\n                people={people?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!popularPeopleQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={people?.results.length || 0}\r\n                  total={people?.total_results || 0}\r\n                  mediaType='people'\r\n                  isLoading={popularPeopleQuery.isFetching || popularPeopleQuery.isLoading}\r\n                  isError={popularPeopleQuery.isError}\r\n                  hasNextPage={popularPeopleQuery.hasNextPage || true}\r\n                  onFetch={popularPeopleQuery.fetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../../Movies/components/HorizontalMovies';\r\nimport { MoviesProps } from './types';\r\n\r\nconst Movies = (props: MoviesProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} movie${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} movie${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalMovies\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        isLoading={isFetching || isLoading}\r\n        movies={results || []}\r\n      />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../People/components/HorizontalPeople';\r\nimport { PeopleProps } from './types';\r\n\r\nconst People = (props: PeopleProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} ${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'person' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} ${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 'people' : 'person') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalPeople\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        isLoading={isFetching || isLoading}\r\n        people={results || []}\r\n      />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Text } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../../../common/utils';\r\nimport Button from '../../../../../../components/Clickable/Button';\r\nimport Link from '../../../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../../TV/components/HorizontalTV';\r\nimport { TVProps } from './types';\r\n\r\nconst TV = (props: TVProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { query, results, total_results, isFetching, isLoading, isError, isSuccess, refetch } = props;\r\n\r\n  return (\r\n    <HorizontalGrid\r\n      title={\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n          fontWeight='semibold'\r\n          textTransform='capitalize'>\r\n          {`Found ${total_results || 0} TV show${\r\n            total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n          } with \"${query}\"`}\r\n        </Text>\r\n      }\r\n      footer={\r\n        (total_results || 0) > 20 ? (\r\n          <Link\r\n            to={{ pathname: '/search', search: queryString.stringify({ query, page: 1, mediaType: 'tv' }) }}\r\n            isFullWidth\r\n            isDisabled={isFetching || isLoading}>\r\n            <Button\r\n              color={handleReturnColor(color)}\r\n              isFullWidth\r\n              isDisabled={isFetching || isLoading}\r\n              onClick={() => refetch()}\r\n              size={isSm ? 'sm' : 'md'}\r\n              variant='text'>\r\n              {`View all ${total_results || 0} TV show${\r\n                total_results ? (total_results === 0 || total_results > 1 ? 's' : '') : ''\r\n              } with \"${query}\"`}\r\n            </Button>\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      isLoading={isFetching || isLoading}>\r\n      <HorizontalTV isError={isError} isSuccess={isSuccess} isLoading={isFetching || isLoading} tv={results || []} />\r\n    </HorizontalGrid>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade } from '@chakra-ui/react';\r\n\r\nimport Movies from './components/Movies';\r\nimport People from './components/People';\r\nimport TV from './components/TV';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <VStack width='100%' spacing={6}>\r\n      {/* Movies */}\r\n      <Fade\r\n        in={(movies.data?.pages[movies.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <Movies\r\n          query={query}\r\n          results={movies.data?.pages[movies.data?.pages.length - 1].results || []}\r\n          total_results={movies.data?.pages[movies.data?.pages.length - 1].total_results || 0}\r\n          isFetching={movies.isFetching}\r\n          isLoading={movies.isLoading}\r\n          isError={movies.isError}\r\n          isSuccess={movies.isSuccess}\r\n          refetch={movies.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* TV */}\r\n      <Fade\r\n        in={(tv.data?.pages[tv.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <TV\r\n          query={query}\r\n          results={tv.data?.pages[tv.data?.pages.length - 1].results || []}\r\n          total_results={tv.data?.pages[tv.data?.pages.length - 1].total_results || 0}\r\n          isFetching={tv.isFetching}\r\n          isLoading={tv.isLoading}\r\n          isError={tv.isError}\r\n          isSuccess={tv.isSuccess}\r\n          refetch={tv.refetch}\r\n        />\r\n      </Fade>\r\n\r\n      {/* People */}\r\n      <Fade\r\n        in={(people.data?.pages[people.data?.pages.length - 1]?.results.length || 0) > 0}\r\n        unmountOnExit\r\n        style={{ width: '100%' }}>\r\n        <People\r\n          query={query}\r\n          results={people.data?.pages[people.data?.pages.length - 1].results || []}\r\n          total_results={people.data?.pages[people.data?.pages.length - 1].total_results || 0}\r\n          isFetching={people.isFetching}\r\n          isLoading={people.isLoading}\r\n          isError={people.isError}\r\n          isSuccess={people.isSuccess}\r\n          refetch={people.refetch}\r\n        />\r\n      </Fade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useBoolean, Center, ScaleFade } from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\n\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { ActionsProps } from './types';\r\n\r\nconst Actions = (props: ActionsProps): ReactElement => {\r\n  const {\r\n    hasQuery = false,\r\n    isFormLocked = false,\r\n    isHoveringLock = false,\r\n    onToggleLock,\r\n    onHoverLock,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isHoveringClear, setIsHoveringClear] = useBoolean();\r\n\r\n  return (\r\n    <Center>\r\n      <ScaleFade in={hasQuery} unmountOnExit>\r\n        <Tooltip\r\n          aria-label='Clear search'\r\n          label='Clear search'\r\n          isOpen={isHoveringClear}\r\n          isDisabled={!hasQuery}\r\n          placement='top'>\r\n          <IconButton\r\n            aria-label='Clear search'\r\n            icon={ClearOutlinedIcon}\r\n            isDisabled={!hasQuery}\r\n            onClick={() => onClearQuery()}\r\n            onMouseEnter={() => setIsHoveringClear.on()}\r\n            onMouseLeave={() => setIsHoveringClear.off()}\r\n            size='sm'\r\n            variant='icon'\r\n          />\r\n        </Tooltip>\r\n      </ScaleFade>\r\n      <Tooltip\r\n        aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n        isOpen={isHoveringLock}\r\n        placement='top'>\r\n        <IconButton\r\n          aria-label={isFormLocked ? 'Unlock Search' : 'Lock Search'}\r\n          icon={isFormLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n          onClick={() => onToggleLock()}\r\n          onMouseEnter={() => onHoverLock(true)}\r\n          onMouseLeave={() => onHoverLock(false)}\r\n          size='sm'\r\n          variant='icon'\r\n        />\r\n      </Tooltip>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text, SlideFade } from '@chakra-ui/react';\r\n\r\nimport { DisplayProps } from './types';\r\n\r\nconst Display = ({ query = '', mediaType, hasUnsubmitted, totalResults }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const handleMultiply = (): number => {\r\n    return (totalResults?.movies || 0) + (totalResults?.tv || 0) + (totalResults?.people || 0);\r\n  };\r\n\r\n  const handleReturnMediaTypeResults = (): number => {\r\n    switch (mediaType) {\r\n      case 'person':\r\n        return totalResults?.people || 0;\r\n      case 'tv':\r\n        return totalResults?.tv || 0;\r\n      case 'movie':\r\n        return totalResults?.movies || 0;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const handleReturnMediaTypeLabel = (): string => {\r\n    if (mediaType) {\r\n      const total = handleReturnMediaTypeResults();\r\n\r\n      switch (mediaType) {\r\n        case 'person':\r\n          return `${total > 1 ? 'People' : 'Person'}`;\r\n        case 'tv':\r\n          return `TV Show${total > 1 ? 's' : ''}`;\r\n        case 'movie':\r\n          return `Movie${total > 1 ? 's' : ''}`;\r\n        default:\r\n          return '';\r\n      }\r\n    } else {\r\n      const total = handleMultiply();\r\n\r\n      return `result${total > 1 ? 's' : ''}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SlideFade in={Boolean(totalResults) && !hasUnsubmitted} offsetY={-7} unmountOnExit style={{ width: '100%' }}>\r\n      <HStack width='100%' justifyContent='space-between'>\r\n        <Text\r\n          align='left'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n        <Text align='right' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='sm'>{`${\r\n          mediaType ? handleReturnMediaTypeResults() : handleMultiply()\r\n        } ${handleReturnMediaTypeLabel()} found`}</Text>\r\n      </HStack>\r\n    </SlideFade>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { VStack, List as CUIList } from '@chakra-ui/react';\r\n\r\nimport Card from '../../../../../../components/Card';\r\nimport { ListProps } from './types';\r\n\r\nconst List = (props: ListProps): ReactElement => {\r\n  const { children, title, actions } = props;\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CUIList spacing={0}>\r\n      <Card\r\n        box={{\r\n          header: { pb: 1 }\r\n        }}\r\n        isFullWidth\r\n        hasDivider={false}\r\n        variant='transparent'>\r\n        {{\r\n          header: {\r\n            title,\r\n            actions\r\n          },\r\n          body: (\r\n            <VStack\r\n              ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n              width='100%'\r\n              alignItems='flex-start'\r\n              spacing={0}\r\n              maxHeight='35vh'\r\n              overflowY='auto'\r\n              pr={isOverflown ? 2 : 0}>\r\n              {children}\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Card>\r\n    </CUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useBoolean, VStack, Center, ListItem, Text, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../../../common/hooks';\r\nimport { handleReturnDummyWidths } from '../../../../../../common/utils';\r\nimport Badge from '../../../../../../components/Badge';\r\nimport IconButton from '../../../../../../components/Clickable/IconButton';\r\nimport SkeletonText from '../../../../../../components/Skeleton/Text';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { setRecentSearches } from '../../../../../../store/slices/User';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, title, subtitle, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHoveringRow, setIsHoveringRow] = useBoolean();\r\n  const [isHoveringDelete, setIsHoveringDelete] = useBoolean();\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 1}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' && onSearch ? () => onSearch(title) : undefined}\r\n      onMouseEnter={state !== 'isLoading' ? () => setIsHoveringRow.on() : undefined}\r\n      onMouseLeave={state !== 'isLoading' ? () => setIsHoveringRow.off() : undefined}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        height={state === 'isLoading' ? '22px' : 'auto'}\r\n        offsetY='11px'\r\n        isLoaded={state === 'isLoaded'}>\r\n        <VStack alignItems='flex-start' spacing={0}>\r\n          <Center>\r\n            <Text align='left' fontSize='md'>\r\n              {title}\r\n            </Text>\r\n            {mediaType ? (\r\n              <Badge\r\n                color={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}\r\n                label={mediaType}\r\n                ml={1}\r\n              />\r\n            ) : null}\r\n          </Center>\r\n          {type === 'default' && subtitle ? (\r\n            <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='xs'>\r\n              {subtitle}\r\n            </Text>\r\n          ) : null}\r\n        </VStack>\r\n      </SkeletonText>\r\n\r\n      {type !== 'isKeyword' ? (\r\n        <ScaleFade in={isHoveringRow}>\r\n          <Tooltip aria-label='Remove search' label={`Remove \"${title}\"`} isOpen={isHoveringDelete} placement='top'>\r\n            <IconButton\r\n              aria-label='Remove search'\r\n              icon={ClearOutlinedIcon}\r\n              onClick={() => handleDelete()}\r\n              onMouseEnter={state !== 'isLoading' ? () => setIsHoveringDelete.on() : undefined}\r\n              onMouseLeave={state !== 'isLoading' ? () => setIsHoveringDelete.off() : undefined}\r\n              size='sm'\r\n              variant='icon'\r\n            />\r\n          </Tooltip>\r\n        </ScaleFade>\r\n      ) : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, useRef } from 'react';\r\n\r\nimport { useBoolean, useColorMode, VStack, Box, HStack, Icon, Input, Collapse, ScaleFade } from '@chakra-ui/react';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Empty from '../../../../components/Empty';\r\nimport Error from '../../../../components/Error';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { InputKeyboardEvent, InputChangeEvent } from '../../types';\r\nimport Actions from './components/Actions';\r\nimport Display from './components/Display';\r\nimport List from './components/List';\r\nimport Row from './components/Row';\r\nimport { FormProps } from './types';\r\n\r\nconst placeholders = [\r\n  'The Godfather',\r\n  'Seinfeld',\r\n  'The Dark Knight',\r\n  'I Love Lucy',\r\n  'Pulp Fiction',\r\n  'The Sopranos',\r\n  'Fight Club',\r\n  'The Simpsons',\r\n  'The Matrix',\r\n  'Friends',\r\n  'GoodFellas',\r\n  'South Park',\r\n  'Hamilton',\r\n  'Family Guy',\r\n  'Star Wars',\r\n  'Breaking Bad',\r\n  'Parasite',\r\n  'Game of Thrones',\r\n  'Gladiator',\r\n  'Star Trek'\r\n];\r\nconst placeholder = placeholders[Math.floor(Math.random() * placeholders.length)];\r\n\r\nconst Form = (props: FormProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const {\r\n    keywords,\r\n    query,\r\n    mediaType,\r\n    submittedQuery,\r\n    hasUnsubmitted = false,\r\n    totalResults,\r\n    isInputDisabled = false,\r\n    onInputKeyPress,\r\n    onInputChange,\r\n    onSubmitQuery,\r\n    onClearQuery\r\n  } = props;\r\n\r\n  const [isFormLocked, setIsFormLocked] = useBoolean();\r\n  const [isHoveringLock, setIsHoveringLock] = useBoolean();\r\n\r\n  const [isHoveringForm, setIsHoveringForm] = useBoolean();\r\n  const [isFormFocused, setIsFormFocused] = useBoolean();\r\n\r\n  const handleFocusOnInput = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleOnHoverLock = (bool: boolean) => {\r\n    if (bool) {\r\n      setIsHoveringLock.on();\r\n    } else {\r\n      setIsHoveringLock.off();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack width='100%' spacing={1} p={2}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        py={1.5}\r\n        onClick={() => handleFocusOnInput()}\r\n        onMouseEnter={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.on() : undefined}\r\n        onMouseLeave={!keywords.isFetching || !keywords.isLoading ? () => setIsHoveringForm.off() : undefined}>\r\n        <HStack\r\n          borderBottom={isFormFocused || isFormLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFormFocused || isFormLocked ? 1.5 : 0}\r\n          mb={isFormFocused || isFormLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder={`Try \"${placeholder}\"`}\r\n            isDisabled={isInputDisabled}\r\n            onFocus={!isHoveringLock && !isFormLocked ? () => setIsFormFocused.on() : undefined}\r\n            onBlur={!isHoveringLock && !isFormLocked && !isHoveringForm ? () => setIsFormFocused.off() : undefined}\r\n            onKeyPress={(event: InputKeyboardEvent) => onInputKeyPress(event)}\r\n            onChange={(event: InputChangeEvent) => onInputChange(event)}\r\n            variant='unstyled'\r\n            value={query}\r\n          />\r\n          <Actions\r\n            hasQuery={query.length > 0}\r\n            isFormLocked={isFormLocked}\r\n            isHoveringLock={isHoveringLock}\r\n            onToggleLock={() => setIsFormLocked.toggle()}\r\n            onHoverLock={handleOnHoverLock}\r\n            onClearQuery={onClearQuery}\r\n          />\r\n        </HStack>\r\n\r\n        <Collapse in={isFormFocused || isFormLocked} unmountOnExit>\r\n          <List\r\n            title={!hasUnsubmitted ? 'Recent searches' : ''}\r\n            actions={\r\n              !hasUnsubmitted ? (\r\n                <ScaleFade in={recentSearches.length > 0}>\r\n                  <Button onClick={() => dispatch(setRecentSearches([]))} size='sm' variant='text'>\r\n                    Clear\r\n                  </Button>\r\n                </ScaleFade>\r\n              ) : undefined\r\n            }>\r\n            <>\r\n              {!hasUnsubmitted ? (\r\n                recentSearches.length > 0 ? (\r\n                  _.sortBy(recentSearches, 'date').map((search) => (\r\n                    <Row\r\n                      key={search.id}\r\n                      id={search.id}\r\n                      title={search.label}\r\n                      subtitle={moment(search.date).fromNow()}\r\n                      mediaType={search.mediaType}\r\n                      state='isLoaded'\r\n                      onSearch={(query: string) => onSubmitQuery(query, search.mediaType)}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <Empty hasIllustration={false} label='No recent searches!' size='xs' />\r\n                )\r\n              ) : keywords.isError ? (\r\n                <Error\r\n                  hasIllustration={false}\r\n                  label='Oh no! Something went wrong'\r\n                  description='Failed to fetch keywords!'\r\n                  size='xs'\r\n                />\r\n              ) : keywords.isSuccess && keywords.data?.length === 0 ? (\r\n                <Empty hasIllustration={false} label='No keywords found!' size='xs' />\r\n              ) : keywords.isSuccess && keywords.data?.length > 0 ? (\r\n                keywords.data.map((keyword) => (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={String(keyword.id)}\r\n                    title={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => onSubmitQuery(query)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                [..._.range(0, 7)].map((_dummy, index) => (\r\n                  <Row key={index} id={String(index)} title='Lorem Ipsum' state='isLoading' type='isKeyword' />\r\n                ))\r\n              )}\r\n            </>\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <Display\r\n        query={submittedQuery}\r\n        mediaType={mediaType}\r\n        hasUnsubmitted={hasUnsubmitted}\r\n        totalResults={totalResults}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, useBoolean, VStack, HStack, Box, ScaleFade, SlideFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport Page from '../../containers/Page';\r\nimport { home, search } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport VerticalMovies from '../Movies/components/VerticalMovies';\r\nimport VerticalPeople from '../People/components/VerticalPeople';\r\nimport VerticalTV from '../TV/components/VerticalTV';\r\nimport All from './components/All';\r\nimport Form from './components/Form';\r\nimport { Keyword, InputKeyboardEvent, InputChangeEvent, TotalResults } from './types';\r\n\r\nconst Search = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n  const [submittedQuery, setSubmittedQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [hasUnsubmitted, setHasUnsubmitted] = useBoolean();\r\n\r\n  const [totalResults, setTotalResults] = useState<TotalResults>();\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', query],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: query.length > 0 }\r\n  );\r\n\r\n  // Searching movies by query\r\n  const searchMovies = useInfiniteQuery(\r\n    ['searchMovies', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'movie') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setMovies({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, movies: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching tv shows by query\r\n  const searchTV = useInfiniteQuery(\r\n    ['searchTV', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'tv') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setTV({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, tv: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // Searching people by query\r\n  const searchPeople = useInfiniteQuery(\r\n    ['searchPeople', submittedQuery],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (!mediaType ? true : mediaType === 'person') && submittedQuery.length > 0,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          setPeople({\r\n            ...current,\r\n            results: sort(\r\n              departments && departments.length > 0\r\n                ? people.filter((person) =>\r\n                    departments.some((department) => person.known_for_department === department.value)\r\n                  )\r\n                : [...people],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults({ ...totalResults, people: current.total_results });\r\n          setSubmittedQuery(query);\r\n\r\n          if (data.pages.length === 1 && mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    handleSetLocation(query, mediaType || undefined);\r\n  };\r\n\r\n  const handleSetLocation = useCallback(\r\n    (query: string, mediaType?: MediaType, page?: number): void => {\r\n      const search = { query };\r\n\r\n      if (mediaType) {\r\n        Object.assign(search, { mediaType });\r\n      }\r\n\r\n      if (page) {\r\n        Object.assign(search, { page });\r\n      }\r\n\r\n      history.push({\r\n        pathname: '/search',\r\n        search: queryString.stringify({ ...search })\r\n      });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleSubmitQuery = useCallback(\r\n    (query: string, mediaType?: MediaType): void => {\r\n      setQuery(query);\r\n      setSubmittedQuery(query);\r\n\r\n      setHasUnsubmitted.off();\r\n\r\n      searchMovies.remove();\r\n      searchTV.remove();\r\n      searchPeople.remove();\r\n\r\n      handleSetLocation(query, mediaType);\r\n    },\r\n    [\r\n      setQuery,\r\n      setSubmittedQuery,\r\n      setHasUnsubmitted,\r\n      searchMovies,\r\n      searchTV,\r\n      searchPeople,\r\n      handleSetLocation,\r\n      setMediaType\r\n    ]\r\n  );\r\n\r\n  const handleOnKeyPress = (event: InputKeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      handleSubmitQuery(query);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event: InputChangeEvent): void => {\r\n    setQuery(event.target.value);\r\n\r\n    setHasUnsubmitted.on();\r\n  };\r\n\r\n  const handleClearQuery = (): void => {\r\n    setQuery('');\r\n    setSubmittedQuery('');\r\n    setTotalResults(undefined);\r\n    setMediaType(undefined);\r\n\r\n    setHasUnsubmitted.off();\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, search];\r\n\r\n    if (submittedQuery) {\r\n      breadcrumbs.push({\r\n        label: submittedQuery,\r\n        to: { pathname: '/search', search: queryString.stringify({ query: submittedQuery }) }\r\n      });\r\n\r\n      if (mediaType) {\r\n        switch (mediaType) {\r\n          case 'person':\r\n            breadcrumbs.push({\r\n              label: 'People',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'person' })\r\n              }\r\n            });\r\n            break;\r\n          case 'tv':\r\n            breadcrumbs.push({\r\n              label: 'TV Shows',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'tv' })\r\n              }\r\n            });\r\n            break;\r\n          case 'movie':\r\n            breadcrumbs.push({\r\n              label: 'Movies',\r\n              to: {\r\n                pathname: '/search',\r\n                search: queryString.stringify({ query: submittedQuery, mediaType: 'movie' })\r\n              }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      setMediaType(undefined);\r\n    }\r\n\r\n    if (params && params.page && params.mediaType) {\r\n      const page = typeof params.page === 'string' ? params.page : 1;\r\n\r\n      if (page > 1) {\r\n        switch (params.mediaType) {\r\n          case 'person':\r\n            searchPeople.fetchNextPage();\r\n            break;\r\n          case 'tv':\r\n            searchTV.fetchNextPage();\r\n            break;\r\n          case 'movie':\r\n            searchMovies.fetchNextPage();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (params && params.query && typeof params.query === 'string' && !submittedQuery) {\r\n      handleSubmitQuery(params.query || submittedQuery || query);\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && query) {\r\n      setHasUnsubmitted.off();\r\n\r\n      setTotalResults({\r\n        movies:\r\n          searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n            ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n            : 0,\r\n        tv:\r\n          searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n            ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n            : 0,\r\n        people:\r\n          searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n            ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n            : 0\r\n      });\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      source.cancel();\r\n\r\n      handleClearQuery();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page title='Search' breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <ScaleFade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </ScaleFade>\r\n          ),\r\n          body: (\r\n            <VStack width='100%' spacing={0}>\r\n              {/* Search Form */}\r\n              <Form\r\n                keywords={keywords}\r\n                query={query}\r\n                mediaType={mediaType}\r\n                submittedQuery={submittedQuery}\r\n                hasUnsubmitted={hasUnsubmitted}\r\n                totalResults={totalResults}\r\n                isInputDisabled={\r\n                  searchMovies.isFetching ||\r\n                  searchMovies.isLoading ||\r\n                  searchTV.isFetching ||\r\n                  searchTV.isLoading ||\r\n                  searchPeople.isFetching ||\r\n                  searchPeople.isLoading\r\n                }\r\n                onInputKeyPress={handleOnKeyPress}\r\n                onInputChange={handleOnChange}\r\n                onSubmitQuery={handleSubmitQuery}\r\n                onClearQuery={handleClearQuery}\r\n              />\r\n\r\n              <Box width='100%'>\r\n                <SlideFade in={!hasUnsubmitted && submittedQuery.length > 0} offsetY={100} unmountOnExit>\r\n                  {mediaType ? (\r\n                    <VerticalGrid>\r\n                      <VStack width='100%' spacing={4} px={2}>\r\n                        {mediaType === 'movie' ? (\r\n                          <VerticalMovies\r\n                            isError={searchMovies.isError}\r\n                            isSuccess={searchMovies.isSuccess}\r\n                            isLoading={searchMovies.isFetching || searchMovies.isLoading}\r\n                            movies={movies?.results || []}\r\n                          />\r\n                        ) : mediaType === 'tv' ? (\r\n                          <VerticalTV\r\n                            isError={searchTV.isError}\r\n                            isSuccess={searchTV.isSuccess}\r\n                            isLoading={searchTV.isFetching || searchTV.isLoading}\r\n                            tv={tv?.results || []}\r\n                          />\r\n                        ) : mediaType === 'person' ? (\r\n                          <VerticalPeople\r\n                            isError={searchPeople.isError}\r\n                            isSuccess={searchPeople.isSuccess}\r\n                            isLoading={searchPeople.isFetching || searchPeople.isLoading}\r\n                            people={people?.results || []}\r\n                          />\r\n                        ) : undefined}\r\n\r\n                        <LoadMore\r\n                          amount={\r\n                            mediaType === 'movie'\r\n                              ? movies?.results.length || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.results.length || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.results.length || 0\r\n                              : 0\r\n                          }\r\n                          total={\r\n                            mediaType === 'movie'\r\n                              ? movies?.total_results || 0\r\n                              : mediaType === 'tv'\r\n                              ? tv?.total_results || 0\r\n                              : mediaType === 'person'\r\n                              ? people?.total_results || 0\r\n                              : 0\r\n                          }\r\n                          mediaType={`${\r\n                            mediaType === 'movie'\r\n                              ? 'Movies'\r\n                              : mediaType === 'tv'\r\n                              ? 'TV Shows'\r\n                              : mediaType === 'person'\r\n                              ? 'People'\r\n                              : ''\r\n                          } for \"${query}\"`}\r\n                          isLoading={\r\n                            mediaType === 'movie'\r\n                              ? searchMovies.isFetching || searchMovies.isLoading\r\n                              : mediaType === 'tv'\r\n                              ? searchTV.isFetching || searchTV.isLoading\r\n                              : mediaType === 'person'\r\n                              ? searchPeople.isFetching || searchPeople.isLoading\r\n                              : false\r\n                          }\r\n                          onFetch={() =>\r\n                            handleSetLocation(\r\n                              submittedQuery,\r\n                              mediaType,\r\n                              mediaType === 'movie'\r\n                                ? (movies?.page || 0) + 1\r\n                                : mediaType === 'tv'\r\n                                ? (tv?.page || 0) + 1\r\n                                : mediaType === 'person'\r\n                                ? (people?.page || 0) + 1\r\n                                : 1\r\n                            )\r\n                          }\r\n                        />\r\n                      </VStack>\r\n                    </VerticalGrid>\r\n                  ) : (\r\n                    <All query={submittedQuery} movies={searchMovies} tv={searchTV} people={searchPeople} />\r\n                  )}\r\n                </SlideFade>\r\n              </Box>\r\n            </VStack>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => handleSetLocation(submittedQuery, mediaType, 1)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Department } from '../../common/data/departments';\r\nimport { useSelector } from '../../common/hooks';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Button from '../../components/Clickable/Button';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport MediaTypes from '../../components/MediaTypePicker/components/MediaTypes';\r\nimport Page from '../../containers/Page';\r\nimport { home, trending } from '../../containers/Page/common/data/breadcrumbs';\r\nimport { Breadcrumb } from '../../containers/Page/types';\r\nimport VerticalMovies from '../Movies/components/VerticalMovies';\r\nimport VerticalPeople from '../People/components/VerticalPeople';\r\nimport VerticalTV from '../TV/components/VerticalTV';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const history = useHistory();\r\n  const { mediaType: paramMediaType } = useParams<{ mediaType: MediaType }>();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType>();\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>();\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>();\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useInfiniteQuery(\r\n    'trendingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'movie') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending tv shows\r\n  const trendingTV = useInfiniteQuery(\r\n    'trendingTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'tv') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Fetching trending people\r\n  const trendingPeople = useInfiniteQuery(\r\n    'trendingPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0 && mediaType === 'person') || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            departments && departments.length > 0\r\n              ? people.filter((person) =>\r\n                  departments.some((department) => person.known_for_department === department.value)\r\n                )\r\n              : [...people],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleRefetch = (): void => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        trendingMovies.refetch();\r\n        break;\r\n      case 'tv':\r\n        trendingTV.refetch();\r\n        break;\r\n      case 'person':\r\n        trendingPeople.refetch();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[], departments: Department[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setDepartments(departments);\r\n\r\n    setTimeout(() => handleRefetch(), 0);\r\n  };\r\n\r\n  const handleDisabledFilters = (): boolean => {\r\n    switch (mediaType) {\r\n      case 'movie':\r\n        return !trendingMovies.isSuccess;\r\n      case 'tv':\r\n        return !trendingTV.isSuccess;\r\n      case 'person':\r\n        return !trendingPeople.isSuccess;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(undefined);\r\n  };\r\n\r\n  const handleReturnBreadcrumbs = (): Breadcrumb[] => {\r\n    const breadcrumbs: Breadcrumb[] = [home, trending];\r\n\r\n    if (mediaType) {\r\n      switch (mediaType) {\r\n        case 'person':\r\n          breadcrumbs.push({\r\n            label: 'People',\r\n            to: { pathname: '/search/person' }\r\n          });\r\n          break;\r\n        case 'tv':\r\n          breadcrumbs.push({\r\n            label: 'TV Shows',\r\n            to: { pathname: '/search/tv' }\r\n          });\r\n          break;\r\n        case 'movie':\r\n          breadcrumbs.push({\r\n            label: 'Movies',\r\n            to: { pathname: '/search/movie' }\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (paramMediaType) {\r\n      handleRefetch();\r\n\r\n      switch (paramMediaType) {\r\n        case 'person':\r\n          setMediaType('person');\r\n          break;\r\n        case 'tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case 'movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Trending'\r\n        }\r\n        breadcrumbs={handleReturnBreadcrumbs()}>\r\n        {{\r\n          actions: (\r\n            <Fade in={!!mediaType} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} isFullWidth={isSm} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? (\r\n                  <Filters mediaType={mediaType} isDisabled={handleDisabledFilters()} onFilter={handleSetFilters} />\r\n                ) : null}\r\n              </HStack>\r\n            </Fade>\r\n          ),\r\n          body: (\r\n            <VerticalGrid>\r\n              {mediaType ? (\r\n                <VStack width='100%' spacing={4} px={2} pt={2}>\r\n                  {mediaType === 'movie' ? (\r\n                    <VerticalMovies\r\n                      isError={trendingMovies.isError}\r\n                      isSuccess={trendingMovies.isSuccess}\r\n                      isLoading={trendingMovies.isFetching || trendingMovies.isLoading}\r\n                      movies={movies?.results || []}\r\n                    />\r\n                  ) : mediaType === 'tv' ? (\r\n                    <VerticalTV\r\n                      isError={trendingTV.isError}\r\n                      isSuccess={trendingTV.isSuccess}\r\n                      isLoading={trendingTV.isFetching || trendingTV.isLoading}\r\n                      tv={tv?.results || []}\r\n                    />\r\n                  ) : mediaType === 'person' ? (\r\n                    <VerticalPeople\r\n                      isError={trendingPeople.isError}\r\n                      isSuccess={trendingPeople.isSuccess}\r\n                      isLoading={trendingPeople.isFetching || trendingPeople.isLoading}\r\n                      people={people?.results || []}\r\n                    />\r\n                  ) : null}\r\n\r\n                  <LoadMore\r\n                    amount={\r\n                      mediaType === 'movie'\r\n                        ? movies?.results.length || 0\r\n                        : mediaType === 'tv'\r\n                        ? tv?.results.length || 0\r\n                        : mediaType === 'person'\r\n                        ? people?.results.length || 0\r\n                        : 0\r\n                    }\r\n                    total={\r\n                      mediaType === 'movie'\r\n                        ? movies?.total_results || 0\r\n                        : mediaType === 'tv'\r\n                        ? tv?.total_results || 0\r\n                        : mediaType === 'person'\r\n                        ? people?.total_results || 0\r\n                        : 0\r\n                    }\r\n                    mediaType={\r\n                      mediaType === 'movie'\r\n                        ? 'Movies'\r\n                        : mediaType === 'tv'\r\n                        ? 'TV Shows'\r\n                        : mediaType === 'person'\r\n                        ? 'People'\r\n                        : ''\r\n                    }\r\n                    isLoading={\r\n                      mediaType === 'movie'\r\n                        ? trendingMovies.isFetching || trendingMovies.isLoading\r\n                        : mediaType === 'tv'\r\n                        ? trendingTV.isFetching || trendingTV.isLoading\r\n                        : mediaType === 'person'\r\n                        ? trendingPeople.isFetching || trendingPeople.isLoading\r\n                        : false\r\n                    }\r\n                    isError={\r\n                      mediaType === 'movie'\r\n                        ? trendingMovies.isError\r\n                        : mediaType === 'tv'\r\n                        ? trendingTV.isError\r\n                        : mediaType === 'person'\r\n                        ? trendingPeople.isError\r\n                        : false\r\n                    }\r\n                    hasNextPage={\r\n                      mediaType === 'movie'\r\n                        ? trendingMovies.hasNextPage\r\n                        : mediaType === 'tv'\r\n                        ? trendingTV.hasNextPage\r\n                        : mediaType === 'person'\r\n                        ? trendingPeople.hasNextPage\r\n                        : true\r\n                    }\r\n                    onFetch={() =>\r\n                      mediaType === 'movie'\r\n                        ? trendingMovies.fetchNextPage()\r\n                        : mediaType === 'tv'\r\n                        ? trendingTV.fetchNextPage()\r\n                        : mediaType === 'person'\r\n                        ? trendingPeople.fetchNextPage()\r\n                        : undefined\r\n                    }\r\n                  />\r\n                </VStack>\r\n              ) : (\r\n                <Box width='100%' px={2} pt={2}>\r\n                  <Empty\r\n                    button={\r\n                      <MediaTypes\r\n                        mediaType={mediaType}\r\n                        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n                      />\r\n                    }\r\n                    hasIllustration={false}\r\n                    label=''\r\n                    size='xl'\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n              )}\r\n            </VerticalGrid>\r\n          )\r\n        }}\r\n      </Page>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => history.push({ pathname: `/trending/${mediaType}` })}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useMediaQuery, Box, Text, Fade } from '@chakra-ui/react';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Link from '../../../../components/Clickable/Link';\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../HorizontalTV';\r\nimport { HomeHorizontalGridProps } from './types';\r\n\r\nconst HomeHorizontalGrid = (props: HomeHorizontalGridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isSm] = useMediaQuery('(max-width: 600px)');\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true,\r\n    threshold: 1\r\n  });\r\n\r\n  const { tv, title, pathname, isLoading = true, isError = false, isSuccess = false } = props;\r\n\r\n  return (\r\n    <Box ref={ref} width='100%' maxWidth='100%'>\r\n      <Fade in={isLoading || inView} unmountOnExit style={{ width: 'inherit' }}>\r\n        <HorizontalGrid\r\n          title={\r\n            <Text\r\n              align='left'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n              fontSize={['xl', 'xl', '2xl', '2xl', '2xl', '2xl']}\r\n              fontWeight='semibold'\r\n              textTransform='capitalize'>\r\n              {title}\r\n            </Text>\r\n          }\r\n          footer={\r\n            <Link to={{ pathname }} isFullWidth isDisabled={isLoading}>\r\n              <Button\r\n                color={handleReturnColor(color)}\r\n                isFullWidth\r\n                isDisabled={isLoading}\r\n                size={isSm ? 'sm' : 'md'}\r\n                variant='text'>\r\n                {`View all ${title}`}\r\n              </Button>\r\n            </Link>\r\n          }\r\n          isLoading={isLoading}>\r\n          <HorizontalTV isError={isError} isSuccess={isSuccess} isLoading={isLoading} tv={tv} />\r\n        </HorizontalGrid>\r\n      </Fade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomeHorizontalGrid;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport Page from '../../containers/Page';\r\nimport { home, tv } from '../../containers/Page/common/data/breadcrumbs';\r\nimport HorizontalGrid from './components/HorizontalGrid';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular tv\r\n  const popularTVQuery = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringTodayQuery = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTVQuery = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTVQuery = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title='TV Shows' breadcrumbs={[home, tv]}>\r\n      {{\r\n        body: (\r\n          <VStack spacing={6}>\r\n            <HorizontalGrid\r\n              tv={popularTVQuery.data}\r\n              title='Popular TV Shows'\r\n              pathname='/tv/popular'\r\n              isError={popularTVQuery.isError}\r\n              isSuccess={popularTVQuery.isSuccess}\r\n              isLoading={popularTVQuery.isFetching || popularTVQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              tv={tvAiringTodayQuery.data}\r\n              title='TV Shows Airing Today'\r\n              pathname='/tv/airing-today'\r\n              isError={tvAiringTodayQuery.isError}\r\n              isSuccess={tvAiringTodayQuery.isSuccess}\r\n              isLoading={tvAiringTodayQuery.isFetching || tvAiringTodayQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              tv={onTVQuery.data}\r\n              title='TV Shows on at the moment'\r\n              pathname='/tv/on-tv'\r\n              isError={onTVQuery.isError}\r\n              isSuccess={onTVQuery.isSuccess}\r\n              isLoading={onTVQuery.isFetching || onTVQuery.isLoading}\r\n            />\r\n\r\n            <HorizontalGrid\r\n              tv={topRatedTVQuery.data}\r\n              title='Top Rated TV Shows'\r\n              pathname='/tv/top-rated'\r\n              isError={topRatedTVQuery.isError}\r\n              isSuccess={topRatedTVQuery.isSuccess}\r\n              isLoading={topRatedTVQuery.isFetching || topRatedTVQuery.isLoading}\r\n            />\r\n          </VStack>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport { handleCheckHasFilters, handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../../store/slices/Modals';\r\nimport VerticalTV from '../../components/VerticalTV';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringTodayQuery = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringTodayQuery.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      tvAiringTodayQuery.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      tvAiringTodayQuery.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows Airing Today'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Airing Today,', to: { pathname: '/tv/airing-today' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!tvAiringTodayQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={tvAiringTodayQuery.isError}\r\n                isSuccess={tvAiringTodayQuery.isSuccess}\r\n                isLoading={tvAiringTodayQuery.isFetching || tvAiringTodayQuery.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!tvAiringTodayQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={tv?.results.length || 0}\r\n                  total={tv?.total_results || 0}\r\n                  mediaType='TV shows'\r\n                  isLoading={tvAiringTodayQuery.isFetching || tvAiringTodayQuery.isLoading}\r\n                  isError={tvAiringTodayQuery.isError}\r\n                  hasNextPage={tvAiringTodayQuery.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport { handleCheckHasFilters, handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../../store/slices/Modals';\r\nimport VerticalTV from '../../components/VerticalTV';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching on tv\r\n  const onTVQuery = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTVQuery.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      onTVQuery.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      onTVQuery.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='TV Shows On At The Moment'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'On At The Moment', to: { pathname: '/tv/on-tv' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!onTVQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={onTVQuery.isError}\r\n                isSuccess={onTVQuery.isSuccess}\r\n                isLoading={onTVQuery.isFetching || onTVQuery.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!onTVQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={tv?.results.length || 0}\r\n                  total={tv?.total_results || 0}\r\n                  mediaType='TV shows'\r\n                  isLoading={onTVQuery.isFetching || onTVQuery.isLoading}\r\n                  isError={onTVQuery.isError}\r\n                  hasNextPage={onTVQuery.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport { handleCheckHasFilters, handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../../store/slices/Modals';\r\nimport VerticalTV from '../../components/VerticalTV';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching popular tv\r\n  const popularTVQuery = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTVQuery.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      popularTVQuery.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      popularTVQuery.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Popular TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Popular', to: { pathname: '/tv/popular' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!popularTVQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={popularTVQuery.isError}\r\n                isSuccess={popularTVQuery.isSuccess}\r\n                isLoading={popularTVQuery.isFetching || popularTVQuery.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!popularTVQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={tv?.results.length || 0}\r\n                  total={tv?.total_results || 0}\r\n                  mediaType='TV shows'\r\n                  isLoading={popularTVQuery.isFetching || popularTVQuery.isLoading}\r\n                  isError={popularTVQuery.isError}\r\n                  hasNextPage={popularTVQuery.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n","import { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { VStack, ScaleFade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../../common/types/types';\r\nimport { handleCheckHasFilters, handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Filters from '../../../../components/Filters';\r\nimport VerticalGrid from '../../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../../components/LoadMore';\r\nimport Page from '../../../../containers/Page';\r\nimport { home, tv as tvBreadcrumb } from '../../../../containers/Page/common/data/breadcrumbs';\r\nimport { toggleConfirm, defaultConfirmModal } from '../../../../store/slices/Modals';\r\nimport VerticalTV from '../../components/VerticalTV';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>();\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>();\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTVQuery = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTVQuery.refetch();\r\n  };\r\n\r\n  const handleResetFilters = (): void => {\r\n    setSortBy(undefined);\r\n    setGenres([]);\r\n\r\n    dispatch(toggleConfirm({ ...defaultConfirmModal }));\r\n\r\n    setTimeout(() => {\r\n      topRatedTVQuery.fetchNextPage();\r\n    }, 0);\r\n  };\r\n\r\n  const handleFetchNextPage = (): void => {\r\n    if (handleCheckHasFilters(sortBy, genres)) {\r\n      dispatch(\r\n        toggleConfirm({\r\n          open: true,\r\n          title: 'Filters',\r\n          description: 'Are you sure you want to load more TV shows? Filters will be reset!',\r\n          submitButton: (\r\n            <Button color={handleReturnColor(color)} onClick={() => handleResetFilters()} size='sm'>\r\n              Load more\r\n            </Button>\r\n          )\r\n        })\r\n      );\r\n    } else {\r\n      topRatedTVQuery.fetchNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      title='Top Rated TV Shows'\r\n      breadcrumbs={[home, tvBreadcrumb, { label: 'Top Rated', to: { pathname: '/tv/top-rated' } }]}>\r\n      {{\r\n        actions: <Filters mediaType='tv' isDisabled={!topRatedTVQuery.isSuccess} onFilter={handleSetFilters} />,\r\n        body: (\r\n          <VerticalGrid>\r\n            <VStack width='100%' spacing={4} px={2} pt={2}>\r\n              <VerticalTV\r\n                isError={topRatedTVQuery.isError}\r\n                isSuccess={topRatedTVQuery.isSuccess}\r\n                isLoading={topRatedTVQuery.isFetching || topRatedTVQuery.isLoading}\r\n                tv={tv?.results || []}\r\n              />\r\n\r\n              <ScaleFade in={!topRatedTVQuery.isError} unmountOnExit>\r\n                <LoadMore\r\n                  amount={tv?.results.length || 0}\r\n                  total={tv?.total_results || 0}\r\n                  mediaType='TV shows'\r\n                  isLoading={topRatedTVQuery.isFetching || topRatedTVQuery.isLoading}\r\n                  isError={topRatedTVQuery.isError}\r\n                  hasNextPage={topRatedTVQuery.hasNextPage || true}\r\n                  onFetch={handleFetchNextPage}\r\n                />\r\n              </ScaleFade>\r\n            </VStack>\r\n          </VerticalGrid>\r\n        )\r\n      }}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n","import { ReactElement, useEffect } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { useHistory, useLocation, Switch, Route } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport Error from '../../../../pages/Error';\r\nimport Home from '../../../../pages/Home';\r\nimport Liked from '../../../../pages/Liked';\r\nimport Lists from '../../../../pages/Lists';\r\nimport Movie from '../../../../pages/Movie';\r\nimport Movies from '../../../../pages/Movies';\r\nimport MoviesNowPlaying from '../../../../pages/Movies/pages/NowPlaying';\r\nimport PopularMovies from '../../../../pages/Movies/pages/Popular';\r\nimport TopRatedMovies from '../../../../pages/Movies/pages/TopRated';\r\nimport UpcomingMovies from '../../../../pages/Movies/pages/Upcoming';\r\nimport People from '../../../../pages/People';\r\nimport Person from '../../../../pages/Person';\r\nimport Search from '../../../../pages/Search';\r\nimport Trending from '../../../../pages/Trending';\r\nimport TV from '../../../../pages/TV';\r\nimport TVAiringToday from '../../../../pages/TV/pages/AiringToday';\r\nimport OnTV from '../../../../pages/TV/pages/OnTV';\r\nimport PopularTV from '../../../../pages/TV/pages/Popular';\r\nimport TopRatedTV from '../../../../pages/TV/pages/TopRated';\r\n\r\nconst ComponentBox = motion(Box);\r\n\r\nconst Page = ({ children }: { children: ReactElement }): ReactElement => {\r\n  return (\r\n    <ComponentBox\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{\r\n        duration: 1,\r\n        ease: [0.76, 0, 0.24, 1]\r\n      }}>\r\n      {children}\r\n    </ComponentBox>\r\n  );\r\n};\r\n\r\nconst Routes = (): ReactElement => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  useEffect(() => {\r\n    if (!location.pathname.includes('search')) {\r\n      document.scrollingElement?.scrollTo(0, 0);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location} key={location.pathname}>\r\n        {/* Home Route */}\r\n        <Route exact path='/'>\r\n          <Page>\r\n            <Home />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Liked Routes */}\r\n        <Route exact path='/liked'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/liked/:mediaType'>\r\n          <Page>\r\n            <Liked />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Lists Routes */}\r\n        <Route exact path='/lists'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/lists/:id/:mediaType'>\r\n          <Page>\r\n            <Lists />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Search Route */}\r\n        <Route exact path='/search'>\r\n          <Page>\r\n            <Search />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Trending Routes */}\r\n        <Route exact path='/trending'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/trending/:mediaType'>\r\n          <Page>\r\n            <Trending />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* Movies Routes */}\r\n        <Route exact path='/movies'>\r\n          <Page>\r\n            <Movies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/popular'>\r\n          <Page>\r\n            <PopularMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/upcoming'>\r\n          <Page>\r\n            <UpcomingMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/now-playing'>\r\n          <Page>\r\n            <MoviesNowPlaying />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movies/top-rated'>\r\n          <Page>\r\n            <TopRatedMovies />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/movie/:id'>\r\n          <Page>\r\n            <Movie />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* TV Routes */}\r\n        <Route exact path='/tv'>\r\n          <Page>\r\n            <TV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/popular'>\r\n          <Page>\r\n            <PopularTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/airing-today'>\r\n          <Page>\r\n            <TVAiringToday />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/on-tv'>\r\n          <Page>\r\n            <OnTV />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/tv/top-rated'>\r\n          <Page>\r\n            <TopRatedTV />\r\n          </Page>\r\n        </Route>\r\n\r\n        {/* People Route */}\r\n        <Route exact path='/people'>\r\n          <Page>\r\n            <People />\r\n          </Page>\r\n        </Route>\r\n        <Route exact path='/person/:id'>\r\n          <Page>\r\n            <Person />\r\n          </Page>\r\n        </Route>\r\n\r\n        <Route>\r\n          <Page>\r\n            <Error\r\n              code={404}\r\n              title='Page not found!'\r\n              subtitle='Please check the URL in the address bar and try again.'\r\n              actions={\r\n                <>\r\n                  <Button\r\n                    color={handleReturnColor(color)}\r\n                    onClick={() => history.push({ pathname: '/' })}\r\n                    variant='outlined'>\r\n                    Go back home\r\n                  </Button>\r\n                  <Button\r\n                    color={handleReturnColor(color)}\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                      return false;\r\n                    }}>\r\n                    Try again\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n          </Page>\r\n        </Route>\r\n      </Switch>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useTheme, useBoolean, Box, SlideFade } from '@chakra-ui/react';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector, useWindowSize } from '../../../../common/hooks';\r\nimport { handleReturnColor } from '../../../../common/utils';\r\nimport IconButton from '../../../../components/Clickable/IconButton';\r\nimport Tooltip from '../../../../components/Tooltip';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\nconst ScrollToTop = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { height } = useWindowSize();\r\n\r\n  const color = useSelector((state) => state.user.ui.theme.color);\r\n\r\n  const [scrollHeight, setScrollHeight] = useState<number>(0);\r\n\r\n  const [isHovering, setIsHovering] = useBoolean();\r\n\r\n  const handleScroll = useCallback(\r\n    _.debounce(() => {\r\n      const scroll = document?.scrollingElement?.scrollTop || 0;\r\n\r\n      if (scroll <= height) {\r\n        setIsHovering.off();\r\n      }\r\n\r\n      setScrollHeight(scroll);\r\n    }, 250),\r\n    [document, setScrollHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleScroll();\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      position='fixed'\r\n      bottom={theme.space[2]}\r\n      right={theme.space[2]}\r\n      borderRadius='lg'\r\n      boxShadow='lg'\r\n      backgroundColor='transparent'>\r\n      <SlideFade in={scrollHeight > screen.height} unmountOnExit offsetY={theme.space[2]}>\r\n        <Tooltip aria-label='Scroll to top' label='Scroll to the top' placement='left' isOpen={isHovering} gutter={6}>\r\n          <IconButton\r\n            aria-label='Scroll to top'\r\n            color={handleReturnColor(color)}\r\n            icon={ArrowUpwardOutlinedIcon}\r\n            onClick={() => document.scrollingElement?.scrollTo(0, 0)}\r\n            onMouseEnter={() => setIsHovering.on()}\r\n            onMouseLeave={() => setIsHovering.off()}\r\n          />\r\n        </Tooltip>\r\n      </SlideFade>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from '../../../../common/hooks';\r\nimport Button from '../../../../components/Clickable/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      backgroundColor={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { useSelector } from '../../common/hooks';\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth, headerHeight } from './common/data/dimensions';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport ConfirmModal from './components/Modals/Confirm';\r\nimport DescriptionModal from './components/Modals/Description';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport QuickView from './components/Modals/QuickView';\r\nimport SplashscreenModal from './components/Modals/Splashscreen';\r\nimport Routes from './components/Routes';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Sidebar from './components/Sidebar';\r\nimport { GenreResponse } from './types';\r\n\r\nconst Layout = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.ui.sidebarMode);\r\n\r\n  const isSplashscreenOpen = useSelector((state) => state.modals.ui.isSplashscreenOpen);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>(`${sidebarWidth[sidebarMode]}px`);\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return isSplashscreenOpen ? (\r\n    <SplashscreenModal />\r\n  ) : (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n      <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n        <Header width={width} left={left} />\r\n\r\n        <Box\r\n          width='100%'\r\n          maxWidth='100%'\r\n          position='relative'\r\n          top={`${headerHeight}px`}\r\n          left='0px'\r\n          sx={{ ...transition }}>\r\n          <Box width='100%' minHeight={`calc(100vh - ${headerHeight + 32}px)`} sx={{ ...transition }}>\r\n            <Routes />\r\n          </Box>\r\n\r\n          <Footer />\r\n        </Box>\r\n\r\n        <ScrollToTop />\r\n      </Box>\r\n\r\n      <ConfirmModal />\r\n\r\n      <QuickView />\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n\r\n      <DescriptionModal />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Layout from '../../containers/Layout';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      refetchOnReconnect: false,\r\n      retry: false\r\n    }\r\n  }\r\n});\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Layout />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nimport './index.css';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}