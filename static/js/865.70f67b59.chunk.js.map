{"version":3,"file":"static/js/865.70f67b59.chunk.js","mappings":"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","sources":["components/Clickable/DisplayMode/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Image/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/TV/components/Orientation/Vertical/index.tsx","pages/TV/components/Poster/Horizontal/index.tsx","pages/TV/components/Poster/Vertical/index.tsx","pages/TV/index.tsx"],"sourcesContent":["import { ReactElement, forwardRef } from 'react';\nimport { useIsFetching, useIsMutating } from 'react-query';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useBoolean, ButtonGroup } from '@chakra-ui/react';\n\nimport { DisplayModeRef, DisplayModeProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { toggleDisplayMode } from '../../../store/slices/App';\nimport { defaultUser, getUser } from '../../../store/slices/Users';\nimport { Theme } from '../../../theme/types';\nimport Icon from '../../Icon';\nimport Tooltip from '../../Tooltip';\nimport IconButton from '../IconButton';\n\nconst DisplayMode = forwardRef<DisplayModeRef, DisplayModeProps>(function DisplayMode(props, ref): ReactElement {\n\tconst theme = useTheme<Theme>();\n\n\tconst dispatch = useDispatch();\n\tconst displayMode = useSelector((state) => state.app.ui.displayMode);\n\tconst color = useSelector(\n\t\t(state) => getUser(state.users.data.users, state.app.data.user)?.ui.theme.color || defaultUser.ui.theme.color\n\t);\n\n\tconst isFetching = useIsFetching();\n\tconst isMutating = useIsMutating();\n\n\tconst [isHoveringGrid, setIsHoveringGrid] = useBoolean();\n\tconst [isClickingGrid, setIsClickingGrid] = useBoolean();\n\n\tconst [isHoveringList, setIsHoveringList] = useBoolean();\n\tconst [isClickingList, setIsClickingList] = useBoolean();\n\n\treturn (\n\t\t<ButtonGroup ref={ref} {...props} isAttached>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'grid'\n\t\t\t\t\t\t? 'Display is in Grid Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to Grid Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisOpen={!(isFetching > 0 || isMutating > 0) && isHoveringGrid}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\tgutter={isClickingGrid ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\t\tcolor={displayMode === 'grid' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingGrid.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingGrid.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringGrid.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringGrid.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` },\n\t\t\t\t\t\tfront: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='grid_on' type={displayMode === 'grid' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'list'\n\t\t\t\t\t\t? 'Display is in List Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to List Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisOpen={!(isFetching > 0 || isMutating > 0) && isHoveringList}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\tgutter={isClickingList ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\t\tcolor={displayMode === 'list' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingList.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingList.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringList.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringList.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` },\n\t\t\t\t\t\tfront: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='view_agenda' type={displayMode === 'list' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</ButtonGroup>\n\t);\n});\n\nexport default DisplayMode;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { DescriptionProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Description = (props: DescriptionProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { description, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{description || 'Poster Description'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Description;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, AspectRatio, Center, Image as CUIImage, Fade } from '@chakra-ui/react';\n\nimport { AnimatePresence } from 'framer-motion';\n\nimport { PosterImageProps } from './types';\n\nimport * as fallback from '../../../../../common/assets/fallback';\nimport { MediaType } from '../../../../../common/types';\nimport { handleReturnBoringTypeByMediaType, handleReturnRatio } from '../../../../../common/utils';\nimport Skeleton from '../../../../../components/Skeleton';\nimport Image from '../../../../Image';\n\nconst commonStyleProps = {\n\twidth: 'inherit',\n\theight: 'inherit',\n\tborderRadius: 'inherit'\n};\n\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\n\nconst PosterImage = <MT extends MediaType>(props: PosterImageProps<MT>): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\n\tconst { mediaType, image, isLoading = true, inView = false } = props;\n\n\treturn (\n\t\t<AspectRatio width={width} borderRadius='base' ratio={handleReturnRatio('portrait')}>\n\t\t\t<AnimatePresence exitBeforeEnter initial={false}>\n\t\t\t\t{inView ? (\n\t\t\t\t\t<Center {...commonStyleProps} as={Fade} key='image' in unmountOnExit>\n\t\t\t\t\t\t<Skeleton {...commonStyleProps} isLoaded={!isLoading}>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t{...commonStyleProps}\n\t\t\t\t\t\t\t\talt={image?.alt || ''}\n\t\t\t\t\t\t\t\tboringType={handleReturnBoringTypeByMediaType(mediaType)}\n\t\t\t\t\t\t\t\tthumbnailSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.thumbnail || ''}${\n\t\t\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tfullSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.full || ''}${\n\t\t\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Center>\n\t\t\t\t) : (\n\t\t\t\t\t<Center {...commonStyleProps} as={Fade} key='dummy-image' width='100%' in unmountOnExit>\n\t\t\t\t\t\t<CUIImage\n\t\t\t\t\t\t\t{...commonStyleProps}\n\t\t\t\t\t\t\talt='dummy-clickable-image'\n\t\t\t\t\t\t\twidth='auto'\n\t\t\t\t\t\t\tmaxWidth='none'\n\t\t\t\t\t\t\tsrc={colorMode === 'light' ? fallback.default.light : fallback.default.dark}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Center>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</AspectRatio>\n\t);\n};\n\nexport default PosterImage;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { SubtitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Subtitle = (props: SubtitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { subtitle, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{subtitle || 'Poster Subtitle'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Subtitle;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { TitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['19.25px', '22px', '24.75px', '27.5px', '33px', '41.25px'];\n\nconst Title = (props: TitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { title, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{title || 'Poster Title'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Title;\n","import { ReactElement, memo } from 'react';\nimport useInView from 'react-cool-inview';\n\nimport { useMediaQuery, useBreakpointValue, useBoolean, useConst, HStack, VStack, Center } from '@chakra-ui/react';\n\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport Description from './components/Description';\nimport Image from './components/Image';\nimport Subtitle from './components/Subtitle';\nimport Title from './components/Title';\nimport { HorizontalPosterProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { MediaType } from '../../../common/types';\nimport { handleReturnMediaTypeLabel } from '../../../common/utils';\nimport { guest } from '../../../store/slices/Users';\nimport { FontSizes } from '../../../theme/types';\nimport Card from '../..//Clickable/Card';\nimport Link from '../../Clickable/Link';\nimport Rating from '../../Rating';\nimport Bookmark from '../components/Bookmark';\nimport Like from '../components/Like';\nimport Quickview from '../components/Quickview';\n\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst ratingFontSize = useBreakpointValue<keyof Omit<FontSizes, '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl'>>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { observe: ref, inView } = useInView<HTMLDivElement>({\n\t\tthreshold: [0.2, 0.4, 0.6, 0.8, 1],\n\t\tunobserveOnEnter: true\n\t});\n\n\tconst user = useSelector((state) => state.app.data.user);\n\n\tconst { mediaItem, mediaType, image, rating, title, subtitle, description, isLoading = true } = props;\n\n\tconst [isDisabled, setIsDisabled] = useBoolean();\n\n\tconst isGuest = useConst<boolean>(guest.data.id === user);\n\n\treturn (\n\t\t<Link\n\t\t\tisFullWidth\n\t\t\tisDisabled={isLoading || isDisabled || mediaType === 'company'}\n\t\t\tto={\n\t\t\t\tmediaType !== 'company'\n\t\t\t\t\t? { pathname: `/${handleReturnMediaTypeLabel(mediaType)}/${mediaItem?.id || ''}` }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<Card isFullWidth isDisabled={isLoading} isClickable={mediaType !== 'company'} isFixed={isDisabled} isLight>\n\t\t\t\t<HStack ref={ref} width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\n\t\t\t\t\t{/* Image */}\n\t\t\t\t\t<Image mediaType={mediaType} image={image} isLoading={isLoading} inView={inView} />\n\n\t\t\t\t\t<VStack\n\t\t\t\t\t\twidth={[\n\t\t\t\t\t\t\t'calc(100% - 108px)',\n\t\t\t\t\t\t\t'calc(100% - 124px)',\n\t\t\t\t\t\t\t'calc(100% - 168px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 240px)'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Rating */}\n\t\t\t\t\t\t{(mediaType === 'movie' || mediaType === 'tv') && rating ? (\n\t\t\t\t\t\t\t<Rating count={rating?.count} inView={inView} size={ratingFontSize} isLoading={isLoading}>\n\t\t\t\t\t\t\t\t{rating?.rating}\n\t\t\t\t\t\t\t</Rating>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title title={title} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t{!(isNil(subtitle) || isEmpty(subtitle)) || isLoading ? (\n\t\t\t\t\t\t\t\t<Subtitle subtitle={subtitle} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t{!(isNil(description) || isEmpty(description)) || isLoading ? (\n\t\t\t\t\t\t\t<Description description={description} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</VStack>\n\n\t\t\t\t\t{/* Like / List Icon / Quick View buttons */}\n\t\t\t\t\t<Center\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tright: 1\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Quick View component */}\n\t\t\t\t\t\t{mediaType !== 'company' ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Quickview\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{/* Like component */}\n\t\t\t\t\t\t{!isGuest ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Like\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{/* List component */}\n\t\t\t\t\t\t{!isGuest && (mediaType === 'movie' || mediaType === 'tv') ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Bookmark\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Center>\n\t\t\t\t</HStack>\n\t\t\t</Card>\n\t\t</Link>\n\t);\n};\n\nexport default memo(HorizontalPoster);\n","import { ReactElement } from 'react';\n\nimport range from 'lodash/range';\n\nimport { VerticalTVProps } from './types';\n\nimport { PartialTV } from '../../../../../common/types/tv';\nimport Empty from '../../../../../components/Empty';\nimport Error from '../../../../../components/Error';\nimport VerticalGrid from '../../../../../components/Grid/Vertical';\nimport HorizontalTVShowPoster from '../../Poster/Horizontal';\nimport VerticalTVShowPoster from '../../Poster/Vertical';\n\nconst VerticalTV = (props: VerticalTVProps): ReactElement => {\n\tconst { isError = false, isSuccess = false, isLoading = true, shows } = props;\n\n\treturn !isLoading && isError ? (\n\t\t<Error label='Oh no! Something went wrong' description='Failed to fetch TV Shows list!' variant='outlined' />\n\t) : !isLoading && isSuccess && shows && shows.length === 0 ? (\n\t\t<Empty label='TV Shows list is currently empty!' variant='outlined' />\n\t) : !isLoading && isSuccess && shows && shows.length > 0 ? (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\tshows.map((show: PartialTV) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalTVShowPoster key={show.id} show={show} isLoading={false} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalTVShowPoster key={show.id} show={show} isLoading={false} />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t) : (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\trange(0, isSuccess && shows && shows.length > 0 ? shows.length : 20).map((_dummy, index: number) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalTVShowPoster key={index} isLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalTVShowPoster key={index} isLoading />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t);\n};\n\nexport default VerticalTV;\n","import { ReactElement } from 'react';\n\nimport compact from 'lodash/compact';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport { HorizontalTVShowPosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID, handleReturnImageSize } from '../../../../../common/utils';\nimport HorizontalPoster from '../../../../../components/Poster/Horizontal';\n\nconst thumbnail = handleReturnImageSize('poster', 'thumbnail');\nconst full = handleReturnImageSize('poster', 'full');\n\nconst HorizontalTVShowPoster = (props: HorizontalTVShowPosterProps): ReactElement => {\n\tconst { show, isLoading = true } = props;\n\tconst { name, poster_path, vote_average, vote_count, first_air_date, genre_ids, overview } = show || {};\n\n\treturn (\n\t\t<HorizontalPoster\n\t\t\tmediaItem={show ? { ...show } : undefined}\n\t\t\tmediaType='tv'\n\t\t\timage={{\n\t\t\t\talt: `${name || ''} tv show poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: { thumbnail, full }\n\t\t\t}}\n\t\t\trating={{\n\t\t\t\trating: vote_average || null,\n\t\t\t\tcount: vote_count || null\n\t\t\t}}\n\t\t\ttitle={name || ''}\n\t\t\tsubtitle={`${compact([\n\t\t\t\t!(isNil(first_air_date) || isEmpty(first_air_date))\n\t\t\t\t\t? `${handleReturnDate(first_air_date || '', 'full')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!(isNil(genre_ids) || isEmpty(genre_ids))\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'tv')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tdescription={overview || ''}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default HorizontalTVShowPoster;\n","import { ReactElement } from 'react';\n\nimport compact from 'lodash/compact';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport { VerticalTVShowPosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID, handleReturnImageSize } from '../../../../../common/utils';\nimport VerticalPoster from '../../../../../components/Poster/Vertical';\n\nconst thumbnail = handleReturnImageSize('poster', 'thumbnail');\nconst full = handleReturnImageSize('poster', 'full');\n\nconst VerticalTVShowPoster = (props: VerticalTVShowPosterProps): ReactElement => {\n\tconst { show, width, isLoading = true } = props;\n\tconst { name, poster_path, vote_average, first_air_date, genre_ids } = show || {};\n\n\treturn (\n\t\t<VerticalPoster\n\t\t\twidth={width || '100%'}\n\t\t\tmediaItem={show ? { ...show } : undefined}\n\t\t\tmediaType='tv'\n\t\t\timage={{\n\t\t\t\talt: `${name || ''} tv show poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: { thumbnail, full }\n\t\t\t}}\n\t\t\trating={vote_average || null}\n\t\t\ttitle={name || ''}\n\t\t\tsubtitle={`${compact([\n\t\t\t\t!(isNil(first_air_date) || isEmpty(first_air_date))\n\t\t\t\t\t? `${handleReturnDate(first_air_date || '', 'year')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!(isNil(genre_ids) || isEmpty(genre_ids))\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'tv')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default VerticalTVShowPoster;\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport { useInfiniteQuery } from 'react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { useMediaQuery, useBoolean, HStack, VStack, Fade, ScaleFade, Collapse } from '@chakra-ui/react';\n\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport debounce from 'lodash/debounce';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\nimport merge from 'lodash/merge';\nimport mergeWith from 'lodash/mergeWith';\nimport omit from 'lodash/omit';\nimport omitBy from 'lodash/omitBy';\nimport uniqBy from 'lodash/uniqBy';\nimport qs from 'query-string';\nimport { useElementSize, useUpdateEffect, useEffectOnce } from 'usehooks-ts';\n\nimport VerticalTV from './components/Orientation/Vertical';\n\nimport { useSelector } from '../../common/hooks';\nimport axiosInstance, { handleDelay } from '../../common/scripts/axios';\nimport { Response } from '../../common/types';\nimport { PartialTV } from '../../common/types/tv';\nimport Badge from '../../components/Badge';\nimport Button from '../../components/Clickable/Button';\nimport DisplayMode from '../../components/Clickable/DisplayMode';\nimport LoadMore from '../../components/Clickable/LoadMore';\nimport { handlePopulateFilters } from '../../components/Filters/common/utils';\nimport DisplayFilters from '../../components/Filters/Display';\nimport FiltersForm, { defaultValues as defaultFilterValues } from '../../components/Filters/Form';\nimport { Filters as FiltersFormType } from '../../components/Filters/types';\nimport SortBy from '../../components/SortBy';\nimport { tvSortBy as sortBy } from '../../components/SortBy/common/data/sort';\nimport { Form as SortForm } from '../../components/SortBy/types';\nimport Page from '../../containers/Page';\nimport { defaultUser, getUser } from '../../store/slices/Users';\n\nconst defaultFilters = {\n\t'language': 'en-US', // TODO: Make this dynamic\n\t'ott_region': 'US', // TODO: Make this dynamic\n\t'certification_country': 'US', // TODO: Make this dynamic\n\t'first_air_date.lte': dayjs().format('YYYY-MM-DD')\n};\n\nconst TV = (): ReactElement => {\n\tconst source = axios.CancelToken.source();\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst location = useLocation();\n\tconst [searchParams, setSearchParams] = useSearchParams(defaultFilters);\n\n\tconst color = useSelector(\n\t\t(state) => getUser(state.users.data.users, state.app.data.user)?.ui.theme.color || defaultUser.ui.theme.color\n\t);\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst [shows, setShows] = useState<Response<PartialTV[]>>();\n\tconst [isFetchingPage, setIsFetchingPage] = useBoolean();\n\n\tconst [totalActiveFilters, setTotalActiveFilters] = useState<number>(0);\n\n\t// Fetching TV Shows\n\tconst tvShowsQuery = useInfiniteQuery(\n\t\t'tv-shows',\n\t\tasync ({ pageParam = 1 }) => {\n\t\t\tconst { data } = await axiosInstance\n\t\t\t\t.get<Response<PartialTV[]>>('/discover/tv', {\n\t\t\t\t\tparams: { ...(qs.parse(searchParams.toString() || '') || {}), page: pageParam || 1 },\n\t\t\t\t\tcancelToken: source.token\n\t\t\t\t})\n\t\t\t\t.then((response) => handleDelay(isFetchingPage ? 0 : 2500, response));\n\t\t\treturn data;\n\t\t},\n\t\t{\n\t\t\tenabled: false,\n\t\t\tgetPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? (firstPage?.page || 0) - 1 : false),\n\t\t\tgetNextPageParam: (lastPage) =>\n\t\t\t\tlastPage.page !== lastPage.total_pages ? (lastPage?.page || 0) + 1 : false,\n\t\t\tonSuccess: (data) => {\n\t\t\t\tlet shows: PartialTV[] = [];\n\n\t\t\t\tdata.pages.forEach((page) => {\n\t\t\t\t\tshows = [...shows, ...(page?.results || [])];\n\t\t\t\t});\n\n\t\t\t\tsetShows({\n\t\t\t\t\tpage: data.pages[data.pages.length - 1].page,\n\t\t\t\t\tresults: [...uniqBy(shows, 'id')],\n\t\t\t\t\ttotal_pages: data.pages[data.pages.length - 1].total_pages,\n\t\t\t\t\ttotal_results: data.pages[data.pages.length - 1].total_results\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t);\n\n\tconst handleCheckFilters = useCallback(\n\t\tdebounce((filters: FiltersFormType) => {\n\t\t\tlet key: keyof FiltersFormType;\n\t\t\tlet total = 0;\n\n\t\t\tfor (key in filters) {\n\t\t\t\tif (\n\t\t\t\t\tkey === 'dates' &&\n\t\t\t\t\t(!(isNil(filters.dates.gte) || isEmpty(filters.dates.gte)) ||\n\t\t\t\t\t\t!(isNil(filters.dates.lte) || isEmpty(filters.dates.lte)))\n\t\t\t\t) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t} else if (key !== 'dates' && !(isNil(filters[key]) || isEmpty(filters[key]))) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTotalActiveFilters(total);\n\t\t}, 500),\n\t\t[setTotalActiveFilters]\n\t);\n\n\tconst handleSetFilters = (form: FiltersFormType): void => {\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\t\tObject.keys(currentSearch).forEach((key) => key === 'sort_by' || delete currentSearch[key]);\n\n\t\tconst filters = omitBy(\n\t\t\tmerge({\n\t\t\t\t...defaultFilters,\n\t\t\t\t'certification': form.certifications.length > 0 ? form.certifications.join('|') : undefined,\n\t\t\t\t'first_air_date.gte': form.dates.gte || undefined,\n\t\t\t\t'first_air_date.lte': form.dates.lte || undefined,\n\t\t\t\t'with_genres': form.genres.length > 0 ? form.genres.join(',') : undefined,\n\t\t\t\t'vote_average.gte': form.rating.length > 0 && form.rating[0] ? form.rating[0] : undefined,\n\t\t\t\t'vote_average.lte': form.rating.length > 0 && form.rating[1] ? form.rating[1] : undefined,\n\t\t\t\t'vote_count.gte': form.count.length > 0 && form.count[0] ? form.count[0] : undefined,\n\t\t\t\t'vote_count.lte': form.count.length > 0 && form.count[1] ? form.count[1] : undefined,\n\t\t\t\t'with_runtime.gte': form.runtime.length > 0 && form.runtime[0] ? form.runtime[0] : undefined,\n\t\t\t\t'with_runtime.lte': form.runtime.length > 0 && form.runtime[1] ? form.runtime[1] : undefined\n\t\t\t}),\n\t\t\tisNil || isEmpty\n\t\t);\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, ...filters }));\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t};\n\n\tconst handleSetSortBy = (form: SortForm): void => {\n\t\tconst currentSearch = omit(qs.parse(searchParams.toString() || ''), 'sort_by');\n\n\t\tconst sortBy = {\n\t\t\tsort_by: `${form.sortBy.value}.${form.direction}`\n\t\t};\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, ...sortBy }));\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t};\n\n\tconst handleLoadMore = (): void => {\n\t\tconst page = shows?.page || 1;\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, page: page + 1 }));\n\n\t\tsetIsFetchingPage.on();\n\n\t\tsetTimeout(() => tvShowsQuery.fetchNextPage(), 250);\n\t};\n\n\tuseEffect(() => {\n\t\thandleCheckFilters(handlePopulateFilters(location.search, 'tv'));\n\t}, [location.search]);\n\n\tuseUpdateEffect(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\t\tconst totalPages =\n\t\t\tcurrentSearch && currentSearch.page && typeof currentSearch.page === 'string'\n\t\t\t\t? Number(currentSearch.page)\n\t\t\t\t: 1;\n\t\tconst page = shows?.page || 1;\n\n\t\tif (page < totalPages && tvShowsQuery.hasNextPage) {\n\t\t\tsetIsFetchingPage.on();\n\n\t\t\ttvShowsQuery.fetchNextPage();\n\t\t}\n\t}, [shows?.page]);\n\n\tuseEffectOnce(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\n\t\tsetSearchParams(\n\t\t\tObject.keys(currentSearch).length > 0\n\t\t\t\t? merge({ ...defaultFilters, ...currentSearch })\n\t\t\t\t: merge({ ...defaultFilters, sort_by: 'popularity.desc' })\n\t\t);\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t});\n\n\tuseEffect(() => {\n\t\treturn () => source.cancel();\n\t}, []);\n\n\treturn (\n\t\t<Page title='TV Shows'>\n\t\t\t{{\n\t\t\t\tactions: (\n\t\t\t\t\t<HStack width={isSm ? '100%' : 'auto'} spacing={2}>\n\t\t\t\t\t\t<SortBy\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\ttvShowsQuery.isFetching || tvShowsQuery.isLoading || tvShowsQuery.isError\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSort By\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsortBy={[...sortBy]}\n\t\t\t\t\t\t\tonSort={handleSetSortBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FiltersForm\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\trenderRight={\n\t\t\t\t\t\t\t\t\t\ttotalActiveFilters > 0\n\t\t\t\t\t\t\t\t\t\t\t? ({ color }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Fade in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={color} size='xs'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CountUp duration={1} end={totalActiveFilters} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\ttvShowsQuery.isFetching || tvShowsQuery.isLoading || tvShowsQuery.isError\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tmediaType='tv'\n\t\t\t\t\t\t\tonFilter={handleSetFilters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DisplayMode ref={ref} />\n\t\t\t\t\t</HStack>\n\t\t\t\t),\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={4} px={2} pt={2}>\n\t\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t\t<Collapse in={totalActiveFilters > 0} unmountOnExit style={{ width: '100%' }}>\n\t\t\t\t\t\t\t\t<DisplayFilters\n\t\t\t\t\t\t\t\t\tmediaType='tv'\n\t\t\t\t\t\t\t\t\tonTagDelete={(filter, filters) =>\n\t\t\t\t\t\t\t\t\t\thandleSetFilters({ ...filters, [filter]: defaultFilterValues[filter] })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClear={() => handleSetFilters({ ...defaultFilterValues })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Collapse>\n\n\t\t\t\t\t\t\t<VerticalTV\n\t\t\t\t\t\t\t\tisError={tvShowsQuery.isError}\n\t\t\t\t\t\t\t\tisSuccess={tvShowsQuery.isSuccess}\n\t\t\t\t\t\t\t\tisLoading={tvShowsQuery.isFetching || tvShowsQuery.isLoading}\n\t\t\t\t\t\t\t\tshows={shows?.results || []}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t<ScaleFade\n\t\t\t\t\t\t\tin={!tvShowsQuery.isError && (shows?.total_results || 0) > 0}\n\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\tstyle={{ width: isSm ? '100%' : 'auto' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LoadMore\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tamount={shows?.results?.length || 0}\n\t\t\t\t\t\t\t\ttotal={shows?.total_results || 0}\n\t\t\t\t\t\t\t\tlabel='TV Shows'\n\t\t\t\t\t\t\t\tisLoading={tvShowsQuery.isFetching || tvShowsQuery.isLoading}\n\t\t\t\t\t\t\t\tisButtonVisible={(tvShowsQuery.hasNextPage || true) && !tvShowsQuery.isError}\n\t\t\t\t\t\t\t\tonClick={handleLoadMore}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ScaleFade>\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Page>\n\t);\n};\n\nexport default TV;\n"],"names":["DisplayMode","forwardRef","props","ref","theme","useTheme","dispatch","useDispatch","displayMode","useSelector","state","app","ui","color","getUser","users","data","user","defaultUser","isFetching","useIsFetching","isMutating","useIsMutating","useBoolean","isHoveringGrid","setIsHoveringGrid","isClickingGrid","setIsClickingGrid","isHoveringList","setIsHoveringList","isClickingList","setIsClickingList","isAttached","isOpen","isDisabled","placement","label","gutter","onClick","toggleDisplayMode","undefined","onMouseDown","on","onMouseUp","off","onMouseEnter","onMouseLeave","variant","sx","back","borderRadius","radii","base","front","icon","type","dummies","range","height","colorMode","useColorMode","fontSize","useBreakpointValue","description","isLoading","inView","dummy","useConst","sample","width","maxWidth","isLoaded","align","fontWeight","isTruncated","overflow","whiteSpace","commonStyleProps","mediaType","image","ratio","handleReturnRatio","AnimatePresence","exitBeforeEnter","initial","as","Fade","key","in","unmountOnExit","Skeleton","Image","alt","boringType","handleReturnBoringTypeByMediaType","thumbnailSrc","process","size","thumbnail","src","fullSrc","full","fallback","subtitle","title","HorizontalPoster","useMediaQuery","isSm","ratingFontSize","useInView","threshold","unobserveOnEnter","observe","mediaItem","rating","setIsDisabled","isGuest","guest","Link","isFullWidth","to","pathname","handleReturnMediaTypeLabel","id","Card","isClickable","isFixed","isLight","position","spacing","p","alignItems","Rating","count","isNil","isEmpty","top","right","Quickview","Like","Bookmark","memo","isError","isSuccess","shows","length","map","show","_dummy","index","handleReturnImageSize","name","poster_path","vote_average","vote_count","first_air_date","genre_ids","overview","compact","handleReturnDate","handleReturnGenresByID","join","defaultFilters","dayjs","format","source","axios","location","useLocation","useSearchParams","searchParams","setSearchParams","useElementSize","useState","setShows","isFetchingPage","setIsFetchingPage","totalActiveFilters","setTotalActiveFilters","tvShowsQuery","useInfiniteQuery","pageParam","axiosInstance","params","qs","toString","page","cancelToken","token","then","response","handleDelay","enabled","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","forEach","results","uniqBy","total_results","handleCheckFilters","useCallback","debounce","filters","total","dates","gte","lte","handleSetFilters","form","currentSearch","Object","keys","omitBy","merge","certifications","genres","runtime","mergeWith","setTimeout","refetch","useEffect","handlePopulateFilters","search","useUpdateEffect","totalPages","Number","hasNextPage","fetchNextPage","useEffectOnce","sort_by","cancel","actions","renderButton","sortBy","onSort","omit","value","direction","renderRight","duration","end","onFilter","body","px","pt","style","onTagDelete","filter","defaultFilterValues","onClear","amount","isButtonVisible"],"sourceRoot":""}