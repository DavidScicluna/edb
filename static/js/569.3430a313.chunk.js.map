{"version":3,"file":"static/js/569.3430a313.chunk.js","mappings":"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","sources":["pages/Movies/index.tsx"],"sourcesContent":["import { ReactElement, useState, useCallback, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport { useInfiniteQuery } from 'react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { useMediaQuery, useBoolean, HStack, VStack, Fade, ScaleFade, Collapse } from '@chakra-ui/react';\n\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport debounce from 'lodash/debounce';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\nimport merge from 'lodash/merge';\nimport mergeWith from 'lodash/mergeWith';\nimport omit from 'lodash/omit';\nimport omitBy from 'lodash/omitBy';\nimport uniqBy from 'lodash/uniqBy';\nimport qs from 'query-string';\nimport { useElementSize, useUpdateEffect, useEffectOnce } from 'usehooks-ts';\n\nimport VerticalMovies from './components/Orientation/Vertical';\n\nimport { useSelector } from '../../common/hooks';\nimport axiosInstance, { handleDelay } from '../../common/scripts/axios';\nimport { Response } from '../../common/types';\nimport { PartialMovie } from '../../common/types/movie';\nimport Badge from '../../components/Badge';\nimport Button from '../../components/Clickable/Button';\nimport DisplayMode from '../../components/Clickable/DisplayMode';\nimport LoadMore from '../../components/Clickable/LoadMore';\nimport { handlePopulateFilters } from '../../components/Filters/common/utils';\nimport DisplayFilters from '../../components/Filters/Display';\nimport FiltersForm, { defaultValues as defaultFilterValues } from '../../components/Filters/Form';\nimport { Filters as FiltersFormType } from '../../components/Filters/types';\nimport SortBy from '../../components/SortBy';\nimport { movieSortBy as sortBy } from '../../components/SortBy/common/data/sort';\nimport { Form as SortForm } from '../../components/SortBy/types';\nimport Page from '../../containers/Page';\nimport { defaultUser, getUser } from '../../store/slices/Users';\n\nconst defaultFilters = {\n\t'language': 'en-US', // TODO: Make this dynamic\n\t'ott_region': 'US', // TODO: Make this dynamic\n\t'certification_country': 'US', // TODO: Make this dynamic\n\t'primary_release_date.lte': dayjs().format('YYYY-MM-DD')\n};\n\nconst Movies = (): ReactElement => {\n\tconst source = axios.CancelToken.source();\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst location = useLocation();\n\tconst [searchParams, setSearchParams] = useSearchParams(defaultFilters);\n\n\tconst color = useSelector(\n\t\t(state) => getUser(state.users.data.users, state.app.data.user)?.ui.theme.color || defaultUser.ui.theme.color\n\t);\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst [movies, setMovies] = useState<Response<PartialMovie[]>>();\n\tconst [isFetchingPage, setIsFetchingPage] = useBoolean();\n\n\tconst [totalActiveFilters, setTotalActiveFilters] = useState<number>(0);\n\n\t// Fetching Movies\n\tconst moviesQuery = useInfiniteQuery(\n\t\t'movies',\n\t\tasync ({ pageParam = 1 }) => {\n\t\t\tconst { data } = await axiosInstance\n\t\t\t\t.get<Response<PartialMovie[]>>('/discover/movie', {\n\t\t\t\t\tparams: { ...(qs.parse(searchParams.toString() || '') || {}), page: pageParam || 1 },\n\t\t\t\t\tcancelToken: source.token\n\t\t\t\t})\n\t\t\t\t.then((response) => handleDelay(isFetchingPage ? 0 : 2500, response));\n\t\t\treturn data;\n\t\t},\n\t\t{\n\t\t\tenabled: false,\n\t\t\tgetPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? (firstPage?.page || 0) - 1 : false),\n\t\t\tgetNextPageParam: (lastPage) =>\n\t\t\t\tlastPage.page !== lastPage.total_pages ? (lastPage?.page || 0) + 1 : false,\n\t\t\tonSuccess: (data) => {\n\t\t\t\tlet movies: PartialMovie[] = [];\n\n\t\t\t\tdata.pages.forEach((page) => {\n\t\t\t\t\tmovies = [...movies, ...(page?.results || [])];\n\t\t\t\t});\n\n\t\t\t\tsetMovies({\n\t\t\t\t\tpage: data.pages[data.pages.length - 1].page,\n\t\t\t\t\tresults: [...uniqBy(movies, 'id')],\n\t\t\t\t\ttotal_pages: data.pages[data.pages.length - 1].total_pages,\n\t\t\t\t\ttotal_results: data.pages[data.pages.length - 1].total_results\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t);\n\n\tconst handleCheckFilters = useCallback(\n\t\tdebounce((filters: FiltersFormType) => {\n\t\t\tlet key: keyof FiltersFormType;\n\t\t\tlet total = 0;\n\n\t\t\tfor (key in filters) {\n\t\t\t\tif (\n\t\t\t\t\tkey === 'dates' &&\n\t\t\t\t\t(!(isNil(filters.dates.gte) || isEmpty(filters.dates.gte)) ||\n\t\t\t\t\t\t!(isNil(filters.dates.lte) || isEmpty(filters.dates.lte)))\n\t\t\t\t) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t} else if (key !== 'dates' && !(isNil(filters[key]) || isEmpty(filters[key]))) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTotalActiveFilters(total);\n\t\t}, 500),\n\t\t[setTotalActiveFilters]\n\t);\n\n\tconst handleSetFilters = (form: FiltersFormType): void => {\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\t\tObject.keys(currentSearch).forEach((key) => key === 'sort_by' || delete currentSearch[key]);\n\n\t\tconst filters = omitBy(\n\t\t\tmerge({\n\t\t\t\t...defaultFilters,\n\t\t\t\t'certification': form.certifications.length > 0 ? form.certifications.join('|') : undefined,\n\t\t\t\t// 'include_adult': form.adult ? String(form.adult) : undefined,\n\t\t\t\t'primary_release_date.gte': form.dates.gte || undefined,\n\t\t\t\t'primary_release_date.lte': form.dates.lte || undefined,\n\t\t\t\t'with_genres': form.genres.length > 0 ? form.genres.join(',') : undefined,\n\t\t\t\t'vote_average.gte': form.rating.length > 0 && form.rating[0] ? form.rating[0] : undefined,\n\t\t\t\t'vote_average.lte': form.rating.length > 0 && form.rating[1] ? form.rating[1] : undefined,\n\t\t\t\t'vote_count.gte': form.count.length > 0 && form.count[0] ? form.count[0] : undefined,\n\t\t\t\t'vote_count.lte': form.count.length > 0 && form.count[1] ? form.count[1] : undefined,\n\t\t\t\t'with_runtime.gte': form.runtime.length > 0 && form.runtime[0] ? form.runtime[0] : undefined,\n\t\t\t\t'with_runtime.lte': form.runtime.length > 0 && form.runtime[1] ? form.runtime[1] : undefined\n\t\t\t}),\n\t\t\tisNil || isEmpty\n\t\t);\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, ...filters }));\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t};\n\n\tconst handleSetSortBy = (form: SortForm): void => {\n\t\tconst currentSearch = omit(qs.parse(searchParams.toString() || ''), 'sort_by');\n\n\t\tconst sortBy = {\n\t\t\tsort_by: `${form.sortBy.value}.${form.direction}`\n\t\t};\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, ...sortBy }));\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t};\n\n\tconst handleLoadMore = (): void => {\n\t\tconst page = movies?.page || 1;\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\n\t\tsetSearchParams(mergeWith({ ...currentSearch, page: page + 1 }));\n\n\t\tsetIsFetchingPage.on();\n\n\t\tsetTimeout(() => moviesQuery.fetchNextPage(), 250);\n\t};\n\n\tuseEffect(() => {\n\t\thandleCheckFilters(handlePopulateFilters(location.search, 'movie'));\n\t}, [location.search]);\n\n\tuseUpdateEffect(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\t\tconst totalPages =\n\t\t\tcurrentSearch && currentSearch.page && typeof currentSearch.page === 'string'\n\t\t\t\t? Number(currentSearch.page)\n\t\t\t\t: 1;\n\t\tconst page = movies?.page || 1;\n\n\t\tif (page < totalPages && moviesQuery.hasNextPage) {\n\t\t\tsetIsFetchingPage.on();\n\n\t\t\tmoviesQuery.fetchNextPage();\n\t\t}\n\t}, [movies?.page]);\n\n\tuseEffectOnce(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\n\t\tsetSearchParams(\n\t\t\tObject.keys(currentSearch).length > 0\n\t\t\t\t? merge({ ...defaultFilters, ...currentSearch })\n\t\t\t\t: merge({ ...defaultFilters, sort_by: 'popularity.desc' })\n\t\t);\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t});\n\n\tuseEffect(() => {\n\t\treturn () => source.cancel();\n\t}, []);\n\n\treturn (\n\t\t<Page title='Movies'>\n\t\t\t{{\n\t\t\t\tactions: (\n\t\t\t\t\t<HStack width={isSm ? '100%' : 'auto'} spacing={2}>\n\t\t\t\t\t\t<SortBy\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={moviesQuery.isFetching || moviesQuery.isLoading || moviesQuery.isError}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSort By\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsortBy={[...sortBy]}\n\t\t\t\t\t\t\tonSort={handleSetSortBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FiltersForm\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\trenderRight={\n\t\t\t\t\t\t\t\t\t\ttotalActiveFilters > 0\n\t\t\t\t\t\t\t\t\t\t\t? ({ color }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Fade in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={color} size='xs'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CountUp duration={1} end={totalActiveFilters} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={moviesQuery.isFetching || moviesQuery.isLoading || moviesQuery.isError}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tmediaType='movie'\n\t\t\t\t\t\t\tonFilter={handleSetFilters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DisplayMode ref={ref} />\n\t\t\t\t\t</HStack>\n\t\t\t\t),\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={4} px={2} pt={2}>\n\t\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t\t<Collapse in={totalActiveFilters > 0} unmountOnExit style={{ width: '100%' }}>\n\t\t\t\t\t\t\t\t<DisplayFilters\n\t\t\t\t\t\t\t\t\tmediaType='movie'\n\t\t\t\t\t\t\t\t\tonTagDelete={(filter, filters) =>\n\t\t\t\t\t\t\t\t\t\thandleSetFilters({ ...filters, [filter]: defaultFilterValues[filter] })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClear={() => handleSetFilters({ ...defaultFilterValues })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Collapse>\n\n\t\t\t\t\t\t\t<VerticalMovies\n\t\t\t\t\t\t\t\tisError={moviesQuery.isError}\n\t\t\t\t\t\t\t\tisSuccess={moviesQuery.isSuccess}\n\t\t\t\t\t\t\t\tisLoading={moviesQuery.isFetching || moviesQuery.isLoading}\n\t\t\t\t\t\t\t\tmovies={movies?.results || []}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t<ScaleFade\n\t\t\t\t\t\t\tin={!moviesQuery.isError && (movies?.total_results || 0) > 0}\n\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\tstyle={{ width: isSm ? '100%' : 'auto' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LoadMore\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tamount={movies?.results?.length || 0}\n\t\t\t\t\t\t\t\ttotal={movies?.total_results || 0}\n\t\t\t\t\t\t\t\tlabel='Movies'\n\t\t\t\t\t\t\t\tisLoading={moviesQuery.isFetching || moviesQuery.isLoading}\n\t\t\t\t\t\t\t\tisButtonVisible={(moviesQuery.hasNextPage || true) && !moviesQuery.isError}\n\t\t\t\t\t\t\t\tonClick={handleLoadMore}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ScaleFade>\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Page>\n\t);\n};\n\nexport default Movies;\n"],"names":["defaultFilters","dayjs","format","source","axios","useMediaQuery","isSm","location","useLocation","useSearchParams","searchParams","setSearchParams","color","useSelector","state","getUser","users","data","app","user","ui","theme","defaultUser","useElementSize","ref","height","useState","movies","setMovies","useBoolean","isFetchingPage","setIsFetchingPage","totalActiveFilters","setTotalActiveFilters","moviesQuery","useInfiniteQuery","pageParam","axiosInstance","params","qs","toString","page","cancelToken","token","then","response","handleDelay","enabled","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","forEach","results","length","uniqBy","total_results","handleCheckFilters","useCallback","debounce","filters","key","total","isNil","dates","gte","isEmpty","lte","handleSetFilters","form","currentSearch","Object","keys","omitBy","merge","certifications","join","undefined","genres","rating","count","runtime","mergeWith","setTimeout","refetch","useEffect","handlePopulateFilters","search","useUpdateEffect","totalPages","Number","hasNextPage","on","fetchNextPage","useEffectOnce","sort_by","cancel","title","actions","width","spacing","renderButton","onClick","isFullWidth","isDisabled","isFetching","isLoading","isError","variant","sx","back","sortBy","onSort","omit","value","direction","renderRight","in","unmountOnExit","size","duration","end","mediaType","onFilter","body","px","pt","style","onTagDelete","filter","defaultFilterValues","onClear","isSuccess","amount","label","isButtonVisible"],"sourceRoot":""}