{"version":3,"sources":["common/scripts/axios.ts","components/Grid/Horizontal/components/Header/index.tsx","components/Inputs/Button/index.tsx","components/Inputs/Button/styles.ts","components/Grid/Horizontal/components/Grid/index.tsx","components/Inputs/IconButton/index.tsx","components/Inputs/IconButton/styles.ts","store/slices/App/index.ts","store/slices/Options/index.ts","store/slices/User/index.ts","store/rootReducer.ts","store/index.ts","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/sizes.ts","theme/foundations/spacing.ts","theme/foundations/transition.ts","theme/foundations/typography.ts","theme/foundations/index.tsx","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/utils.ts","components/Tooltip/index.tsx","components/Grid/Horizontal/index.tsx","common/hooks/useSelectorTyped.ts","common/assets/illustrations/empty.svg","components/Empty/index.tsx","common/assets/illustrations/error.svg","components/Error/index.tsx","components/Bookmark/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/utils.ts","components/Skeleton/index.tsx","components/Image/index.tsx","components/Like/index.tsx","components/Skeleton/Text/index.tsx","components/Rating/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","components/Movies/Poster/Vertical/index.tsx","components/Movies/Grid/Horizontal/index.tsx","components/People/Poster/Vertical/index.tsx","components/People/Grid/Horizontal/index.tsx","components/TV/Poster/Vertical/index.tsx","components/TV/Grid/Horizontal/index.tsx","pages/Home/index.tsx","components/DisplayMode/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/Modal/index.tsx","components/MediaTypePicker/components/MediaTypeItem/index.tsx","components/MediaTypePicker/components/MediaTypeItem/styles.ts","components/MediaTypePicker/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","components/Movies/Poster/Horizontal/index.tsx","pages/Liked/components/Movie/index.tsx","components/People/Poster/Horizontal/index.tsx","pages/Liked/components/Person/index.tsx","components/TV/Poster/Horizontal/index.tsx","pages/Liked/components/Show/index.tsx","pages/Liked/components/All/index.tsx","pages/Liked/index.tsx","pages/Lists/components/Movie/index.tsx","pages/Lists/components/Show/index.tsx","pages/Lists/components/All/index.tsx","pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/Lists/components/ListPicker/components/ListItem/styles.ts","pages/Lists/components/ListPicker/index.tsx","pages/Lists/index.tsx","pages/Movies/index.tsx","common/data/response.ts","common/data/sort.ts","components/Filters/components/Container/index.tsx","components/Filters/components/DisplayMode/index.tsx","components/Filters/components/Genres/components/Genre/index.tsx","components/Filters/components/Genres/components/Genre/styles.ts","components/Filters/components/Genres/index.tsx","components/Filters/components/SortBy/components/SortByItem/index.tsx","components/Filters/components/SortBy/components/SortByItem/styles.ts","components/Filters/components/SortBy/index.tsx","components/Filters/index.tsx","components/LoadMore/index.tsx","components/Movies/Grid/Vertical/index.tsx","pages/Movies/NowPlaying/index.tsx","pages/Movies/Popular/index.tsx","pages/Movies/TopRated/index.tsx","pages/Movies/Upcoming/index.tsx","components/People/Grid/Vertical/index.tsx","pages/People/index.tsx","components/SearchForm/components/Row/index.tsx","components/SearchForm/components/Row/styles.ts","components/SearchForm/components/Default/index.tsx","components/SearchForm/components/Display/index.tsx","components/SearchForm/index.tsx","components/TV/Grid/Vertical/index.tsx","pages/Search/components/All/index.tsx","pages/Search/index.tsx","pages/Trending/index.tsx","pages/TV/index.tsx","pages/TV/AiringToday/index.tsx","pages/TV/OnTV/index.tsx","pages/TV/Popular/index.tsx","pages/TV/TopRated/index.tsx","containers/Layout/common/data/sidebar.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/components/Header/components/Breadcrumb/index.tsx","containers/Layout/components/Header/components/Breadcrumb/styles.ts","containers/Layout/common/data/navItems.ts","containers/Layout/components/Logo/index.tsx","containers/Layout/components/Logo/styles.ts","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/index.tsx","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/styles.ts","containers/Layout/components/NavItems/components/NavItem/index.tsx","containers/Layout/components/NavItems/components/NavItem/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/Search/index.tsx","containers/Layout/components/Header/components/User/components/UserLink/index.tsx","containers/Layout/components/Header/components/User/components/UserLink/styles.ts","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","containers/Layout/components/Modals/Display/index.tsx","containers/Layout/components/Modals/Lists/components/CreateList/validation.ts","containers/Layout/components/Modals/Lists/components/CreateList/index.tsx","containers/Layout/components/Modals/Lists/components/List/index.tsx","containers/Layout/components/Modals/Lists/components/List/styles.ts","containers/Layout/components/Modals/Lists/index.tsx","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","common/hooks/useQueriesTyped.ts","routes/DefaultRoute.tsx","routes/index.tsx","containers/App/index.tsx","index.tsx"],"names":["instance","axios","create","baseURL","process","interceptors","request","use","headers","interval","Button","props","theme","useTheme","colorMode","useColorMode","style","color","size","variant","isFullWidth","isLoading","common","button","transition","duration","normal","easing","transform","boxShadow","disabled","cursor","opacity","light","colors","borderColor","backgroundColor","dark","useStyles","children","leftIcon","rightIcon","isDisabled","rest","handleReturnMargin","space","handleReturnIconSize","fontSizes","md","lg","xl","padding","handleReturnPadding","sx","_","merge","_disabled","border","thickness","speed","slow","as","fontSize","marginRight","marginLeft","Grid","gridRef","handleScrollChange","ref","width","overflowX","px","display","onLoad","event","onScroll","minWidth","borderRadius","p","spacing","IconButton","forwardRef","icon","appSlice","createSlice","name","initialState","data","displayMode","sortDirection","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","defaultListsModal","open","item","undefined","recentSearches","recentlyViewed","liked","listsModal","lists","id","uuid","label","date","moment","Date","toISOString","results","isDisplayModalOpen","userSlice","setRecentSearches","setRecentlyViewed","setLiked","setLists","toggleList","toggleDisplay","rootReducer","combineReducers","app","appReducer","options","optionsReducer","user","userReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","sm","base","full","sizes","container","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","property","dimensions","position","background","typography","fonts","body","heading","mono","radius","styles","global","fontFamily","mode","bg","lineHeight","wordWrap","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","number","string","parseInt","replace","type","getState","filter","genre","includes","map","join","split","month","find","mediaType","alt","Math","floor","random","toString","substring","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","breakpoint","element","overflow","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","range","amount","Tooltip","closeDelay","openDelay","gutter","span","arrowSize","arrowShadowColor","utils","fast","hasArrow","Header","useDisclosure","isOpen","onOpen","onClose","title","reset","scrollButtons","handleScrollClick","useState","direction","setDirection","handleScroll","useCallback","handleIsOpen","setInterval","handleClose","clearInterval","useEffect","justify","align","fontWeight","textTransform","aria-label","closeOnClick","closeOnMouseDown","placement","left","ArrowBackOutlinedIcon","onMouseDown","onClick","right","ArrowForwardOutlinedIcon","defaultScrollButtonsState","HorizontalGrid","footer","path","onFooterClick","setGridRef","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleGridRef","maxScroll","scrollLeft","offsetWidth","isLeftDisabled","isRightDisabled","currentTarget","to","useSelectorTyped","useSelector","Empty","hasIllustration","description","in","maxWidth","src","empty","Error","error","Bookmark","mediaItem","dispatch","useDispatch","isHovering","setIsHovering","list","some","result","isBookmarked","titleText","length","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","paramList","onMouseEnter","onMouseLeave","fadeDuration","Skeleton","commonProps","startColor","endColor","Image","orientation","isLoaded","ratio","height","fallbackSrc","Like","isLiked","like","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","SkeletonText","noOfLines","defaultRating","rating","count","Rating","StarOutlinedIcon","ml","dummyTextWidths","Subtitle","subtitle","isTruncated","setIsTruncated","handleIsTruncated","mt","whiteSpace","setTimeout","Title","mb","VerticalPoster","mediaItemID","image","alignItems","top","VerticalMovie","Vertical","poster_path","vote_average","vote_count","release_date","genre_ids","HorizontalMovies","isError","isSuccess","movies","hasOptionsDownloaded","Array","_dummy","index","VerticalPerson","person","profile_path","known_for_department","HorizontalPeople","people","VerticalTV","show","first_air_date","HorizontalTV","Home","source","CancelToken","popularMovies","useQuery","a","axiosInstance","get","cancelToken","token","trendingMovies","popularTV","trendingTV","trendingPeople","cancel","Horizontal","isFetching","pathname","DisplayMode","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","header","Boolean","VerticalGrid","Modal","motionPreset","scrollBehavior","mx","py","borderBottom","borderBottomColor","justifyContent","CloseOutlinedIcon","borderTop","borderTopColor","MediaTypeItem","iconActive","isActive","text","gray","mediaTypesList","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","MediaTypePicker","mediaTypes","onSetType","useMediaQuery","isXs","handleClick","isCentered","mediaTypeItem","Description","HorizontalPoster","HorizontalMovie","overview","Movie","location","useLocation","search","HorizontalPerson","arraySort","known_for","Person","Show","All","unmountOnExit","stringify","Liked","isMediaTypePickerOpen","onMediaTypePickerOpen","onMediaTypePickerClose","isSmallMob","breakpoints","isLgUp","history","useHistory","setMediaType","params","parse","columns","push","ListItem","primary","secondary","activeList","Lists","isListPickerOpen","onListPickerOpen","onListPickerClose","useParams","setList","setMovies","setTV","pb","ListPicker","Movies","upcomingMovies","moviesNowPlaying","topRatedMovies","defaultResponse","page","total_pages","total_results","movieSortBy","tvSortBy","peopleSortBy","Container","form","control","render","field","setValue","shouldDirty","Genre","CheckOutlinedIcon","Genres","movieGenres","tvGenres","handleGenreClick","getValues","activeGenre","SortByItem","onSortChange","onDirectionChange","ArrowDownwardOutlinedIcon","SortBy","handleSortChange","paramSort","sortBy","sort","current","findIndex","next","handleDirectionChange","Filters","onFilter","defaultValues","useForm","useFormState","isDirty","dirtyFields","VisibilityOutlinedIcon","handleSubmit","values","handleSubmitFilters","LoadMore","total","onFetch","max","round","VerticalMovies","MoviesNowPlaying","isMob","setSortBy","setGenres","useInfiniteQuery","pageParam","getPreviousPageParam","firstPage","getNextPageParam","lastPage","onSuccess","pages","forEach","reverse","active","refetch","hasNextPage","fetchNextPage","PopularMovies","TopRatedMovies","UpcomingMovies","VerticalPeople","People","setPeople","popularPeople","Row","onSearch","isHoveringDelete","setIsHoveringDelete","omit","handleSearch","colorScheme","ClearOutlinedIcon","Default","isOverflown","setIsOverflown","handleIsOverflown","offsetHeight","maxHeight","overflowY","pr","Display","totalResults","SearchForm","inputRef","useRef","onQueryChange","onMoviesChange","onTVChange","onPeopleChange","onIsLoading","onIsFetched","isLocked","setIsLocked","isHoveringLock","setIsHoveringLock","isFocused","setIsFocused","hasSubmitted","setHasSubmitted","localQuery","setLocalQuery","setTotalResults","keywords","enabled","searchMovies","cacheTime","searchTV","searchPeople","handleSearchQuery","trim","useOutsideClick","handler","parseNumbers","totalMovies","totalTV","totalPeople","pt","focus","SearchOutlinedIcon","placeholder","onFocus","onBlur","onKeyPress","onChange","target","remove","LockOutlinedIcon","LockOpenOutlinedIcon","keyword","Search","setQuery","setRefetch","setIsLoading","bool","Trending","trending","TV","tvAiringToday","onTV","topRatedTV","TVAiringToday","OnTV","PopularTV","TopRatedTV","sidebarWidth","expanded","collapsed","slower","Breadcrumb","breadcrumbs","breadcrumbItem","breadcrumbLink","textDecoration","breadcrumbActive","separator","ChevronRightOutlinedIcon","breadcrumb","isCurrentPage","Link","navItems","HomeTwoToneIcon","HomeOutlinedIcon","SearchTwoToneIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","renderChild","TheatersTwoToneIcon","Logo","minHeight","alignSelf","paddingTop","paddingBottom","paddingLeft","paddingRight","NavItemChild","isLastChild","child","link","RRDLink","borderLeft","borderLeftColor","parts","initials","part","handleGetInitials","NavItem","isChildActive","renderChildren","every","isExpanded","main","pl","NavItems","navItem","Menu","MenuOutlinedIcon","isModalOpen","onModalOpen","onModalClose","UserLink","User","userLinks","PaletteTwoToneIcon","PaletteOutlinedIcon","userLink","isMdUp","isLgDown","useTransitionsStyle","zIndex","schema","yup","shape","required","CreateList","reValidateMode","resolver","yupResolver","fieldState","isRequired","errorBorderColor","focusBorderColor","isInvalid","message","isFullWidthname","List","isSelected","fromNow","CheckBoxTwoToneIcon","CheckBoxOutlineBlankOutlinedIcon","ListsModal","isListsOpen","onListsOpen","onListsClose","isCreateListOpen","onCreateListOpen","onCreateListClose","selected","setSelected","handleIsSelected","updatedLists","updatedList","handleSaveItem","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","setWidth","setLeft","queries","useQueries","useQueriesTyped","queryKey","queryFn","DefaultRoute","Component","component","sessionStorage","setItem","JSON","Router","home","basename","exact","queryClient","QueryClient","App","QueryClientProvider","client","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.10b8a619.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\n\r\nexport default instance;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, HStack, Text } from '@chakra-ui/react';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\n\r\nimport IconButton from '../../../../Inputs/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { HeaderProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { title, isLoading = false, reset = false, scrollButtons, handleScrollClick } = props;\r\n\r\n  const [direction, setDirection] = useState<'left' | 'right' | ''>('');\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (direction === 'left' || direction === 'right') {\r\n      handleScrollClick(direction);\r\n    }\r\n  }, [direction, handleScrollClick]);\r\n\r\n  const handleIsOpen = useCallback(() => {\r\n    if (isOpen) {\r\n      interval = setInterval(() => {\r\n        handleScroll();\r\n      }, 25);\r\n    }\r\n  }, [isOpen, interval]);\r\n\r\n  const handleClose = () => {\r\n    setDirection('');\r\n    clearInterval(interval);\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsOpen();\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleClose();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <HStack justify='space-between' p={[2]}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='2xl'\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n\r\n      {/* Scroll buttons */}\r\n      <HStack spacing={2}>\r\n        {/* Maybe add an auto scroll button */}\r\n        <Tooltip\r\n          aria-label='Scroll left'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={`Scroll left (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n          placement='top'\r\n          isDisabled={isLoading || scrollButtons.left}\r\n          span>\r\n          <IconButton\r\n            aria-label='Scroll left'\r\n            isDisabled={isLoading || scrollButtons.left}\r\n            icon={ArrowBackOutlinedIcon}\r\n            onMouseDown={() => {\r\n              if (!isOpen) {\r\n                onOpen();\r\n                setDirection('left');\r\n              }\r\n            }}\r\n            onClick={() => handleClose()}\r\n            variant='outlined'\r\n            size='xs'\r\n          />\r\n        </Tooltip>\r\n        <Tooltip\r\n          aria-label='Scroll right'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={`Scroll right (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n          placement='top'\r\n          isDisabled={isLoading || scrollButtons.right}\r\n          span>\r\n          <IconButton\r\n            aria-label='Scroll right'\r\n            isDisabled={isLoading || scrollButtons.right}\r\n            icon={ArrowForwardOutlinedIcon}\r\n            onMouseDown={() => {\r\n              if (!isOpen) {\r\n                onOpen();\r\n                setDirection('right');\r\n              }\r\n            }}\r\n            onClick={() => handleClose()}\r\n            variant='outlined'\r\n            size='xs'\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = (props: ButtonProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    leftIcon,\r\n    rightIcon,\r\n    isDisabled = false,\r\n    isFullWidth = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    ...rest\r\n  } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return `${theme.space[0.5]} ${theme.space[1]}`;\r\n      case 'sm':\r\n        return `${theme.space[0.75]} ${theme.space[1.5]}`;\r\n      case 'lg':\r\n        return `${theme.space[1.5]} ${theme.space[3]}`;\r\n      default:\r\n        return `${theme.space[1]} ${theme.space[2]}`;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate margin for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnMargin = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.space[0.5];\r\n      case 'sm':\r\n        return theme.space[0.75];\r\n      case 'lg':\r\n        return theme.space[1.5];\r\n      default:\r\n        return theme.space[1];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate font-size for the size passed\r\n   *\r\n   * @returns - Icon size in rem from theme\r\n   */\r\n  const handleReturnIconSize = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return `${theme.fontSizes.md} !important`;\r\n      case 'sm':\r\n        return `${theme.fontSizes.lg} !important`;\r\n      case 'lg':\r\n        return `${theme.fontSizes['2xl']} !important`;\r\n      default:\r\n        return `${theme.fontSizes.xl} !important`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      isDisabled={isLoading || isDisabled}\r\n      isFullWidth={isFullWidth}\r\n      padding={handleReturnPadding()}\r\n      sx={{ ..._.merge(style.common.button, style[colorMode].button) }}\r\n      _disabled={{ ..._.merge(style.common.disabled, style[colorMode].disabled) }}\r\n      variant='unstyled'>\r\n      <Center\r\n        sx={{\r\n          border: 'none',\r\n          backgroundColor: 'transparent'\r\n        }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'lg' ? '6px' : size === 'md' ? '4px' : '2px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon\r\n                as={leftIcon}\r\n                sx={{\r\n                  fontSize: handleReturnIconSize(),\r\n                  marginRight: children ? handleReturnMargin() : 0\r\n                }}\r\n              />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon\r\n                as={rightIcon}\r\n                sx={{\r\n                  fontSize: handleReturnIconSize(),\r\n                  marginLeft: children ? handleReturnMargin() : 0\r\n                }}\r\n              />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype ButtonStyle = {\r\n  common: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  light: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  dark: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  common: {\r\n    button: {\r\n      'cursor': 'pointer',\r\n      'touchAction': 'manipulation',\r\n      'userSelect': 'none',\r\n\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'fontWeight': 'semibold',\r\n      'fontSize': size === 'xs' ? 'xs' : size === 'sm' || size === 'md' ? 'sm' : 'md',\r\n      'textTransform': 'uppercase',\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': variant === 'outlined' ? (size === 'xs' ? '1px' : '2px') : size === 'xs' ? '0.5px' : '1px',\r\n      'borderRadius': size === 'lg' || size === 'md' ? 'md' : size === 'xs' ? 'sm' : 'base',\r\n\r\n      'transform': 'translateY(0)',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n        transform: variant !== 'text' ? `translateY(${variant === 'contained' ? '3px' : '2px'})` : 'none'\r\n      }\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      'transform':\r\n        variant !== 'text'\r\n          ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n          : 'translateY(0) !important',\r\n\r\n      '&:hover': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n            : 'translateY(0) !important'\r\n      },\r\n\r\n      '&:active': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'text'\r\n            ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n            : 'translateY(0) !important'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant !== 'text'\r\n          ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 600 : 400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant !== 'text'\r\n            ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 600 : 400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent',\r\n        boxShadow:\r\n          variant !== 'text' ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][600]}` : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow': 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant !== 'text'\r\n          ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 200 : 400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant !== 'text'\r\n            ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 200 : 400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent',\r\n        boxShadow:\r\n          variant !== 'text' ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][200]}` : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow': 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef, handleScrollChange } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      width='100%'\r\n      overflowX='auto'\r\n      px={2}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onLoad={(event) => handleScrollChange(event)}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='auto'\r\n        minWidth='100%'\r\n        display='inline-block'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        p={2}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { icon, isDisabled = false, isLoading = false, size = 'md', ...rest } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.space[0.75];\r\n      case 'sm':\r\n        return theme.space[1];\r\n      default:\r\n        return theme.space[1.5];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate width, height & font-size for the size passed\r\n   *\r\n   * @returns - Icon size in rem from theme\r\n   */\r\n  const handleReturnIconSize = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.fontSizes['2xl'];\r\n      case 'sm':\r\n        return theme.fontSizes['2xl'];\r\n      case 'lg':\r\n        return theme.fontSizes['4xl'];\r\n      default:\r\n        return theme.fontSizes['3xl'];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      padding={handleReturnPadding()}\r\n      sx={{ ..._.merge(style.common.button, style[colorMode].button) }}\r\n      _disabled={{ ..._.merge(style.common.disabled, style[colorMode].disabled) }}\r\n      variant='unstyled'>\r\n      <Center\r\n        sx={{\r\n          border: 'none',\r\n          backgroundColor: 'transparent'\r\n        }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'lg' ? '6px' : size === 'md' ? '4px' : '2px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n          />\r\n        ) : (\r\n          <Icon\r\n            as={icon}\r\n            size={size}\r\n            sx={{\r\n              fontSize: `${handleReturnIconSize()} !important`\r\n            }}\r\n          />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype IconButtonStyle = {\r\n  common: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  light: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  dark: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isLoading = false }: IconButtonProps\r\n): IconButtonStyle => ({\r\n  common: {\r\n    button: {\r\n      'cursor': 'pointer',\r\n      'touchAction': 'manipulation',\r\n      'userSelect': 'none',\r\n\r\n      'width': 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': variant === 'outlined' ? (size === 'xs' ? '1px' : '2px') : size === 'xs' ? '0.5px' : '1px',\r\n      'borderRadius': size === 'lg' || size === 'md' ? 'md' : size === 'xs' ? 'sm' : 'base',\r\n\r\n      'transform': 'translateY(0)',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n        transform: variant !== 'icon' ? `translateY(${variant === 'contained' ? '3px' : '2px'})` : 'none'\r\n      }\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      'transform':\r\n        variant !== 'icon'\r\n          ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n          : 'translateY(0) !important',\r\n\r\n      '&:hover': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n            : 'translateY(0) !important'\r\n      },\r\n\r\n      '&:active': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform:\r\n          variant !== 'icon'\r\n            ? `translateY(${variant === 'contained' ? '3px' : '2px'}) !important`\r\n            : 'translateY(0) !important'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant !== 'icon'\r\n          ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 600 : 400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant !== 'icon'\r\n            ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 600 : 400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent',\r\n        boxShadow:\r\n          variant !== 'icon' ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][600]}` : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow': 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant !== 'icon'\r\n          ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 200 : 400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant !== 'icon'\r\n            ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][variant === 'contained' ? 200 : 400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent',\r\n        boxShadow:\r\n          variant !== 'icon' ? `0 ${variant === 'contained' ? '3px' : '2px'} ${theme.colors[color][200]}` : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow': 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StateProps, DisplayMode, SortDirection, SidebarMode } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    displayMode: 'grid',\r\n    sortDirection: 'asc',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.data.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.data.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../../common/types/types';\r\nimport { StateProps } from './types';\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { StateProps, Search, MediaItem, ListsModal, List } from './types';\r\n\r\nexport const defaultListsModal = {\r\n  open: false,\r\n  item: undefined\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    recentSearches: [],\r\n    recentlyViewed: [],\r\n    liked: [],\r\n    listsModal: { ...defaultListsModal },\r\n    lists: [\r\n      {\r\n        id: uuid(),\r\n        label: 'Watchlist',\r\n        date: moment(new Date()).toISOString(),\r\n        results: []\r\n      }\r\n    ],\r\n    isDisplayModalOpen: false\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setRecentSearches: (state: StateProps, action: PayloadAction<Search[]>) => {\r\n      state.data.recentSearches = action.payload;\r\n    },\r\n    setRecentlyViewed: (state: StateProps, action: PayloadAction<MediaItem[]>) => {\r\n      state.data.recentlyViewed = action.payload;\r\n    },\r\n    setLiked: (state: StateProps, action: PayloadAction<MediaItem[]>) => {\r\n      state.data.liked = action.payload;\r\n    },\r\n    setLists: (state: StateProps, action: PayloadAction<List[]>) => {\r\n      state.data.lists = action.payload;\r\n    },\r\n    toggleList: (state: StateProps, action: PayloadAction<ListsModal>) => {\r\n      state.data.listsModal = action.payload;\r\n    },\r\n    toggleDisplay: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.isDisplayModalOpen = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setRecentSearches, setRecentlyViewed, setLiked, setLists, toggleList, toggleDisplay } =\r\n  userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/App';\r\nimport optionsReducer from './slices/Options';\r\nimport userReducer from './slices/User';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('white', 'black')(props),\r\n      transition: 'background-color 0.2s',\r\n      lineHeight: 'base'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Genre, MediaType } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], type: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[type].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param type - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, type: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (type === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[type === 'year' ? 0 : type === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, alt: string): string => {\r\n    const name = `${alt}-${(Math.floor(Math.random() * 1000000) + 1000000).toString().substring(1)}`;\r\n    const colors: string = [\r\n      theme.colors.red[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.orange[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.yellow[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.green[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.teal[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.blue[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.cyan[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.purple[mediaType === 'person' ? 400 : 200],\r\n      theme.colors.pink[mediaType === 'person' ? 400 : 200]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param type - Type of image\r\n   * @param breakpoint - Size of user's device\r\n   * @returns - The appropriate size for image poster\r\n   */\r\n  // Set type of breakpoint from theme\r\n  handleReturnImageSize: (\r\n    type: 'poster' | 'backdrop',\r\n    // orientation: 'vertical' | 'horizontal',\r\n    breakpoint: 'xs' | 'sm'\r\n  ): string => {\r\n    switch (type) {\r\n      case 'poster': {\r\n        switch (breakpoint) {\r\n          default:\r\n            return '185';\r\n        }\r\n      }\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from the 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, width, closeDelay, openDelay, gutter = 8, span = false, ...rest } = props;\r\n\r\n  return (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      arrowShadowColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms')}\r\n      hasArrow\r\n      gutter={gutter}>\r\n      {span ? <span style={{ width: width || 'auto' }}>{children}</span> : children}\r\n    </CUITooltip>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { ReactElement, useState, useCallback, UIEvent } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../Inputs/Button';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport { HorizontalGridProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const { children, title, footer, isLoading, path, onFooterClick } = props;\r\n\r\n  const [gridRef, setGridRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled = ref.scrollLeft === 0 ? ref.scrollWidth <= ref.offsetWidth : maxScroll >= ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setGridRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, UIEvent>) => {\r\n    handleGridRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (gridRef) {\r\n        if (direction === 'left') {\r\n          gridRef.scrollLeft = gridRef.scrollLeft - 10;\r\n        } else {\r\n          gridRef.scrollLeft = gridRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  return (\r\n    <VStack width='100%' align='stretch' backgroundColor='white' spacing={0}>\r\n      {/* Header */}\r\n      <Header\r\n        title={title}\r\n        isLoading={isLoading}\r\n        reset={resetScrollButtons}\r\n        scrollButtons={scrollButtons}\r\n        handleScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Grid */}\r\n      <Grid gridRef={handleGridRef} handleScrollChange={handleScrollChange}>\r\n        {children}\r\n      </Grid>\r\n\r\n      {/* Footer */}\r\n      {path ? (\r\n        <Link to={!isLoading ? path : {}}>\r\n          <Button\r\n            color='blue'\r\n            isFullWidth\r\n            isDisabled={isLoading}\r\n            onClick={onFooterClick ? () => onFooterClick() : undefined}\r\n            variant='text'>\r\n            {footer || `View all ${title}`}\r\n          </Button>\r\n        </Link>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","export default __webpack_public_path__ + \"static/media/empty.e5d171a9.svg\";","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport empty from '../../common/assets/illustrations/empty.svg';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <VStack\r\n        width='100%'\r\n        background='transparent'\r\n        borderRadius='lg'\r\n        border='solid2'\r\n        borderColor={variant === 'outlined' ? (colorMode === 'light' ? 'gray.200' : 'gray.700') : 'transparent'}\r\n        spacing={2}\r\n        p={handleReturnPadding()}>\r\n        {hasIllustration ? <Image maxWidth='40%' alt='Empty illustration' src={empty} /> : null}\r\n        <VStack spacing={0}>\r\n          <Text\r\n            align='center'\r\n            fontSize='md'\r\n            fontWeight='semibold'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {label}\r\n          </Text>\r\n          {description ? (\r\n            <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n        </VStack>\r\n        {button || null}\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/error.62d2e604.svg\";","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport error from '../../common/assets/illustrations/error.svg';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    button = undefined,\r\n    hasIllustration = true,\r\n    label,\r\n    description,\r\n    size = 'md',\r\n    variant = 'transparent'\r\n  } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): number => {\r\n    if (hasIllustration) {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 1.5;\r\n        case 'lg':\r\n          return 4;\r\n        case 'xl':\r\n          return 6;\r\n        default:\r\n          return 3;\r\n      }\r\n    } else {\r\n      switch (size) {\r\n        case 'xs':\r\n          return 1;\r\n        case 'sm':\r\n          return 2;\r\n        case 'lg':\r\n          return 6;\r\n        case 'xl':\r\n          return 8;\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in style={{ width: '100%' }}>\r\n      <VStack\r\n        width='100%'\r\n        background='transparent'\r\n        borderRadius='lg'\r\n        border='solid2'\r\n        borderColor={variant === 'outlined' ? (colorMode === 'light' ? 'gray.200' : 'gray.700') : 'transparent'}\r\n        spacing={2}\r\n        p={handleReturnPadding()}>\r\n        {hasIllustration ? <Image maxWidth='40%' alt='Error illustration' src={error} /> : null}\r\n        <VStack spacing={0}>\r\n          <Text\r\n            align='center'\r\n            fontSize='md'\r\n            fontWeight='semibold'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n            {label}\r\n          </Text>\r\n          {description ? (\r\n            <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n              {description}\r\n            </Text>\r\n          ) : null}\r\n        </VStack>\r\n        {button || null}\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\r\nimport BookmarkOutlinedIcon from '@material-ui/icons/BookmarkOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { setLists, toggleList } from '../../store/slices/User';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = ({ isDisabled = false, mediaItem, size = 'xs' }: BookmarkProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const list = lists.find((list) => list.results.some((result) => result.id === mediaItem.id));\r\n  const isBookmarked: boolean = list ? list.results.some((result) => result.id === mediaItem.id) : false;\r\n  const titleText: string = mediaItem.title ? (mediaItem.title.length < 25 ? mediaItem.title : '') : '';\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove \"${titleText}\" ${mediaItem.mediaType} from ${list?.label ? `\"${list.label}\"` : ''} tooltip`\r\n          : `Add \"${titleText}\" ${mediaItem.mediaType} to a list tooltip`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove \"${titleText}\" ${mediaItem.mediaType} from ${list?.label ? `\"${list.label}\"` : ''} list?`\r\n          : `Add \"${titleText}\" ${mediaItem.mediaType} to a list?`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove \"${titleText}\" ${mediaItem.mediaType} from ${list?.label ? `\"${list.label}\"` : ''} tooltip`\r\n            : `Add \"${titleText}\" ${mediaItem.mediaType} to a list tooltip`\r\n        }\r\n        color={isBookmarked ? 'blue' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        onClick={\r\n          isBookmarked && list\r\n            ? () =>\r\n                dispatch(\r\n                  setLists(\r\n                    lists.map((paramList) =>\r\n                      paramList.id === list.id\r\n                        ? {\r\n                            ...paramList,\r\n                            results: paramList.results.filter((result) => result.id !== mediaItem.id)\r\n                          }\r\n                        : paramList\r\n                    )\r\n                  )\r\n                )\r\n            : () =>\r\n                dispatch(\r\n                  toggleList({\r\n                    open: true,\r\n                    item: { id: mediaItem.id, title: mediaItem.title || '', mediaType: mediaItem.mediaType }\r\n                  })\r\n                )\r\n        }\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 1000\r\n};\r\n","import { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color): string => {\r\n    switch (color) {\r\n      default:\r\n        return type === 'start' ? 'gray.200' : 'gray.400';\r\n    }\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio, Image as CUIImage } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport Skeleton from '../Skeleton';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoaded, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio width={width || '100%'} ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={isLoaded} borderRadius='base'>\r\n        <CUIImage\r\n          {...rest}\r\n          maxWidth='inherit'\r\n          height='100%'\r\n          alt={alt}\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/w${size}${src}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc(mediaType, size, alt)}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { setLiked } from '../../store/slices/User';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = ({ isDisabled = false, mediaItem, size = 'xs' }: LikeProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const isLiked: boolean = liked.some((like) => like.id === mediaItem.id && like.mediaType === mediaItem.mediaType);\r\n  const titleText: string = mediaItem.title ? (mediaItem.title.length < 25 ? mediaItem.title : '') : '';\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isLiked\r\n          ? `Dislike \"${titleText}\" ${mediaItem.mediaType} tooltip`\r\n          : `Like \"${titleText}\" ${mediaItem.mediaType} tooltip`\r\n      }\r\n      label={\r\n        isLiked\r\n          ? `Dislike \"${titleText}\"${mediaItem.mediaType !== 'person' ? ` ${mediaItem.mediaType}` : ''}?`\r\n          : `Like \"${titleText}\"${mediaItem.mediaType !== 'person' ? ` ${mediaItem.mediaType}` : ''}?`\r\n      }\r\n      placement='top'\r\n      isOpen={isHovering}\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isLiked ? `Dislike \"${titleText}\" ${mediaItem.mediaType}` : `Like \"${titleText}\" ${mediaItem.mediaType}`\r\n        }\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        onClick={\r\n          isLiked\r\n            ? () => dispatch(setLiked(liked.filter((like) => like.id !== mediaItem.id)))\r\n            : () => dispatch(setLiked([...liked, { id: mediaItem.id, mediaType: mediaItem.mediaType }]))\r\n        }\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { SkeletonText as CUISkeletonText } from '@chakra-ui/react';\r\n\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { children, color = 'gray', noOfLines = 1, ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeletonText\r\n      {...rest}\r\n      {...commonProps}\r\n      noOfLines={noOfLines}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeletonText>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useTheme,\r\n  Theme,\r\n  Center,\r\n  Icon,\r\n  Text\r\n  // VStack,\r\n  // CircularProgress,\r\n  // CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport SkeletonText from '../Skeleton/Text';\r\n// import Tooltip from '../Tooltip';\r\nimport { RatingProps } from './types';\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = ({ rating = defaultRating, isLoaded = false, type }: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  // const handleRatingColor = (): 'red' | 'yellow' | 'blue' => {\r\n  //   if (rating.rating) {\r\n  //     if (rating.rating < 4) {\r\n  //       return 'red';\r\n  //     } else if (rating.rating < 7) {\r\n  //       return 'yellow';\r\n  //     } else {\r\n  //       return 'blue';\r\n  //     }\r\n  //   } else return 'yellow';\r\n  // };\r\n\r\n  return (\r\n    // <Tooltip\r\n    //   aria-label='Showing rating information'\r\n    //   label={\r\n    //     <Center>\r\n    //       <VStack spacing={1}>\r\n    //         <CircularProgress\r\n    //           color={`${handleRatingColor()}.400`}\r\n    //           value={rating.rating ? rating.rating * 10 : 0}\r\n    //           size='54px'>\r\n    //           <CircularProgressLabel color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>{`${\r\n    //             rating.rating ? rating.rating * 10 : 'N/A'\r\n    //           }%`}</CircularProgressLabel>\r\n    //         </CircularProgress>\r\n    //         {rating.count ? (\r\n    //           <Text color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n    //             {rating.count}\r\n    //           </Text>\r\n    //         ) : null}\r\n    //       </VStack>\r\n    //     </Center>\r\n    //   }\r\n    //   placement='top'\r\n    //   isDisabled={!rating.rating || !isLoaded}>\r\n    <Center\r\n      background='transparent'\r\n      // borderRadius='sm'\r\n      // border='solid2'\r\n      // borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      // py='0.5'\r\n      // px='1'\r\n      p={0}>\r\n      <Icon\r\n        as={StarOutlinedIcon}\r\n        color='yellow.400'\r\n        sx={{ fontSize: `${type === 'horizontal' ? theme.fontSizes['3xl'] : theme.fontSizes['2xl']} !important` }}\r\n      />\r\n      <SkeletonText isLoaded={isLoaded} ml='0.5'>\r\n        <Text\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          fontSize={type === 'horizontal' ? 'lg' : 'sm'}\r\n          sx={{ lineHeight: 'normal' }}>\r\n          {rating.rating || 'N/A'}\r\n        </Text>\r\n      </SkeletonText>\r\n    </Center>\r\n    // </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mt={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='xs'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='sm'\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack } from '@chakra-ui/react';\r\n\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = (props: VerticalPosterProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { width, mediaItemID, mediaType, image, rating, title, subtitle, isLoaded } = props;\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      position='relative'\r\n      background='transparent'\r\n      borderRadius='lg'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      spacing={mediaType !== 'person' ? 0.25 : 1}\r\n      p='1'>\r\n      {/* Image */}\r\n      <Image\r\n        orientation='vertical'\r\n        mediaType={mediaType}\r\n        alt={image.alt}\r\n        src={image.src}\r\n        size={image.size}\r\n        isLoaded={isLoaded}\r\n      />\r\n      <VStack width='100%' spacing={0.25}>\r\n        {/* Header */}\r\n        {mediaType !== 'person' ? (\r\n          <HStack width='100%' justify='space-between' spacing={1}>\r\n            {/* Rating component */}\r\n            <Rating rating={rating} isLoaded={isLoaded} type='vertical' />\r\n\r\n            <HStack spacing={0}>\r\n              {/* Like component */}\r\n              <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n              {/* List component */}\r\n              <Bookmark isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n            </HStack>\r\n          </HStack>\r\n        ) : null}\r\n        {/* Text */}\r\n        <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n          <Title title={title} isLoaded={isLoaded} />\r\n          <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n        </VStack>\r\n      </VStack>\r\n\r\n      {/* Like component */}\r\n      {mediaType === 'person' ? (\r\n        <HStack\r\n          spacing={0}\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 1\r\n          }}>\r\n          <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} size='xs' />\r\n        </HStack>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalMovie = ({ width, isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={movie.id}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${utils.handleReturnDate(movie?.release_date || '', 'year')}${\r\n        movie?.release_date && movie?.genre_ids ? ' • ' : ''\r\n      }${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={-1}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalMovie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='transparent' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie: PartialMovie) => (\r\n        <VerticalPoster key={movie.id} isLoading={false} movie={movie} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\n// eslint-disable-next-line import/order\r\nimport VerticalPoster from '../../../Poster/Vertical';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nimport { PosterProps } from '../types';\r\n\r\nconst VerticalPerson = ({ width, isLoading = true, person }: PosterProps): ReactElement => {\r\n  return !isLoading && person ? (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={person.id}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={person?.known_for_department || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={-1}\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalPerson;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='transparent' />\r\n  ) : isSuccess && people ? (\r\n    <>\r\n      {people.map((person: PartialPerson, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} person={person} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalPeople;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport VerticalPoster from '../../../../components/Poster/Vertical';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst VerticalTV = ({ width, isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={show.id}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${utils.handleReturnDate(show?.first_air_date || '', 'year')}${\r\n        show?.first_air_date && show?.genre_ids ? ' • ' : ''\r\n      }${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <VerticalPoster\r\n      width={width || ['185px']}\r\n      mediaItemID={-1}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst HorizontalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  return isLoading && hasOptionsDownloaded ? (\r\n    <>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) => (\r\n        <VerticalPoster key={index} isLoading />\r\n      ))}\r\n    </>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='transparent' />\r\n  ) : isSuccess && tv ? (\r\n    <>\r\n      {tv.map((show: PartialTV, index: number) => (\r\n        <VerticalPoster key={index} isLoading={false} show={show} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='transparent' />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending movies'\r\n        isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n        path={{ pathname: '/trending/movie' }}>\r\n        <HorizontalMovies\r\n          isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n          isError={trendingMovies.isError}\r\n          isSuccess={trendingMovies.isSuccess}\r\n          movies={trendingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Popular TV'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending TV'\r\n        isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n        path={{ pathname: '/trending/tv' }}>\r\n        <HorizontalTV\r\n          isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n          isError={trendingTV.isError}\r\n          isSuccess={trendingTV.isSuccess}\r\n          tv={trendingTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Trending People'\r\n        isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n        path={{ pathname: '/trending/person' }}>\r\n        <HorizontalPeople\r\n          isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n          isError={trendingPeople.isError}\r\n          isSuccess={trendingPeople.isSuccess}\r\n          people={trendingPeople.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { toggleDisplayMode } from '../../store/slices/App';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\n\r\nconst DisplayMode = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  return (\r\n    <HStack spacing={1}>\r\n      <Tooltip label='Set display-mode to Grid' placement='bottom'>\r\n        <IconButton\r\n          aria-label='Toggle grid display-mode'\r\n          color={displayMode === 'grid' ? 'blue' : 'gray'}\r\n          icon={displayMode === 'grid' ? GridOnTwoToneIcon : GridOnOutlinedIcon}\r\n          onClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\r\n          size='sm'\r\n          variant='outlined'\r\n        />\r\n      </Tooltip>\r\n      <Tooltip label='Set display-mode to List' placement='bottom'>\r\n        <IconButton\r\n          aria-label='Toggle list display-mode'\r\n          color={displayMode === 'list' ? 'blue' : 'gray'}\r\n          icon={displayMode === 'list' ? ListAltTwoToneIcon : ListAltOutlinedIcon}\r\n          onClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\r\n          size='sm'\r\n          variant='outlined'\r\n        />\r\n      </Tooltip>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text, Collapse } from '@chakra-ui/react';\r\n\r\ntype HeaderProps = {\r\n  title: string;\r\n  header: ReactElement;\r\n};\r\n\r\nconst Header = ({ title, header }: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Collapse in={Boolean(title && header)} style={{ width: '100%' }}>\r\n      <HStack width='100%' justify={title ? 'space-between' : 'flex-end'} p={[2]}>\r\n        {title ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {title}\r\n          </Text>\r\n        ) : null}\r\n\r\n        {header}\r\n      </HStack>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\n\r\ntype VerticalGridProps = {\r\n  children: ReactElement;\r\n  title: string;\r\n  header: ReactElement;\r\n};\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      <Header title={title} header={header} />\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  Modal as CUIModal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  HStack,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nimport Button from '../Inputs/Button';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport { ModalProps } from './types';\r\n\r\nconst Modal = (props: ModalProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, actions, title, isOpen, onClose, size, ...rest } = props;\r\n\r\n  return (\r\n    <CUIModal {...rest} isOpen={isOpen} onClose={onClose} motionPreset='scale' scrollBehavior='inside' size={size}>\r\n      <ModalOverlay />\r\n      <ModalContent borderRadius={size === 'full' ? 'none' : 'xl'} mx={0}>\r\n        <ModalHeader\r\n          px={3}\r\n          py={1}\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}>\r\n          <HStack justifyContent='space-between'>\r\n            <Text\r\n              align='left'\r\n              fontSize='xl'\r\n              fontWeight='semibold'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              {title}\r\n            </Text>\r\n\r\n            <IconButton\r\n              aria-label='Close type picker modal?'\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              size='sm'\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={0}>{children}</ModalBody>\r\n        {actions ? (\r\n          <ModalFooter\r\n            justifyContent='space-between'\r\n            px={3}\r\n            py={1.5}\r\n            borderTop='solid2'\r\n            borderTopColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}>\r\n            <Button onClick={() => onClose()} size='sm' variant='outlined'>\r\n              Cancel\r\n            </Button>\r\n            {actions}\r\n          </ModalFooter>\r\n        ) : null}\r\n      </ModalContent>\r\n    </CUIModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Icon, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { MediaTypeItemProps } from './types';\r\n\r\nconst MediaTypeItem = (props: MediaTypeItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  const style = useStyles(theme, isActive);\r\n\r\n  return (\r\n    <VStack\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      spacing={0}\r\n      onClick={!isActive ? () => onClick(value) : undefined}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ ..._.merge(style.common.icon, style[colorMode].icon) }} />\r\n      <Text sx={{ ..._.merge(style.common.text, style[colorMode].text) }}>{label}</Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MediaTypeItem;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\n\r\ntype MediaTypeItemStyle = {\r\n  common: { container: Style; icon: Style; text: Style };\r\n  light: { container: Style; icon: Style; text: Style };\r\n  dark: { container: Style; icon: Style; text: Style };\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): MediaTypeItemStyle => ({\r\n  common: {\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': '100%',\r\n\r\n      'border': 'solid2',\r\n      'borderRadius': 'lg',\r\n\r\n      'transform': isActive ? 'translateY(2px)' : 'translateY(0)',\r\n\r\n      'padding': 4,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: isActive ? 'translateY(2px)' : 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: isActive ? 'translateY(2px)' : 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n\r\n        transform: !isActive ? 'translateY(2px)' : 'none'\r\n      },\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: theme.fontSizes['6xl']\r\n      }\r\n    },\r\n    text: {\r\n      align: 'center',\r\n      fontSize: 'xl',\r\n      fontWeight: 'semibold',\r\n      textTransform: 'uppercase'\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.400',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[400]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[400]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.600',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[600]}`,\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.600',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        }\r\n      }\r\n    },\r\n    icon: {\r\n      color: isActive ? 'blue.400' : 'gray.400'\r\n    },\r\n    text: {\r\n      color: isActive ? 'blue.400' : 'gray.400'\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.500',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[500]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[500]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.300',\r\n        'backgroundColor': isActive ? 'blue.100' : 'transparent',\r\n\r\n        'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[300]}`,\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.300',\r\n        'backgroundColor': isActive ? 'blue.100' : 'transparent',\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        }\r\n      }\r\n    },\r\n    icon: {\r\n      color: isActive ? 'blue.400' : 'gray.500'\r\n    },\r\n    text: {\r\n      color: isActive ? 'blue.400' : 'gray.500'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\n\r\nimport { MediaType as MediaType } from '../../common/types/types';\r\nimport Modal from '../Modal';\r\nimport MediaTypeItem from './components/MediaTypeItem';\r\nimport { MediaTypePickerProps, MediaTypeItem as MediaTypeItemType } from './types';\r\n\r\nconst mediaTypesList: MediaTypeItemType[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst MediaTypePicker = <MT extends unknown>({\r\n  mediaTypes,\r\n  mediaType,\r\n  isOpen,\r\n  onClose,\r\n  onSetType\r\n}: MediaTypePickerProps<MT>): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const handleClick = (mediaType: MediaType): void => {\r\n    onSetType(mediaType);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select media type' isOpen={isOpen} onClose={onClose} isCentered size={isXs ? 'full' : '2xl'}>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={2}>\r\n            {mediaTypesList.map((mediaTypeItem) =>\r\n              (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n                <MediaTypeItem\r\n                  key={mediaTypeItem.value}\r\n                  {...mediaTypeItem}\r\n                  isActive={mediaTypeItem.value === mediaType}\r\n                  onClick={handleClick}\r\n                />\r\n              ) : null\r\n            )}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={2}>\r\n            {mediaTypesList.map((mediaTypeItem) =>\r\n              (mediaTypes && mediaTypes.includes(mediaTypeItem.value)) || !mediaTypes ? (\r\n                <MediaTypeItem\r\n                  key={mediaTypeItem.value}\r\n                  {...mediaTypeItem}\r\n                  isActive={mediaTypeItem.value === mediaType}\r\n                  onClick={handleClick}\r\n                />\r\n              ) : null\r\n            )}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { description, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full description text'\r\n        label={description}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {description}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['md', 'lg', 'xl', '2xl']}\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = (props: HorizontalPosterProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaItemID, mediaType, image, rating, title, subtitle, description, isLoaded } = props;\r\n\r\n  return (\r\n    <HStack\r\n      position='relative'\r\n      background='transparent'\r\n      borderRadius='lg'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      spacing={[1, 2]}\r\n      p={[1, 2]}\r\n      // sx={{ position: 'relative' }}\r\n    >\r\n      {/* Image */}\r\n      <Image\r\n        width={['96px', '120px', '144px', '168px']}\r\n        orientation='vertical'\r\n        mediaType={mediaType}\r\n        alt={image.alt}\r\n        src={image.src}\r\n        size={image.size}\r\n        isLoaded={isLoaded}\r\n      />\r\n      <VStack\r\n        width={['calc(100% - 96px)', 'calc(100% - 120px)', 'calc(100% - 144px)', 'calc(100% - 168px)']}\r\n        alignItems='flex-start'\r\n        spacing={isLoaded ? 1 : 2}>\r\n        {/* Rating component */}\r\n        {mediaType !== 'person' ? <Rating rating={rating} isLoaded={isLoaded} type='horizontal' /> : null}\r\n\r\n        {/* Text */}\r\n        <VStack width='100%' alignItems='flex-start' spacing={isLoaded ? 0 : 1}>\r\n          <Title title={title} isLoaded={isLoaded} />\r\n          <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n        </VStack>\r\n\r\n        <Box width='100%'>\r\n          <Description description={description} isLoaded={isLoaded} />\r\n        </Box>\r\n      </VStack>\r\n\r\n      {/* Like / List Icon buttons */}\r\n      <HStack\r\n        spacing={0}\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 1,\r\n          right: 1\r\n        }}>\r\n        {/* Like component */}\r\n        <Like isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} />\r\n        {/* List component */}\r\n        {mediaType !== 'person' ? (\r\n          <Bookmark isDisabled={!isLoaded} mediaItem={{ id: mediaItemID, title, mediaType }} />\r\n        ) : null}\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalMovie = ({ isLoading = true, movie }: PosterProps): ReactElement => {\r\n  return !isLoading && movie ? (\r\n    <HorizontalPoster\r\n      mediaItemID={movie.id}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: `${movie?.title || ''} movie poster`,\r\n        src: movie?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: movie?.vote_average || null,\r\n        count: movie?.vote_count || null\r\n      }}\r\n      title={movie?.title || ''}\r\n      subtitle={`${utils.handleReturnDate(movie?.release_date || '', 'full')}${\r\n        movie?.release_date && movie?.genre_ids ? ' • ' : ''\r\n      }${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n      description={movie?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='movie'\r\n      image={{\r\n        alt: 'Movie poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalMovie;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport HorizontalMoviePoster from '../../../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\n\r\nconst Movie = ({ id }: { id: PartialMovie['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  // Fetching movie\r\n  const movie = useQuery(`movie-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialMovie>(`/movie/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalMoviePoster isLoading={movie.isFetching || movie.isLoading} movie={movie.data} />\r\n  ) : (\r\n    <VerticalMoviePoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={movie.isFetching || movie.isLoading}\r\n      movie={movie.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport arraySort from 'array-sort';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalPerson = ({ isLoading = true, person }: PosterProps): ReactElement => {\r\n  const handleKnownFor = (): string => {\r\n    const knownFor = arraySort(person?.known_for || [], 'voting_averge');\r\n\r\n    return knownFor.join(', ');\r\n  };\r\n\r\n  return !isLoading && person ? (\r\n    <HorizontalPoster\r\n      mediaItemID={person.id}\r\n      mediaType='person'\r\n      image={{\r\n        alt: `${person?.name || ''} person poster`,\r\n        src: person?.profile_path || '',\r\n        size\r\n      }}\r\n      title={person?.name || ''}\r\n      subtitle={person?.known_for_department || ''}\r\n      description={handleKnownFor()}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='person'\r\n      image={{\r\n        alt: 'Person poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalPerson;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport HorizontalPersonPoster from '../../../../components/People/Poster/Horizontal';\r\nimport VerticalPersonPoster from '../../../../components/People/Poster/Vertical';\r\n\r\nconst Person = ({ id }: { id: PartialPerson['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  // Fetching person\r\n  const person = useQuery(`person-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialPerson>(`/person/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalPersonPoster isLoading={person.isFetching || person.isLoading} person={person.data} />\r\n  ) : (\r\n    <VerticalPersonPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={person.isFetching || person.isLoading}\r\n      person={person.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport utils from '../../../../common/utils/utils';\r\nimport HorizontalPoster from '../../../../components/Poster/Horizontal';\r\nimport { PosterProps } from '../types';\r\n\r\nconst size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\nconst HorizontalTV = ({ isLoading = true, show }: PosterProps): ReactElement => {\r\n  return !isLoading && show ? (\r\n    <HorizontalPoster\r\n      mediaItemID={show.id}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: `${show?.name || ''} tv show poster`,\r\n        src: show?.poster_path || '',\r\n        size\r\n      }}\r\n      rating={{\r\n        rating: show?.vote_average || null,\r\n        count: show?.vote_count || null\r\n      }}\r\n      title={show?.name || ''}\r\n      subtitle={`${utils.handleReturnDate(show?.first_air_date || '', 'full')}${\r\n        show?.first_air_date && show?.genre_ids ? ' • ' : ''\r\n      }${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`}\r\n      description={show?.overview || ''}\r\n      isLoaded={true}\r\n    />\r\n  ) : (\r\n    <HorizontalPoster\r\n      mediaItemID={-1}\r\n      mediaType='tv'\r\n      image={{\r\n        alt: 'TV Show poster',\r\n        src: '',\r\n        size\r\n      }}\r\n      title='Lorem ipsum'\r\n      subtitle='Lorem ipsum'\r\n      description='Lorem ipsum'\r\n      isLoaded={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTV;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport HorizontalTVPoster from '../../../../components/TV/Poster/Horizontal';\r\nimport VerticalTVPoster from '../../../../components/TV/Poster/Vertical';\r\n\r\nconst Show = ({ id }: { id: PartialTV['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  // Fetching tv-show\r\n  const show = useQuery(`show-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialTV>(`/tv/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalTVPoster isLoading={show.isFetching || show.isLoading} show={show.data} />\r\n  ) : (\r\n    <VerticalTVPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={show.isFetching || show.isLoading}\r\n      show={show.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport Movie from '../Movie';\r\nimport Person from '../Person';\r\nimport Show from '../Show';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [], people = [] }: AllProps): ReactElement => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade\r\n      in={(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) || false}\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`}\r\n            footer={`View all ${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked', search: queryString.stringify({ mediaType: 'movie' }) }}>\r\n            <>{movies.map((movie, index) => (index < 20 ? <Movie key={movie.id} id={movie.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked', search: queryString.stringify({ mediaType: 'tv' }) }}>\r\n            <>{tv.map((show, index) => (index < 20 ? <Show key={show.id} id={show.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse in={(people && people.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${people.length || 0} ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            footer={`View all ${people.length || 0} liked ${\r\n              (people && people.length === 0) || people.length > 1 ? 'people' : 'person'\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: '/liked', search: queryString.stringify({ mediaType: 'person' }) }}>\r\n            <>{people.map((person, index) => (index < 20 ? <Person key={person.id} id={person.id} /> : null))}</>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useDisclosure, useMediaQuery, VStack, HStack, SimpleGrid, Box } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { MediaType } from '../../common/types/types';\r\nimport DisplayMode from '../../components/DisplayMode';\r\nimport Empty from '../../components/Empty';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport Button from '../../components/Inputs/Button';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport { MediaItem } from '../../store/slices/User/types';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\nimport Movie from './components/Movie';\r\nimport Person from './components/Person';\r\nimport Show from './components/Show';\r\n\r\nconst Liked = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const theme = useTheme<Theme>();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const liked = useSelector((state) => state.user.data.liked);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const movies: MediaItem[] = liked.filter((like) => like.mediaType === 'movie') || [];\r\n  const tv: MediaItem[] = liked.filter((like) => like.mediaType === 'tv') || [];\r\n  const people: MediaItem[] = liked.filter((like) => like.mediaType === 'person') || [];\r\n\r\n  useEffect(() => {\r\n    setMediaType(null);\r\n\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0}>\r\n        <VerticalGrid\r\n          title={\r\n            mediaType === 'movie'\r\n              ? `${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`\r\n              : mediaType === 'tv'\r\n              ? `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`\r\n              : mediaType === 'person'\r\n              ? `${people.length || 0} ${(people && people.length === 0) || people.length > 1 ? 'people' : 'person'}`\r\n              : ''\r\n          }\r\n          header={\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              <DisplayMode />\r\n            </HStack>\r\n          }>\r\n          {(movies && movies.length > 0) || (tv && tv.length > 0) || (people && people.length > 0) ? (\r\n            mediaType === 'movie' ? (\r\n              movies.length > 0 ? (\r\n                <SimpleGrid\r\n                  width='100%'\r\n                  columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                  spacing={2}\r\n                  px={2}>\r\n                  {movies.map((movie) => (\r\n                    <Movie key={movie.id} id={movie.id} />\r\n                  ))}\r\n                </SimpleGrid>\r\n              ) : (\r\n                <Box width='100%' px={2}>\r\n                  <Empty label='You have liked no movie!' variant='outlined' />\r\n                </Box>\r\n              )\r\n            ) : mediaType === 'tv' ? (\r\n              tv.length > 0 ? (\r\n                <SimpleGrid\r\n                  width='100%'\r\n                  columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                  spacing={2}\r\n                  px={2}>\r\n                  {tv.map((show) => (\r\n                    <Show key={show.id} id={show.id} />\r\n                  ))}\r\n                </SimpleGrid>\r\n              ) : (\r\n                <Box width='100%' px={2}>\r\n                  <Empty label='You have no liked no tv show!' variant='outlined' />\r\n                </Box>\r\n              )\r\n            ) : mediaType === 'person' ? (\r\n              people.length > 0 ? (\r\n                <SimpleGrid\r\n                  width='100%'\r\n                  columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                  spacing={2}\r\n                  px={2}>\r\n                  {people.map((person) => (\r\n                    <Person key={person.id} id={person.id} />\r\n                  ))}\r\n                </SimpleGrid>\r\n              ) : (\r\n                <Box width='100%' px={2}>\r\n                  <Empty label='You have no liked nobody!' variant='outlined' />\r\n                </Box>\r\n              )\r\n            ) : (\r\n              <All movies={movies} tv={tv} people={people} />\r\n            )\r\n          ) : (\r\n            <Box width='100%' px={2}>\r\n              <Empty label='You have no liked items!' variant='outlined' size='xl' />\r\n            </Box>\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({ ...queryString.parse(history.location.search), mediaType })\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport HorizontalMoviePoster from '../../../../components/Movies/Poster/Horizontal';\r\nimport VerticalMoviePoster from '../../../../components/Movies/Poster/Vertical';\r\n\r\nconst Movie = ({ id }: { id: PartialMovie['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  // Fetching movie\r\n  const movie = useQuery(`movie-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialMovie>(`/movie/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalMoviePoster isLoading={movie.isFetching || movie.isLoading} movie={movie.data} />\r\n  ) : (\r\n    <VerticalMoviePoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={movie.isFetching || movie.isLoading}\r\n      movie={movie.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport HorizontalTVPoster from '../../../../components/TV/Poster/Horizontal';\r\nimport VerticalTVPoster from '../../../../components/TV/Poster/Vertical';\r\n\r\nconst Show = ({ id }: { id: PartialTV['id'] }): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const location = useLocation();\r\n\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  // Fetching tv-show\r\n  const show = useQuery(`show-${id}`, async () => {\r\n    const { data } = await axiosInstance.get<PartialTV>(`/tv/${id}`, {\r\n      cancelToken: source.token\r\n    });\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return displayMode === 'list' ? (\r\n    <HorizontalTVPoster isLoading={show.isFetching || show.isLoading} show={show.data} />\r\n  ) : (\r\n    <VerticalTVPoster\r\n      width={location.search.length > 0 ? '100%' : ''}\r\n      isLoading={show.isFetching || show.isLoading}\r\n      show={show.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport { toggleDisplayMode } from '../../../../store/slices/App';\r\nimport Movie from '../Movie';\r\nimport Show from '../Show';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ movies = [], tv = [] }: AllProps): ReactElement => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n  }, []);\r\n\r\n  return (\r\n    <Fade in={(movies && movies.length > 0) || (tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse in={(movies && movies.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${movies.length || 0} movie${movies && (movies.length === 0 || movies.length > 1) ? 's' : ''}`}\r\n            footer={`View all ${movies.length || 0} liked movie${\r\n              movies && (movies.length === 0 || movies.length > 1 ? 's' : '')\r\n            }`}\r\n            isLoading={false}\r\n            path={{ pathname: history.location.pathname, search: queryString.stringify({ mediaType: 'movie' }) }}>\r\n            <>\r\n              {movies.map((movie) => (\r\n                <Movie key={movie.id} id={movie.id} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            footer={`View all ${tv?.length || 0} liked TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')}`}\r\n            isLoading={false}\r\n            path={{ pathname: history.location.pathname, search: queryString.stringify({ mediaType: 'tv' }) }}>\r\n            <>\r\n              {tv.map((show) => (\r\n                <Show key={show.id} id={show.id} />\r\n              ))}\r\n            </>\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ListItemProps } from './types';\r\n\r\nconst ListItem = (props: ListItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { id, label, results, isActive = false, onClick } = props;\r\n\r\n  const style = useStyles(theme, isActive);\r\n\r\n  const movies = results.filter((result) => result.mediaType === 'movie').length;\r\n  const tv = results.filter((result) => result.mediaType === 'tv').length;\r\n\r\n  return (\r\n    <VStack\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      spacing={0}\r\n      onClick={!isActive && onClick ? () => onClick(id) : undefined}>\r\n      <Text sx={{ ..._.merge(style.common.text.primary, style[colorMode].text.primary) }}>{label}</Text>\r\n      <Text sx={{ ..._.merge(style.common.text.secondary, style[colorMode].text.secondary) }}>\r\n        {`${[\r\n          `${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\r\n          `${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\r\n        ].join(' • ')}`}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ListItemStyle = {\r\n  common: { container: Style; text: { primary: Style; secondary: Style } };\r\n  light: { container: Style; text: { primary: Style; secondary: Style } };\r\n  dark: { container: Style; text: { primary: Style; secondary: Style } };\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): ListItemStyle => ({\r\n  common: {\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': '100%',\r\n      'height': '100%',\r\n\r\n      'border': 'solid2',\r\n      'borderRadius': 'lg',\r\n\r\n      'transform': isActive ? 'translateY(2px)' : 'translateY(0)',\r\n\r\n      'padding': 4,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: isActive ? 'translateY(2px)' : 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: isActive ? 'translateY(2px)' : 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n\r\n        transform: !isActive ? 'translateY(2px)' : 'none'\r\n      },\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    text: {\r\n      primary: {\r\n        align: 'left',\r\n        fontSize: 'md',\r\n        fontWeight: 'semibold',\r\n        textTransform: 'capitalize'\r\n      },\r\n      secondary: {\r\n        align: 'left',\r\n        fontSize: 'xs',\r\n        fontWeight: '400',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.400',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[400]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[400]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        borderColor: isActive ? 'blue.600' : 'gray.600',\r\n        backgroundColor: isActive ? 'blue.200' : 'transparent',\r\n\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[600]}`\r\n      },\r\n\r\n      '&:active': {\r\n        borderColor: isActive ? 'blue.600' : 'gray.600',\r\n        backgroundColor: isActive ? 'blue.200' : 'transparent'\r\n      }\r\n    },\r\n    text: {\r\n      primary: {\r\n        color: isActive ? 'blue.400' : 'gray.900'\r\n      },\r\n      secondary: {\r\n        color: isActive ? 'blue.400' : 'gray.400'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.500',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 2px ${theme.colors.gray[500]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[500]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        borderColor: isActive ? 'blue.600' : 'gray.300',\r\n        backgroundColor: isActive ? 'blue.100' : 'transparent',\r\n\r\n        boxShadow: isActive ? 'none' : `0 2px ${theme.colors.gray[300]}`\r\n      },\r\n\r\n      '&:active': {\r\n        borderColor: isActive ? 'blue.600' : 'gray.300',\r\n        backgroundColor: isActive ? 'blue.100' : 'transparent'\r\n      }\r\n    },\r\n    text: {\r\n      primary: {\r\n        color: isActive ? 'blue.400' : 'gray.50'\r\n      },\r\n      secondary: {\r\n        color: isActive ? 'blue.400' : 'gray.500'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, Box, VStack, HStack } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../../../components/Modal';\r\nimport { List } from '../../../../store/slices/User/types';\r\nimport ListItem from './components/ListItem';\r\nimport { ListPickerProps } from './types';\r\n\r\nconst MediaTypePicker = ({ activeList, isOpen, onClose }: ListPickerProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const handleClick = (id: List['id']): void => {\r\n    history.push({\r\n      pathname: `/bookmarks/${id}`,\r\n      search: queryString.stringify({ ...queryString.parse(history.location.search) })\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal title='Select list' isOpen={isOpen} onClose={onClose} isCentered size={isXs ? 'full' : '2xl'}>\r\n      <Box width='100%' height='100%' p={3}>\r\n        {isXs ? (\r\n          <VStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </VStack>\r\n        ) : (\r\n          <HStack justifyContent='space-between' spacing={2}>\r\n            {lists.map((list) => (\r\n              <ListItem key={list.id} {...list} isActive={list.id === activeList?.id || false} onClick={handleClick} />\r\n            ))}\r\n          </HStack>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaTypePicker;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useDisclosure, useMediaQuery, VStack, HStack, SimpleGrid, Box, ScaleFade } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport { MediaType } from '../../common/types/types';\r\nimport DisplayMode from '../../components/DisplayMode';\r\nimport Empty from '../../components/Empty';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport Button from '../../components/Inputs/Button';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport { List as ListType, MediaItem } from '../../store/slices/User/types';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\nimport ListPicker from './components/ListPicker';\r\nimport List from './components/ListPicker/components/ListItem';\r\nimport Movie from './components/Movie';\r\nimport Show from './components/Show';\r\nimport { Param } from './types';\r\n\r\nconst Lists = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const theme = useTheme<Theme>();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const { isOpen: isListPickerOpen, onOpen: onListPickerOpen, onClose: onListPickerClose } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const { id } = useParams<Param>();\r\n  const history = useHistory();\r\n\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [list, setList] = useState<ListType | null>(null);\r\n\r\n  const [movies, setMovies] = useState<MediaItem[]>([]);\r\n  const [tv, setTV] = useState<MediaItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const activeList = lists.find((list) => list.id === id);\r\n\r\n    setList(null);\r\n    setMediaType(null);\r\n\r\n    if (id && activeList) {\r\n      setList(activeList);\r\n\r\n      setMovies(activeList.results.filter((like) => like.mediaType === 'movie'));\r\n      setTV(activeList.results.filter((like) => like.mediaType === 'tv'));\r\n    }\r\n\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0} pb={mediaType ? 4 : 0}>\r\n        <VerticalGrid\r\n          title={\r\n            list\r\n              ? mediaType\r\n                ? mediaType === 'movie'\r\n                  ? `${movies.length || 0} movie${\r\n                      movies && (movies.length === 0 || movies.length > 1) ? 's' : ''\r\n                    } in \"${list.label}\" list`\r\n                  : mediaType === 'tv'\r\n                  ? `${tv.length || 0} TV show${tv && (tv.length === 0 || tv.length > 1 ? 's' : '')} in \"${\r\n                      list.label\r\n                    }\" list`\r\n                  : `${[\r\n                      `${movies.length} movie${movies.length === 0 || movies.length > 1 ? 's' : ''}`,\r\n                      `${tv.length} TV show${tv.length === 0 || tv.length > 1 ? 's' : ''}`\r\n                    ].join(' • ')} results in \"${list.label}\" list`\r\n                : ''\r\n              : `${lists.length} list${lists.length === 0 || lists.length > 1 ? 's' : ''}`\r\n          }\r\n          header={\r\n            <ScaleFade in={Boolean(list) && Boolean(mediaType)} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                <ScaleFade in={Boolean(list) && lists.length > 0} unmountOnExit>\r\n                  <Button onClick={() => onListPickerOpen()} variant='outlined'>\r\n                    Change list\r\n                  </Button>\r\n                </ScaleFade>\r\n                <DisplayMode />\r\n              </HStack>\r\n            </ScaleFade>\r\n          }>\r\n          {list ? (\r\n            movies.length > 0 || tv.length > 0 ? (\r\n              mediaType === 'movie' ? (\r\n                movies.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {movies.map((movie) => (\r\n                      <Movie key={movie.id} id={movie.id} />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      label={`You have no items in \"${list.label}\" list!`}\r\n                      description={`No movies found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : mediaType === 'tv' ? (\r\n                tv.length > 0 ? (\r\n                  <SimpleGrid\r\n                    width='100%'\r\n                    columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                    spacing={2}\r\n                    px={2}>\r\n                    {tv.map((show) => (\r\n                      <Show key={show.id} id={show.id} />\r\n                    ))}\r\n                  </SimpleGrid>\r\n                ) : (\r\n                  <Box width='100%' px={2}>\r\n                    <Empty\r\n                      label={`You have no items in \"${list.label}\" list!`}\r\n                      description={`No tv shows found in \"${list.label}\" list!`}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                )\r\n              ) : (\r\n                <All movies={movies} tv={tv} />\r\n              )\r\n            ) : (\r\n              <Box width='100%' p={2}>\r\n                <Empty label={`You have no items in \"${list.label}\" list!`} variant='outlined' size='xl' />\r\n              </Box>\r\n            )\r\n          ) : lists && lists.length > 0 ? (\r\n            <SimpleGrid width='100%' columns={[isSmallMob ? 1 : 2, 2, 3, 4, 4]} spacing={2} px={2}>\r\n              {lists.map((list) => (\r\n                <List\r\n                  key={list.id}\r\n                  {...list}\r\n                  onClick={(id: ListType['id']) =>\r\n                    history.push({\r\n                      pathname: `/bookmarks/${id}`,\r\n                      search: queryString.stringify({ ...queryString.parse(history.location.search) })\r\n                    })\r\n                  }\r\n                />\r\n              ))}\r\n            </SimpleGrid>\r\n          ) : (\r\n            <Box width='100%' p={2}>\r\n              <Empty label='You have no lists!' variant='outlined' size='xl' />\r\n            </Box>\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <ListPicker activeList={list} isOpen={isListPickerOpen} onClose={onListPickerClose} />\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({ ...queryString.parse(history.location.search), mediaType })\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../components/Movies/Grid/Horizontal';\r\n\r\nconst Movies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useQuery('upcomingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useQuery('moviesNowPlaying', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useQuery('topRatedMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular Movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <HorizontalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={popularMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Upcoming Movies'\r\n        isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n        path={{ pathname: '/movies/upcoming' }}>\r\n        <HorizontalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={upcomingMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Movies Now Playing'\r\n        isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n        path={{ pathname: '/movies/now-playing' }}>\r\n        <HorizontalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={moviesNowPlaying.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated Movies'\r\n        isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n        path={{ pathname: '/movies/top-rated' }}>\r\n        <HorizontalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={topRatedMovies.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import { Response } from '../types/types';\r\n\r\nconst defaultResponse: Response<any[]> = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0\r\n};\r\n\r\nexport default defaultResponse;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const movieSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const tvSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'first_air_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nexport const peopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\n\r\nimport { ContainerProps } from './types';\r\n\r\nconst Container = ({ children, title }: ContainerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      alignItems='center'\r\n      justifyContent='center'\r\n      background='transparent'\r\n      borderRadius='lg'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      spacing={1.5}\r\n      px={2}\r\n      py={1.5}>\r\n      <HStack\r\n        width='100%'\r\n        borderBottom='solid2'\r\n        borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        pb={1.5}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='md' fontWeight='medium'>\r\n          {title}\r\n        </Text>\r\n      </HStack>\r\n\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { HStack } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport Button from '../../../Inputs/Button';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\n\r\nconst DisplayMode = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='displayMode'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Display Mode'>\r\n          <HStack width='100%' spacing={2}>\r\n            <Button\r\n              color={value === 'grid' ? 'blue' : 'gray'}\r\n              leftIcon={value === 'grid' ? GridOnTwoToneIcon : GridOnOutlinedIcon}\r\n              isFullWidth\r\n              onClick={value !== 'grid' ? () => form.setValue('displayMode', 'grid', { shouldDirty: true }) : undefined}\r\n              variant='outlined'>\r\n              Grid\r\n            </Button>\r\n            <Button\r\n              color={value === 'list' ? 'blue' : 'gray'}\r\n              leftIcon={value === 'list' ? ListAltTwoToneIcon : ListAltOutlinedIcon}\r\n              isFullWidth\r\n              onClick={value !== 'list' ? () => form.setValue('displayMode', 'list', { shouldDirty: true }) : undefined}\r\n              variant='outlined'>\r\n              List\r\n            </Button>\r\n          </HStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Tag, TagLeftIcon, TagLabel, ScaleFade } from '@chakra-ui/react';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { GenreProps } from './types';\r\n\r\nconst Genre = ({ id, name, isActive = false, onClick }: GenreProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, isActive);\r\n\r\n  return (\r\n    <Tag\r\n      onClick={() => onClick({ id, name }, isActive)}\r\n      px={1.5}\r\n      py={0.75}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <ScaleFade in={isActive} unmountOnExit>\r\n        <TagLeftIcon as={CheckOutlinedIcon} />\r\n      </ScaleFade>\r\n      <TagLabel>{name}</TagLabel>\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n    'border': 'solid2',\r\n\r\n    'minHeight': '36px',\r\n\r\n    'backgroundColor': 'transparent',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      marginRight: theme.space['0.75'],\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'color': isActive ? 'blue.400' : 'gray.400',\r\n    'borderColor': isActive ? 'blue.400' : 'gray.200',\r\n\r\n    '&:hover': {\r\n      color: isActive ? 'blue.600' : 'gray.900',\r\n      borderColor: isActive ? 'blue.600' : 'gray.400'\r\n    }\r\n  },\r\n  dark: {\r\n    'color': isActive ? 'blue.400' : 'gray.500',\r\n    'borderColor': isActive ? 'blue.400' : 'gray.700',\r\n\r\n    '&:hover': {\r\n      color: isActive ? 'blue.600' : 'gray.50',\r\n      borderColor: isActive ? 'blue.600' : 'gray.500'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { Genre as GenreType } from '../../../../common/types/types';\r\nimport Container from '../Container';\r\nimport Genre from './components/Genre';\r\nimport { GenresProps } from './types';\r\n\r\nconst Genres = ({ mediaType, form }: GenresProps): ReactElement => {\r\n  const movieGenres = useSelector((state) => state.options.data.data.genres.movie);\r\n  const tvGenres = useSelector((state) => state.options.data.data.genres.tv);\r\n\r\n  const handleGenreClick = (genre: GenreType, isActive: boolean): void => {\r\n    const genres = form.getValues().genres;\r\n\r\n    if (isActive) {\r\n      form.setValue(\r\n        'genres',\r\n        genres.filter((activeGenre) => activeGenre.id !== genre.id),\r\n        { shouldDirty: true }\r\n      );\r\n    } else {\r\n      form.setValue('genres', [...genres, genre], { shouldDirty: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='genres'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Genres'>\r\n          <Wrap width='100%' spacing={1}>\r\n            {mediaType === 'movie'\r\n              ? movieGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : mediaType === 'tv'\r\n              ? tvGenres.map((genre) => (\r\n                  <WrapItem key={genre.id}>\r\n                    <Genre\r\n                      key={genre.id}\r\n                      {...genre}\r\n                      isActive={value.some((activeGenre) => activeGenre.id === genre.id)}\r\n                      onClick={handleGenreClick}\r\n                    />\r\n                  </WrapItem>\r\n                ))\r\n              : null}\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { SortByItemProps } from './types';\r\n\r\nconst SortByItem = ({\r\n  label,\r\n  value,\r\n  isActive,\r\n  direction,\r\n  onSortChange,\r\n  onDirectionChange\r\n}: SortByItemProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, isActive);\r\n\r\n  return (\r\n    <Button\r\n      isFullWidth\r\n      onClick={() =>\r\n        isActive ? onDirectionChange(direction === 'asc' ? 'desc' : 'asc') : onSortChange({ label, value, isActive })\r\n      }\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n        <Text align='left' fontSize='md' fontWeight='medium'>\r\n          {label}\r\n        </Text>\r\n\r\n        <ScaleFade in={isActive} unmountOnExit>\r\n          <Icon\r\n            as={ArrowDownwardOutlinedIcon}\r\n            sx={{\r\n              transform: direction === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)'\r\n            }}\r\n          />\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SortByItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype ButtonStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): ButtonStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'border': 'none',\r\n    'borderRadius': 'base',\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      fontSize: `${theme.fontSizes.xl} !important`,\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? 'blue.500' : 'gray.100',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? 'blue.500' : 'gray.100',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { Controller, UseFormReturn } from 'react-hook-form';\r\n\r\nimport { SortBy as SortByType } from '../../../../common/types/types';\r\nimport { SortDirection } from '../../../../store/slices/App/types';\r\nimport { Form } from '../../types';\r\nimport Container from '../Container';\r\nimport SortByItem from './components/SortByItem';\r\n\r\nconst SortBy = ({ form }: { form: UseFormReturn<Form> }): ReactElement => {\r\n  const handleSortChange = (paramSort: SortByType): void => {\r\n    const sortBy = form.getValues().sort.sortBy;\r\n    const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n    const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n    form.setValue(\r\n      'sort',\r\n      {\r\n        ...form.getValues().sort,\r\n        sortBy: sortBy.map((sort, index) => {\r\n          switch (index) {\r\n            case current:\r\n              return {\r\n                ...sort,\r\n                isActive: false\r\n              };\r\n            case next:\r\n              return {\r\n                ...sort,\r\n                isActive: true\r\n              };\r\n            default:\r\n              return sort;\r\n          }\r\n        })\r\n      },\r\n      { shouldDirty: true }\r\n    );\r\n  };\r\n\r\n  const handleDirectionChange = (direction: SortDirection) => {\r\n    form.setValue('sort', { ...form.getValues().sort, direction }, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      control={form.control}\r\n      name='sort'\r\n      render={({ field: { value } }) => (\r\n        <Container title='Sort by'>\r\n          <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={1}>\r\n            {value.sortBy.map((sort) => (\r\n              <SortByItem\r\n                key={sort.value}\r\n                {...sort}\r\n                direction={value.direction}\r\n                onSortChange={handleSortChange}\r\n                onDirectionChange={handleDirectionChange}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack, HStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { useForm, useFormState } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport Modal from '../../components/Modal';\r\nimport { toggleDisplayMode, toggleSortDirection } from '../../store/slices/App';\r\nimport Button from '../Inputs/Button';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport DisplayMode from './components/DisplayMode';\r\nimport Genres from './components/Genres';\r\nimport SortBy from './components/SortBy';\r\nimport { FiltersProps, Form } from './types';\r\n\r\nconst Filters = ({ mediaType, onFilter }: FiltersProps): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const defaultValues = {\r\n    displayMode,\r\n    sort: {\r\n      sortBy: mediaType === 'movie' ? [...movieSortBy] : mediaType === 'tv' ? [...tvSortBy] : [...peopleSortBy],\r\n      direction: sortDirection\r\n    },\r\n    genres: []\r\n  };\r\n\r\n  const form = useForm<Form>({ defaultValues });\r\n\r\n  const { isDirty, dirtyFields } = useFormState({ control: form.control });\r\n\r\n  const handleSubmitFilters = (values: Form): void => {\r\n    if (dirtyFields.displayMode) {\r\n      dispatch(toggleDisplayMode(values.displayMode));\r\n    }\r\n\r\n    if (dirtyFields.sort) {\r\n      onFilter(values.sort.sortBy, []);\r\n      dispatch(toggleSortDirection(values.sort.direction));\r\n    }\r\n\r\n    if (dirtyFields.genres) {\r\n      onFilter([], values.genres);\r\n    }\r\n\r\n    onClose();\r\n\r\n    form.reset({ ...values });\r\n  };\r\n\r\n  const handleReset = (): void => {\r\n    dispatch(toggleDisplayMode('grid'));\r\n    dispatch(toggleSortDirection('asc'));\r\n\r\n    onFilter(mediaType === 'movie' ? movieSortBy : mediaType === 'tv' ? tvSortBy : peopleSortBy, []);\r\n\r\n    form.reset({ ...defaultValues });\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    form.reset({ ...form.getValues() });\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname.split('/');\r\n\r\n    if (pathname.includes('movie') || pathname.includes('tv') || pathname.includes('person')) {\r\n      form.reset({\r\n        ...defaultValues,\r\n        sort: {\r\n          ...defaultValues.sort,\r\n          sortBy: pathname.includes('movie')\r\n            ? [...movieSortBy]\r\n            : pathname.includes('tv')\r\n            ? [...tvSortBy]\r\n            : [...peopleSortBy]\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open filters modal'\r\n        color={isOpen ? 'blue' : 'gray'}\r\n        icon={VisibilityOutlinedIcon}\r\n        onClick={() => onOpen()}\r\n        size='sm'\r\n        variant='outlined'\r\n      />\r\n\r\n      <Modal\r\n        title='Filter'\r\n        actions={\r\n          <HStack spacing={2}>\r\n            <Button variant='outlined' isDisabled={!isDirty} onClick={() => handleReset()} size='sm'>\r\n              Reset\r\n            </Button>\r\n            <Button\r\n              color='blue'\r\n              isDisabled={!isDirty}\r\n              onClick={form.handleSubmit((values) => handleSubmitFilters(values))}\r\n              size='sm'>\r\n              Submit\r\n            </Button>\r\n          </HStack>\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size={isXs ? 'full' : '2xl'}>\r\n        <VStack spacing={3} p={2}>\r\n          <DisplayMode form={form} />\r\n\r\n          <SortBy form={form} />\r\n\r\n          {mediaType !== 'person' ? <Genres mediaType={mediaType} form={form} /> : null}\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress } from '@chakra-ui/react';\r\n\r\nimport Button from '../Inputs/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount, total, mediaType, isLoading, onFetch } = props;\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {amount >= total\r\n            ? `You've viewed all ${total} ${mediaType}`\r\n            : `You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          color='blue.400'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={Math.round((amount / total) * 100)}\r\n        />\r\n      </VStack>\r\n\r\n      <Button isDisabled={amount >= total} isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n        Load more\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialMovie } from '../../../../common/types/movie';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalMovies = ({ isLoading, isError, isSuccess, movies }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  return isLoading && !hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(movies ? movies.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\r\n  ) : isSuccess && movies && movies.length > 0 ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {movies.map((movie: PartialMovie) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={movie.id} isLoading={false} movie={movie} />\r\n        ) : (\r\n          <VerticalPoster key={movie.id} width='100%' isLoading={false} movie={movie} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <Empty label='Movies list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst MoviesNowPlaying = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching movies now playing\r\n  const moviesNowPlaying = useInfiniteQuery(\r\n    'moviesNowPlaying',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/now_playing', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    moviesNowPlaying.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Now Playing' : ''} header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n          isError={moviesNowPlaying.isError}\r\n          isSuccess={moviesNowPlaying.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {moviesNowPlaying.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={moviesNowPlaying.isLoading || moviesNowPlaying.isFetching}\r\n            onFetch={moviesNowPlaying.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default MoviesNowPlaying;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    'popularMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Popular' : ''} header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n          isError={popularMovies.isError}\r\n          isSuccess={popularMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {popularMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n            onFetch={popularMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst TopRatedMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching top rated movies\r\n  const topRatedMovies = useInfiniteQuery(\r\n    'topRatedMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Top Rated' : ''} header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n          isError={topRatedMovies.isError}\r\n          isSuccess={topRatedMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {topRatedMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={topRatedMovies.isLoading || topRatedMovies.isFetching}\r\n            onFetch={topRatedMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { movieSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalMovies from '../../../components/Movies/Grid/Vertical';\r\n\r\nconst UpcomingMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n\r\n  // Fetching upcoming movies\r\n  const upcomingMovies = useInfiniteQuery(\r\n    'upcomingMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/upcoming', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        setMovies({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n              : [...movies],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    upcomingMovies.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Upcoming' : ''} header={<Filters mediaType='movie' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalMovies\r\n          isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n          isError={upcomingMovies.isError}\r\n          isSuccess={upcomingMovies.isSuccess}\r\n          movies={movies.results || []}\r\n        />\r\n\r\n        {upcomingMovies.hasNextPage && movies ? (\r\n          <LoadMore\r\n            amount={movies.results.length}\r\n            total={movies.total_results}\r\n            mediaType='movies'\r\n            isLoading={upcomingMovies.isLoading || upcomingMovies.isFetching}\r\n            onFetch={upcomingMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialPerson } from '../../../../common/types/person';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalPeople = ({ isLoading, isError, isSuccess, people }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  return isLoading && hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(people ? people.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch people list!' variant='outlined' />\r\n  ) : isSuccess && people ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {people.map((person: PartialPerson, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} person={person} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} person={person} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <Empty label='People list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalPeople;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../common/data/response';\r\nimport { movieSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { Response, SortBy } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\n\r\nconst People = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(movieSortBy.find((sort) => sort.isActive));\r\n\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>(defaultResponse);\r\n\r\n  // Fetching people\r\n  const popularPeople = useInfiniteQuery(\r\n    'popularPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/person/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        setPeople({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(people, sortBy?.value || '', { reverse: sortDirection === 'desc' }),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    popularPeople.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'People' : ''} header={<Filters mediaType='person' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalPeople\r\n          isLoading={popularPeople.isLoading || popularPeople.isFetching}\r\n          isError={popularPeople.isError}\r\n          isSuccess={popularPeople.isSuccess}\r\n          people={people.results || []}\r\n        />\r\n\r\n        {popularPeople.hasNextPage && people ? (\r\n          <LoadMore\r\n            amount={people.results.length}\r\n            total={people.total_results}\r\n            mediaType='people'\r\n            isLoading={popularPeople.isLoading || popularPeople.isFetching}\r\n            onFetch={popularPeople.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, ListItem, Badge, Text, Kbd, ScaleFade } from '@chakra-ui/react';\r\nimport { ClearOutlined as ClearOutlinedIcon } from '@material-ui/icons/';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport utils from '../../../../common/utils/utils';\r\nimport { setRecentSearches } from '../../../../store/slices/User';\r\nimport { Theme } from '../../../../theme/types';\r\nimport IconButton from '../../../Inputs/IconButton';\r\nimport SkeletonText from '../../../Skeleton/Text';\r\nimport Tooltip from '../../../Tooltip';\r\nimport useStyles from './styles';\r\nimport { RowProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const { id, label, mediaType, state = 'default', type = 'default', onSearch } = props;\r\n\r\n  const style = useStyles(theme, type);\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isHoveringDelete, setIsHoveringDelete] = useState<boolean>(false);\r\n\r\n  const handleSearch = (): void => {\r\n    if (type === 'isKeyword' && onSearch) {\r\n      onSearch(label);\r\n    } else {\r\n      const search = { query: label, page: 1, mediaType };\r\n\r\n      history.push({\r\n        pathname: history.location.pathname,\r\n        search: queryString.stringify(_.omit(search, 'page'))\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (): void => {\r\n    if (id) {\r\n      dispatch(setRecentSearches(recentSearches.filter((search) => search.id !== id)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      px={2}\r\n      py={type === 'isKeyword' ? 1.25 : 0.25}\r\n      onClick={!isHoveringDelete && state !== 'isLoading' ? () => handleSearch() : undefined}\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n      sx={{ ..._.merge(style.common, style[colorMode]) }}>\r\n      <SkeletonText\r\n        width={\r\n          state === 'isLoading' ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : 'auto'\r\n        }\r\n        isLoaded={state === 'isLoaded'}>\r\n        <HStack spacing={1}>\r\n          {mediaType ? (\r\n            <Badge colorScheme={mediaType === 'movie' ? 'teal' : mediaType === 'tv' ? 'cyan' : 'purple'}>\r\n              {mediaType}\r\n            </Badge>\r\n          ) : null}\r\n          <Text align='left' fontSize='md'>\r\n            {label}\r\n          </Text>\r\n        </HStack>\r\n      </SkeletonText>\r\n\r\n      <HStack spacing={1}>\r\n        <ScaleFade in={state === 'isFocused'} unmountOnExit>\r\n          <span>\r\n            To select<Kbd>enter</Kbd>\r\n          </span>\r\n        </ScaleFade>\r\n        {type !== 'isKeyword' ? (\r\n          <ScaleFade in={isHovering}>\r\n            <Tooltip label={`Remove \"${label}\"`} placement='top'>\r\n              <IconButton\r\n                aria-label='Remove search'\r\n                icon={ClearOutlinedIcon}\r\n                onClick={() => handleDelete()}\r\n                onMouseEnter={() => setIsHoveringDelete(true)}\r\n                onMouseLeave={() => setIsHoveringDelete(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </ScaleFade>\r\n        ) : null}\r\n      </HStack>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { RowProps } from './types';\r\n\r\ntype RowStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, type?: RowProps['type']): RowStyle => ({\r\n  common: {\r\n    'cursor': 'pointer',\r\n\r\n    'width': '100%',\r\n\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'space-between',\r\n\r\n    'borderRadius': theme.radii.base,\r\n\r\n    'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n    '& .chakra-icon': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    },\r\n    '& .chakra-text': {\r\n      transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.50',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.100',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': type === 'isKeyword' ? 'transparent' : 'gray.900',\r\n\r\n    '& .chakra-text': {\r\n      color: 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    },\r\n\r\n    '&:focus': {\r\n      'backgroundColor': 'gray.800',\r\n\r\n      '& .chakra-text': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useState, useCallback } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Empty from '../../../Empty';\r\nimport Row from '../Row';\r\n\r\nconst Default = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n\r\n  const [isOverflown, setIsOverflown] = useState<boolean>(false);\r\n\r\n  const handleIsOverflown = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      setIsOverflown(ref.scrollHeight > ref.offsetHeight);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <VStack\r\n      ref={(ref: HTMLDivElement | null) => handleIsOverflown(ref)}\r\n      alignItems='flex-start'\r\n      spacing={2}\r\n      maxHeight='35vh'\r\n      overflowY='auto'>\r\n      <VStack width='100%' alignItems='flex-start' spacing={1} pr={isOverflown ? 2 : 0}>\r\n        <Text align='left' color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md' fontWeight='medium'>\r\n          Recent searches\r\n        </Text>\r\n        {recentSearches.length > 0 ? (\r\n          _.sortBy(recentSearches, 'date').map((search) => (\r\n            <Row key={search.id} id={search.id} label={search.label} mediaType={search.mediaType} state='isLoaded' />\r\n          ))\r\n        ) : (\r\n          <Empty hasIllustration={false} label='No recent searches' size='xs' />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\n\r\ntype DisplayProps = {\r\n  query: string;\r\n  totalResults?: number;\r\n};\r\n\r\nconst Display = ({ query = '', totalResults = 0 }: DisplayProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <HStack width='100%' justifyContent='space-between'>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='sm'>{`Your search results for \"${query}\"`}</Text>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'>{`${totalResults} result${totalResults > 1 ? 's' : ''} found`}</Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { ReactElement, useRef, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useOutsideClick,\r\n  VStack,\r\n  Box,\r\n  HStack,\r\n  Input,\r\n  List,\r\n  Icon,\r\n  Collapse,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport {\r\n  ClearOutlined as ClearOutlinedIcon,\r\n  SearchOutlined as SearchOutlinedIcon,\r\n  LockOpenOutlined as LockOpenOutlinedIcon,\r\n  LockOutlined as LockOutlinedIcon\r\n} from '@material-ui/icons/';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport { setRecentSearches } from '../../store/slices/User';\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport Default from './components/Default';\r\nimport Display from './components/Display';\r\nimport Row from './components/Row';\r\nimport { SearchFormProps, Keyword } from './types';\r\n\r\nconst SearchForm = (props: SearchFormProps): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const recentSearches = useSelector((state) => state.user.data.recentSearches);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    query,\r\n    sortBy = undefined,\r\n    genres = undefined,\r\n    refetch = false,\r\n    onQueryChange,\r\n    onMoviesChange,\r\n    onTVChange,\r\n    onPeopleChange,\r\n    onIsLoading,\r\n    onIsFetched\r\n  } = props;\r\n\r\n  const [isLocked, setIsLocked] = useState<boolean>(false);\r\n  const [isHoveringLock, setIsHoveringLock] = useState<boolean>(false);\r\n\r\n  const [isFocused, setIsFocused] = useState<boolean>(false);\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\r\n\r\n  const [localQuery, setLocalQuery] = useState<string>('');\r\n  const [totalResults, setTotalResults] = useState<number | undefined>(undefined);\r\n\r\n  // Fetching keywords\r\n  const keywords = useQuery(\r\n    ['keywords', localQuery],\r\n    async () => {\r\n      const { data } = await axiosInstance.get<Response<Keyword[]>>('/search/keyword', {\r\n        params: { query: localQuery },\r\n        cancelToken: source.token\r\n      });\r\n      return data.results;\r\n    },\r\n    { enabled: localQuery.length > 0 }\r\n  );\r\n\r\n  const searchMovies = useInfiniteQuery(\r\n    'searchMovies',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/search/movie', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let movies: PartialMovie[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          movies = [...movies, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onMoviesChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                : [...movies],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'movie') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'movie'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchTV = useInfiniteQuery(\r\n    'searchTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/search/tv', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onTVChange({\r\n            ...current,\r\n            results: sort(\r\n              genres && genres.length > 0\r\n                ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                : [...tv],\r\n              sortBy?.value || '',\r\n              { reverse: sortDirection === 'desc' }\r\n            )\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'tv') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'tv'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const searchPeople = useInfiniteQuery(\r\n    'searchPeople',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/search/person', {\r\n        params: {\r\n          query: localQuery || query || queryString.parse(location.search)?.query || '',\r\n          page: pageParam || queryString.parse(location.search)?.page || 1\r\n        },\r\n\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: false,\r\n      cacheTime: 0,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        const current = data.pages[data.pages.length - 1];\r\n        let people: PartialPerson[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          people = [...people, ...page.results];\r\n        });\r\n\r\n        if (current) {\r\n          onPeopleChange({\r\n            ...current,\r\n            results: sort(people, sortBy?.value || '', { reverse: sortDirection === 'desc' })\r\n          });\r\n\r\n          setTotalResults(current.total_results);\r\n          setHasSubmitted(true);\r\n\r\n          if (data.pages.length === 1 && queryString.parse(location.search)?.mediaType === 'person') {\r\n            dispatch(\r\n              setRecentSearches([\r\n                ...recentSearches,\r\n                {\r\n                  id: uuid(),\r\n                  label: localQuery || query,\r\n                  date: moment(new Date()).toISOString(),\r\n                  type: 'isKeyword',\r\n                  mediaType: 'person'\r\n                }\r\n              ])\r\n            );\r\n          }\r\n        }\r\n\r\n        if (refetch && onIsFetched) {\r\n          onIsFetched(false);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFocus = (): void => {\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleSearchQuery = (query: string): void => {\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    setLocalQuery(query);\r\n    onQueryChange(query.trim());\r\n\r\n    if (params && params.mediaType) {\r\n      switch (params.mediaType) {\r\n        case 'person':\r\n          searchPeople.refetch();\r\n          break;\r\n        case 'tv':\r\n          searchTV.refetch();\r\n          break;\r\n        case 'movie':\r\n          searchMovies.refetch();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  };\r\n\r\n  const handleResetSearch = (): void => {\r\n    setIsLocked(false);\r\n    setIsHoveringLock(false);\r\n    setIsFocused(false);\r\n    setIsHovering(false);\r\n    setHasSubmitted(false);\r\n    setTotalResults(undefined);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: inputRef,\r\n    handler: !isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if ((localQuery && localQuery.length > 0) || (query && query.length > 0)) {\r\n      if (params && params.page && params.mediaType) {\r\n        switch (params.mediaType) {\r\n          case 'person': {\r\n            if (searchPeople.hasNextPage) {\r\n              searchPeople.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'tv': {\r\n            if (searchTV.hasNextPage) {\r\n              searchTV.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          case 'movie': {\r\n            if (searchMovies.hasNextPage) {\r\n              searchMovies.fetchNextPage();\r\n            }\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        handleSearchQuery(localQuery || query);\r\n      }\r\n    } else if (params && params.query && typeof params.query === 'string') {\r\n      handleSearchQuery(params.query);\r\n    }\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'movie' && onIsLoading) {\r\n      onIsLoading(searchMovies.isFetching || searchMovies.isLoading);\r\n    }\r\n  }, [searchMovies.isFetching, searchMovies.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'tv' && onIsLoading) {\r\n      onIsLoading(searchTV.isFetching || searchTV.isLoading);\r\n    }\r\n  }, [searchTV.isFetching, searchTV.isLoading]);\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(location.search, { parseNumbers: true });\r\n\r\n    if (params && params.mediaType && params.mediaType === 'person' && onIsLoading) {\r\n      onIsLoading(searchPeople.isFetching || searchPeople.isLoading);\r\n    }\r\n  }, [searchPeople.isFetching, searchPeople.isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (searchMovies.isSuccess && searchTV.isSuccess && searchPeople.isSuccess && (localQuery || query)) {\r\n      const totalMovies =\r\n        searchMovies.data && searchMovies.data.pages && searchMovies.data.pages[searchMovies.data.pages.length - 1]\r\n          ? searchMovies.data.pages[searchMovies.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalTV =\r\n        searchTV.data && searchTV.data.pages && searchTV.data.pages[searchTV.data.pages.length - 1]\r\n          ? searchTV.data.pages[searchTV.data.pages.length - 1].total_results\r\n          : 0;\r\n      const totalPeople =\r\n        searchPeople.data && searchPeople.data.pages && searchPeople.data.pages[searchPeople.data.pages.length - 1]\r\n          ? searchPeople.data.pages[searchPeople.data.pages.length - 1].total_results\r\n          : 0;\r\n\r\n      setHasSubmitted(true);\r\n      setTotalResults(totalMovies + totalTV + totalPeople);\r\n\r\n      dispatch(\r\n        setRecentSearches([\r\n          ...recentSearches,\r\n          { id: uuid(), label: localQuery || query, date: moment(new Date()).toISOString(), type: 'isKeyword' }\r\n        ])\r\n      );\r\n    }\r\n  }, [searchMovies.isSuccess, searchTV.isSuccess, searchPeople.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    handleResetSearch();\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (refetch) {\r\n      searchMovies.refetch();\r\n      searchTV.refetch();\r\n      searchPeople.refetch();\r\n    }\r\n  }, [refetch]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={1}>\r\n      <Box\r\n        width='100%'\r\n        cursor='text'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='lg'\r\n        px={2}\r\n        pt={1}\r\n        pb={isFocused || isLocked ? 2 : 1}\r\n        onClick={() => handleSetFocus()}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}>\r\n        <HStack\r\n          borderBottom={isFocused || isLocked ? 'solid2' : 'none'}\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          pb={isFocused || isLocked ? 1 : 0}\r\n          mb={isFocused || isLocked ? 2 : 0}>\r\n          <Icon as={SearchOutlinedIcon} color={colorMode === 'light' ? 'gray.400' : 'gray.500'} />\r\n          <Input\r\n            ref={inputRef}\r\n            borderRadius='none'\r\n            placeholder='Try \"The Godfather\"'\r\n            onFocus={!isHoveringLock && !isLocked ? () => setIsFocused(true) : undefined}\r\n            onBlur={!isHoveringLock && !isLocked && !isHovering ? () => setIsFocused(false) : undefined}\r\n            onKeyPress={(event) => {\r\n              if (event.key === 'Enter' && !hasSubmitted) {\r\n                history.push({\r\n                  pathname: history.location.pathname,\r\n                  search: queryString.stringify({ query: localQuery })\r\n                });\r\n              }\r\n            }}\r\n            onChange={(event) => {\r\n              setLocalQuery(event.target.value);\r\n              setHasSubmitted(false);\r\n\r\n              if (hasSubmitted) {\r\n                searchMovies.remove();\r\n                searchTV.remove();\r\n                searchPeople.remove();\r\n              }\r\n            }}\r\n            variant='unstyled'\r\n            value={localQuery}\r\n          />\r\n          <HStack spacing={0}>\r\n            <ScaleFade in={localQuery.length > 0} unmountOnExit>\r\n              <Tooltip label='Clear search' placement='top'>\r\n                <IconButton\r\n                  aria-label='Clear search'\r\n                  icon={ClearOutlinedIcon}\r\n                  onClick={() => setLocalQuery('')}\r\n                  size='xs'\r\n                  variant='icon'\r\n                />\r\n              </Tooltip>\r\n            </ScaleFade>\r\n            <Tooltip\r\n              label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n              placement='top'\r\n              closeOnClick={false}\r\n              closeOnMouseDown={false}\r\n              span>\r\n              <IconButton\r\n                aria-label={isLocked ? 'Unlock Search' : 'Lock Search'}\r\n                icon={isLocked ? LockOutlinedIcon : LockOpenOutlinedIcon}\r\n                onClick={() => setIsLocked(!isLocked)}\r\n                onMouseEnter={() => setIsHoveringLock(true)}\r\n                onMouseLeave={() => setIsHoveringLock(false)}\r\n                size='xs'\r\n                variant='icon'\r\n              />\r\n            </Tooltip>\r\n          </HStack>\r\n        </HStack>\r\n        <Collapse in={isFocused || isLocked} unmountOnExit>\r\n          <List spacing={0}>\r\n            {keywords.isFetching || keywords.isLoading ? (\r\n              [...Array(5)].map((_dummy, index) => (\r\n                <Row key={index} id={`${index}`} label='' state='isLoading' type='isKeyword' />\r\n              ))\r\n            ) : keywords.isSuccess && keywords.data.length > 0 && !hasSubmitted ? (\r\n              keywords.data.map((keyword, index) =>\r\n                index < 5 ? (\r\n                  <Row\r\n                    key={keyword.id}\r\n                    id={`${keyword.id}`}\r\n                    label={keyword.name}\r\n                    state='isLoaded'\r\n                    type='isKeyword'\r\n                    onSearch={(query: string) => {\r\n                      setLocalQuery(query);\r\n\r\n                      history.push({\r\n                        pathname: history.location.pathname,\r\n                        search: queryString.stringify({ query })\r\n                      });\r\n                    }}\r\n                  />\r\n                ) : null\r\n              )\r\n            ) : (\r\n              <Default />\r\n            )}\r\n          </List>\r\n        </Collapse>\r\n      </Box>\r\n\r\n      <ScaleFade in={Boolean(totalResults) || hasSubmitted} unmountOnExit style={{ width: '100%' }}>\r\n        <Display query={query} totalResults={totalResults} />\r\n      </ScaleFade>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { PartialTV } from '../../../../common/types/tv';\r\nimport Empty from '../../../Empty';\r\nimport Error from '../../../Error';\r\nimport HorizontalPoster from '../../Poster/Horizontal';\r\nimport VerticalPoster from '../../Poster/Vertical';\r\nimport { GridProps } from '../types';\r\n\r\nconst VerticalTV = ({ isLoading, isError, isSuccess, tv }: GridProps): ReactElement => {\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  return isLoading && hasOptionsDownloaded ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {[...Array(tv ? tv.length : 20)].map((_dummy, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : isError ? (\r\n    <Error label='Oh no! Something went wrong' description='Failed to fetch TV list!' variant='outlined' />\r\n  ) : isSuccess && tv ? (\r\n    <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n      {tv.map((show: PartialTV, index: number) =>\r\n        displayMode === 'list' ? (\r\n          <HorizontalPoster key={index} isLoading={false} show={show} />\r\n        ) : (\r\n          <VerticalPoster key={index} width='100%' isLoading={false} show={show} />\r\n        )\r\n      )}\r\n    </SimpleGrid>\r\n  ) : (\r\n    <Empty label='TV list is currently empty!' variant='outlined' />\r\n  );\r\n};\r\n\r\nexport default VerticalTV;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Fade, Collapse } from '@chakra-ui/react';\r\nimport queryString from 'query-string';\r\n\r\nimport HorizontalGrid from '../../../../components/Grid/Horizontal';\r\nimport HorizontalMovies from '../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../components/People/Grid/Horizontal';\r\nimport HorizontalTV from '../../../../components/TV/Grid/Horizontal';\r\nimport { AllProps } from './types';\r\n\r\nconst All = ({ query, isLoading = false, movies, tv, people }: AllProps): ReactElement => {\r\n  return (\r\n    <Fade\r\n      in={\r\n        (movies && movies.results && movies.results.length > 0) ||\r\n        (tv && tv.results && tv.results.length > 0) ||\r\n        (people && people.results && people.results.length > 0) ||\r\n        false\r\n      }\r\n      unmountOnExit\r\n      style={{ width: '100%' }}>\r\n      <VStack width='100%' spacing={6}>\r\n        {/* Movies */}\r\n        <Collapse\r\n          in={(movies && movies.results && movies.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${movies?.total_results || 0} movie${\r\n              movies && movies.total_results ? (movies.total_results === 0 || movies.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}>\r\n            <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* TV */}\r\n        <Collapse in={(tv && tv.results && tv.results.length > 0) || false} unmountOnExit style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${tv?.total_results || 0} TV show${\r\n              tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}>\r\n            <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n\r\n        {/* People */}\r\n        <Collapse\r\n          in={(people && people.results && people.results.length > 0) || false}\r\n          unmountOnExit\r\n          style={{ width: '100%' }}>\r\n          <HorizontalGrid\r\n            title={`Found ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            footer={`View all ${people?.total_results || 0} ${\r\n              people && people.total_results\r\n                ? people.total_results === 0 || people.total_results > 1\r\n                  ? 'people'\r\n                  : 'person'\r\n                : ''\r\n            } with \"${query}\"`}\r\n            isLoading={false}\r\n            path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}>\r\n            <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n          </HorizontalGrid>\r\n        </Collapse>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default All;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport Button from '../../components/Inputs/Button';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport { Theme } from '../../theme/types';\r\nimport All from './components/All';\r\n\r\nconst Search = (): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(\r\n    mediaType === 'movie'\r\n      ? movieSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'tv'\r\n      ? tvSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'person'\r\n      ? peopleSortBy.find((sort) => sort.isActive)\r\n      : undefined\r\n  );\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [refetch, setRefetch] = useState<boolean>(false);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n    setRefetch(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (history.location.search.length > 0) {\r\n      const params = queryString.parse(history.location.search);\r\n\r\n      if (params) {\r\n        if (params.mediaType) {\r\n          switch (params.mediaType) {\r\n            case 'person':\r\n              setMediaType('person');\r\n              break;\r\n            case 'tv':\r\n              setMediaType('tv');\r\n              break;\r\n            case 'movie':\r\n              setMediaType('movie');\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else {\r\n          setMediaType(null);\r\n        }\r\n      } else if (isLgUp) {\r\n        onMediaTypePickerOpen();\r\n      }\r\n    }\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <>\r\n      <VStack width='100%' spacing={0}>\r\n        <Box width='100%' backgroundColor={colorMode === 'light' ? 'white' : 'black'} px={2} pt={4} pb={2}>\r\n          <SearchForm\r\n            query={query}\r\n            sortBy={sortBy}\r\n            genres={genres}\r\n            refetch={refetch}\r\n            onQueryChange={(query: string) => setQuery(query)}\r\n            onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n            onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n            onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n            onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            onIsFetched={() => setRefetch(false)}\r\n          />\r\n        </Box>\r\n\r\n        <VerticalGrid\r\n          title={\r\n            query\r\n              ? mediaType === 'movie'\r\n                ? `Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'tv'\r\n                ? `Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`\r\n                : mediaType === 'person'\r\n                ? `Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`\r\n                : ''\r\n              : ''\r\n          }\r\n          header={\r\n            <Fade in={!!mediaType && !!query} unmountOnExit>\r\n              <HStack spacing={2}>\r\n                <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                  Change media-type\r\n                </Button>\r\n                {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n              </HStack>\r\n            </Fade>\r\n          }>\r\n          {mediaType === 'movie' && movies ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalMovies isLoading={isLoading} isError={false} isSuccess={true} movies={movies.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={movies.results.length}\r\n                  total={movies.total_results}\r\n                  mediaType={`movies for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: movies.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'tv' && tv ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalTV isLoading={isLoading} isError={false} isSuccess={true} tv={tv.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={tv.results.length}\r\n                  total={tv.total_results}\r\n                  mediaType={`tv shows for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: tv.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : mediaType === 'person' && people ? (\r\n            <VStack width='100%' spacing={4} px={2}>\r\n              <>\r\n                <VerticalPeople isLoading={isLoading} isError={false} isSuccess={true} people={people.results || []} />\r\n\r\n                <LoadMore\r\n                  amount={people.results.length}\r\n                  total={people.total_results}\r\n                  mediaType={`people for \"${query}\"`}\r\n                  isLoading={isLoading}\r\n                  onFetch={() =>\r\n                    history.push({\r\n                      pathname: history.location.pathname,\r\n                      search: queryString.stringify({\r\n                        ...queryString.parse(history.location.search),\r\n                        page: people.page + 1\r\n                      })\r\n                    })\r\n                  }\r\n                />\r\n              </>\r\n            </VStack>\r\n          ) : (\r\n            <All query={query} isLoading={isLoading} movies={movies} tv={tv} people={people} />\r\n          )}\r\n        </VerticalGrid>\r\n      </VStack>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => {\r\n          const search = { ...queryString.parse(history.location.search), page: 1, mediaType };\r\n\r\n          history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(_.omit(search, 'page'))\r\n          });\r\n\r\n          setMediaType(mediaType);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useTheme, useDisclosure, useMediaQuery, VStack, HStack, Box, Fade } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport defaultResponse from '../../common/data/response';\r\nimport { movieSortBy, tvSortBy, peopleSortBy } from '../../common/data/sort';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { MediaType, Response, SortBy, Genre } from '../../common/types/types';\r\nimport Empty from '../../components/Empty';\r\nimport Filters from '../../components/Filters';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport Button from '../../components/Inputs/Button';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport MediaTypePicker from '../../components/MediaTypePicker';\r\nimport VerticalMovies from '../../components/Movies/Grid/Vertical';\r\nimport VerticalPeople from '../../components/People/Grid/Vertical';\r\nimport VerticalTV from '../../components/TV/Grid/Vertical';\r\nimport { Theme } from '../../theme/types';\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const theme = useTheme<Theme>();\r\n  const {\r\n    isOpen: isMediaTypePickerOpen,\r\n    onOpen: onMediaTypePickerOpen,\r\n    onClose: onMediaTypePickerClose\r\n  } = useDisclosure();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const history = useHistory();\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(\r\n    mediaType === 'movie'\r\n      ? movieSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'tv'\r\n      ? tvSortBy.find((sort) => sort.isActive)\r\n      : mediaType === 'person'\r\n      ? peopleSortBy.find((sort) => sort.isActive)\r\n      : undefined\r\n  );\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]>>(defaultResponse);\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]>>(defaultResponse);\r\n\r\n  // Fetching trending\r\n  const trending = useInfiniteQuery(\r\n    'trending',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<any[]>>(`/trending/${mediaType}/day`, {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      enabled: (mediaType && mediaType.length > 0) || false,\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        switch (mediaType) {\r\n          case 'person': {\r\n            let people: PartialPerson[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              people = [...people, ...page.results];\r\n            });\r\n\r\n            setPeople({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(people, sortBy?.value || '', { reverse: sortDirection === 'desc' }),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n          case 'tv': {\r\n            let tv: PartialTV[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              tv = [...tv, ...page.results];\r\n            });\r\n\r\n            setTV({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(\r\n                genres && genres.length > 0\r\n                  ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n                  : [...tv],\r\n                sortBy?.value || '',\r\n                { reverse: sortDirection === 'desc' }\r\n              ),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n          default: {\r\n            let movies: PartialMovie[] = [];\r\n\r\n            data.pages.forEach((page) => {\r\n              movies = [...movies, ...page.results];\r\n            });\r\n\r\n            setMovies({\r\n              page: data.pages[data.pages.length - 1].page,\r\n              results: sort(\r\n                genres && genres.length > 0\r\n                  ? movies.filter((movie) => genres.some((genre) => _.includes(movie.genre_ids, genre.id)))\r\n                  : [...movies],\r\n                sortBy?.value || '',\r\n                { reverse: sortDirection === 'desc' }\r\n              ),\r\n              total_pages: data.pages[data.pages.length - 1].total_pages,\r\n              total_results: data.pages[data.pages.length - 1].total_results\r\n            });\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]) => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    trending.refetch();\r\n  };\r\n\r\n  const handleResetState = (): void => {\r\n    setMediaType(null);\r\n    setMovies(defaultResponse);\r\n    setTV(defaultResponse);\r\n    setPeople(defaultResponse);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResetState();\r\n\r\n    if (history.location.pathname !== '/trending') {\r\n      trending.remove();\r\n\r\n      switch (history.location.pathname) {\r\n        case '/trending/person':\r\n          setMediaType('person');\r\n          break;\r\n        case '/trending/tv':\r\n          setMediaType('tv');\r\n          break;\r\n        case '/trending/movie':\r\n          setMediaType('movie');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else if (isLgUp) {\r\n      onMediaTypePickerOpen();\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          mediaType\r\n            ? `Trending ${mediaType === 'movie' ? 'Movies' : mediaType === 'person' ? 'People' : 'TV Shows' || ''}`\r\n            : 'Select media-type'\r\n        }\r\n        header={\r\n          <Fade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onMediaTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              {mediaType ? <Filters mediaType={mediaType} onFilter={handleSetFilters} /> : null}\r\n            </HStack>\r\n          </Fade>\r\n        }>\r\n        {mediaType ? (\r\n          <VStack width='100%' spacing={4} px={2}>\r\n            {mediaType === 'movie' ? (\r\n              <>\r\n                <VerticalMovies\r\n                  isLoading={trending.isLoading || trending.isFetching}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  movies={movies.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && movies ? (\r\n                  <LoadMore\r\n                    amount={movies.results.length}\r\n                    total={movies.total_results}\r\n                    mediaType='movies'\r\n                    isLoading={trending.isLoading || trending.isFetching}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'tv' ? (\r\n              <>\r\n                <VerticalTV\r\n                  isLoading={trending.isLoading || trending.isFetching}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  tv={tv.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && tv ? (\r\n                  <LoadMore\r\n                    amount={tv.results.length}\r\n                    total={tv.total_results}\r\n                    mediaType='tv shows'\r\n                    isLoading={trending.isLoading || trending.isFetching}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : mediaType === 'person' ? (\r\n              <>\r\n                <VerticalPeople\r\n                  isLoading={trending.isLoading || trending.isFetching}\r\n                  isError={trending.isError}\r\n                  isSuccess={trending.isSuccess}\r\n                  people={people.results || []}\r\n                />\r\n\r\n                {trending.hasNextPage && people ? (\r\n                  <LoadMore\r\n                    amount={people.results.length}\r\n                    total={people.total_results}\r\n                    mediaType='people'\r\n                    isLoading={trending.isLoading || trending.isFetching}\r\n                    onFetch={trending.fetchNextPage}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </VStack>\r\n        ) : (\r\n          <Box width='100%' px={2}>\r\n            <Empty\r\n              button={\r\n                <Button color='blue' onClick={() => onMediaTypePickerOpen()}>\r\n                  Select media type\r\n                </Button>\r\n              }\r\n              hasIllustration={false}\r\n              label='Select media type to view data!'\r\n              size='xl'\r\n              variant='outlined'\r\n            />\r\n          </Box>\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <MediaTypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isMediaTypePickerOpen}\r\n        onClose={onMediaTypePickerClose}\r\n        onSetType={(mediaType: MediaType) =>\r\n          history.push({ pathname: `${history.location.pathname === '/trending' ? '/trending/' : ''}${mediaType}` })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport HorizontalTV from '../../components/TV/Grid/Horizontal';\r\n\r\nconst TV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useQuery('tvAiringToday', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching on tv\r\n  const onTV = useQuery('onTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useQuery('topRatedTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      <HorizontalGrid\r\n        title='Popular TV Shows'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <HorizontalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={popularTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows Airing Today'\r\n        isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n        path={{ pathname: '/tv/airing-today' }}>\r\n        <HorizontalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tvAiringToday.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='TV Shows on at the moment'\r\n        isLoading={onTV.isLoading || onTV.isFetching}\r\n        path={{ pathname: '/tv/on-tv' }}>\r\n        <HorizontalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={onTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n\r\n      <HorizontalGrid\r\n        title='Top Rated TV Shows'\r\n        isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n        path={{ pathname: '/tv/top-rated' }}>\r\n        <HorizontalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={topRatedTV.data}\r\n        />\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst TVAiringToday = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching tv airing_today\r\n  const tvAiringToday = useInfiniteQuery(\r\n    'tvAiringToday',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/airing_today', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    tvAiringToday.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Airing Today' : ''} header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n          isError={tvAiringToday.isError}\r\n          isSuccess={tvAiringToday.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {tvAiringToday.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={tvAiringToday.isLoading || tvAiringToday.isFetching}\r\n            onFetch={tvAiringToday.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TVAiringToday;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst OnTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching on tv\r\n  const onTV = useInfiniteQuery(\r\n    'onTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/on_the_air', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    onTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'On at the moment' : ''}\r\n      header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={onTV.isLoading || onTV.isFetching}\r\n          isError={onTV.isError}\r\n          isSuccess={onTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {onTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={onTV.isLoading || onTV.isFetching}\r\n            onFetch={onTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default OnTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst PopularTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching popular tv\r\n  const popularTV = useInfiniteQuery(\r\n    'popularTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    popularTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Popular' : ''} header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={popularTV.isLoading || popularTV.isFetching}\r\n          isError={popularTV.isError}\r\n          isSuccess={popularTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {popularTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={popularTV.isLoading || popularTV.isFetching}\r\n            onFetch={popularTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularTV;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport sort from 'array-sort';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport defaultResponse from '../../../common/data/response';\r\nimport { tvSortBy } from '../../../common/data/sort';\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { PartialTV } from '../../../common/types/tv';\r\nimport { Response, SortBy, Genre } from '../../../common/types/types';\r\nimport Filters from '../../../components/Filters';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport VerticalTV from '../../../components/TV/Grid/Vertical';\r\n\r\nconst TopRatedTV = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const isMob = useMediaQuery('(max-width: 600px)');\r\n\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy | undefined>(tvSortBy.find((sort) => sort.isActive));\r\n  const [genres, setGenres] = useState<Genre[]>([]);\r\n\r\n  const [tv, setTV] = useState<Response<PartialTV[]>>(defaultResponse);\r\n\r\n  // Fetching top rated tv\r\n  const topRatedTV = useInfiniteQuery(\r\n    'topRatedTV',\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/top_rated', {\r\n        params: { page: pageParam },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false),\r\n      onSuccess: (data) => {\r\n        let tv: PartialTV[] = [];\r\n\r\n        data.pages.forEach((page) => {\r\n          tv = [...tv, ...page.results];\r\n        });\r\n\r\n        setTV({\r\n          page: data.pages[data.pages.length - 1].page,\r\n          results: sort(\r\n            genres && genres.length > 0\r\n              ? tv.filter((show) => genres.some((genre) => _.includes(show.genre_ids, genre.id)))\r\n              : [...tv],\r\n            sortBy?.value || '',\r\n            { reverse: sortDirection === 'desc' }\r\n          ),\r\n          total_pages: data.pages[data.pages.length - 1].total_pages,\r\n          total_results: data.pages[data.pages.length - 1].total_results\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleSetFilters = (sortBy: SortBy[], genres: Genre[]): void => {\r\n    const active = sortBy.find((sort) => sort.isActive);\r\n\r\n    if (active) {\r\n      setSortBy(active);\r\n    }\r\n\r\n    setGenres(genres);\r\n\r\n    topRatedTV.refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid title={isMob ? 'Top Rated' : ''} header={<Filters mediaType='tv' onFilter={handleSetFilters} />}>\r\n      <VStack width='100%' spacing={4} px={2}>\r\n        <VerticalTV\r\n          isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n          isError={topRatedTV.isError}\r\n          isSuccess={topRatedTV.isSuccess}\r\n          tv={tv.results || []}\r\n        />\r\n\r\n        {topRatedTV.hasNextPage && tv ? (\r\n          <LoadMore\r\n            amount={tv.results.length}\r\n            total={tv.total_results}\r\n            mediaType='TV shows'\r\n            isLoading={topRatedTV.isLoading || topRatedTV.isFetching}\r\n            onFetch={topRatedTV.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default TopRatedTV;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 64\r\n};\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst Breadcrumb = ({ breadcrumbs }: { breadcrumbs: BreadcrumbType[] }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${theme.fontSizes.xl} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {breadcrumbs.map((breadcrumb) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={location.pathname === breadcrumb.path}\r\n          fontSize={['xl']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          {location.pathname === breadcrumb.path ? (\r\n            <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n              {breadcrumb.label}\r\n            </Text>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              as={Link}\r\n              to={breadcrumb.path}\r\n              sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n              {breadcrumb.label}\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium'\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']} !important`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900',\r\n      fontWeight: 'semibold'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TheatersTwoToneIcon from '@material-ui/icons/TheatersTwoTone';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\nimport WhatshotOutlinedIcon from '@material-ui/icons/WhatshotOutlined';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\n\r\nimport { NavItem } from '../../components/NavItems/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon,\r\n    children: [\r\n      { label: 'Trending Movies', path: '/trending/movie', renderChild: false },\r\n      { label: 'Trending TV', path: '/trending/tv', renderChild: false },\r\n      { label: 'Trending People', path: '/trending/person', renderChild: false }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/movies/popular', renderChild: true },\r\n      { label: 'Upcoming', path: '/movies/upcoming', renderChild: true },\r\n      { label: 'Now Playing', path: '/movies/now-playing', renderChild: true },\r\n      { label: 'Top Rated', path: '/movies/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular', path: '/tv/popular', renderChild: true },\r\n      { label: 'Airing Today', path: '/tv/airing-today', renderChild: true },\r\n      { label: 'On at the moment', path: '/tv/on-tv', renderChild: true },\r\n      { label: 'Top Rated', path: '/tv/top-rated', renderChild: true }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { Size } from './types';\r\n\r\nconst Logo = ({ size = 'md' }: { size?: Size }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, size);\r\n\r\n  return <Center sx={{ ..._.merge(style.common, style[colorMode]) }}>edb</Center>;\r\n};\r\n\r\nexport default Logo;\r\n","import { Style } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { Size } from './types';\r\n\r\ntype NavItemStyle = {\r\n  common: Style;\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, size: Size = 'md'): NavItemStyle => ({\r\n  common: {\r\n    minWidth: '46px',\r\n    minHeight: '46px',\r\n\r\n    alignSelf: 'flex-start',\r\n\r\n    border: 'solid2',\r\n    borderRadius: size === 'sm' || size === 'md' ? 'base' : 'lg',\r\n    backgroundColor: 'blue.400',\r\n    borderColor: 'blue.400',\r\n\r\n    fontFamily: '\"Pacifico\", cursive',\r\n    fontSize: size === 'sm' ? 'lg' : size === 'md' ? '4xl' : '6xl',\r\n    fontWeight: 'bold',\r\n    lineHeight: size === 'sm' ? '23px' : size === 'md' ? '45px' : '75px',\r\n\r\n    // textShadow: `${size === 'sm' ? '-1px -1px' : size === 'md' ? '-1.5px -1.5px' : '-2px -2px'} ${\r\n    //   size === 'sm' ? '0.5px' : size === 'md' ? '1px' : '1.5px'\r\n    // } ${theme.colors.blue[200]}, ${size === 'sm' ? '1px 1px' : size === 'md' ? '1.5px 1.5px' : '2px 2px'} ${\r\n    //   size === 'sm' ? '0.5px' : size === 'md' ? '1px' : '1.5px'\r\n    // } ${theme.colors.blue[600]}`,\r\n\r\n    paddingTop: size === 'sm' ? 0.5 : 1,\r\n    paddingBottom: size === 'sm' ? 0.5 : 1,\r\n    paddingLeft: size === 'sm' ? 1 : 2,\r\n    paddingRight: size === 'sm' ? 1 : 2,\r\n\r\n    transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n  },\r\n  light: {\r\n    color: 'white'\r\n  },\r\n  dark: {\r\n    color: 'black'\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = ({ label, path, isLastChild = false }: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const location = useLocation();\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack width='100%' spacing='15px'>\r\n        {sidebarMode === 'expanded' ? (\r\n          <Box height='44px' borderLeft='solid2' borderLeftColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n        ) : null}\r\n        <Tooltip\r\n          aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n          width='100%'\r\n          closeOnClick={false}\r\n          closeOnMouseDown={false}\r\n          label={sidebarMode === 'collapsed' ? label : ''}\r\n          placement='right'\r\n          span>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </Tooltip>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme, isActive = false, isExpanded = false, isLastChild = false): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? 'blue.500' : 'gray.100',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? 'blue.500' : 'gray.800',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useDisclosure,\r\n  VStack,\r\n  HStack,\r\n  Collapse,\r\n  Icon,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { NavItem as NavItemType } from '../../types';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const { label, path, icon, iconActive, children } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n\r\n  const renderChildren: boolean = children ? children.every((child) => child.renderChild) : false;\r\n\r\n  const style = useStyles(\r\n    theme,\r\n    isActive,\r\n    isChildActive,\r\n    renderChildren,\r\n    sidebarMode === 'expanded',\r\n    children ? isOpen : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        closeOnClick={false}\r\n        closeOnMouseDown={false}\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        placement='right'\r\n        span>\r\n        <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onClick={isOpen ? () => onClose() : () => onOpen()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n              />\r\n              <ScaleFade in={sidebarMode === 'expanded'} unmountOnExit>\r\n                <Text align='left' fontSize='lg' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children && renderChildren ? (\r\n              <ScaleFade in={sidebarMode === 'expanded'} unmountOnExit>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes['2xl']} !important`,\r\n                    transform: `rotate(${isOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children && renderChildren ? (\r\n        <Collapse in={isOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? '31px' : '0px'}\r\n            pr={sidebarMode === 'expanded' ? 2 : '0px'}\r\n            mb={sidebarMode === 'expanded' ? 1 : '0px'}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  isActive = false,\r\n  isChildActive = false,\r\n  renderChildren = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen && renderChildren ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.100' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.100' : isActive ? 'blue.500' : 'gray.100',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen && renderChildren ? 'gray.800' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.800' : isActive ? 'blue.500' : 'gray.800',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Divider } from '@chakra-ui/react';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Logo from '../Logo';\r\nimport NavItem from './components/NavItem';\r\nimport { NavItemsProps, NavItem as NavItemType } from './types';\r\n\r\nconst NavItems = ({ navItems }: NavItemsProps): ReactElement => {\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  return (\r\n    <VStack width='100%' spacing={2}>\r\n      <Logo size={sidebarMode === 'expanded' ? 'md' : 'sm'} />\r\n      <Divider height='2px' />\r\n      <VStack width='100%'>\r\n        {navItems.map((navItem: NavItemType) => (\r\n          <NavItem key={navItem.label} {...navItem} />\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\n\r\nimport IconButton from '../../../../../../components/Inputs/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, VStack, Box, Fade, Collapse } from '@chakra-ui/react';\r\nimport { SearchOutlined as SearchOutlinedIcon } from '@material-ui/icons/';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { PartialMovie } from '../../../../../../common/types/movie';\r\nimport { PartialPerson } from '../../../../../../common/types/person';\r\nimport { PartialTV } from '../../../../../../common/types/tv';\r\nimport { Response } from '../../../../../../common/types/types';\r\nimport HorizontalGrid from '../../../../../../components/Grid/Horizontal';\r\nimport IconButton from '../../../../../../components/Inputs/IconButton';\r\nimport Modal from '../../../../../../components/Modal';\r\nimport HorizontalMovies from '../../../../../../components/Movies/Grid/Horizontal';\r\nimport HorizontalPeople from '../../../../../../components/People/Grid/Horizontal';\r\nimport SearchForm from '../../../../../../components/SearchForm';\r\nimport HorizontalTV from '../../../../../../components/TV/Grid/Horizontal';\r\n\r\nconst Search = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen: isModalOpen, onOpen: onModalOpen, onClose: onModalClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n\r\n  const [movies, setMovies] = useState<Response<PartialMovie[]> | null>(null);\r\n  const [tv, setTV] = useState<Response<PartialTV[]> | null>(null);\r\n  const [people, setPeople] = useState<Response<PartialPerson[]> | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleResetModal = (): void => {\r\n    setQuery('');\r\n\r\n    setMovies(null);\r\n    setTV(null);\r\n    setPeople(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalOpen) {\r\n      setTimeout(() => {\r\n        handleResetModal();\r\n      }, 500);\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label='Open Search'\r\n        disabled={location.pathname.includes('search')}\r\n        icon={SearchOutlinedIcon}\r\n        onClick={() => onModalOpen()}\r\n        variant='icon'\r\n        style={{ cursor: location.pathname.includes('search') ? 'default' : 'pointer' }}\r\n      />\r\n\r\n      <Modal title='Search' isOpen={isModalOpen} onClose={onModalClose} isCentered scrollBehavior='inside' size='full'>\r\n        <VStack width='100%' spacing={0}>\r\n          <Box width='100%' px={2} pt={4} pb={2}>\r\n            <SearchForm\r\n              query={query}\r\n              onQueryChange={(query: string) => setQuery(query)}\r\n              onMoviesChange={(data: Response<PartialMovie[]>) => setMovies(data)}\r\n              onTVChange={(data: Response<PartialTV[]>) => setTV(data)}\r\n              onPeopleChange={(data: Response<PartialPerson[]>) => setPeople(data)}\r\n              onIsLoading={(bool: boolean) => setIsLoading(bool)}\r\n            />\r\n          </Box>\r\n\r\n          <Fade\r\n            in={\r\n              (movies && movies.results && movies.results.length > 0) ||\r\n              (tv && tv.results && tv.results.length > 0) ||\r\n              (people && people.results && people.results.length > 0) ||\r\n              false\r\n            }\r\n            unmountOnExit\r\n            style={{ width: '100%' }}>\r\n            <VStack width='100%' backgroundColor={colorMode === 'light' ? 'gray.100' : 'gray.800'} spacing={6} pb={4}>\r\n              {/* Movies */}\r\n              <Collapse\r\n                in={(movies && movies.results && movies.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${movies?.total_results || 0} movie${\r\n                    movies && movies.total_results\r\n                      ? movies.total_results === 0 || movies.total_results > 1\r\n                        ? 's'\r\n                        : ''\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'movie' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalMovies isLoading={isLoading} isError={false} isSuccess movies={movies?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* TV */}\r\n              <Collapse\r\n                in={(tv && tv.results && tv.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${tv?.total_results || 0} TV show${\r\n                    tv && tv.total_results ? (tv.total_results === 0 || tv.total_results > 1 ? 's' : '') : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'tv' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalTV isLoading={isLoading} isError isSuccess tv={tv?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n\r\n              {/* People */}\r\n              <Collapse\r\n                in={(people && people.results && people.results.length > 0) || false}\r\n                unmountOnExit\r\n                style={{ width: '100%' }}>\r\n                <HorizontalGrid\r\n                  title={`Found ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  footer={`View all ${people?.total_results || 0} ${\r\n                    people && people.total_results\r\n                      ? people.total_results === 0 || people.total_results > 1\r\n                        ? 'people'\r\n                        : 'person'\r\n                      : ''\r\n                  } with \"${query}\"`}\r\n                  isLoading={false}\r\n                  path={{ pathname: '/search', search: queryString.stringify({ query, mediaType: 'person' }) }}\r\n                  onFooterClick={() => onModalClose()}>\r\n                  <HorizontalPeople isLoading={isLoading} isError={false} isSuccess people={people?.results || []} />\r\n                </HorizontalGrid>\r\n              </Collapse>\r\n            </VStack>\r\n          </Fade>\r\n        </VStack>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, Icon, Text, Link } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport { UserLink as UserLinkType } from '../../types';\r\nimport useStyles from './styles';\r\n\r\nconst UserLink = (props: UserLinkType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const location = useLocation();\r\n\r\n  const { label, path, icon, iconActive, onClick } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n\r\n  const style = useStyles(theme, isActive);\r\n\r\n  return path ? (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack\r\n        width='100%'\r\n        justifyContent='flex-start'\r\n        px={2}\r\n        py={1}\r\n        spacing={1}\r\n        sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n        <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n        <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n          {label}\r\n        </Text>\r\n      </HStack>\r\n    </Link>\r\n  ) : (\r\n    <HStack\r\n      width='100%'\r\n      justifyContent='flex-start'\r\n      px={2}\r\n      py={1}\r\n      spacing={1}\r\n      onClick={onClick ? () => onClick() : undefined}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode]) }}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ fontSize: `${theme.fontSizes['2xl']} !important` }} />\r\n      <Text align='left' fontSize='md' fontWeight='semibold' whiteSpace='nowrap'>\r\n        {label}\r\n      </Text>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default UserLink;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    link: Style;\r\n    container: Style;\r\n  };\r\n  light: Style;\r\n  dark: Style;\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): NavItemStyle => ({\r\n  common: {\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    },\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.50' : 'gray.400'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? 'blue.500' : 'gray.100',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n    '& .chakra-icon': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n    '& .chakra-text': {\r\n      color: isActive ? 'gray.900' : 'gray.500'\r\n    },\r\n\r\n    '&:hover': {\r\n      'backgroundColor': isActive ? 'blue.500' : 'gray.800',\r\n\r\n      '& .chakra-icon': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.900' : 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useDisclosure,\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Portal,\r\n  PopoverContent,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Divider\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FavoriteBorderOutlined as FavoriteBorderOutlinedIcon,\r\n  FavoriteOutlined as FavoriteOutlinedIcon,\r\n  BookmarkBorderOutlined as BookmarkBorderOutlinedIcon,\r\n  BookmarkOutlined as BookmarkOutlinedIcon,\r\n  PaletteTwoTone as PaletteTwoToneIcon,\r\n  PaletteOutlined as PaletteOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { toggleDisplay } from '../../../../../../store/slices/User';\r\nimport UserLink from './components/UserLink';\r\nimport { UserLink as UserLinkType } from './types';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLinks: UserLinkType[] = [\r\n    {\r\n      label: 'Liked',\r\n      path: '/liked',\r\n      iconActive: FavoriteOutlinedIcon,\r\n      icon: FavoriteBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Bookmarks',\r\n      path: '/bookmarks',\r\n      iconActive: BookmarkOutlinedIcon,\r\n      icon: BookmarkBorderOutlinedIcon\r\n    },\r\n    {\r\n      label: 'Display',\r\n      iconActive: PaletteTwoToneIcon,\r\n      icon: PaletteOutlinedIcon,\r\n      onClick: () => dispatch(toggleDisplay(true))\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={12} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          boxShadow='none'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack width='100%' spacing={2}>\r\n            <HStack width='100%' justifyContent='flex-start' spacing={1}>\r\n              <Avatar cursor='pointer' name='Test User' size='md' />\r\n              <Text\r\n                align='left'\r\n                color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n                fontSize='md'\r\n                fontWeight='semibold'>\r\n                Test User\r\n              </Text>\r\n            </HStack>\r\n            <Divider />\r\n            <VStack width='100%' spacing={1}>\r\n              {userLinks.map((userLink: UserLinkType) => (\r\n                <UserLink key={userLink.label} {...userLink} />\r\n              ))}\r\n            </VStack>\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack, Fade } from '@chakra-ui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Breadcrumb from './components/Breadcrumb';\r\nimport Menu from './components/Menu';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\n\r\ntype HeaderProps = { width: string; left: string; breadcrumbs: BreadcrumbType[] };\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMdUp] = useMediaQuery('(min-width: 600px)');\r\n  const [isLgDown] = useMediaQuery(`(max-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  const { width, left, breadcrumbs } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent='space-between'\r\n      background={colorMode === 'light' ? 'white' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      <HStack spacing={1}>\r\n        {isLgDown ? <Menu /> : null}\r\n        {isMdUp ? <Breadcrumb breadcrumbs={breadcrumbs} /> : null}\r\n      </HStack>\r\n      <HStack spacing={1}>\r\n        <Fade in={!location.pathname.includes('search')}>\r\n          <Search />\r\n        </Fade>\r\n        <User />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../../components/Inputs/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { toggleDisplay } from '../../../../../store/slices/User';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const dispatch = useDispatch();\r\n  const isDisplayModalOpen = useSelector((state) => state.user.data.isDisplayModalOpen);\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleDisplay(false));\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDisplayModalOpen) {\r\n      onOpen();\r\n    } else {\r\n      onClose();\r\n    }\r\n  }, [isDisplayModalOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Application Theme'\r\n      actions={\r\n        <Button color='blue' size='sm'>\r\n          Save\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size={isXs ? 'full' : '2xl'}>\r\n      <VStack spacing={2} p={2}></VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import * as yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  label: '',\r\n  description: ''\r\n};\r\n\r\nexport const schema = yup.object().shape({\r\n  label: yup.string().required().label('Label'),\r\n  description: yup.string().label('Description')\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useMediaQuery,\r\n  VStack,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n  FormHelperText,\r\n  Collapse\r\n} from '@chakra-ui/react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport moment from 'moment';\r\nimport { useForm, useFormState, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport useSelector from '../../../../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../../../../components/Inputs/Button';\r\nimport Modal from '../../../../../../../components/Modal';\r\nimport { setLists } from '../../../../../../../store/slices/User';\r\nimport { CreateListProps, Form } from './types';\r\nimport { defaultValues, schema } from './validation';\r\n\r\nconst CreateList = ({ isOpen, onClose }: CreateListProps): ReactElement => {\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const form = useForm<Form>({\r\n    defaultValues,\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const { isDirty } = useFormState({ control: form.control });\r\n\r\n  const handleSubmit = (values: Form): void => {\r\n    dispatch(\r\n      setLists([\r\n        ...lists,\r\n        {\r\n          id: uuid(),\r\n          label: values.label,\r\n          description: values?.description || '',\r\n          date: moment(new Date()).toISOString(),\r\n          results: []\r\n        }\r\n      ])\r\n    );\r\n\r\n    form.reset({ ...defaultValues });\r\n    onClose();\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    if (!isDirty) {\r\n      form.reset({ ...defaultValues });\r\n      onClose();\r\n    }\r\n\r\n    // Toggle alert if has unsaved data!\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Create a new List'\r\n      actions={\r\n        <Button\r\n          color='blue'\r\n          isDisabled={!isDirty}\r\n          onClick={form.handleSubmit((values) => handleSubmit(values))}\r\n          size='sm'>\r\n          Submit List\r\n        </Button>\r\n      }\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      isCentered\r\n      size={isXs ? 'full' : 'lg'}>\r\n      <VStack spacing={3} p={2}>\r\n        <Controller\r\n          control={form.control}\r\n          name='label'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name} isRequired>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Label\r\n              </FormLabel>\r\n              <Input\r\n                errorBorderColor='red.400'\r\n                focusBorderColor='blue.400'\r\n                isFullWidth\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                name={name}\r\n                placeholder='Try \"DC Movies\"'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          control={form.control}\r\n          name='description'\r\n          render={({ field: { onChange, value, name }, fieldState: { error } }) => (\r\n            <FormControl id={name}>\r\n              <FormLabel fontSize='sm' mb={1}>\r\n                Description (Optional)\r\n              </FormLabel>\r\n              <Textarea\r\n                errorBorderColor='red.400'\r\n                focusBorderColor='blue.400'\r\n                isFullWidthname={name}\r\n                isInvalid={Boolean(error)}\r\n                fontSize='md'\r\n                onChange={onChange}\r\n                size='lg'\r\n                value={value}\r\n                px={2}\r\n              />\r\n              <Collapse in={Boolean(error)} unmountOnExit>\r\n                <FormHelperText mt={1}>{error?.message}</FormHelperText>\r\n              </Collapse>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </VStack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, HStack, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport {\r\n  CheckBoxTwoTone as CheckBoxTwoToneIcon,\r\n  CheckBoxOutlineBlankOutlined as CheckBoxOutlineBlankOutlinedIcon\r\n} from '@material-ui/icons';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { Theme } from '../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ListProps } from './types';\r\n\r\nconst List = ({ id, label, description, date, results, isSelected = false, onClick }: ListProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, isSelected);\r\n\r\n  return (\r\n    <HStack\r\n      justifyContent='space-between'\r\n      spacing={2}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      onClick={() => onClick(id, isSelected)}>\r\n      <VStack alignItems='flex-start' spacing={0}>\r\n        <Text sx={{ ..._.merge(style.common.text.primary, style[colorMode].text.primary) }}>{label}</Text>\r\n        {description && description.length > 0 ? (\r\n          <Text sx={{ ..._.merge(style.common.text.secondary, style[colorMode].text.secondary) }}>{description}</Text>\r\n        ) : null}\r\n        <Text sx={{ ..._.merge(style.common.text.secondary, style[colorMode].text.secondary) }}>\r\n          {`${results.length > 0 ? `${results.length} items  • ` : ''}${\r\n            results.length > 0 ? 'Updated' : 'Created'\r\n          } ${moment(date).fromNow()}`}\r\n        </Text>\r\n      </VStack>\r\n\r\n      <Icon\r\n        as={isSelected ? CheckBoxTwoToneIcon : CheckBoxOutlineBlankOutlinedIcon}\r\n        sx={{ ..._.merge(style.common.icon, style[colorMode].icon) }}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { Style } from '../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../theme/types';\r\n\r\ntype MediaTypeItemStyle = {\r\n  common: { container: Style; icon: Style; text: { primary: Style; secondary: Style } };\r\n  light: { container: Style; icon: Style; text: { primary: Style; secondary: Style } };\r\n  dark: { container: Style; icon: Style; text: { primary: Style; secondary: Style } };\r\n};\r\n\r\nexport default (theme: Theme, isSelected = false): MediaTypeItemStyle => ({\r\n  common: {\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': '100%',\r\n\r\n      'border': 'solid2',\r\n      'borderRadius': 'lg',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: theme.fontSizes['3xl']\r\n      }\r\n    },\r\n\r\n    text: {\r\n      primary: {\r\n        align: 'left',\r\n        fontSize: 'md',\r\n        fontWeight: 'semibold',\r\n        textTransform: 'capitalize'\r\n      },\r\n      secondary: {\r\n        align: 'left',\r\n        fontSize: 'xs',\r\n        fontWeight: '400',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      'borderColor': isSelected ? 'blue.400' : 'gray.200',\r\n      'backgroundColor': isSelected ? 'blue.50' : 'transparent',\r\n\r\n      '&:hover': {\r\n        borderColor: isSelected ? 'blue.500' : 'gray.400',\r\n        backgroundColor: isSelected ? 'blue.100' : 'transparent'\r\n      }\r\n    },\r\n    icon: {\r\n      color: isSelected ? 'blue.400' : 'gray.400'\r\n    },\r\n    text: {\r\n      primary: {\r\n        color: isSelected ? 'blue.400' : 'gray.900'\r\n      },\r\n      secondary: {\r\n        color: isSelected ? 'blue.400' : 'gray.400'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      'borderColor': isSelected ? 'blue.400' : 'gray.700',\r\n      'backgroundColor': isSelected ? 'blue.50' : 'transparent',\r\n\r\n      '&:hover': {\r\n        borderColor: isSelected ? 'blue.500' : 'gray.500',\r\n        backgroundColor: isSelected ? 'blue.100' : 'transparent'\r\n      }\r\n    },\r\n    icon: {\r\n      color: isSelected ? 'blue.400' : 'gray.500'\r\n    },\r\n    text: {\r\n      primary: {\r\n        color: isSelected ? 'blue.400' : 'gray.50'\r\n      },\r\n      secondary: {\r\n        color: isSelected ? 'blue.400' : 'gray.500'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, VStack } from '@chakra-ui/react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../../components/Inputs/Button';\r\nimport Modal from '../../../../../components/Modal';\r\nimport { defaultListsModal, setLists, toggleList } from '../../../../../store/slices/User';\r\nimport { List as ListType } from '../../../../../store/slices/User/types';\r\nimport CreateList from './components/CreateList';\r\nimport List from './components/List';\r\n\r\nconst ListsModal = (): ReactElement => {\r\n  const { isOpen: isListsOpen, onOpen: onListsOpen, onClose: onListsClose } = useDisclosure();\r\n  const { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const dispatch = useDispatch();\r\n  const listsModal = useSelector((state) => state.user.data.listsModal);\r\n  const lists = useSelector((state) => state.user.data.lists);\r\n\r\n  const [selected, setSelected] = useState<ListType['id'][]>([]);\r\n\r\n  const handleIsSelected = (id: string, isSelected: boolean): void => {\r\n    if (isSelected) {\r\n      setSelected(selected.filter((list) => list !== id));\r\n    } else {\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  const handleSaveItem = (): void => {\r\n    if (listsModal.item && listsModal.item.id && listsModal.item.mediaType) {\r\n      let updatedLists: ListType[] = [...lists];\r\n\r\n      const id = listsModal.item.id;\r\n      const mediaType = listsModal.item.mediaType;\r\n\r\n      selected.forEach((list) => {\r\n        updatedLists = updatedLists.map((updatedList) =>\r\n          updatedList.id === list\r\n            ? {\r\n                ...updatedList,\r\n                date: moment(new Date()).toISOString(),\r\n                results: [...updatedList.results, { id, mediaType }]\r\n              }\r\n            : updatedList\r\n        );\r\n      });\r\n\r\n      setSelected([]);\r\n      dispatch(setLists([...updatedLists]));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(toggleList({ ...defaultListsModal }));\r\n    onListsClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listsModal.open) {\r\n      onListsOpen();\r\n    } else {\r\n      onListsClose();\r\n    }\r\n  }, [listsModal.open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={`Add ${listsModal.item ? listsModal.item.title : 'this item'} to a list`}\r\n        actions={\r\n          selected.length > 0 ? (\r\n            <Button color='blue' onClick={() => handleSaveItem()} size='sm'>\r\n              {`Save to List${selected.length > 1 ? 's' : ''}`}\r\n            </Button>\r\n          ) : (\r\n            <Button color='blue' onClick={() => onCreateListOpen()} size='sm'>\r\n              Create a new List\r\n            </Button>\r\n          )\r\n        }\r\n        isOpen={isListsOpen}\r\n        onClose={handleClose}\r\n        isCentered\r\n        size={isXs ? 'full' : '2xl'}>\r\n        <VStack spacing={2} p={2}>\r\n          {lists.map((list) => (\r\n            <List key={list.id} {...list} isSelected={selected.includes(list.id)} onClick={handleIsSelected} />\r\n          ))}\r\n        </VStack>\r\n      </Modal>\r\n\r\n      <CreateList isOpen={isCreateListOpen} onClose={onCreateListClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListsModal;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../components/Inputs/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/App';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      background={colorMode ? 'white' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        size='sm'\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useMediaQuery, Center, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/App';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/Options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth } from './common/data/sidebar';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Header from './components/Header';\r\nimport DisplayModal from './components/Modals/Display';\r\nimport ListsModal from './components/Modals/Lists';\r\nimport Sidebar from './components/Sidebar';\r\nimport { LayoutProps, GenreResponse } from './types';\r\n\r\nconst Layout = ({ children, breadcrumbs }: LayoutProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>('266px');\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return (\r\n    <>\r\n      <Center overflow='hidden'>\r\n        {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n        <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n          <Header width={width} left={left} breadcrumbs={breadcrumbs} />\r\n          <Box width='100%' maxWidth='100%' position='relative' top='74px' left='0px' pb={4} sx={{ ...transition }}>\r\n            {children}\r\n          </Box>\r\n        </Box>\r\n      </Center>\r\n\r\n      <DisplayModal />\r\n\r\n      <ListsModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport default function useQueriesTyped<TQueries extends readonly UseQueryOptions[]>(\r\n  queries: [...TQueries]\r\n): {\r\n  [ArrayElement in keyof TQueries]: UseQueryResult<\r\n    TQueries[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<TQueries[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n} {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n}\r\n\r\n// Using John Reilly code: https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n","import React, { ComponentType, ReactElement } from 'react';\r\n\r\nimport { useLocation, RouteComponentProps, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport { Breadcrumb } from '../common/types/types';\r\nimport Layout from '../containers/Layout';\r\n\r\ninterface DefaultRouteProps extends RouteProps {\r\n  component: ComponentType<RouteComponentProps | ComponentType>;\r\n  breadcrumbs: Breadcrumb[];\r\n}\r\n\r\nconst DefaultRoute = ({ component: Component, breadcrumbs, ...rest }: DefaultRouteProps): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  sessionStorage.setItem('redirect_to', JSON.stringify(location));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <Layout {...props} breadcrumbs={breadcrumbs}>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Liked from '../pages/Liked';\r\nimport Lists from '../pages/Lists';\r\nimport Movies from '../pages/Movies';\r\nimport MoviesNowPlaying from '../pages/Movies/NowPlaying';\r\nimport PopularMovies from '../pages/Movies/Popular';\r\nimport TopRatedMovies from '../pages/Movies/TopRated';\r\nimport UpcomingMovies from '../pages/Movies/Upcoming';\r\nimport People from '../pages/People';\r\nimport Search from '../pages/Search';\r\nimport Trending from '../pages/Trending';\r\nimport TV from '../pages/TV';\r\nimport TVAiringToday from '../pages/TV/AiringToday';\r\nimport OnTV from '../pages/TV/OnTV';\r\nimport PopularTV from '../pages/TV/Popular';\r\nimport TopRatedTV from '../pages/TV/TopRated';\r\nimport DefaultRoute from './DefaultRoute';\r\n\r\nconst Router = (): ReactElement => {\r\n  const breadcrumbs = {\r\n    home: { label: 'Home', path: '/' },\r\n    trending: { label: 'Trending', path: '/trending' },\r\n    movies: { label: 'Movies', path: '/movies' },\r\n    tv: { label: 'TV Shows', path: '/tv' }\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        {/* Home Route */}\r\n        <DefaultRoute exact path='/' component={Home} breadcrumbs={[breadcrumbs.home]} />\r\n\r\n        {/* User Routes */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/liked'\r\n          component={Liked}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Liked', path: '/liked' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/bookmarks'\r\n          component={Lists}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Bookmarks', path: '/bookmarks' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/bookmarks/:id'\r\n          component={Lists}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Bookmarks', path: '/bookmarks' }]}\r\n        />\r\n\r\n        {/* Search Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/search'\r\n          component={Search}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Search', path: '/search' }]}\r\n        />\r\n\r\n        {/* Trending Routes */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending/movie'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending, { label: 'Movies', path: '/trending/movie' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending/tv'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending, { label: 'TV Shows', path: '/trending/tv' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending/person'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.trending, { label: 'People', path: '/trending/person' }]}\r\n        />\r\n\r\n        {/* Movies Routes */}\r\n        <DefaultRoute exact path='/movies' component={Movies} breadcrumbs={[breadcrumbs.home, breadcrumbs.movies]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/popular'\r\n          component={PopularMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Popular', path: '/movies/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/upcoming'\r\n          component={UpcomingMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Upcoming', path: '/movies/upcoming' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/now-playing'\r\n          component={MoviesNowPlaying}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Now Playing', path: '/movies/now-playing' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/top-rated'\r\n          component={TopRatedMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Top Rated', path: '/movies/top-rated' }]}\r\n        />\r\n\r\n        {/* TV Routes */}\r\n        <DefaultRoute exact path='/tv' component={TV} breadcrumbs={[breadcrumbs.home, breadcrumbs.tv]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/popular'\r\n          component={PopularTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Popular', path: '/tv/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/airing-today'\r\n          component={TVAiringToday}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Airing Today', path: '/tv/airing-today' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/on-tv'\r\n          component={OnTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'On at the moment', path: '/tv/on-tv' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/top-rated'\r\n          component={TopRatedTV}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Top Rated', path: '/tv/top-rated' }]}\r\n        />\r\n\r\n        {/* People Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/people'\r\n          component={People}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'People', path: '/people' }]}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Router from '../../routes';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = (): ReactElement => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Router />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}