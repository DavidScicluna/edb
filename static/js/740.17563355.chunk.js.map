{"version":3,"file":"static/js/740.17563355.chunk.js","mappings":"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","sources":["pages/Movies/index.tsx"],"sourcesContent":["import { ReactElement, useState, useCallback, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport { useInfiniteQuery } from 'react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { useMediaQuery, useBoolean, HStack, VStack, Fade, ScaleFade, Collapse } from '@chakra-ui/react';\n\nimport axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport qs from 'query-string';\nimport { useElementSize, useUpdateEffect, useEffectOnce } from 'usehooks-ts';\n\nimport VerticalMovies from './components/Orientation/Vertical';\n\nimport axiosInstance, { handleDelay } from '../../common/scripts/axios';\nimport { Response } from '../../common/types';\nimport { PartialMovie } from '../../common/types/movie';\nimport Badge from '../../components/Badge';\nimport Button from '../../components/Clickable/Button';\nimport DisplayMode from '../../components/Clickable/DisplayMode';\nimport LoadMore from '../../components/Clickable/LoadMore';\nimport { handlePopulateFilters } from '../../components/Filters/common/utils';\nimport DisplayFilters from '../../components/Filters/Display';\nimport FiltersForm, { defaultValues as defaultFilterValues } from '../../components/Filters/Form';\nimport { Filters as FiltersFormType } from '../../components/Filters/types';\nimport SortBy from '../../components/SortBy';\nimport { movieSortBy as sortBy } from '../../components/SortBy/common/data/sort';\nimport { Form as SortForm } from '../../components/SortBy/types';\nimport Page from '../../containers/Page';\n\nconst defaultFilters = {\n\t'language': 'en-US', // TODO: Make this dynamic\n\t'ott_region': 'US', // TODO: Make this dynamic\n\t'certification_country': 'US', // TODO: Make this dynamic\n\t'primary_release_date.lte': moment().format('YYYY-MM-DD')\n};\n\nconst Movies = (): ReactElement => {\n\tconst source = axios.CancelToken.source();\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst location = useLocation();\n\tconst [searchParams, setSearchParams] = useSearchParams(defaultFilters);\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst [movies, setMovies] = useState<Response<PartialMovie[]>>();\n\tconst [isFetchingPage, setIsFetchingPage] = useBoolean();\n\n\tconst [totalActiveFilters, setTotalActiveFilters] = useState<number>(0);\n\n\t// Fetching Movies\n\tconst moviesQuery = useInfiniteQuery(\n\t\t'movies',\n\t\tasync ({ pageParam = 1 }) => {\n\t\t\tconst { data } = await axiosInstance\n\t\t\t\t.get<Response<PartialMovie[]>>('/discover/movie', {\n\t\t\t\t\tparams: { ...(qs.parse(searchParams.toString() || '') || {}), page: pageParam || 1 },\n\t\t\t\t\tcancelToken: source.token\n\t\t\t\t})\n\t\t\t\t.then((response) => handleDelay(isFetchingPage ? 0 : 2500, response));\n\t\t\treturn data;\n\t\t},\n\t\t{\n\t\t\tenabled: false,\n\t\t\tgetPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? (firstPage?.page || 0) - 1 : false),\n\t\t\tgetNextPageParam: (lastPage) =>\n\t\t\t\tlastPage.page !== lastPage.total_pages ? (lastPage?.page || 0) + 1 : false,\n\t\t\tonSuccess: (data) => {\n\t\t\t\tlet movies: PartialMovie[] = [];\n\n\t\t\t\tdata.pages.forEach((page) => {\n\t\t\t\t\tmovies = [...movies, ...(page?.results || [])];\n\t\t\t\t});\n\n\t\t\t\tsetMovies({\n\t\t\t\t\tpage: data.pages[data.pages.length - 1].page,\n\t\t\t\t\tresults: [..._.uniqBy(movies, 'id')],\n\t\t\t\t\ttotal_pages: data.pages[data.pages.length - 1].total_pages,\n\t\t\t\t\ttotal_results: data.pages[data.pages.length - 1].total_results\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t);\n\n\tconst handleCheckFilters = useCallback(\n\t\t_.debounce((filters: FiltersFormType) => {\n\t\t\tlet key: keyof FiltersFormType;\n\t\t\tlet total = 0;\n\n\t\t\tfor (key in filters) {\n\t\t\t\tif (\n\t\t\t\t\tkey === 'dates' &&\n\t\t\t\t\t((!_.isNil(filters.dates.gte) && !_.isEmpty(filters.dates.gte)) ||\n\t\t\t\t\t\t(!_.isNil(filters.dates.lte) && !_.isEmpty(filters.dates.lte)))\n\t\t\t\t) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t} else if (key !== 'dates' && !_.isNil(filters[key]) && !_.isEmpty(filters[key])) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTotalActiveFilters(total);\n\t\t}, 500),\n\t\t[setTotalActiveFilters]\n\t);\n\n\tconst handleSetFilters = (form: FiltersFormType): void => {\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\t\tObject.keys(currentSearch).forEach((key) => key === 'sort_by' || delete currentSearch[key]);\n\n\t\tconst filters = _.omitBy(\n\t\t\t_.merge({\n\t\t\t\t...defaultFilters,\n\t\t\t\t'certification': form.certifications.length > 0 ? form.certifications.join('|') : undefined,\n\t\t\t\t// 'include_adult': form.adult ? String(form.adult) : undefined,\n\t\t\t\t'primary_release_date.gte': form.dates.gte || undefined,\n\t\t\t\t'primary_release_date.lte': form.dates.lte || undefined,\n\t\t\t\t'with_genres': form.genres.length > 0 ? form.genres.join(',') : undefined,\n\t\t\t\t'vote_average.gte': form.rating.length > 0 && form.rating[0] ? form.rating[0] : undefined,\n\t\t\t\t'vote_average.lte': form.rating.length > 0 && form.rating[1] ? form.rating[1] : undefined,\n\t\t\t\t'vote_count.gte': form.count.length > 0 && form.count[0] ? form.count[0] : undefined,\n\t\t\t\t'vote_count.lte': form.count.length > 0 && form.count[1] ? form.count[1] : undefined,\n\t\t\t\t'with_runtime.gte': form.runtime.length > 0 && form.runtime[0] ? form.runtime[0] : undefined,\n\t\t\t\t'with_runtime.lte': form.runtime.length > 0 && form.runtime[1] ? form.runtime[1] : undefined\n\t\t\t}),\n\t\t\t_.isNil || _.isEmpty\n\t\t);\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, ...filters }));\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t};\n\n\tconst handleSetSortBy = (form: SortForm): void => {\n\t\tconst currentSearch = _.omit(qs.parse(searchParams.toString() || ''), 'sort_by');\n\n\t\tconst sortBy = {\n\t\t\tsort_by: `${form.sortBy.value}.${form.direction}`\n\t\t};\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, ...sortBy }));\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t};\n\n\tconst handleLoadMore = (): void => {\n\t\tconst page = movies?.page || 1;\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, page: page + 1 }));\n\n\t\tsetIsFetchingPage.on();\n\n\t\tsetTimeout(() => moviesQuery.fetchNextPage(), 250);\n\t};\n\n\tuseEffect(() => {\n\t\thandleCheckFilters(handlePopulateFilters(location.search, 'movie'));\n\t}, [location.search]);\n\n\tuseUpdateEffect(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\t\tconst totalPages =\n\t\t\tcurrentSearch && currentSearch.page && typeof currentSearch.page === 'string'\n\t\t\t\t? Number(currentSearch.page)\n\t\t\t\t: 1;\n\t\tconst page = movies?.page || 1;\n\n\t\tif (page < totalPages && moviesQuery.hasNextPage) {\n\t\t\tsetIsFetchingPage.on();\n\n\t\t\tmoviesQuery.fetchNextPage();\n\t\t}\n\t}, [movies?.page]);\n\n\tuseEffectOnce(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\n\t\tsetSearchParams(\n\t\t\tObject.keys(currentSearch).length > 0\n\t\t\t\t? _.merge({ ...defaultFilters, ...currentSearch })\n\t\t\t\t: _.merge({ ...defaultFilters, sort_by: 'popularity.desc' })\n\t\t);\n\n\t\tsetTimeout(() => moviesQuery.refetch(), 250);\n\t});\n\n\tuseEffect(() => {\n\t\treturn () => source.cancel();\n\t}, []);\n\n\treturn (\n\t\t<Page title='Movies'>\n\t\t\t{{\n\t\t\t\tactions: (\n\t\t\t\t\t<HStack width={isSm ? '100%' : 'auto'} spacing={2}>\n\t\t\t\t\t\t<SortBy\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={moviesQuery.isFetching || moviesQuery.isLoading || moviesQuery.isError}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSort By\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsortBy={[...sortBy]}\n\t\t\t\t\t\t\tonSort={handleSetSortBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FiltersForm\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\trenderRight={\n\t\t\t\t\t\t\t\t\t\ttotalActiveFilters > 0\n\t\t\t\t\t\t\t\t\t\t\t? ({ color }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Fade in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={color} size='xs'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CountUp duration={1} end={totalActiveFilters} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={moviesQuery.isFetching || moviesQuery.isLoading || moviesQuery.isError}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tmediaType='movie'\n\t\t\t\t\t\t\tonFilter={handleSetFilters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DisplayMode ref={ref} />\n\t\t\t\t\t</HStack>\n\t\t\t\t),\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={4} px={2} pt={2}>\n\t\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t\t<Collapse in={totalActiveFilters > 0} unmountOnExit style={{ width: '100%' }}>\n\t\t\t\t\t\t\t\t<DisplayFilters\n\t\t\t\t\t\t\t\t\tmediaType='movie'\n\t\t\t\t\t\t\t\t\tonTagDelete={(filter, filters) =>\n\t\t\t\t\t\t\t\t\t\thandleSetFilters({ ...filters, [filter]: defaultFilterValues[filter] })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClear={() => handleSetFilters({ ...defaultFilterValues })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Collapse>\n\n\t\t\t\t\t\t\t<VerticalMovies\n\t\t\t\t\t\t\t\tisError={moviesQuery.isError}\n\t\t\t\t\t\t\t\tisSuccess={moviesQuery.isSuccess}\n\t\t\t\t\t\t\t\tisLoading={moviesQuery.isFetching || moviesQuery.isLoading}\n\t\t\t\t\t\t\t\tmovies={movies?.results || []}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t<ScaleFade\n\t\t\t\t\t\t\tin={!moviesQuery.isError && (movies?.total_results || 0) > 0}\n\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\tstyle={{ width: isSm ? '100%' : 'auto' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LoadMore\n\t\t\t\t\t\t\t\tamount={movies?.results?.length || 0}\n\t\t\t\t\t\t\t\ttotal={movies?.total_results || 0}\n\t\t\t\t\t\t\t\tlabel='Movies'\n\t\t\t\t\t\t\t\tisLoading={moviesQuery.isFetching || moviesQuery.isLoading}\n\t\t\t\t\t\t\t\tisButtonVisible={(moviesQuery.hasNextPage || true) && !moviesQuery.isError}\n\t\t\t\t\t\t\t\tonClick={handleLoadMore}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ScaleFade>\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Page>\n\t);\n};\n\nexport default Movies;\n"],"names":["defaultFilters","moment","format","source","axios","useMediaQuery","isSm","location","useLocation","useSearchParams","searchParams","setSearchParams","useElementSize","ref","height","useState","movies","setMovies","useBoolean","isFetchingPage","setIsFetchingPage","totalActiveFilters","setTotalActiveFilters","moviesQuery","useInfiniteQuery","pageParam","axiosInstance","params","qs","toString","page","cancelToken","token","then","response","handleDelay","data","enabled","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","forEach","results","length","_","total_results","handleCheckFilters","useCallback","filters","key","total","dates","gte","lte","handleSetFilters","form","currentSearch","Object","keys","certifications","join","undefined","genres","rating","count","runtime","setTimeout","refetch","useEffect","handlePopulateFilters","search","useUpdateEffect","totalPages","Number","hasNextPage","on","fetchNextPage","useEffectOnce","sort_by","cancel","title","actions","width","spacing","renderButton","color","onClick","isFullWidth","isDisabled","isFetching","isLoading","isError","variant","sx","back","sortBy","onSort","value","direction","renderRight","in","unmountOnExit","size","duration","end","mediaType","onFilter","body","px","pt","style","onTagDelete","filter","defaultFilterValues","onClear","isSuccess","amount","label","isButtonVisible"],"sourceRoot":""}