{"version":3,"file":"static/js/840.a8aee8d6.chunk.js","mappings":"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","sources":["components/Clickable/DisplayMode/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Image/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/Movies/components/Orientation/Vertical/index.tsx","pages/Movies/components/Poster/Horizontal/index.tsx","pages/Movies/components/Poster/Vertical/index.tsx"],"sourcesContent":["import { ReactElement, forwardRef } from 'react';\nimport { useIsFetching, useIsMutating } from 'react-query';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useBoolean, ButtonGroup } from '@chakra-ui/react';\n\nimport { DisplayModeRef, DisplayModeProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { toggleDisplayMode } from '../../../store/slices/App';\nimport { defaultUser, getUser } from '../../../store/slices/Users';\nimport { Theme } from '../../../theme/types';\nimport Icon from '../../Icon';\nimport Tooltip from '../../Tooltip';\nimport IconButton from '../IconButton';\n\nconst DisplayMode = forwardRef<DisplayModeRef, DisplayModeProps>(function DisplayMode(props, ref): ReactElement {\n\tconst theme = useTheme<Theme>();\n\n\tconst dispatch = useDispatch();\n\tconst displayMode = useSelector((state) => state.app.ui.displayMode);\n\tconst color = useSelector(\n\t\t(state) => getUser(state.users.data.users, state.app.data.user)?.ui.theme.color || defaultUser.ui.theme.color\n\t);\n\n\tconst isFetching = useIsFetching();\n\tconst isMutating = useIsMutating();\n\n\tconst [isHoveringGrid, setIsHoveringGrid] = useBoolean();\n\tconst [isClickingGrid, setIsClickingGrid] = useBoolean();\n\n\tconst [isHoveringList, setIsHoveringList] = useBoolean();\n\tconst [isClickingList, setIsClickingList] = useBoolean();\n\n\treturn (\n\t\t<ButtonGroup ref={ref} {...props} isAttached>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'grid'\n\t\t\t\t\t\t? 'Display is in Grid Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to Grid Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisOpen={!(isFetching > 0 || isMutating > 0) && isHoveringGrid}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\tgutter={isClickingGrid ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\t\tcolor={displayMode === 'grid' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingGrid.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingGrid.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringGrid.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringGrid.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` },\n\t\t\t\t\t\tfront: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='grid_on' type={displayMode === 'grid' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'list'\n\t\t\t\t\t\t? 'Display is in List Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to List Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisOpen={!(isFetching > 0 || isMutating > 0) && isHoveringList}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\tgutter={isClickingList ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\t\tcolor={displayMode === 'list' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingList.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingList.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringList.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringList.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` },\n\t\t\t\t\t\tfront: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='view_agenda' type={displayMode === 'list' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</ButtonGroup>\n\t);\n});\n\nexport default DisplayMode;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { DescriptionProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Description = (props: DescriptionProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { description, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{description || 'Poster Description'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Description;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, AspectRatio, Center, Image as CUIImage, Fade } from '@chakra-ui/react';\n\nimport { AnimatePresence } from 'framer-motion';\n\nimport { PosterImageProps } from './types';\n\nimport * as fallback from '../../../../../common/assets/fallback';\nimport { MediaType } from '../../../../../common/types';\nimport { handleReturnBoringTypeByMediaType, handleReturnRatio } from '../../../../../common/utils';\nimport Skeleton from '../../../../../components/Skeleton';\nimport Image from '../../../../Image';\n\nconst commonStyleProps = {\n\twidth: 'inherit',\n\theight: 'inherit',\n\tborderRadius: 'inherit'\n};\n\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\n\nconst PosterImage = <MT extends MediaType>(props: PosterImageProps<MT>): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\n\tconst { mediaType, image, isLoading = true, inView = false } = props;\n\n\treturn (\n\t\t<AspectRatio width={width} borderRadius='base' ratio={handleReturnRatio('portrait')}>\n\t\t\t<AnimatePresence exitBeforeEnter initial={false}>\n\t\t\t\t{inView ? (\n\t\t\t\t\t<Center {...commonStyleProps} as={Fade} key='image' in unmountOnExit>\n\t\t\t\t\t\t<Skeleton {...commonStyleProps} isLoaded={!isLoading}>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t{...commonStyleProps}\n\t\t\t\t\t\t\t\talt={image?.alt || ''}\n\t\t\t\t\t\t\t\tboringType={handleReturnBoringTypeByMediaType(mediaType)}\n\t\t\t\t\t\t\t\tthumbnailSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.thumbnail || ''}${\n\t\t\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tfullSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.full || ''}${\n\t\t\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Center>\n\t\t\t\t) : (\n\t\t\t\t\t<Center {...commonStyleProps} as={Fade} key='dummy-image' width='100%' in unmountOnExit>\n\t\t\t\t\t\t<CUIImage\n\t\t\t\t\t\t\t{...commonStyleProps}\n\t\t\t\t\t\t\talt='dummy-clickable-image'\n\t\t\t\t\t\t\twidth='auto'\n\t\t\t\t\t\t\tmaxWidth='none'\n\t\t\t\t\t\t\tsrc={colorMode === 'light' ? fallback.default.light : fallback.default.dark}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Center>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</AspectRatio>\n\t);\n};\n\nexport default PosterImage;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { SubtitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Subtitle = (props: SubtitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { subtitle, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{subtitle || 'Poster Subtitle'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Subtitle;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport range from 'lodash/range';\nimport sample from 'lodash/sample';\n\nimport { TitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = range(25, 100, 5);\nconst height = ['19.25px', '22px', '24.75px', '27.5px', '33px', '41.25px'];\n\nconst Title = (props: TitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { title, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{title || 'Poster Title'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Title;\n","import { ReactElement, memo } from 'react';\nimport useInView from 'react-cool-inview';\n\nimport { useMediaQuery, useBreakpointValue, useBoolean, useConst, HStack, VStack, Center } from '@chakra-ui/react';\n\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport Description from './components/Description';\nimport Image from './components/Image';\nimport Subtitle from './components/Subtitle';\nimport Title from './components/Title';\nimport { HorizontalPosterProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { MediaType } from '../../../common/types';\nimport { handleReturnMediaTypeLabel } from '../../../common/utils';\nimport { guest } from '../../../store/slices/Users';\nimport { FontSizes } from '../../../theme/types';\nimport Card from '../..//Clickable/Card';\nimport Link from '../../Clickable/Link';\nimport Rating from '../../Rating';\nimport Bookmark from '../components/Bookmark';\nimport Like from '../components/Like';\nimport Quickview from '../components/Quickview';\n\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst ratingFontSize = useBreakpointValue<keyof Omit<FontSizes, '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl'>>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { observe: ref, inView } = useInView<HTMLDivElement>({\n\t\tthreshold: [0.2, 0.4, 0.6, 0.8, 1],\n\t\tunobserveOnEnter: true\n\t});\n\n\tconst user = useSelector((state) => state.app.data.user);\n\n\tconst { mediaItem, mediaType, image, rating, title, subtitle, description, isLoading = true } = props;\n\n\tconst [isDisabled, setIsDisabled] = useBoolean();\n\n\tconst isGuest = useConst<boolean>(guest.data.id === user);\n\n\treturn (\n\t\t<Link\n\t\t\tisFullWidth\n\t\t\tisDisabled={isLoading || isDisabled || mediaType === 'company'}\n\t\t\tto={\n\t\t\t\tmediaType !== 'company'\n\t\t\t\t\t? { pathname: `/${handleReturnMediaTypeLabel(mediaType)}/${mediaItem?.id || ''}` }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<Card isFullWidth isDisabled={isLoading} isClickable={mediaType !== 'company'} isFixed={isDisabled} isLight>\n\t\t\t\t<HStack ref={ref} width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\n\t\t\t\t\t{/* Image */}\n\t\t\t\t\t<Image mediaType={mediaType} image={image} isLoading={isLoading} inView={inView} />\n\n\t\t\t\t\t<VStack\n\t\t\t\t\t\twidth={[\n\t\t\t\t\t\t\t'calc(100% - 108px)',\n\t\t\t\t\t\t\t'calc(100% - 124px)',\n\t\t\t\t\t\t\t'calc(100% - 168px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 240px)'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Rating */}\n\t\t\t\t\t\t{(mediaType === 'movie' || mediaType === 'tv') && rating ? (\n\t\t\t\t\t\t\t<Rating count={rating?.count} inView={inView} size={ratingFontSize} isLoading={isLoading}>\n\t\t\t\t\t\t\t\t{rating?.rating}\n\t\t\t\t\t\t\t</Rating>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title title={title} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t{!(isNil(subtitle) || isEmpty(subtitle)) || isLoading ? (\n\t\t\t\t\t\t\t\t<Subtitle subtitle={subtitle} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t{!(isNil(description) || isEmpty(description)) || isLoading ? (\n\t\t\t\t\t\t\t<Description description={description} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</VStack>\n\n\t\t\t\t\t{/* Like / List Icon / Quick View buttons */}\n\t\t\t\t\t<Center\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tright: 1\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Quick View component */}\n\t\t\t\t\t\t{mediaType !== 'company' ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Quickview\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{/* Like component */}\n\t\t\t\t\t\t{!isGuest ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Like\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{/* List component */}\n\t\t\t\t\t\t{!isGuest && (mediaType === 'movie' || mediaType === 'tv') ? (\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Bookmark\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Center>\n\t\t\t\t</HStack>\n\t\t\t</Card>\n\t\t</Link>\n\t);\n};\n\nexport default memo(HorizontalPoster);\n","import { ReactElement } from 'react';\n\nimport range from 'lodash/range';\n\nimport { VerticalMoviesProps } from './types';\n\nimport { PartialMovie } from '../../../../../common/types/movie';\nimport Empty from '../../../../../components/Empty';\nimport Error from '../../../../../components/Error';\nimport VerticalGrid from '../../../../../components/Grid/Vertical';\nimport HorizontalMoviePoster from '../../Poster/Horizontal';\nimport VerticalMoviePoster from '../../Poster/Vertical';\n\nconst VerticalMovies = (props: VerticalMoviesProps): ReactElement => {\n\tconst { isError = false, isSuccess = false, isLoading = true, movies } = props;\n\n\treturn !isLoading && isError ? (\n\t\t<Error label='Oh no! Something went wrong' description='Failed to fetch movies list!' variant='outlined' />\n\t) : !isLoading && isSuccess && movies && movies.length === 0 ? (\n\t\t<Empty label='Movies list is currently empty!' variant='outlined' />\n\t) : !isLoading && isSuccess && movies && movies.length > 0 ? (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\tmovies.map((movie: PartialMovie) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalMoviePoster key={movie.id} movie={movie} isLoading={false} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalMoviePoster key={movie.id} movie={movie} isLoading={false} />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t) : (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\trange(0, isSuccess && movies && movies.length > 0 ? movies.length : 20).map((_dummy, index: number) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalMoviePoster key={index} isLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalMoviePoster key={index} isLoading />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t);\n};\n\nexport default VerticalMovies;\n","import { ReactElement } from 'react';\n\nimport compact from 'lodash/compact';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport { HorizontalMoviePosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID, handleReturnImageSize } from '../../../../../common/utils';\nimport HorizontalPoster from '../../../../../components/Poster/Horizontal';\n\nconst thumbnail = handleReturnImageSize('poster', 'thumbnail');\nconst full = handleReturnImageSize('poster', 'full');\n\nconst HorizontalMoviePoster = (props: HorizontalMoviePosterProps): ReactElement => {\n\tconst { movie, isLoading = true } = props;\n\tconst { title, poster_path, vote_average, vote_count, overview, release_date, genre_ids } = movie || {};\n\n\treturn (\n\t\t<HorizontalPoster\n\t\t\tmediaItem={movie ? { ...movie } : undefined}\n\t\t\tmediaType='movie'\n\t\t\timage={{\n\t\t\t\talt: `${title || ''} movie poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: { thumbnail, full }\n\t\t\t}}\n\t\t\trating={{\n\t\t\t\trating: vote_average || null,\n\t\t\t\tcount: vote_count || null\n\t\t\t}}\n\t\t\ttitle={title || ''}\n\t\t\tsubtitle={`${compact([\n\t\t\t\t!(isNil(release_date) || isEmpty(release_date))\n\t\t\t\t\t? `${handleReturnDate(release_date || '', 'full')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!(isNil(genre_ids) || isEmpty(genre_ids))\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'movie')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tdescription={overview || ''}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default HorizontalMoviePoster;\n","import { ReactElement } from 'react';\n\nimport compact from 'lodash/compact';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\n\nimport { VerticalMoviePosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID, handleReturnImageSize } from '../../../../../common/utils';\nimport VerticalPoster from '../../../../../components/Poster/Vertical';\n\nconst thumbnail = handleReturnImageSize('poster', 'thumbnail');\nconst full = handleReturnImageSize('poster', 'full');\n\nconst VerticalMoviePoster = (props: VerticalMoviePosterProps): ReactElement => {\n\tconst { movie, width, isLoading = true } = props;\n\tconst { title, poster_path, vote_average, release_date, genre_ids } = movie || {};\n\n\treturn (\n\t\t<VerticalPoster\n\t\t\twidth={width || '100%'}\n\t\t\tmediaItem={movie ? { ...movie } : undefined}\n\t\t\tmediaType='movie'\n\t\t\timage={{\n\t\t\t\talt: `${title || ''} movie poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: { thumbnail, full }\n\t\t\t}}\n\t\t\trating={vote_average || null}\n\t\t\ttitle={title || ''}\n\t\t\tsubtitle={`${compact([\n\t\t\t\t!(isNil(release_date) || isEmpty(release_date))\n\t\t\t\t\t? `${handleReturnDate(release_date || '', 'year')} `\n\t\t\t\t\t: undefined,\n\t\t\t\t!(isNil(genre_ids) || isEmpty(genre_ids))\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'movie')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default VerticalMoviePoster;\n"],"names":["DisplayMode","forwardRef","props","ref","theme","useTheme","dispatch","useDispatch","displayMode","useSelector","state","app","ui","color","getUser","users","data","user","defaultUser","isFetching","useIsFetching","isMutating","useIsMutating","useBoolean","isHoveringGrid","setIsHoveringGrid","isClickingGrid","setIsClickingGrid","isHoveringList","setIsHoveringList","isClickingList","setIsClickingList","isAttached","isOpen","isDisabled","placement","label","gutter","onClick","toggleDisplayMode","undefined","onMouseDown","on","onMouseUp","off","onMouseEnter","onMouseLeave","variant","sx","back","borderRadius","radii","base","front","icon","type","dummies","range","height","colorMode","useColorMode","fontSize","useBreakpointValue","description","isLoading","inView","dummy","useConst","sample","width","maxWidth","isLoaded","align","fontWeight","isTruncated","overflow","whiteSpace","commonStyleProps","mediaType","image","ratio","handleReturnRatio","AnimatePresence","exitBeforeEnter","initial","as","Fade","key","in","unmountOnExit","Skeleton","Image","alt","boringType","handleReturnBoringTypeByMediaType","thumbnailSrc","process","size","thumbnail","src","fullSrc","full","fallback","subtitle","title","HorizontalPoster","useMediaQuery","isSm","ratingFontSize","useInView","threshold","unobserveOnEnter","observe","mediaItem","rating","setIsDisabled","isGuest","guest","Link","isFullWidth","to","pathname","handleReturnMediaTypeLabel","id","Card","isClickable","isFixed","isLight","position","spacing","p","alignItems","Rating","count","isNil","isEmpty","top","right","Quickview","Like","Bookmark","memo","isError","isSuccess","movies","length","map","movie","_dummy","index","handleReturnImageSize","poster_path","vote_average","vote_count","overview","release_date","genre_ids","compact","handleReturnDate","handleReturnGenresByID","join"],"sourceRoot":""}