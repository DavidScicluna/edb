{"version":3,"file":"static/js/459.a1400467.chunk.js","mappings":"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","sources":["pages/User/pages/Lists/components/DeleteList/index.tsx","pages/User/pages/Lists/components/EditList/validation.ts","pages/User/pages/Lists/components/EditList/index.tsx","pages/User/pages/Lists/components/ListHeader/components/ListsTabButton/index.tsx","pages/User/pages/Lists/components/ListHeader/index.tsx","pages/User/pages/Lists/components/ListInfo/components/Stats/index.tsx","pages/User/pages/Lists/components/ListInfo/index.tsx","components/Forms/Radio/index.tsx","components/Forms/Radio/styles.ts","pages/User/pages/Lists/components/ListPicker/components/ListItem/index.tsx","pages/User/pages/Lists/components/ListPicker/index.tsx","pages/User/pages/Lists/components/MediaTypesSection/index.tsx","pages/User/pages/Lists/components/Toast/index.tsx","pages/User/pages/Lists/index.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useMediaQuery } from '@chakra-ui/react';\n\nimport { DeleteListProps } from './types';\n\nimport { useSelector } from '../../../../../../common/hooks';\nimport Button from '../../../../../../components/Clickable/Button';\nimport ConfirmModal from '../../../../../../components/ConfirmModal';\nimport { setLists } from '../../../../../../store/slices/User/';\n\nconst DeleteList = ({ id, isOpen, onClose, onCloseToast }: DeleteListProps): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst dispatch = useDispatch();\n\tconst lists = useSelector((state) => state.user.data.lists);\n\tconst list = useSelector((state) => state.user.data.lists.find((list) => list.id === id));\n\n\tconst handleDelete = (): void => {\n\t\tif (list) {\n\t\t\tdispatch(setLists(lists.filter((paramList) => paramList.id !== list.id)));\n\t\t}\n\n\t\tonClose();\n\t\tonCloseToast();\n\t};\n\n\treturn (\n\t\t<ConfirmModal\n\t\t\trenderActions={({ colorMode, size }) => (\n\t\t\t\t<Button color='red' colorMode={colorMode} onClick={() => handleDelete()} size={size}>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t\ttitle={isSm ? 'Delete' : `Delete ${list ? `\"${list.label}\"` : ''} list`}\n\t\t\tdescription={`Are you sure you want to delete the ${\n\t\t\t\tlist ? `\"${list.label}\"` : ''\n\t\t\t} list? You will not be able to retrieve this list back!`}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t/>\n\t);\n};\n\nexport default DeleteList;\n","import * as yup from 'yup';\n\nexport const defaultValues = {\n\tlabel: '',\n\tdescription: ''\n};\n\nexport const schema = yup.object().shape({\n\tlabel: yup.string().required().label('Label'),\n\tdescription: yup.string().label('Description')\n});\n","import { ReactElement, useEffect } from 'react';\nimport { useForm, useFormState, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useMediaQuery, useDisclosure, VStack } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport moment from 'moment';\n\nimport { EditListProps, Form } from './types';\nimport { defaultValues, schema } from './validation';\n\nimport { useSelector } from '../../../../../../common/hooks';\nimport Button from '../../../../../../components/Clickable/Button';\nimport ConfirmModal from '../../../../../../components/ConfirmModal';\nimport Input from '../../../../../../components/Forms/Input';\nimport Textarea from '../../../../../../components/Forms/Textarea';\nimport Modal from '../../../../../../components/Modal';\nimport { setLists } from '../../../../../../store/slices/User';\nimport { Theme } from '../../../../../../theme/types';\n\nconst placeholders = [\n\t'Action Movies',\n\t'DC Movies',\n\t'Leonardo DiCaprio',\n\t'Classics',\n\t'Comedy',\n\t'Mafia Movies & TV Shows',\n\t'Jennifer Lawrence',\n\t'Johnny Depp',\n\t'Angelina Jolie'\n];\nconst placeholder = placeholders[Math.floor(Math.random() * placeholders.length)];\n\nconst EditList = ({ id, isOpen, onClose }: EditListProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst { isOpen: isConfirmOpen, onOpen: onOpenConfirm, onClose: onCloseConfirm } = useDisclosure();\n\n\tconst dispatch = useDispatch();\n\tconst lists = useSelector((state) => state.user.data.lists);\n\tconst list = useSelector((state) => state.user.data.lists.find((list) => list.id === id));\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst form = useForm<Form>({\n\t\tdefaultValues,\n\t\treValidateMode: 'onSubmit',\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tconst { isDirty } = useFormState({ control: form.control });\n\n\tconst handleSubmit = (values: Form): void => {\n\t\tif (list) {\n\t\t\tdispatch(\n\t\t\t\tsetLists(\n\t\t\t\t\tlists.map((paramList) =>\n\t\t\t\t\t\tparamList.id === list.id\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...list,\n\t\t\t\t\t\t\t\t\tlabel: values.label,\n\t\t\t\t\t\t\t\t\tdescription: values?.description || '',\n\t\t\t\t\t\t\t\t\tdate: moment(new Date()).toISOString(),\n\t\t\t\t\t\t\t\t\tresults: {\n\t\t\t\t\t\t\t\t\t\t...list.results\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: { ...paramList }\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tonClose();\n\t};\n\n\tconst handleCloseConfirm = (): void => {\n\t\tonCloseConfirm();\n\t\tonClose();\n\t};\n\n\tconst handleCheckClose = (): void => {\n\t\tif (!isDirty) {\n\t\t\tonClose();\n\t\t} else {\n\t\t\tonOpenConfirm();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (isOpen && list) {\n\t\t\tform.reset({\n\t\t\t\tlabel: list.label,\n\t\t\t\tdescription: list.description\n\t\t\t});\n\t\t}\n\t}, [isOpen]);\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\ttitle={isSm ? 'Edit List' : `Edit ${list ? `\"${list.label}\"` : ''} List`}\n\t\t\t\trenderActions={({ color, colorMode, size }) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\tisDisabled={!isDirty}\n\t\t\t\t\t\tonClick={form.handleSubmit((values) => handleSubmit(values))}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isSm ? 'Save' : 'Save List'}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonClose={handleCheckClose}\n\t\t\t\tisCentered\n\t\t\t\tsize='lg'\n\t\t\t>\n\t\t\t\t<VStack spacing={3} p={2}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\tname='label'\n\t\t\t\t\t\trender={({ field: { onChange, value, name }, fieldState: { error } }) => (\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tlabel='Label'\n\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tplaceholder={`Try \"${placeholder}\"`}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\tname='description'\n\t\t\t\t\t\trender={({ field: { onChange, value, name }, fieldState: { error } }) => (\n\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\tsx={{ textarea: { height: theme.space[12.5] } }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</VStack>\n\t\t\t</Modal>\n\n\t\t\t<ConfirmModal\n\t\t\t\trenderActions={({ color, colorMode, size }) => (\n\t\t\t\t\t<Button color={color} colorMode={colorMode} onClick={() => handleCloseConfirm()} size={size}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\ttitle='Unsaved data!'\n\t\t\t\tdescription='Are you sure you want to close the modal, the data inserted will be lost unless you save it!'\n\t\t\t\tisOpen={isConfirmOpen}\n\t\t\t\tonClose={onCloseConfirm}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default EditList;\n","import React from 'react';\n\nimport { useTheme, useColorMode, Box, HStack, Center } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { ListsTabButtonProps } from './types';\n\nimport { useSelector } from '../../../../../../../../common/hooks';\nimport Icon from '../../../../../../../../components/Icon';\nimport {\n\thandleReturnSpacing,\n\thandleReturnIconSize\n} from '../../../../../../../../components/Tabs/components/TabList/components/Tab';\nimport useStyles from '../../../../../../../../components/Tabs/components/TabList/components/Tab/styles';\nimport { Size } from '../../../../../../../../components/Tabs/components/TabList/components/Tab/types';\nimport { Theme } from '../../../../../../../../theme/types';\n\nconst ListsTabButton = ({ isDisabled = false, isSelected = false, onClick }: ListsTabButtonProps) => {\n\tconst theme = useTheme<Theme>();\n\tconst { colorMode } = useColorMode();\n\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst size: Size = 'lg';\n\tconst style = useStyles(theme, { color, isFullWidth: false, isOnlyTab: false, isSelected, size });\n\n\tconst iconSize = `${handleReturnIconSize(size, theme)}px`;\n\n\treturn (\n\t\t<Box\n\t\t\taria-disabled={isDisabled}\n\t\t\tonClick={!isSelected ? () => onClick() : undefined}\n\t\t\tsx={{ ..._.merge(style.tab.default, style.tab[size], style[colorMode]) }}\n\t\t\t_disabled={{ ..._.merge(style.disabled) }}\n\t\t>\n\t\t\t<HStack width='100%' alignItems='inherit' justifyContent='inherit' spacing={handleReturnSpacing(size)}>\n\t\t\t\t<Icon icon='grid_on' type={isSelected ? 'filled' : 'outlined'} fontSize={iconSize} />\n\t\t\t\t<Center>Lists</Center>\n\t\t\t</HStack>\n\t\t</Box>\n\t);\n};\n\nexport default ListsTabButton;\n","import { ReactElement } from 'react';\nimport CountUp from 'react-countup';\n\nimport { Fade } from '@chakra-ui/react';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { useElementSize } from 'usehooks-ts';\n\nimport ListsTabButton from './components/ListsTabButton';\nimport { ListHeaderProps } from './types';\n\nimport { useSelector } from '../../../../../../common/hooks';\nimport Badge from '../../../../../../components/Badge';\nimport Divider from '../../../../../../components/Divider';\nimport HorizontalScroll from '../../../../../../components/HorizontalScroll';\nimport TabList from '../../../../../../components/Tabs/components/TabList';\n\nconst ListHeader = ({ activeTab, lists, onListsClick }: ListHeaderProps): ReactElement => {\n\tconst [ref, { height }] = useElementSize();\n\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\treturn (\n\t\t<HorizontalScroll ref={ref}>\n\t\t\t<ListsTabButton isSelected={_.isNil(activeTab)} onClick={onListsClick} />\n\t\t\t<Divider orientation='vertical' height={`${height}px`} mx={2} />\n\t\t\t<TabList color={color} isActiveForced size='lg'>\n\t\t\t\t{_.orderBy(lists, (list) => moment(list.date), ['desc']).map((list) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: list.label,\n\t\t\t\t\t\trenderRight:\n\t\t\t\t\t\t\tlist.results.movies.length + list.results.tv.length > 0\n\t\t\t\t\t\t\t\t? ({ isSelected, size }) => (\n\t\t\t\t\t\t\t\t\t\t<Fade in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={isSelected ? color : 'gray'}\n\t\t\t\t\t\t\t\t\t\t\t\tisLight={!isSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\t\t\t\t\t\tduration={1}\n\t\t\t\t\t\t\t\t\t\t\t\t\tend={list.results.movies.length || 0 + list.results.tv.length || 0}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t};\n\t\t\t\t})}\n\t\t\t</TabList>\n\t\t</HorizontalScroll>\n\t);\n};\n\nexport default ListHeader;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, StatGroup, Stat, StatLabel, StatNumber, HStack, VStack, Box } from '@chakra-ui/react';\n\nimport { StatsProps, Stat as StatType } from './types';\n\nconst Stats = (props: StatsProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\n\tconst { totalMovies, totalTvs } = props;\n\n\tconst stats: StatType[] = [\n\t\t{\n\t\t\tlabel: 'Total',\n\t\t\tnumber: totalMovies + totalTvs\n\t\t},\n\t\t{\n\t\t\tlabel: 'Movies',\n\t\t\tnumber: totalMovies\n\t\t},\n\t\t{\n\t\t\tlabel: 'TV Shows',\n\t\t\tnumber: totalTvs\n\t\t}\n\t];\n\n\treturn (\n\t\t<StatGroup\n\t\t\twidth='100%'\n\t\t\tborder='solid2'\n\t\t\tborderColor={`gray.${colorMode === 'light' ? 200 : 700}`}\n\t\t\tborderRadius='base'\n\t\t\tp={1}\n\t\t>\n\t\t\t<HStack\n\t\t\t\twidth='100%'\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\tdivider={\n\t\t\t\t\t<Box width='2px' height='44px' backgroundColor={`gray.${colorMode === 'light' ? 200 : 700}`} />\n\t\t\t\t}\n\t\t\t\tspacing={1}\n\t\t\t>\n\t\t\t\t{stats.map((stat: StatType, index: number) => (\n\t\t\t\t\t<Stat key={index} justifyContent='center'>\n\t\t\t\t\t\t<VStack spacing={0}>\n\t\t\t\t\t\t\t<StatNumber\n\t\t\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\t\t\tfontSize='2xl'\n\t\t\t\t\t\t\t\tlineHeight='normal'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{stat.number}\n\t\t\t\t\t\t\t</StatNumber>\n\t\t\t\t\t\t\t<StatLabel\n\t\t\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\t\t\tfontSize='xs'\n\t\t\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t\t\t\ttextTransform='uppercase'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{stat.label}\n\t\t\t\t\t\t\t</StatLabel>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</Stat>\n\t\t\t\t))}\n\t\t\t</HStack>\n\t\t</StatGroup>\n\t);\n};\n\nexport default Stats;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\n\nimport moment from 'moment';\n\nimport Stats from './components/Stats';\nimport { ListInfoProps } from './types';\n\nimport { useSelector } from '../../../../../../common/hooks';\nimport Button from '../../../../../../components/Clickable/Button';\nimport Icon from '../../../../../../components/Icon';\nimport Modal from '../../../../../../components/Modal';\nimport Panel from '../../../../../../components/Panel';\n\nconst ListInfo = ({ id, isOpen, onEdit, onDelete, onClose }: ListInfoProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\n\tconst list = useSelector((state) => state.user.data.lists.find((list) => list.id === id));\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={\n\t\t\t\t<VStack alignItems='flex-start' spacing={0}>\n\t\t\t\t\t<Text fontSize='md' fontWeight='semibold' color={`gray.${colorMode === 'light' ? 900 : 50}`}>\n\t\t\t\t\t\t{`${list?.label ? `\"${list.label}\"` : ''} List`}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tfontSize='xs'\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${\n\t\t\t\t\t\t\t(list ? list?.results.movies.length + list?.results.tv.length : 0) > 0\n\t\t\t\t\t\t\t\t? 'Updated'\n\t\t\t\t\t\t\t\t: 'Created'\n\t\t\t\t\t\t} ${\n\t\t\t\t\t\t\tmoment(list?.date).isSame(moment(), 'day')\n\t\t\t\t\t\t\t\t? moment(list?.date).fromNow()\n\t\t\t\t\t\t\t\t: moment(list?.date).format('LL')\n\t\t\t\t\t\t}`}\n\t\t\t\t\t</Text>\n\t\t\t\t</VStack>\n\t\t\t}\n\t\t\trenderActions={({ colorMode, size }) => (\n\t\t\t\t<HStack spacing={2}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\trenderLeft={({ fontSize }) => <Icon icon='edit' type='outlined' fontSize={fontSize} />}\n\t\t\t\t\t\tonClick={() => onEdit()}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\tcolorMode={colorMode}\n\t\t\t\t\t\trenderLeft={({ fontSize }) => (\n\t\t\t\t\t\t\t<Icon icon='delete_outline' type='outlined' fontSize={fontSize} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonClick={() => onDelete()}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t)}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\tisCentered\n\t\t\tsize='lg'\n\t\t>\n\t\t\t<VStack width='100%' spacing={2} p={2}>\n\t\t\t\t{list?.description ? (\n\t\t\t\t\t<Panel isFullWidth>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\t\ttitle: 'Description'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: (\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\t\t\t\tfontSize='lg'\n\t\t\t\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{list.description}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Panel>\n\t\t\t\t) : null}\n\n\t\t\t\t<Stats totalMovies={list?.results.movies.length || 0} totalTvs={list?.results.tv.length || 0} />\n\t\t\t</VStack>\n\t\t</Modal>\n\t);\n};\n\nexport default ListInfo;\n","import { ReactElement } from 'react';\n\nimport { ColorMode, useTheme, useColorMode, Radio as CUIRadio } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport useStyles from './styles';\nimport { RadioProps } from './types';\n\nimport { Theme } from '../../../theme/types';\n\nconst Radio = (props: RadioProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst { colorMode: colorModeHook } = useColorMode();\n\n\tconst { color, colorMode: colorModeProp, isChecked = false, isDisabled = false, ...rest } = props;\n\n\tconst style = useStyles(theme, { color, isChecked, isDisabled });\n\n\tconst colorMode: ColorMode = colorModeProp || colorModeHook;\n\n\treturn (\n\t\t<CUIRadio\n\t\t\t{...rest}\n\t\t\tcolor={color}\n\t\t\tisChecked={isChecked}\n\t\t\tisDisabled={isDisabled}\n\t\t\tsx={{ ..._.merge(style.radio, style[colorMode]) }}\n\t\t/>\n\t);\n};\n\nexport default Radio;\n","import { RadioProps } from './types';\n\nimport { Style } from '../../../common/types';\nimport { Theme } from '../../../theme/types';\n\ntype RadioStyle = {\n\tradio: Style;\n\tlight: Style;\n\tdark: Style;\n};\n\ntype StyleRadioProps = {\n\tcolor: RadioProps['color'];\n\tisChecked: RadioProps['isChecked'];\n\tisDisabled: RadioProps['isDisabled'];\n};\n\nexport default (\n\ttheme: Theme,\n\t{ color = 'gray', isChecked = false, isDisabled = false }: StyleRadioProps\n): RadioStyle => ({\n\tradio: {\n\t\t'opacity': isDisabled ? 0.5 : 1,\n\n\t\t'transition': `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`,\n\n\t\t'&:focus': {\n\t\t\tboxShadow: 'none !important'\n\t\t},\n\n\t\t'&.chakra-radio__control': {\n\t\t\twidth: theme.space[3],\n\t\t\theight: theme.space[3],\n\n\t\t\tboxShadow: 'none !important',\n\n\t\t\ttransition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\n\t\t},\n\n\t\t'& .edb-icon': {\n\t\t\ttransition: `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`\n\t\t}\n\t},\n\tlight: {\n\t\t'&.chakra-radio__control': {\n\t\t\tbackground: isChecked ? `${color}.500` : 'transparent',\n\t\t\tborderColor: isChecked ? `${color}.500` : 'gray.400',\n\t\t\tcolor: isChecked ? 'gray.50' : 'transparent'\n\t\t},\n\n\t\t'&:hover': {\n\t\t\t'&.chakra-radio__control': {\n\t\t\t\tbackground: isChecked ? `${color}.600` : 'transparent',\n\t\t\t\tborderColor: isChecked ? `${color}.600` : 'gray.500',\n\t\t\t\tcolor: isChecked ? 'gray.50' : 'transparent'\n\t\t\t}\n\t\t}\n\t},\n\tdark: {\n\t\t'&.chakra-radio__control': {\n\t\t\tbackground: isChecked ? `${color}.400` : 'transparent',\n\t\t\tborderColor: isChecked ? `${color}.400` : 'gray.500',\n\t\t\tcolor: isChecked ? 'gray.900' : 'transparent'\n\t\t},\n\n\t\t'&:hover': {\n\t\t\t'&.chakra-radio__control': {\n\t\t\t\tbackground: isChecked ? `${color}.300` : 'transparent',\n\t\t\t\tborderColor: isChecked ? `${color}.300` : 'gray.400',\n\t\t\t\tcolor: isChecked ? 'gray.900' : 'transparent'\n\t\t\t}\n\t\t}\n\t}\n});\n","import { ReactElement } from 'react';\n\nimport { useTheme, useColorMode, useBoolean, VStack, Text, Box } from '@chakra-ui/react';\n\nimport { useElementSize } from 'usehooks-ts';\n\nimport { ListItemProps } from './types';\n\nimport { useSelector } from '../../../../../../../../common/hooks';\nimport Card from '../../../../../../../../components/Clickable/Card';\nimport { CardRef } from '../../../../../../../../components/Clickable/Card/types';\nimport Radio from '../../../../../../../../components/Forms/Radio';\nimport { Theme } from '../../../../../../../../theme/types';\n\nconst ListItem = (props: ListItemProps): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\tconst { colorMode } = useColorMode();\n\n\tconst [ref, { width }] = useElementSize<NonNullable<CardRef>>();\n\n\tconst { id, label, results, isSelected = false, onSelected, onClick } = props;\n\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst [isHoveringRadio, setIsHoveringRadio] = useBoolean();\n\n\tconst movies = results.movies.length;\n\tconst tv = results.tv.length;\n\n\tconst transition = `${theme.transition.duration.faster} ${theme.transition.easing['ease-out']}`;\n\n\treturn (\n\t\t<Card\n\t\t\tref={ref}\n\t\t\tcolor={isSelected ? color : 'gray'}\n\t\t\tisFullWidth\n\t\t\tisFixed={isHoveringRadio}\n\t\t\tisClickable\n\t\t\tonClick={!isHoveringRadio ? () => onClick(id) : undefined}\n\t\t\tsx={{ back: { height: `${width}px` } }}\n\t\t>\n\t\t\t<VStack\n\t\t\t\tposition='relative'\n\t\t\t\twidth='100%'\n\t\t\t\theight='100%'\n\t\t\t\talignItems='center'\n\t\t\t\tjustifyContent='center'\n\t\t\t\tspacing={0}\n\t\t\t>\n\t\t\t\t<Box position='absolute' top={theme.space[2]} left={theme.space[2]}>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tisChecked={isSelected}\n\t\t\t\t\t\tonMouseEnter={() => setIsHoveringRadio.on()}\n\t\t\t\t\t\tonMouseLeave={() => setIsHoveringRadio.off()}\n\t\t\t\t\t\tonClick={() => onSelected(id)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Text\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor={isSelected ? `${color}.400` : `gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\tfontSize='xl'\n\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\tisTruncated\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\tsx={{ transition }}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t\t<Text\n\t\t\t\t\talign='center'\n\t\t\t\t\tcolor={isSelected ? `${color}.400` : `gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\tfontSize='sm'\n\t\t\t\t\tfontWeight='400'\n\t\t\t\t\ttextTransform='capitalize'\n\t\t\t\t\tisTruncated\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\tsx={{ transition }}\n\t\t\t\t>\n\t\t\t\t\t{`${[\n\t\t\t\t\t\t`${movies} movie${movies === 0 || movies > 1 ? 's' : ''}`,\n\t\t\t\t\t\t`${tv} TV show${tv === 0 || tv > 1 ? 's' : ''}`\n\t\t\t\t\t]\n\t\t\t\t\t\t.filter((item) => item)\n\t\t\t\t\t\t.join(' • ')}`}\n\t\t\t\t</Text>\n\t\t\t</VStack>\n\t\t</Card>\n\t);\n};\n\nexport default ListItem;\n","import { ReactElement } from 'react';\n\nimport { SimpleGrid } from '@chakra-ui/react';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport ListItem from './components/ListItem';\nimport { ListPickerProps } from './types';\n\nconst ListPicker = ({ lists, selectedListID, onSelected, onOpenList }: ListPickerProps): ReactElement => {\n\treturn (\n\t\t<SimpleGrid width='100%' columns={[1, 2, 4, 4, 5, 6]} spacing={2}>\n\t\t\t{_.orderBy(lists, (list) => moment(list.date), ['desc']).map((list, index) => (\n\t\t\t\t<ListItem\n\t\t\t\t\tkey={list.id}\n\t\t\t\t\t{...list}\n\t\t\t\t\tisSelected={selectedListID === list.id}\n\t\t\t\t\tonSelected={() => onSelected(list.id)}\n\t\t\t\t\tonClick={() => onOpenList(index)}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</SimpleGrid>\n\t);\n};\n\nexport default ListPicker;\n","import { ReactElement, useState, useEffect } from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { MediaTypesSectionProps } from './types';\n\nimport { MediaType } from '../../../../../../common/types';\nimport Divider from '../../../../../../components/Divider';\nimport Tabs from '../../../../../../components/Tabs';\nimport TabPanels from '../../../../../../components/Tabs/components/TabPanels';\nimport MediaTypesHeader from '../../../../components/MediaTypesHeader';\nimport MediaTypesPicker from '../../../../components/MediaTypesPicker';\nimport Movies from '../../../../components/Movies';\nimport TV from '../../../../components/TV';\n\nconst MediaTypesSection = ({ movies, tv, renderActions }: MediaTypesSectionProps): ReactElement => {\n\tconst [activeTab, setActiveTab] = useState<number>();\n\n\tconst handleReturnMediaTypes = (): MediaType[] => {\n\t\tconst mediaTypes: MediaType[] = [];\n\n\t\tif (movies.length > 0) {\n\t\t\tmediaTypes.push('movie');\n\t\t}\n\n\t\tif (tv.length > 0) {\n\t\t\tmediaTypes.push('tv');\n\t\t}\n\n\t\treturn mediaTypes;\n\t};\n\n\tconst handleSetMediaType = (mediaType: MediaType): void => {\n\t\tswitch (mediaType) {\n\t\t\tcase 'movie':\n\t\t\t\tsetActiveTab(0);\n\t\t\t\treturn;\n\t\t\tcase 'tv':\n\t\t\t\tsetActiveTab(1);\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetActiveTab(undefined);\n\t}, [movies, tv]);\n\n\treturn (\n\t\t<Tabs activeTab={activeTab} onChange={(index: number) => setActiveTab(index)}>\n\t\t\t<VStack width='100%' divider={<Divider orientation='horizontal' />} spacing={2}>\n\t\t\t\t<MediaTypesHeader\n\t\t\t\t\tmediaTypes={['movie', 'tv']}\n\t\t\t\t\trenderActions={renderActions}\n\t\t\t\t\tactiveTab={activeTab}\n\t\t\t\t\ttotal={{\n\t\t\t\t\t\tmovie: movies.length,\n\t\t\t\t\t\ttv: tv.length\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{_.isNil(activeTab) ? (\n\t\t\t\t\t<MediaTypesPicker\n\t\t\t\t\t\tmediaTypes={handleReturnMediaTypes()}\n\t\t\t\t\t\tlabel='Oh no! 😢'\n\t\t\t\t\t\tdescription='Please add an item to the list to be able to view it here.'\n\t\t\t\t\t\tonSetMediaType={handleSetMediaType}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<TabPanels>\n\t\t\t\t\t\t<Movies movies={movies} />\n\t\t\t\t\t\t<TV shows={tv} />\n\t\t\t\t\t</TabPanels>\n\t\t\t\t)}\n\t\t\t</VStack>\n\t\t</Tabs>\n\t);\n};\n\nexport default MediaTypesSection;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useMediaQuery, HStack, Text } from '@chakra-ui/react';\n\nimport { ToastProps } from './types';\n\nimport Button from '../../../../../../components/Clickable/Button';\nimport IconButton from '../../../../../../components/Clickable/IconButton';\nimport Icon from '../../../../../../components/Icon';\n\nconst Toast = (props: ToastProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst { list, onEdit, onDelete, onClose } = props;\n\n\treturn (\n\t\t<HStack\n\t\t\tbackgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\n\t\t\tborderRadius='full'\n\t\t\tboxShadow='lg'\n\t\t\tspacing={2}\n\t\t\tpx={2}\n\t\t\tpy={1.5}\n\t\t\tmb={1.5}\n\t\t>\n\t\t\t<HStack spacing={0.25}>\n\t\t\t\t<Text\n\t\t\t\t\talign='left'\n\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 50 : 900}`}\n\t\t\t\t\tfontSize={isSm ? 'sm' : 'md'}\n\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t>\n\t\t\t\t\t{`${list ? `\"${list.label}\"` : ''} list`}\n\t\t\t\t</Text>\n\t\t\t</HStack>\n\n\t\t\t<HStack spacing={1}>\n\t\t\t\t{isSm ? (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label='Edit selected list'\n\t\t\t\t\t\tcolorMode={colorMode === 'light' ? 'dark' : 'light'}\n\t\t\t\t\t\tonClick={() => onEdit()}\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon icon='edit' type='outlined' />\n\t\t\t\t\t</IconButton>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolorMode={colorMode === 'light' ? 'dark' : 'light'}\n\t\t\t\t\t\trenderLeft={({ fontSize }) => <Icon icon='edit' type='outlined' fontSize={fontSize} />}\n\t\t\t\t\t\tonClick={() => onEdit()}\n\t\t\t\t\t>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\n\t\t\t\t{isSm ? (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label='Delete selected list'\n\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\tcolorMode={colorMode === 'light' ? 'dark' : 'light'}\n\t\t\t\t\t\tonClick={() => onDelete()}\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon icon='delete_outline' type='outlined' />\n\t\t\t\t\t</IconButton>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\tcolorMode={colorMode === 'light' ? 'dark' : 'light'}\n\t\t\t\t\t\trenderLeft={({ fontSize }) => (\n\t\t\t\t\t\t\t<Icon icon='delete_outline' type='outlined' fontSize={fontSize} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonClick={() => onDelete()}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</HStack>\n\n\t\t\t<IconButton\n\t\t\t\taria-label='Close'\n\t\t\t\tcolorMode={colorMode === 'light' ? 'dark' : 'light'}\n\t\t\t\tonClick={() => onClose()}\n\t\t\t\tsize={isSm ? 'sm' : 'md'}\n\t\t\t\tvariant='icon'\n\t\t\t>\n\t\t\t\t<Icon icon='close' type='outlined' />\n\t\t\t</IconButton>\n\t\t</HStack>\n\t);\n};\n\nexport default Toast;\n","import { ReactElement, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nimport { useMediaQuery, useDisclosure, useToast, VStack, Collapse, Fade, Center } from '@chakra-ui/react';\n\nimport { AnimatePresence } from 'framer-motion';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport CreateList from './components/CreateList';\nimport DeleteList from './components/DeleteList';\nimport EditList from './components/EditList';\nimport ListHeader from './components/ListHeader';\nimport ListInfo from './components/ListInfo';\nimport ListPicker from './components/ListPicker';\nimport MediaTypesSection from './components/MediaTypesSection';\nimport Toast from './components/Toast';\n\nimport { useSelector } from '../../../../common/hooks';\nimport Button from '../../../../components/Clickable/Button';\nimport IconButton from '../../../../components/Clickable/IconButton';\nimport Divider from '../../../../components/Divider';\nimport Empty from '../../../../components/Empty';\nimport Icon from '../../../../components/Icon';\nimport Tabs from '../../../../components/Tabs';\nimport TabPanels from '../../../../components/Tabs/components/TabPanels';\nimport Page from '../../../../containers/Page';\nimport { List as ListType } from '../../../../store/slices/User/types';\n\nconst Lists = (): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst { isOpen: isCreateListOpen, onOpen: onCreateListOpen, onClose: onCreateListClose } = useDisclosure();\n\tconst { isOpen: isDeleteListOpen, onOpen: onDeleteListOpen, onClose: onDeleteListClose } = useDisclosure();\n\tconst { isOpen: isEditListOpen, onOpen: onEditListOpen, onClose: onEditListClose } = useDisclosure();\n\tconst { isOpen: isListInfoOpen, onOpen: onListInfoOpen, onClose: onListInfoClose } = useDisclosure();\n\n\tconst location = useLocation();\n\n\tconst toast = useToast();\n\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\tconst lists = useSelector((state) => state.user.data.lists);\n\n\tconst [selectedListID, setSelectedListID] = useState<ListType['id']>();\n\tconst [activeTab, setActiveTab] = useState<number>();\n\n\tconst handleSelectList = (id: ListType['id']): void => {\n\t\tif (selectedListID && selectedListID === id) {\n\t\t\tsetSelectedListID(undefined);\n\t\t} else {\n\t\t\tsetSelectedListID(id);\n\t\t}\n\t};\n\n\tconst handleOpenList = (index: number): void => {\n\t\tsetActiveTab(index);\n\t};\n\n\tconst handleReset = (): void => {\n\t\ttoast.closeAll();\n\n\t\tonCreateListClose();\n\t\tonDeleteListClose();\n\t\tonEditListClose();\n\t\tonListInfoClose();\n\n\t\tsetActiveTab(undefined);\n\t\tsetSelectedListID(undefined);\n\t};\n\n\tconst handleResetSelected = (): void => {\n\t\ttoast.closeAll();\n\n\t\tsetSelectedListID(undefined);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!_.isNil(activeTab)) {\n\t\t\thandleResetSelected();\n\t\t}\n\t}, [activeTab]);\n\n\tuseEffect(() => {\n\t\ttoast.closeAll();\n\n\t\tif (_.isNil(activeTab) && selectedListID) {\n\t\t\ttoast({\n\t\t\t\tduration: null,\n\t\t\t\tisClosable: true,\n\t\t\t\tposition: 'bottom',\n\t\t\t\tvariant: 'solid',\n\t\t\t\trender: () => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Toast\n\t\t\t\t\t\t\tlist={lists.find((list) => list.id === selectedListID)}\n\t\t\t\t\t\t\tonEdit={onEditListOpen}\n\t\t\t\t\t\t\tonDelete={onDeleteListOpen}\n\t\t\t\t\t\t\tonClose={handleResetSelected}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [selectedListID]);\n\n\tuseEffect(() => {\n\t\tif (lists.length === 0) {\n\t\t\thandleReset();\n\t\t}\n\t}, [lists]);\n\n\tconst handleCheckLocation = (): void => {\n\t\tconst hash = String(location.hash).replace('#', '');\n\n\t\tif (hash) {\n\t\t\tif (lists.some((list) => list.id === hash)) {\n\t\t\t\tsetActiveTab(lists.findIndex((list) => list.id === hash));\n\t\t\t} else {\n\t\t\t\tsetActiveTab(undefined);\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (location.pathname === '/lists') {\n\t\t\thandleCheckLocation();\n\t\t}\n\t}, [location.hash]);\n\n\treturn (\n\t\t<>\n\t\t\t<Page title='Lists'>\n\t\t\t\t{{\n\t\t\t\t\tactions: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor={isCreateListOpen ? color : 'gray'}\n\t\t\t\t\t\t\tonClick={() => onCreateListOpen()}\n\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate new list\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t),\n\t\t\t\t\tbody: (\n\t\t\t\t\t\t<Tabs activeTab={activeTab} onChange={(index: number) => setActiveTab(index)}>\n\t\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\tdivider={lists && lists.length > 0 ? <Divider orientation='horizontal' /> : undefined}\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tp={2}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Collapse in={lists && lists.length > 0} unmountOnExit style={{ width: '100%' }}>\n\t\t\t\t\t\t\t\t\t<ListHeader activeTab={activeTab} lists={lists} onListsClick={handleReset} />\n\t\t\t\t\t\t\t\t</Collapse>\n\n\t\t\t\t\t\t\t\t{lists.length === 0 ? (\n\t\t\t\t\t\t\t\t\t<Empty\n\t\t\t\t\t\t\t\t\t\thasIllustration\n\t\t\t\t\t\t\t\t\t\tlabel='Oh no! 😢'\n\t\t\t\t\t\t\t\t\t\tdescription='Please add a list to be able to add items to lists.'\n\t\t\t\t\t\t\t\t\t\tsize='xl'\n\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<AnimatePresence exitBeforeEnter initial={false}>\n\t\t\t\t\t\t\t\t\t\t{_.isNil(activeTab) ? (\n\t\t\t\t\t\t\t\t\t\t\t<Center as={Fade} key='list-picker' width='100%' in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListPicker\n\t\t\t\t\t\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedListID={selectedListID}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelected={handleSelectList}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonOpenList={handleOpenList}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Center as={Fade} key='list-tab-panels' width='100%' in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPanels>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_.orderBy(lists, (list) => moment(list.date), ['desc']).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(list) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MediaTypesSection\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmovies={list.results.movies}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv={list.results.tv}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderActions={() => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='Open Information modal'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSelectList(list.id);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonListInfoOpen();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='info'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisListInfoOpen ? 'filled' : 'outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPanels>\n\t\t\t\t\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Page>\n\n\t\t\t<CreateList isOpen={isCreateListOpen} onSubmit={() => setActiveTab(0)} onClose={onCreateListClose} />\n\n\t\t\t{lists && lists.length > 0 && selectedListID ? (\n\t\t\t\t<DeleteList\n\t\t\t\t\tid={selectedListID}\n\t\t\t\t\tisOpen={isDeleteListOpen}\n\t\t\t\t\tonClose={onDeleteListClose}\n\t\t\t\t\tonCloseToast={handleReset}\n\t\t\t\t/>\n\t\t\t) : null}\n\n\t\t\t{lists && lists.length > 0 && selectedListID ? (\n\t\t\t\t<EditList id={selectedListID} isOpen={isEditListOpen} onClose={onEditListClose} />\n\t\t\t) : null}\n\n\t\t\t{lists && lists.length > 0 && selectedListID ? (\n\t\t\t\t<ListInfo\n\t\t\t\t\tid={selectedListID}\n\t\t\t\t\tisOpen={isListInfoOpen}\n\t\t\t\t\tonEdit={() => onEditListOpen()}\n\t\t\t\t\tonDelete={() => onDeleteListOpen()}\n\t\t\t\t\tonClose={onListInfoClose}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n\nexport default Lists;\n"],"names":["id","isOpen","onClose","onCloseToast","useMediaQuery","isSm","dispatch","useDispatch","lists","useSelector","state","user","data","list","find","ConfirmModal","renderActions","colorMode","size","Button","color","onClick","setLists","filter","paramList","title","label","description","defaultValues","schema","yup","shape","required","placeholders","placeholder","Math","floor","random","length","theme","useTheme","useDisclosure","isConfirmOpen","onOpenConfirm","onOpen","onCloseConfirm","ui","form","useForm","reValidateMode","resolver","yupResolver","isDirty","useFormState","control","useEffect","reset","Modal","isDisabled","handleSubmit","values","map","date","moment","Date","toISOString","results","isCentered","spacing","p","name","render","field","onChange","value","error","fieldState","Input","isFullWidth","isRequired","Textarea","sx","textarea","height","space","isSelected","useColorMode","style","useStyles","isOnlyTab","iconSize","handleReturnIconSize","undefined","_","tab","default","_disabled","disabled","width","alignItems","justifyContent","handleReturnSpacing","Icon","icon","type","fontSize","activeTab","onListsClick","useElementSize","ref","HorizontalScroll","Divider","orientation","mx","TabList","isActiveForced","renderRight","movies","tv","in","unmountOnExit","Badge","isLight","duration","end","props","totalMovies","totalTvs","stats","number","border","borderColor","borderRadius","divider","backgroundColor","stat","index","lineHeight","whiteSpace","textTransform","onEdit","onDelete","fontWeight","align","isSame","fromNow","format","renderLeft","Panel","header","body","colorModeHook","colorModeProp","isChecked","rest","radio","transition","faster","easing","boxShadow","light","background","dark","onSelected","useBoolean","isHoveringRadio","setIsHoveringRadio","Card","isFixed","isClickable","back","position","top","left","onMouseEnter","on","onMouseLeave","off","isTruncated","overflow","item","join","selectedListID","onOpenList","columns","useState","setActiveTab","Tabs","MediaTypesHeader","mediaTypes","total","movie","MediaTypesPicker","push","handleReturnMediaTypes","onSetMediaType","mediaType","TabPanels","Movies","TV","shows","px","py","mb","IconButton","variant","isCreateListOpen","onCreateListOpen","onCreateListClose","isDeleteListOpen","onDeleteListOpen","onDeleteListClose","isEditListOpen","onEditListOpen","onEditListClose","isListInfoOpen","onListInfoOpen","onListInfoClose","location","useLocation","toast","useToast","setSelectedListID","handleSelectList","handleReset","closeAll","handleResetSelected","isClosable","pathname","hash","String","replace","some","findIndex","handleCheckLocation","Page","actions","Empty","hasIllustration","AnimatePresence","exitBeforeEnter","initial","as","Fade","CreateList","onSubmit"],"sourceRoot":""}