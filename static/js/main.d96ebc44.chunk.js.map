{"version":3,"sources":["common/hooks/useSelectorTyped.ts","common/scripts/axios.ts","components/Grid/Horizontal/components/Header/index.tsx","store/slices/app.ts","store/slices/options.ts","store/rootReducer.ts","store/index.ts","theme/foundations/typography.ts","theme/foundations/index.tsx","theme/foundations/borders.ts","theme/foundations/radius.ts","theme/foundations/spacing.ts","theme/foundations/sizes.ts","theme/foundations/transition.ts","theme/styles.ts","theme/index.ts","common/data/date.ts","common/utils/utils.ts","common/assets/illustrations/empty.svg","components/Empty/index.tsx","common/assets/illustrations/error.svg","components/Error/index.tsx","components/Inputs/Button/index.tsx","components/Inputs/Button/styles.ts","components/Grid/Horizontal/components/Grid/index.tsx","components/Inputs/IconButton/index.tsx","components/Inputs/IconButton/styles.ts","components/Tooltip/index.tsx","components/Grid/Horizontal/index.tsx","components/Bookmark/index.tsx","components/Skeleton/common/props/index.ts","components/Skeleton/common/utils/utils.ts","components/Skeleton/index.tsx","components/Image/index.tsx","components/Like/index.tsx","components/Skeleton/Text/index.tsx","components/Rating/index.tsx","components/Poster/Vertical/components/Subtitle/index.tsx","components/Poster/Vertical/components/Title/index.tsx","components/Poster/Vertical/index.tsx","pages/Home/index.tsx","common/scripts/sortBy.ts","components/DisplayOptions/components/Display/components/Option/index.tsx","components/DisplayOptions/components/Display/index.tsx","components/DisplayOptions/components/SortBy/index.tsx","components/DisplayOptions/index.tsx","components/Grid/Vertical/components/Header/index.tsx","components/Grid/Vertical/index.tsx","components/LoadMore/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/Movies/Popular/index.tsx","pages/Trending/components/Label/index.tsx","pages/Trending/components/TypePicker/components/Type/index.tsx","pages/Trending/components/TypePicker/components/Type/styles.ts","pages/Trending/components/TypePicker/index.tsx","pages/Trending/index.tsx","containers/Layout/common/data/sidebar.ts","containers/Layout/common/styles/transitions.ts","containers/Layout/components/Header/components/Breadcrumb/index.tsx","containers/Layout/components/Header/components/Breadcrumb/styles.ts","containers/Layout/common/data/navItems.ts","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/index.tsx","containers/Layout/components/NavItems/components/NavItem/components/NavItemChild/styles.ts","containers/Layout/components/NavItems/components/NavItem/index.tsx","containers/Layout/components/NavItems/components/NavItem/styles.ts","containers/Layout/components/NavItems/index.tsx","containers/Layout/components/Header/components/Menu/index.tsx","containers/Layout/components/Header/components/Search/index.tsx","containers/Layout/components/Header/components/User/index.tsx","containers/Layout/components/Header/index.tsx","containers/Layout/components/Sidebar/index.tsx","containers/Layout/index.tsx","common/hooks/useQueriesTyped.ts","routes/DefaultRoute.tsx","routes/index.tsx","containers/App/index.tsx","index.tsx"],"names":["useSelectorTyped","useSelector","instance","axios","create","baseURL","process","interceptors","request","use","headers","interval","appSlice","createSlice","name","initialState","data","displayMode","sortDirection","sidebarMode","reducers","toggleDisplayMode","state","action","payload","toggleSortDirection","toggleSidebarMode","actions","optionsSlice","genres","movie","tv","hasDownloaded","setMovieGenres","setTVGenres","toggleHasDownloaded","rootReducer","combineReducers","app","appReducer","options","optionsReducer","store","configureStore","reducer","typography","fonts","body","heading","mono","fontSizes","borders","none","solid","dashed","solid1","solid2","dashed1","dashed2","radii","sm","base","md","lg","xl","full","space","0","0.25","0.5","0.75","1","1.25","1.5","1.75","2","2.25","2.5","2.75","3","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6","6.25","6.5","6.75","7","7.25","7.5","7.75","8","8.25","8.5","8.75","9","9.25","9.5","9.75","10","10.25","10.5","10.75","11","11.25","11.5","11.75","12","12.25","12.5","12.75","13","13.25","13.5","13.75","14","14.25","14.5","14.75","15","15.25","15.5","15.75","sizes","container","transition","property","common","colors","dimensions","position","background","easing","duration","styles","global","props","fontFamily","color","mode","bg","lineHeight","borderColor","wordWrap","theme","config","cssVarPrefix","initialColorMode","useSystemColorMode","foundations","extendTheme","months","value","label","number","string","parseInt","_","replace","type","getState","filter","genre","includes","id","map","join","date","split","month","find","mediaType","size","red","orange","yellow","green","teal","blue","cyan","purple","pink","queryString","stringifyUrl","url","query","square","breakpoint","element","overflow","style","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","range","amount","Empty","colorMode","useColorMode","hasIllustration","variant","in","width","borderRadius","border","spacing","px","py","maxWidth","alt","src","empty","align","fontSize","fontWeight","Error","error","Button","useTheme","isFullWidth","isLoading","button","normal","transform","boxShadow","disabled","cursor","opacity","light","backgroundColor","dark","useStyles","children","leftIcon","rightIcon","isDisabled","rest","handleReturnMargin","handleReturnIconSize","padding","handleReturnPadding","sx","merge","_disabled","thickness","speed","slow","as","marginRight","marginLeft","Grid","gridRef","undefined","handleScrollChange","ref","overflowX","display","onScroll","event","p","IconButton","forwardRef","icon","height","Tooltip","closeDelay","openDelay","gutter","arrowSize","arrowShadowColor","utils","fast","hasArrow","Header","useDisclosure","isOpen","onOpen","onClose","title","reset","scrollButtons","handleScrollClick","useState","direction","setDirection","handleScroll","useCallback","handleIsOpen","setInterval","handleClose","clearInterval","useEffect","justify","textTransform","aria-label","closeOnClick","placement","left","ArrowBackOutlinedIcon","onMouseDown","onClick","right","ArrowForwardOutlinedIcon","defaultScrollButtonsState","HorizontalGrid","history","useHistory","path","setGridRef","setScrollButtons","resetScrollButtons","setResetScrollButtons","handleGridRef","maxScroll","scrollLeft","offsetWidth","isLeftDisabled","isRightDisabled","currentTarget","push","Bookmark","isBookmarked","titleText","length","BookmarkOutlinedIcon","BookmarkBorderOutlinedIcon","fadeDuration","Skeleton","commonProps","startColor","endColor","Image","orientation","isLoaded","ratio","fallbackSrc","Like","isLiked","FavoriteOutlinedIcon","FavoriteBorderOutlinedIcon","SkeletonText","noOfLines","defaultRating","rating","count","Rating","StarOutlinedIcon","ml","dummyTextWidths","Subtitle","subtitle","isHovering","setIsHovering","isTruncated","setIsTruncated","handleIsTruncated","Math","floor","random","mt","whiteSpace","setTimeout","onMouseLeave","Title","mb","VerticalPoster","image","alignItems","Home","source","CancelToken","hasOptionsDownloaded","popularMovies","useQuery","a","axiosInstance","get","cancelToken","token","results","trendingMovies","popularTV","trendingTV","trendingPeople","cancel","Horizontal","isFetching","pathname","Array","_dummy","index","Vertical","isError","isSuccess","poster_path","vote_average","vote_count","release_date","genre_ids","search","stringify","first_air_date","person","profile_path","known_for_department","onSortChange","paramSort","sortBy","current","findIndex","sort","isActive","next","Option","justifyContent","Display","dispatch","useDispatch","GridOnTwoToneIcon","GridOnOutlinedIcon","ListAltTwoToneIcon","ListAltOutlinedIcon","SortBy","unmountOnExit","ArrowDownwardOutlinedIcon","DisplayOptions","VisibilityOutlinedIcon","header","VerticalGrid","my","LoadMore","total","onFetch","max","Description","description","HorizontalPoster","top","defaultSortBy","PopularMovies","useMediaQuery","isSmallMob","isMob","setSortBy","movies","setMovies","useInfiniteQuery","pageParam","params","page","sort_by","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","refetch","pages","forEach","dataUpdatedAt","columns","overview","total_results","fetchNextPage","Label","handleOpenModal","Type","iconActive","text","gray","types","TheatersOutlinedIcon","TvTwoToneIcon","TvOutlinedIcon","PeopleAltTwoToneIcon","PeopleAltOutlinedIcon","TypePicker","isXs","handleClick","location","isCentered","motionPreset","mx","borderBottom","borderBottomColor","CloseOutlinedIcon","typeItem","MovieTVSortBy","PeopleSortBy","Trending","isTypePickerOpen","onTypePickerOpen","onTypePickerClose","breakpoints","isLgUp","useLocation","setMediaType","setTV","people","setPeople","trending","param","parse","show","known_for","item","onSetType","sidebarWidth","expanded","collapsed","slower","Breadcrumb","breadcrumbs","breadcrumbItem","breadcrumbLink","textDecoration","breadcrumbActive","separator","ChevronRightOutlinedIcon","breadcrumb","isCurrentPage","Link","to","navItems","HomeTwoToneIcon","HomeOutlinedIcon","SearchTwoToneIcon","SearchOutlinedIcon","ExploreTwoToneIcon","ExploreOutlinedIcon","WhatshotTwoToneIcon","WhatshotOutlinedIcon","TheatersTwoToneIcon","NavItemChild","isLastChild","child","link","RRDLink","borderLeft","borderLeftColor","parts","initials","part","handleGetInitials","NavItem","isChildActive","some","isExpanded","main","pl","pr","NavItems","navItem","Menu","MenuOutlinedIcon","Search","User","isMdUp","isLgDown","useTransitionsStyle","zIndex","Sidebar","borderRight","borderRightColor","RemoveOutlinedIcon","AddOutlinedIcon","Layout","setWidth","setLeft","queries","useQueries","useQueriesTyped","queryKey","queryFn","handleBackground","pb","DefaultRoute","Component","component","sessionStorage","setItem","JSON","render","TempComp","Router","home","exact","queryClient","QueryClient","App","console","log","QueryClientProvider","client","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d96ebc44.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store';\r\n\r\nconst useSelectorTyped: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default useSelectorTyped;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst handleAddAuthorization = (request: AxiosRequestConfig): AxiosRequestConfig => {\r\n  if (!request.headers['Authorization']) {\r\n    request.headers['Authorization'] = `Bearer ${process.env.REACT_APP_KEY}`;\r\n  }\r\n  return request;\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL\r\n});\r\n\r\ninstance.interceptors.request.use(handleAddAuthorization);\r\n\r\nexport default instance;\r\n","import React, { ReactElement, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, HStack, Text } from '@chakra-ui/react';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\n\r\nimport IconButton from '../../../../Inputs/IconButton';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { HeaderProps } from './types';\r\n\r\nlet interval: ReturnType<typeof setInterval>;\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { title, isLoading = false, reset = false, scrollButtons, handleScrollClick } = props;\r\n\r\n  const [direction, setDirection] = useState<'left' | 'right' | ''>('');\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (direction === 'left' || direction === 'right') {\r\n      handleScrollClick(direction);\r\n    }\r\n  }, [direction, handleScrollClick]);\r\n\r\n  const handleIsOpen = useCallback(() => {\r\n    if (isOpen) {\r\n      interval = setInterval(() => {\r\n        handleScroll();\r\n      }, 25);\r\n    }\r\n  }, [isOpen, interval]);\r\n\r\n  const handleClose = () => {\r\n    setDirection('');\r\n    clearInterval(interval);\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleIsOpen();\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (reset) {\r\n      handleClose();\r\n    }\r\n  }, [reset]);\r\n\r\n  return (\r\n    <HStack justify='space-between' p={[2]}>\r\n      <Text\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='2xl'\r\n        fontWeight='semibold'\r\n        textTransform='capitalize'>\r\n        {title}\r\n      </Text>\r\n\r\n      {/* Scroll buttons */}\r\n      <HStack spacing={2}>\r\n        {/* Maybe add an auto scroll button */}\r\n        <Tooltip\r\n          aria-label='Scroll left'\r\n          closeOnClick={false}\r\n          label={`Scroll left (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n          placement='top'\r\n          isDisabled={isLoading || scrollButtons.left}>\r\n          <IconButton\r\n            aria-label='Scroll left'\r\n            isDisabled={isLoading || scrollButtons.left}\r\n            icon={ArrowBackOutlinedIcon}\r\n            onMouseDown={() => {\r\n              if (!isOpen) {\r\n                onOpen();\r\n                setDirection('left');\r\n              }\r\n            }}\r\n            onClick={() => handleClose()}\r\n            variant='outlined'\r\n            size='xs'\r\n          />\r\n        </Tooltip>\r\n        <Tooltip\r\n          aria-label='Scroll right'\r\n          closeOnClick={false}\r\n          label={`Scroll right (${!isOpen ? 'Hold for Auto-Scroll' : 'Auto-Scroll ON'})`}\r\n          placement='top'\r\n          isDisabled={isLoading || scrollButtons.right}>\r\n          <IconButton\r\n            aria-label='Scroll right'\r\n            isDisabled={isLoading || scrollButtons.right}\r\n            icon={ArrowForwardOutlinedIcon}\r\n            onMouseDown={() => {\r\n              if (!isOpen) {\r\n                onOpen();\r\n                setDirection('right');\r\n              }\r\n            }}\r\n            onClick={() => handleClose()}\r\n            variant='outlined'\r\n            size='xs'\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype SortDirection = 'asc' | 'desc';\r\n\r\ntype DisplayMode = 'grid' | 'list';\r\n\r\ntype SidebarMode = 'expanded' | 'collapsed';\r\n\r\ntype StateProps = {\r\n  data: {\r\n    displayMode: DisplayMode;\r\n    sortDirection: SortDirection;\r\n    sidebarMode: SidebarMode;\r\n  };\r\n};\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    displayMode: 'grid',\r\n    sortDirection: 'asc',\r\n    sidebarMode: 'expanded'\r\n  }\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplayMode: (state: StateProps, action: PayloadAction<DisplayMode>) => {\r\n      state.data.displayMode = action.payload;\r\n    },\r\n    toggleSortDirection: (state: StateProps, action: PayloadAction<SortDirection>) => {\r\n      state.data.sortDirection = action.payload;\r\n    },\r\n    toggleSidebarMode: (state: StateProps, action: PayloadAction<SidebarMode>) => {\r\n      state.data.sidebarMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleDisplayMode, toggleSortDirection, toggleSidebarMode } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { Genre } from '../../common/types/types';\r\n\r\ninterface StateProps {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: Genre[];\r\n        tv: Genre[];\r\n      };\r\n    };\r\n    hasDownloaded: boolean;\r\n  };\r\n}\r\n\r\nconst initialState: StateProps = {\r\n  data: {\r\n    data: {\r\n      genres: {\r\n        movie: [],\r\n        tv: []\r\n      }\r\n    },\r\n    hasDownloaded: false\r\n  }\r\n};\r\n\r\nconst optionsSlice = createSlice({\r\n  name: 'options',\r\n  initialState,\r\n  reducers: {\r\n    setMovieGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.movie = action.payload;\r\n    },\r\n    setTVGenres: (state: StateProps, action: PayloadAction<Genre[]>) => {\r\n      state.data.data.genres.tv = action.payload;\r\n    },\r\n    toggleHasDownloaded: (state: StateProps, action: PayloadAction<boolean>) => {\r\n      state.data.hasDownloaded = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMovieGenres, setTVGenres, toggleHasDownloaded } = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport appReducer from './slices/app';\r\nimport optionsReducer from './slices/options';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  options: optionsReducer\r\n  // here we will be adding reducers\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","const typography = {\r\n  fonts: {\r\n    body: 'Work Sans, sans-serif',\r\n    heading: 'Work Sans, serif',\r\n    mono: 'Roboto Mono, monospace'\r\n  },\r\n\r\n  fontSizes: {\r\n    'xs': '0.75rem', // 12px\r\n    'sm': '0.875rem', // 14px\r\n    'md': '1rem', // 16px\r\n    'lg': '1.125rem', // 18px\r\n    'xl': '1.25rem', // 20px\r\n    '2xl': '1.5rem', // 24px\r\n    '3xl': '1.875rem', // 30px\r\n    '4xl': '2.25rem', // 36px\r\n    '5xl': '3rem', // 48px\r\n    '6xl': '3.75rem', // 60px\r\n    '7xl': '4.5rem', // 72px\r\n    '8xl': '6rem', // 96px\r\n    '9xl': '8rem' // 128px\r\n  }\r\n};\r\n\r\nexport default typography;\r\n","import borders from './borders';\r\nimport radius from './radius';\r\nimport sizes from './sizes';\r\nimport spacing from './spacing';\r\nimport transition from './transition';\r\nimport typography from './typography';\r\n\r\nexport default {\r\n  borders,\r\n  // colors,\r\n  radii: radius,\r\n  space: spacing,\r\n  sizes,\r\n  transition,\r\n  fonts: typography.fonts,\r\n  fontSizes: typography.fontSizes\r\n};\r\n","const borders = {\r\n  none: 0,\r\n  solid: 'solid',\r\n  dashed: 'dashed',\r\n  solid1: '1px solid',\r\n  solid2: '2px solid',\r\n  dashed1: '1px dashed',\r\n  dashed2: '2px dashed'\r\n};\r\n\r\nexport default borders;\r\n","const radii = {\r\n  none: '0',\r\n  sm: '5px',\r\n  base: '10px',\r\n  md: '12.5px',\r\n  lg: '15px',\r\n  xl: '20px',\r\n  full: '9999px'\r\n};\r\n\r\nexport default radii;\r\n","const spacing = {\r\n  0: 0,\r\n  0.25: '0.125rem',\r\n  0.5: '0.25rem',\r\n  0.75: '0.375rem',\r\n  1: '0.5rem',\r\n  1.25: '0.625rem',\r\n  1.5: '0.75rem',\r\n  1.75: '0.875rem',\r\n  2: '1rem',\r\n  2.25: '1.125rem',\r\n  2.5: '1.25rem',\r\n  2.75: '1.375rem',\r\n  3: '1.5rem',\r\n  3.25: '1.625rem',\r\n  3.5: '1.75rem',\r\n  3.75: '1.875rem',\r\n  4: '2rem',\r\n  4.25: '2.125rem',\r\n  4.5: '2.25rem',\r\n  4.75: '2.375rem',\r\n  5: '2.5rem',\r\n  5.25: '2.625rem',\r\n  5.5: '2.75rem',\r\n  5.75: '2.875rem',\r\n  6: '3rem',\r\n  6.25: '3.125rem',\r\n  6.5: '3.25rem',\r\n  6.75: '3.375rem',\r\n  7: '3.5rem',\r\n  7.25: '3.625rem',\r\n  7.5: '3.75rem',\r\n  7.75: '3.875rem',\r\n  8: '4rem',\r\n  8.25: '4.125rem',\r\n  8.5: '4.25rem',\r\n  8.75: '4.375rem',\r\n  9: '4.5rem',\r\n  9.25: '4.625rem',\r\n  9.5: '4.75rem',\r\n  9.75: '4.875rem',\r\n  10: '5rem',\r\n  10.25: '5.125rem',\r\n  10.5: '5.25rem',\r\n  10.75: '5.375rem',\r\n  11: '5.5rem',\r\n  11.25: '5.625rem',\r\n  11.5: '5.75rem',\r\n  11.75: '5.875rem',\r\n  12: '6rem',\r\n  12.25: '6.125rem',\r\n  12.5: '6.25rem',\r\n  12.75: '6.375rem',\r\n  13: '6.5rem',\r\n  13.25: '6.625rem',\r\n  13.5: '6.75rem',\r\n  13.75: '6.875rem',\r\n  14: '7rem',\r\n  14.25: '7.125rem',\r\n  14.5: '7.25rem',\r\n  14.75: '7.375rem',\r\n  15: '7.5rem',\r\n  15.25: '7.625rem',\r\n  15.5: '7.75rem',\r\n  15.75: '7.875rem'\r\n};\r\n\r\nexport default spacing;\r\n","const largeSizes = {\r\n  'max': 'max-content',\r\n  'min': 'min-content',\r\n  'full': '100%',\r\n  '3xs': '14rem',\r\n  '2xs': '16rem',\r\n  'xs': '20rem',\r\n  'sm': '24rem',\r\n  'md': '28rem',\r\n  'lg': '32rem',\r\n  'xl': '36rem',\r\n  '2xl': '42rem',\r\n  '3xl': '48rem',\r\n  '4xl': '56rem',\r\n  '5xl': '64rem',\r\n  '6xl': '72rem',\r\n  '7xl': '80rem',\r\n  '8xl': '90rem'\r\n};\r\n\r\nconst container = {\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n  xl: '1920px'\r\n};\r\n\r\nconst sizes = {\r\n  ...largeSizes,\r\n  container\r\n};\r\n\r\nexport default sizes;\r\n","const transitionProperty = {\r\n  common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',\r\n  colors: 'background-color, border-color, color, fill, stroke',\r\n  dimensions: 'width, height',\r\n  position: 'left, right, top, bottom',\r\n  background: 'background-color, background-image, background-position'\r\n};\r\n\r\nconst transitionTimingFunction = {\r\n  'ease-in': 'cubic-bezier(0.5, 0, 0.75, 0)',\r\n  'ease-out': 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  'ease-in-out': 'cubic-bezier(0.76, 0, 0.24, 1)'\r\n};\r\n\r\nconst transitionDuration = {\r\n  'ultra-fast': '50ms',\r\n  'faster': '100ms',\r\n  'fast': '200ms',\r\n  'normal': '250ms',\r\n  'slow': '500ms',\r\n  'slower': '750ms',\r\n  'ultra-slow': '1000ms'\r\n};\r\n\r\nconst transition = {\r\n  property: transitionProperty,\r\n  easing: transitionTimingFunction,\r\n  duration: transitionDuration\r\n};\r\n\r\nexport default transition;\r\n","import { mode, Styles } from '@chakra-ui/theme-tools';\r\n\r\nconst styles: Styles = {\r\n  global: (props) => ({\r\n    'body': {\r\n      fontFamily: 'body',\r\n      color: mode('gray.900', 'gray.50')(props),\r\n      bg: mode('white', 'black')(props),\r\n      transition: 'background-color 0.2s',\r\n      lineHeight: 'base'\r\n    },\r\n    '*::placeholder': {\r\n      color: mode('gray.400', 'gray.500')(props)\r\n    },\r\n    '*, *::before, &::after': {\r\n      borderColor: mode('gray.200', 'gray.700')(props),\r\n      wordWrap: 'break-word'\r\n    }\r\n  })\r\n};\r\n\r\nexport default styles;\r\n","// theme.js\r\nimport { extendTheme, Theme } from '@chakra-ui/react';\r\n\r\nimport foundations from './foundations';\r\nimport styles from './styles';\r\n\r\nconst config: Theme['config'] = {\r\n  cssVarPrefix: 'chakra',\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false\r\n};\r\n\r\nconst theme = {\r\n  styles,\r\n  config,\r\n  ...foundations\r\n};\r\n\r\nexport default extendTheme({ ...theme });\r\n","type Month = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport const months: Month[] = [\r\n  {\r\n    value: '01',\r\n    label: 'January'\r\n  },\r\n  {\r\n    value: '02',\r\n    label: 'February'\r\n  },\r\n  {\r\n    value: '03',\r\n    label: 'March'\r\n  },\r\n  {\r\n    value: '04',\r\n    label: 'April'\r\n  },\r\n  {\r\n    value: '05',\r\n    label: 'May'\r\n  },\r\n  {\r\n    value: '06',\r\n    label: 'June'\r\n  },\r\n  {\r\n    value: '07',\r\n    label: 'July'\r\n  },\r\n  {\r\n    value: '08',\r\n    label: 'August'\r\n  },\r\n  {\r\n    value: '09',\r\n    label: 'September'\r\n  },\r\n  {\r\n    value: '10',\r\n    label: 'October'\r\n  },\r\n  {\r\n    value: '11',\r\n    label: 'November'\r\n  },\r\n  {\r\n    value: '12',\r\n    label: 'December'\r\n  }\r\n];\r\n","import _ from 'lodash';\r\nimport queryString from 'query-string';\r\n\r\nimport store from '../../store';\r\nimport theme from '../../theme';\r\nimport { months } from '../data/date';\r\nimport { Genre, MediaType } from '../types/types';\r\n\r\nexport default {\r\n  handleReturnNumberFromString: (number: string, string: string): number => {\r\n    return parseInt(_.replace(number, string));\r\n  },\r\n\r\n  /**\r\n   * This method will return the genres names from the genre ids\r\n   *\r\n   * @param genres - Genres ids\r\n   * @returns - string of genres seperated by a \",\"\r\n   */\r\n  handleReturnGenresByID: (genres: number[], type: 'movie' | 'tv'): string => {\r\n    const getGenres: Genre[] = store\r\n      .getState()\r\n      .options.data.data.genres[type].filter((genre: Genre) => genres.includes(genre.id));\r\n    return getGenres.map((genre) => genre.name).join(', ');\r\n  },\r\n\r\n  /**\r\n   * This method will return the section of the date depending on the \"type\"\r\n   *\r\n   * @param date - Full Date\r\n   * @param type - Which section of date to return\r\n   * @returns - The section of the dat\r\n   */\r\n  handleReturnDate: (date: string, type: 'year' | 'month' | 'day' | 'full'): string => {\r\n    if (type === 'full') {\r\n      const split = date.split('-');\r\n      const month = months.find((month) => month.value === split[1]);\r\n\r\n      return `${split[2]} ${month?.label} ${split[0]}`;\r\n    } else {\r\n      return date.split('-')[type === 'year' ? 0 : type === 'month' ? 1 : 2];\r\n    }\r\n  },\r\n\r\n  handleReturnDOB: (date: string): string => {\r\n    console.log(date);\r\n\r\n    return 'abc';\r\n  },\r\n\r\n  handleReturnFallbackSrc: (mediaType: MediaType, size: string, name: string): string => {\r\n    const colors: string = [\r\n      theme.colors.red[400],\r\n      theme.colors.orange[400],\r\n      theme.colors.yellow[400],\r\n      theme.colors.green[400],\r\n      theme.colors.teal[400],\r\n      theme.colors.blue[400],\r\n      theme.colors.cyan[400],\r\n      theme.colors.purple[400],\r\n      theme.colors.pink[400]\r\n    ].join(',');\r\n\r\n    return queryString.stringifyUrl({\r\n      url: `${process.env.REACT_APP_FALLBACK_IMAGE_URL}/${mediaType === 'person' ? 'beam' : 'marble'}/${size}/${name}`,\r\n      query: {\r\n        colors,\r\n        square: true\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param type - Type of image\r\n   * @param breakpoint - Size of user's device\r\n   * @returns - The appropriate size for image poster\r\n   */\r\n  // Set type of breakpoint from theme\r\n  handleReturnImageSize: (\r\n    type: 'poster' | 'backdrop',\r\n    // orientation: 'vertical' | 'horizontal',\r\n    breakpoint: 'xs' | 'sm'\r\n  ): string => {\r\n    switch (type) {\r\n      case 'poster': {\r\n        switch (breakpoint) {\r\n          default:\r\n            return '185';\r\n        }\r\n      }\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This method will check if the element passed has a bigger width than its parent\r\n   *\r\n   * @param element - Ref element\r\n   * @returns - Boolean value of if element is overflowing\r\n   */\r\n  handleIsOverflowing: (element: HTMLElement): boolean => {\r\n    const overflow = element.style.overflow;\r\n\r\n    if (!overflow || overflow === 'visible') element.style.overflow = 'hidden';\r\n\r\n    const isOverflowing = element.clientWidth < element.scrollWidth || element.clientHeight < element.scrollHeight;\r\n\r\n    element.style.overflow = overflow;\r\n\r\n    return isOverflowing;\r\n  },\r\n\r\n  /**\r\n   * This method will return an array of numbers from 25 to the range passed\r\n   *\r\n   * @param range - Total range of numbers to use\r\n   * @param amount - Amount of numbers to return\r\n   * @returns - Array of numbers from the 25 to range\r\n   */\r\n  handleReturnDummyWidths: (range: number, amount: number): number[] => {\r\n    return _.range(25, range, amount);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/empty.e5d171a9.svg\";","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport empty from '../../common/assets/illustrations/empty.svg';\r\nimport { EmptyProps } from './types';\r\n\r\nconst Empty = (props: EmptyProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { hasIllustration = true, label, variant = 'transparant' } = props;\r\n\r\n  return (\r\n    <Fade in>\r\n      <VStack\r\n        width='100%'\r\n        background='transparent'\r\n        borderRadius='lg'\r\n        border='solid2'\r\n        borderColor={variant === 'outlined' ? (colorMode === 'light' ? 'gray.200' : 'gray.700') : 'transparent'}\r\n        spacing={2}\r\n        px={2}\r\n        py={6}>\r\n        {hasIllustration ? <Image maxWidth='50%' alt='Empty illustration' src={empty} /> : null}\r\n        <Text align='center' fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","export default __webpack_public_path__ + \"static/media/error.62d2e604.svg\";","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Image, Text, Fade } from '@chakra-ui/react';\r\n\r\nimport error from '../../common/assets/illustrations/error.svg';\r\nimport { ErrorProps } from './types';\r\n\r\nconst Error = (props: ErrorProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { hasIllustration = true, label, variant = 'transparant' } = props;\r\n\r\n  return (\r\n    <Fade in>\r\n      <VStack\r\n        width='100%'\r\n        background='transparent'\r\n        borderRadius='lg'\r\n        border='solid2'\r\n        borderColor={variant === 'outlined' ? (colorMode === 'light' ? 'gray.200' : 'gray.700') : 'transparent'}\r\n        spacing={2}\r\n        px={2}\r\n        py={6}>\r\n        {hasIllustration ? <Image maxWidth='40%' alt='Error illustration' src={error} /> : null}\r\n        <Text align='center' fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n          {label}\r\n        </Text>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, Button as CUIButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { ButtonProps } from './types';\r\n\r\nconst Button = (props: ButtonProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const {\r\n    children,\r\n    leftIcon,\r\n    rightIcon,\r\n    // isFullWidth = false,\r\n    isDisabled = false,\r\n    isLoading = false,\r\n    size = 'md',\r\n    ...rest\r\n  } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return `${theme.space[0.5]} ${theme.space[1]}`;\r\n      case 'sm':\r\n        return `${theme.space[0.75]} ${theme.space[1.5]}`;\r\n      case 'lg':\r\n        return `${theme.space[1.5]} ${theme.space[3]}`;\r\n      default:\r\n        return `${theme.space[1]} ${theme.space[2]}`;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate margin for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnMargin = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.space[0.5];\r\n      case 'sm':\r\n        return theme.space[0.75];\r\n      case 'lg':\r\n        return theme.space[1.5];\r\n      default:\r\n        return theme.space[1];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate font-size for the size passed\r\n   *\r\n   * @returns - Icon size in rem from theme\r\n   */\r\n  const handleReturnIconSize = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return `${theme.fontSizes.md} !important`;\r\n      case 'sm':\r\n        return `${theme.fontSizes.lg} !important`;\r\n      case 'lg':\r\n        return `${theme.fontSizes['2xl']} !important`;\r\n      default:\r\n        return `${theme.fontSizes.xl} !important`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIButton\r\n      {...rest}\r\n      isDisabled={isLoading || isDisabled}\r\n      padding={handleReturnPadding()}\r\n      sx={{ ..._.merge(style.common.button, style[colorMode].button) }}\r\n      _disabled={{ ..._.merge(style.common.disabled, style[colorMode].disabled) }}\r\n      variant='unstyled'>\r\n      <Center\r\n        sx={{\r\n          border: 'none',\r\n          backgroundColor: 'transparent'\r\n        }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'lg' ? '6px' : size === 'md' ? '4px' : '2px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n          />\r\n        ) : (\r\n          <>\r\n            {leftIcon ? (\r\n              <Icon\r\n                as={leftIcon}\r\n                sx={{\r\n                  fontSize: handleReturnIconSize(),\r\n                  marginRight: children ? handleReturnMargin() : 0\r\n                }}\r\n              />\r\n            ) : null}\r\n            {children}\r\n            {rightIcon ? (\r\n              <Icon\r\n                as={rightIcon}\r\n                sx={{\r\n                  fontSize: handleReturnIconSize(),\r\n                  marginLeft: children ? handleReturnMargin() : 0\r\n                }}\r\n              />\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Center>\r\n    </CUIButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { ButtonProps } from './types';\r\n\r\ntype ButtonStyle = {\r\n  common: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  light: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  dark: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isFullWidth = false, isLoading = false }: ButtonProps\r\n): ButtonStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': isFullWidth ? '100%' : 'auto',\r\n      'minWidth': isFullWidth ? '100%' : 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'fontWeight': 'semibold',\r\n      'fontSize': size === 'xs' ? 'xs' : size === 'sm' || size === 'md' ? 'sm' : 'md',\r\n      'textTransform': 'uppercase',\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': size === 'xs' ? '1px' : '2px',\r\n      'borderRadius': size === 'lg' || size === 'md' ? 'md' : size === 'xs' ? 'sm' : 'base',\r\n\r\n      'transform': 'translateY(0)',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n\r\n        transform: `translateY(${\r\n          variant === 'contained'\r\n            ? size === 'xs'\r\n              ? '3px'\r\n              : size === 'sm'\r\n              ? '4px'\r\n              : '6px'\r\n            : variant === 'outlined'\r\n            ? size === 'xs'\r\n              ? '3px'\r\n              : '4px'\r\n            : '0'\r\n        })`\r\n      }\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      'transform': 'translateY(0) !important',\r\n\r\n      '&:hover': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0) !important'\r\n      },\r\n\r\n      '&:active': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0) !important'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent',\r\n\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][600]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent',\r\n\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][200]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Box } from '@chakra-ui/react';\r\n\r\nimport { GridProps } from './types';\r\n\r\nconst Grid = (props: GridProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, gridRef = undefined, handleScrollChange } = props;\r\n\r\n  return (\r\n    <Box\r\n      ref={gridRef}\r\n      overflowX='auto'\r\n      px={2}\r\n      sx={{\r\n        // CSS to hide scrollbar\r\n        'scrollbarWidth': 'none',\r\n        '&::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n      onScroll={(event) => handleScrollChange(event)}>\r\n      <Box\r\n        width='max-content'\r\n        display='inline-block'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        borderRadius='xl'\r\n        p={2}>\r\n        <HStack spacing={2}>{children}</HStack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { ReactElement, forwardRef, ForwardedRef } from 'react';\r\n\r\nimport { useTheme, useColorMode, Center, Spinner, Icon, IconButton as CUIIconButton } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { IconButtonProps } from './types';\r\n\r\nconst IconButton = forwardRef(function IconButton(\r\n  props: IconButtonProps,\r\n  ref: ForwardedRef<HTMLButtonElement>\r\n): ReactElement {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme, props);\r\n\r\n  const { icon, isDisabled = false, isLoading = false, size = 'md', ...rest } = props;\r\n\r\n  /**\r\n   * This method will return the appropriate padding for the size passed\r\n   *\r\n   * @returns - Padding in rem from theme\r\n   */\r\n  const handleReturnPadding = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.space[0.75];\r\n      case 'sm':\r\n        return theme.space[1];\r\n      default:\r\n        return theme.space[1.5];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method will return the appropriate width, height & font-size for the size passed\r\n   *\r\n   * @returns - Icon size in rem from theme\r\n   */\r\n  const handleReturnIconSize = (): string => {\r\n    switch (size) {\r\n      case 'xs':\r\n        return theme.fontSizes['2xl'];\r\n      case 'sm':\r\n        return theme.fontSizes['2xl'];\r\n      case 'lg':\r\n        return theme.fontSizes['4xl'];\r\n      default:\r\n        return theme.fontSizes['3xl'];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CUIIconButton\r\n      {...rest}\r\n      ref={ref}\r\n      isDisabled={isLoading || isDisabled}\r\n      padding={handleReturnPadding()}\r\n      sx={{ ..._.merge(style.common.button, style[colorMode].button) }}\r\n      _disabled={{ ..._.merge(style.common.disabled, style[colorMode].disabled) }}\r\n      variant='unstyled'>\r\n      <Center\r\n        sx={{\r\n          width: `${handleReturnIconSize()} !important`,\r\n          height: `${handleReturnIconSize()} !important`,\r\n\r\n          border: 'none',\r\n          backgroundColor: 'transparent'\r\n        }}>\r\n        {isLoading ? (\r\n          <Spinner\r\n            thickness={size === 'lg' ? '6px' : size === 'md' ? '4px' : '2px'}\r\n            size={size}\r\n            speed={theme.transition.duration.slow}\r\n          />\r\n        ) : (\r\n          <Icon\r\n            as={icon}\r\n            size={size}\r\n            sx={{\r\n              fontSize: `${handleReturnIconSize()} !important`\r\n            }}\r\n          />\r\n        )}\r\n      </Center>\r\n    </CUIIconButton>\r\n  );\r\n});\r\n\r\nexport default IconButton;\r\n","import { Style } from '../../../common/types/types';\r\nimport { Theme } from '../../../theme/types';\r\nimport { IconButtonProps } from './types';\r\n\r\ntype IconButtonStyle = {\r\n  common: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  light: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n  dark: {\r\n    button: Style;\r\n    disabled: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  { color = 'gray', size = 'md', variant = 'contained', isLoading = false }: IconButtonProps\r\n): IconButtonStyle => ({\r\n  common: {\r\n    button: {\r\n      'width': 'auto',\r\n      'minWidth': 'auto',\r\n      'height': 'auto',\r\n\r\n      'opacity': 1,\r\n\r\n      'borderStyle': 'solid',\r\n      'borderWidth': size === 'xs' ? '1px' : '2px',\r\n      'borderRadius': size === 'lg' || size === 'md' ? 'md' : size === 'xs' ? 'sm' : 'base',\r\n\r\n      'transform': 'translateY(0)',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n\r\n        transform: `translateY(${\r\n          variant === 'contained'\r\n            ? size === 'xs'\r\n              ? '3px'\r\n              : size === 'sm'\r\n              ? '4px'\r\n              : '6px'\r\n            : variant === 'outlined'\r\n            ? size === 'xs'\r\n              ? '3px'\r\n              : '4px'\r\n            : '0'\r\n        })`\r\n      }\r\n    },\r\n    disabled: {\r\n      'cursor': 'not-allowed',\r\n      'opacity': isLoading ? 1 : 0.5,\r\n\r\n      'transform': 'translateY(0) !important',\r\n\r\n      '&:hover': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0) !important'\r\n      },\r\n\r\n      '&:active': {\r\n        cursor: 'not-allowed',\r\n        opacity: isLoading ? 1 : 0.5,\r\n\r\n        transform: 'translateY(0) !important'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent',\r\n\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][600]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.600`,\r\n        borderColor: variant === 'contained' ? `${color}.500` : variant === 'outlined' ? `${color}.600` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.500` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.50' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][600]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    button: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:focus': {\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent',\r\n\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][200]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.200`,\r\n        borderColor: variant === 'contained' ? `${color}.300` : variant === 'outlined' ? `${color}.200` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${color}.300` : 'transparent'\r\n      }\r\n    },\r\n    disabled: {\r\n      'color': variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n      'borderColor': variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n      'backgroundColor': variant === 'contained' ? `${color}.400` : 'transparent',\r\n      'boxShadow':\r\n        variant === 'contained'\r\n          ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n          : variant === 'outlined'\r\n          ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n          : 'none',\r\n\r\n      '&:hover': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      },\r\n\r\n      '&:active': {\r\n        color: variant === 'contained' ? 'gray.900' : `${color}.400`,\r\n        borderColor: variant === 'contained' || variant === 'outlined' ? `${color}.400` : 'transparent',\r\n        backgroundColor: variant === 'contained' ? `${theme.colors[color][400]} !important` : 'transparent',\r\n        boxShadow:\r\n          variant === 'contained'\r\n            ? `0 ${size === 'xs' ? '3px' : size === 'sm' ? '4px' : '6px'} ${theme.colors[color][200]}`\r\n            : variant === 'outlined'\r\n            ? `0 ${size === 'xs' ? '3px' : '4px'} ${theme.colors[color][400]}`\r\n            : 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, Theme, useColorMode, Tooltip as CUITooltip } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport { TooltipProps } from './types';\r\n\r\nconst Tooltip = (props: TooltipProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { children, width, closeDelay, openDelay, gutter = 8, ...rest } = props;\r\n\r\n  return (\r\n    <CUITooltip\r\n      {...rest}\r\n      arrowSize={8}\r\n      color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n      backgroundColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      arrowShadowColor={colorMode === 'light' ? 'gray.700' : 'gray.200'}\r\n      closeDelay={closeDelay ? closeDelay : utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms')}\r\n      openDelay={openDelay ? openDelay : utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms')}\r\n      hasArrow\r\n      gutter={gutter}>\r\n      <span style={{ width: width || 'auto' }}>{children}</span>\r\n    </CUITooltip>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { ReactElement, useState, useCallback, UIEvent } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Button from '../../Inputs/Button';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport { HorizontalGridProps, ScrollButtonsState } from './types';\r\n\r\nconst defaultScrollButtonsState = {\r\n  left: true,\r\n  right: false\r\n};\r\n\r\nconst HorizontalGrid = (props: HorizontalGridProps): ReactElement => {\r\n  const history = useHistory();\r\n\r\n  const { children, title, isLoading, path } = props;\r\n\r\n  const [gridRef, setGridRef] = useState<HTMLDivElement | null>(null);\r\n\r\n  const [scrollButtons, setScrollButtons] = useState<ScrollButtonsState>(defaultScrollButtonsState);\r\n  const [resetScrollButtons, setResetScrollButtons] = useState<boolean>(false);\r\n\r\n  const handleGridRef = useCallback((ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      const maxScroll = ref.scrollLeft + ref.offsetWidth;\r\n\r\n      const isLeftDisabled = ref.scrollLeft === 0;\r\n      const isRightDisabled =\r\n        ref.scrollLeft > ref.offsetWidth ? maxScroll >= ref.scrollWidth : maxScroll > ref.scrollWidth;\r\n\r\n      setScrollButtons({\r\n        left: isLeftDisabled,\r\n        right: isRightDisabled\r\n      });\r\n      setGridRef(ref);\r\n      setResetScrollButtons(isLeftDisabled || isRightDisabled ? true : false);\r\n    }\r\n  }, []);\r\n\r\n  const handleScrollChange = (event: UIEvent<HTMLDivElement, UIEvent>) => {\r\n    handleGridRef(event.currentTarget);\r\n  };\r\n\r\n  /**\r\n   * This method will either scroll left or right depending on the direction passed as a param\r\n   *\r\n   * @param direction - The direction to scroll to\r\n   */\r\n  const handleScrollClick = useCallback(\r\n    (direction: 'left' | 'right') => {\r\n      if (gridRef) {\r\n        if (direction === 'left') {\r\n          gridRef.scrollLeft = gridRef.scrollLeft - 10;\r\n        } else {\r\n          gridRef.scrollLeft = gridRef.scrollLeft + 10;\r\n        }\r\n      }\r\n    },\r\n    [gridRef]\r\n  );\r\n\r\n  return (\r\n    <VStack width='100%' align='stretch' backgroundColor='white' spacing={0}>\r\n      {/* Header */}\r\n      <Header\r\n        title={title}\r\n        isLoading={isLoading}\r\n        reset={resetScrollButtons}\r\n        scrollButtons={scrollButtons}\r\n        handleScrollClick={handleScrollClick}\r\n      />\r\n\r\n      {/* Grid */}\r\n      <Grid gridRef={handleGridRef} handleScrollChange={handleScrollChange}>\r\n        {children}\r\n      </Grid>\r\n\r\n      {/* Footer */}\r\n      {path ? (\r\n        <Button\r\n          color='blue'\r\n          isFullWidth\r\n          isDisabled={isLoading}\r\n          onClick={() => history.push(path)}\r\n          variant='text'>{`View all ${title}`}</Button>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\r\nimport BookmarkOutlinedIcon from '@material-ui/icons/BookmarkOutlined';\r\n\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { BookmarkProps } from './types';\r\n\r\nconst Bookmark = ({\r\n  isBookmarked = false,\r\n  isDisabled = false,\r\n  title = 'N/A',\r\n  mediaType,\r\n  size = 'xs'\r\n}: BookmarkProps): ReactElement => {\r\n  const titleText: string = title ? (title.length < 25 ? title : '') : '';\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={\r\n        isBookmarked\r\n          ? `Remove ${titleText} ${mediaType} from {BOOKMARK NAME} tooltip`\r\n          : `Add ${titleText} ${mediaType} to a bookmark tooltip`\r\n      }\r\n      label={\r\n        isBookmarked\r\n          ? `Remove ${titleText} ${mediaType} from {BOOKMARK NAME}?`\r\n          : `Add ${titleText} ${mediaType} to a list?`\r\n      }\r\n      placement='top'\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={\r\n          isBookmarked\r\n            ? `Remove ${titleText} ${mediaType} from {BOOKMARK NAME}`\r\n            : `Add ${titleText} ${mediaType} to a list`\r\n        }\r\n        color={isBookmarked ? 'blue' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isBookmarked ? BookmarkOutlinedIcon : BookmarkBorderOutlinedIcon}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import utils from '../../../../common/utils/utils';\r\nimport theme from '../../../../theme';\r\n\r\nexport default {\r\n  fadeDuration: utils.handleReturnNumberFromString(theme.transition.duration['normal'], 'ms') / 1000,\r\n  speed: utils.handleReturnNumberFromString(theme.transition.duration['slower'], 'ms') / 1000\r\n};\r\n","import { Color } from '../../../../theme/types';\r\n\r\nexport default {\r\n  handleReturnColors: (type: 'start' | 'end', color: Color): string => {\r\n    switch (color) {\r\n      default:\r\n        return type === 'start' ? 'gray.200' : 'gray.400';\r\n    }\r\n  }\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Skeleton as CUISkeleton } from '@chakra-ui/react';\r\n\r\nimport commonProps from './common/props';\r\nimport utils from './common/utils/utils';\r\nimport { SkeletonProps } from './types';\r\n\r\nconst Skeleton = (props: SkeletonProps): ReactElement => {\r\n  const { children, color = 'gray', ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeleton\r\n      {...rest}\r\n      {...commonProps}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { AspectRatio, Image as CUIImage } from '@chakra-ui/react';\r\n\r\nimport utils from '../../common/utils/utils';\r\nimport Skeleton from '../Skeleton';\r\nimport { ImageProps } from './types';\r\n\r\nconst Image = (props: ImageProps): ReactElement => {\r\n  const { width = '', orientation, mediaType, alt, src, size, isLoaded, ...rest } = props;\r\n\r\n  return (\r\n    <AspectRatio width={width || '100%'} ratio={orientation === 'horizontal' ? 16 / 9 : 2 / 3}>\r\n      <Skeleton isLoaded={isLoaded} borderRadius='base'>\r\n        <CUIImage\r\n          {...rest}\r\n          maxWidth='inherit'\r\n          height='100%'\r\n          alt={alt}\r\n          borderRadius='base'\r\n          src={`${process.env.REACT_APP_IMAGE_URL}/w${size}${src}`}\r\n          fallbackSrc={utils.handleReturnFallbackSrc(mediaType, size, alt)}\r\n        />\r\n      </Skeleton>\r\n    </AspectRatio>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\n\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Tooltip from '../Tooltip';\r\nimport { LikeProps } from './types';\r\n\r\nconst Like = ({\r\n  isLiked = false,\r\n  isDisabled = false,\r\n  title = 'N/A',\r\n  mediaType,\r\n  size = 'xs'\r\n}: LikeProps): ReactElement => {\r\n  const titleText: string = title ? (title.length < 25 ? title : '') : '';\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label={isLiked ? `Dislike ${titleText} ${mediaType} tooltip` : `Like ${titleText} ${mediaType} tooltip`}\r\n      label={isLiked ? `Dislike ${titleText} ${mediaType}?` : `Like ${titleText} ${mediaType}?`}\r\n      placement='top'\r\n      isDisabled={isDisabled}\r\n      gutter={0}>\r\n      <IconButton\r\n        aria-label={isLiked ? `Dislike ${titleText} ${mediaType}` : `Like ${titleText} ${mediaType}`}\r\n        color={isLiked ? 'red' : 'gray'}\r\n        isDisabled={isDisabled}\r\n        icon={isLiked ? FavoriteOutlinedIcon : FavoriteBorderOutlinedIcon}\r\n        size={size}\r\n        variant='icon'\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { SkeletonText as CUISkeletonText } from '@chakra-ui/react';\r\n\r\nimport commonProps from '../common/props';\r\nimport utils from '../common/utils/utils';\r\nimport { SkeletonTextProps } from './types';\r\n\r\nconst SkeletonText = (props: SkeletonTextProps): ReactElement => {\r\n  const { children, color = 'gray', noOfLines = 1, ...rest } = props;\r\n\r\n  return (\r\n    <CUISkeletonText\r\n      {...rest}\r\n      {...commonProps}\r\n      noOfLines={noOfLines}\r\n      startColor={utils.handleReturnColors('start', color)}\r\n      endColor={utils.handleReturnColors('end', color)}>\r\n      {children}\r\n    </CUISkeletonText>\r\n  );\r\n};\r\n\r\nexport default SkeletonText;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useTheme,\r\n  Theme,\r\n  Center,\r\n  Icon,\r\n  Text,\r\n  VStack,\r\n  CircularProgress,\r\n  CircularProgressLabel\r\n} from '@chakra-ui/react';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\nimport { Rating as RatingType } from '../../common/types/types';\r\nimport SkeletonText from '../Skeleton/Text';\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface RatingProps {\r\n  rating?: RatingType;\r\n  isLoaded: boolean;\r\n}\r\n\r\nconst defaultRating = {\r\n  rating: null,\r\n  count: null\r\n};\r\n\r\nconst Rating = ({ rating = defaultRating, isLoaded = false }: RatingProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const handleRatingColor = (): 'red' | 'yellow' | 'blue' => {\r\n    if (rating.rating) {\r\n      if (rating.rating < 4) {\r\n        return 'red';\r\n      } else if (rating.rating < 7) {\r\n        return 'yellow';\r\n      } else {\r\n        return 'blue';\r\n      }\r\n    } else return 'yellow';\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      aria-label='Showing rating information'\r\n      label={\r\n        <Center>\r\n          <VStack spacing={1}>\r\n            <CircularProgress\r\n              color={`${handleRatingColor()}.400`}\r\n              value={rating.rating ? rating.rating * 10 : 0}\r\n              size='54px'>\r\n              <CircularProgressLabel color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>{`${\r\n                rating.rating ? rating.rating * 10 : 'N/A'\r\n              }%`}</CircularProgressLabel>\r\n            </CircularProgress>\r\n            {rating.count ? (\r\n              <Text color={colorMode === 'light' ? 'gray.400' : 'gray.500'} fontSize='md'>\r\n                {rating.count}\r\n              </Text>\r\n            ) : null}\r\n          </VStack>\r\n        </Center>\r\n      }\r\n      placement='top'\r\n      isDisabled={!rating.rating || !isLoaded}>\r\n      <Center\r\n        background='transparent'\r\n        borderRadius='sm'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        py='0.5'\r\n        px='1'>\r\n        <Icon as={StarOutlinedIcon} color='yellow.400' sx={{ fontSize: `${theme.fontSizes.xl} !important` }} />\r\n        <SkeletonText isLoaded={isLoaded} ml='0.5'>\r\n          <Text color={colorMode === 'light' ? 'gray.900' : 'gray.50'} fontSize='sm' sx={{ lineHeight: 'normal' }}>\r\n            {rating.rating || 'N/A'}\r\n          </Text>\r\n        </SkeletonText>\r\n      </Center>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mt={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='xs'\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize='sm'\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack } from '@chakra-ui/react';\r\n\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { VerticalPosterProps } from './types';\r\n\r\nconst VerticalPoster = (props: VerticalPosterProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { width, mediaType, image, rating, title, subtitle, isLoaded } = props;\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      background='transparent'\r\n      borderRadius='lg'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      spacing={1}\r\n      p='1'>\r\n      {/* Image */}\r\n      <Image\r\n        orientation='vertical'\r\n        mediaType={mediaType}\r\n        alt={image.alt}\r\n        src={image.src}\r\n        size={image.size}\r\n        isLoaded={isLoaded}\r\n      />\r\n      <VStack width='100%' spacing={1}>\r\n        {/* Header */}\r\n        <HStack width='100%' justify='space-between' spacing={1}>\r\n          {/* Rating component */}\r\n          {mediaType !== 'person' ? <Rating rating={rating} isLoaded={isLoaded} /> : null}\r\n\r\n          <HStack spacing={0}>\r\n            {/* Like component */}\r\n            <Like isLiked={false} isDisabled={!isLoaded} title={title} mediaType={mediaType} size='xs' />\r\n            {/* List component */}\r\n            {mediaType !== 'person' ? (\r\n              <Bookmark isBookmarked={false} isDisabled={!isLoaded} title={title} mediaType={mediaType} size='xs' />\r\n            ) : null}\r\n          </HStack>\r\n        </HStack>\r\n        {/* Text */}\r\n        <VStack width='100%' alignItems='flex-start' spacing={0}>\r\n          <Title title={title} isLoaded={isLoaded} />\r\n          <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n        </VStack>\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalPoster;\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport Empty from '../../components/Empty';\r\nimport Error from '../../components/Error';\r\nimport HorizontalGrid from '../../components/Grid/Horizontal';\r\nimport VerticalPoster from '../../components/Poster/Vertical';\r\n\r\nconst Home = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useQuery('popularMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending movies\r\n  const trendingMovies = useQuery('trendingMovies', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/trending/movie/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching popular TV\r\n  const popularTV = useQuery('popularTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/tv/popular', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending TV\r\n  const trendingTV = useQuery('trendingTV', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialTV[]>>('/trending/tv/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  // Fetching trending People\r\n  const trendingPeople = useQuery('trendingPeople', async () => {\r\n    const { data } = await axiosInstance.get<Response<PartialPerson[]>>('/trending/person/day', {\r\n      cancelToken: source.token\r\n    });\r\n    return data.results;\r\n  });\r\n\r\n  const size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      {/* Popular Movies */}\r\n      <HorizontalGrid\r\n        title='Popular movies'\r\n        isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n        path={{ pathname: '/movies/popular' }}>\r\n        <>\r\n          {popularMovies.isLoading || popularMovies.isFetching || !hasOptionsDownloaded ? (\r\n            [...Array(10)].map((_dummy, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='movie'\r\n                image={{\r\n                  alt: 'Movie poster',\r\n                  src: '',\r\n                  size\r\n                }}\r\n                title='Lorem ipsum'\r\n                subtitle='Lorem ipsum'\r\n                isLoaded={false}\r\n              />\r\n            ))\r\n          ) : popularMovies.isError ? (\r\n            <Error label='Failed to fetch popular movies list!' variant='outlined' />\r\n          ) : popularMovies.isSuccess ? (\r\n            popularMovies.data.map((movie: PartialMovie, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='movie'\r\n                image={{\r\n                  alt: `${movie.title} movie poster`,\r\n                  src: movie.poster_path || '',\r\n                  size\r\n                }}\r\n                rating={{\r\n                  rating: movie.vote_average,\r\n                  count: movie.vote_count\r\n                }}\r\n                title={movie.title}\r\n                subtitle={`${utils.handleReturnDate(movie.release_date, 'year')} • ${utils.handleReturnGenresByID(\r\n                  movie.genre_ids,\r\n                  'movie'\r\n                )}`}\r\n                isLoaded={true}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty label='Popular movies list is empty!' variant='outlined' />\r\n          )}\r\n        </>\r\n      </HorizontalGrid>\r\n\r\n      {/* Trending Movies */}\r\n      <HorizontalGrid\r\n        title='Trending movies'\r\n        isLoading={trendingMovies.isLoading || trendingMovies.isFetching}\r\n        path={{ pathname: '/trending', search: queryString.stringify({ mediaType: 'movie' }) }}>\r\n        <>\r\n          {trendingMovies.isLoading || trendingMovies.isFetching || !hasOptionsDownloaded ? (\r\n            [...Array(10)].map((_dummy, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='movie'\r\n                image={{\r\n                  alt: 'Movie poster',\r\n                  src: '',\r\n                  size\r\n                }}\r\n                title='Lorem ipsum'\r\n                subtitle='Lorem ipsum'\r\n                isLoaded={false}\r\n              />\r\n            ))\r\n          ) : trendingMovies.isError ? (\r\n            <Error label='Failed to fetch trending movies list!' variant='outlined' />\r\n          ) : trendingMovies.isSuccess ? (\r\n            trendingMovies.data.map((movie: PartialMovie, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='movie'\r\n                image={{\r\n                  alt: `${movie.title} movie poster`,\r\n                  src: movie.poster_path || '',\r\n                  size\r\n                }}\r\n                rating={{\r\n                  rating: movie.vote_average,\r\n                  count: movie.vote_count\r\n                }}\r\n                title={movie.title}\r\n                subtitle={`${utils.handleReturnDate(movie.release_date, 'year')} • ${utils.handleReturnGenresByID(\r\n                  movie.genre_ids,\r\n                  'movie'\r\n                )}`}\r\n                isLoaded={true}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty label='Trending movies list is empty!' variant='outlined' />\r\n          )}\r\n        </>\r\n      </HorizontalGrid>\r\n\r\n      {/* Popular TV */}\r\n      <HorizontalGrid\r\n        title='Popular TV'\r\n        isLoading={popularTV.isLoading || popularTV.isFetching}\r\n        path={{ pathname: '/tv/popular' }}>\r\n        <>\r\n          {popularTV.isLoading || popularTV.isFetching || !hasOptionsDownloaded ? (\r\n            [...Array(10)].map((_dummy, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='tv'\r\n                image={{\r\n                  alt: 'TV poster',\r\n                  src: '',\r\n                  size\r\n                }}\r\n                title='Lorem ipsum'\r\n                subtitle='Lorem ipsum'\r\n                isLoaded={false}\r\n              />\r\n            ))\r\n          ) : popularTV.isError ? (\r\n            <Error label='Failed to fetch popular TV list!' variant='outlined' />\r\n          ) : popularTV.isSuccess ? (\r\n            popularTV.data.map((tv: PartialTV, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='tv'\r\n                image={{\r\n                  alt: `${tv.name} TV poster`,\r\n                  src: tv.poster_path || '',\r\n                  size\r\n                }}\r\n                rating={{\r\n                  rating: tv.vote_average,\r\n                  count: tv.vote_count\r\n                }}\r\n                title={tv.name}\r\n                subtitle={`${utils.handleReturnDate(tv.first_air_date, 'year')} • ${utils.handleReturnGenresByID(\r\n                  tv.genre_ids,\r\n                  'movie'\r\n                )}`}\r\n                isLoaded={true}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty label='Popular TV list is empty!' variant='outlined' />\r\n          )}\r\n        </>\r\n      </HorizontalGrid>\r\n\r\n      {/* Trending TV */}\r\n      <HorizontalGrid\r\n        title='Trending TV'\r\n        isLoading={trendingTV.isLoading || trendingTV.isFetching}\r\n        path={{ pathname: '/trending', search: queryString.stringify({ mediaType: 'tv' }) }}>\r\n        <>\r\n          {trendingTV.isLoading || trendingTV.isFetching || !hasOptionsDownloaded ? (\r\n            [...Array(10)].map((_dummy, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='tv'\r\n                image={{\r\n                  alt: 'TV poster',\r\n                  src: '',\r\n                  size\r\n                }}\r\n                title='Lorem ipsum'\r\n                subtitle='Lorem ipsum'\r\n                isLoaded={false}\r\n              />\r\n            ))\r\n          ) : trendingTV.isError ? (\r\n            <Error label='Failed to fetch trending TV list!' variant='outlined' />\r\n          ) : trendingTV.isSuccess ? (\r\n            trendingTV.data.map((tv: PartialTV, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='tv'\r\n                image={{\r\n                  alt: `${tv.name} TV poster`,\r\n                  src: tv.poster_path || '',\r\n                  size\r\n                }}\r\n                rating={{\r\n                  rating: tv.vote_average,\r\n                  count: tv.vote_count\r\n                }}\r\n                title={tv.name}\r\n                subtitle={`${utils.handleReturnDate(tv.first_air_date, 'year')} • ${utils.handleReturnGenresByID(\r\n                  tv.genre_ids,\r\n                  'movie'\r\n                )}`}\r\n                isLoaded={true}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty label='Trending TV list is empty!' variant='outlined' />\r\n          )}\r\n        </>\r\n      </HorizontalGrid>\r\n\r\n      {/* Trending People */}\r\n      <HorizontalGrid\r\n        title='Trending People'\r\n        isLoading={trendingPeople.isLoading || trendingPeople.isFetching}\r\n        path={{ pathname: '/trending', search: queryString.stringify({ mediaType: 'person' }) }}>\r\n        <>\r\n          {trendingPeople.isLoading || trendingPeople.isFetching || !hasOptionsDownloaded ? (\r\n            [...Array(10)].map((_dummy, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='person'\r\n                image={{\r\n                  alt: 'Person poster',\r\n                  src: '',\r\n                  size\r\n                }}\r\n                title='Lorem ipsum'\r\n                subtitle='Lorem ipsum'\r\n                isLoaded={false}\r\n              />\r\n            ))\r\n          ) : trendingPeople.isError ? (\r\n            <Error label='Failed to fetch trending People list!' variant='outlined' />\r\n          ) : trendingPeople.isSuccess ? (\r\n            trendingPeople.data.map((person: PartialPerson, index) => (\r\n              <VerticalPoster\r\n                key={index}\r\n                width={['185px']}\r\n                mediaType='person'\r\n                image={{\r\n                  alt: `${person.name} person poster`,\r\n                  src: person.profile_path || '',\r\n                  size\r\n                }}\r\n                title={person.name}\r\n                subtitle={person.known_for_department}\r\n                isLoaded={true}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty label='Trending People list is empty!' variant='outlined' />\r\n          )}\r\n        </>\r\n      </HorizontalGrid>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { SortBy } from '../types/types';\r\n\r\nexport const onSortChange = (paramSort: SortBy, sortBy: SortBy[]): SortBy[] => {\r\n  const current: number = sortBy.findIndex((sort) => sort.isActive);\r\n  const next: number = sortBy.findIndex((sort) => sort.value === paramSort.value);\r\n\r\n  return sortBy.map((sort, index) => {\r\n    switch (index) {\r\n      case current:\r\n        return {\r\n          ...sort,\r\n          isActive: false\r\n        };\r\n      case next:\r\n        return {\r\n          ...sort,\r\n          isActive: true\r\n        };\r\n      default:\r\n        return sort;\r\n    }\r\n  });\r\n};\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport { OptionProps } from './types';\r\n\r\nconst Option = ({ children, label, isActive = false }: OptionProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <VStack alignItems='center' justifyContent='center' spacing={1}>\r\n      {children}\r\n      <Text\r\n        width='100%'\r\n        align='center'\r\n        color={isActive ? 'blue.400' : colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n        fontSize='sm'\r\n        fontWeight='medium'\r\n        mt={1}>\r\n        {label}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, HStack, Text } from '@chakra-ui/react';\r\nimport {\r\n  GridOnOutlined as GridOnOutlinedIcon,\r\n  GridOnTwoTone as GridOnTwoToneIcon,\r\n  ListAltOutlined as ListAltOutlinedIcon,\r\n  ListAltTwoTone as ListAltTwoToneIcon\r\n} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { toggleDisplayMode } from '../../../../store/slices/app';\r\nimport IconButton from '../../../Inputs/IconButton';\r\nimport Option from './components/Option';\r\n\r\nconst Display = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' justifyContent='center' spacing={1}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='md'\r\n        fontWeight='semibold'>\r\n        Display Options\r\n      </Text>\r\n\r\n      <HStack spacing={3}>\r\n        {/* Grid | List Buttons */}\r\n        <HStack spacing={1}>\r\n          <Option label='Grid' isActive={displayMode === 'grid'}>\r\n            <IconButton\r\n              aria-label={displayMode === 'grid' ? 'Display mode: GRID' : 'Set display mode to Grid'}\r\n              color={displayMode === 'grid' ? 'blue' : 'gray'}\r\n              icon={displayMode === 'grid' ? GridOnTwoToneIcon : GridOnOutlinedIcon}\r\n              onClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\r\n              size='sm'\r\n              variant='outlined'\r\n            />\r\n          </Option>\r\n          <Option label='List' isActive={displayMode === 'list'}>\r\n            <IconButton\r\n              aria-label={displayMode === 'list' ? 'Display mode: LIST' : 'Set display mode to List'}\r\n              color={displayMode === 'list' ? 'blue' : 'gray'}\r\n              icon={displayMode === 'list' ? ListAltTwoToneIcon : ListAltOutlinedIcon}\r\n              onClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\r\n              size='sm'\r\n              variant='outlined'\r\n            />\r\n          </Option>\r\n        </HStack>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Text, HStack, ScaleFade, Icon, Button } from '@chakra-ui/react';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport { toggleSortDirection } from '../../../../store/slices/app';\r\nimport { Theme } from '../../../../theme/types';\r\nimport { SortByProps } from './types';\r\n\r\nconst SortBy = ({ sortBy = [], onSortChange }: SortByProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const dispatch = useDispatch();\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  return (\r\n    <VStack width='100%' alignItems='flex-start' justifyContent='center' spacing={1}>\r\n      <Text\r\n        width='100%'\r\n        align='left'\r\n        color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n        fontSize='md'\r\n        fontWeight='semibold'>\r\n        Sort by\r\n      </Text>\r\n\r\n      <VStack width='100%' alignItems='stretch' justifyContent='flex-start' spacing={0.5}>\r\n        {sortBy.map((sort) => (\r\n          <Button\r\n            key={sort.value}\r\n            isFullWidth\r\n            onClick={() =>\r\n              sort.isActive\r\n                ? dispatch(toggleSortDirection(sortDirection === 'asc' ? 'desc' : 'asc'))\r\n                : onSortChange(sort)\r\n            }\r\n            px={1.25}\r\n            py={0.75}\r\n            sx={{\r\n              'minWidth': '225px',\r\n\r\n              'border': 'solid2',\r\n              'borderRadius': 'base',\r\n              'borderColor': sort.isActive ? 'blue.400' : 'transparent',\r\n              'backgroundColor': sort.isActive ? 'blue.400' : 'transparent',\r\n\r\n              'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n              '&:hover': {\r\n                'borderColor': sort.isActive ? 'blue.500' : 'transparent',\r\n                'backgroundColor': sort.isActive ? 'blue.500' : 'transparent',\r\n\r\n                '.chakra-text': {\r\n                  color: sort.isActive ? (colorMode === 'light' ? 'gray.50' : 'gray.900') : 'blue.400'\r\n                }\r\n              },\r\n\r\n              '&:focus': {\r\n                borderColor: 'transparent',\r\n                boxShadow: 'none'\r\n              }\r\n            }}>\r\n            <HStack width='100%' justifyContent='space-between' spacing={2}>\r\n              <Text\r\n                align='left'\r\n                color={\r\n                  sort.isActive\r\n                    ? colorMode === 'light'\r\n                      ? 'gray.50'\r\n                      : 'gray.900'\r\n                    : colorMode === 'light'\r\n                    ? 'gray.900'\r\n                    : 'gray.50'\r\n                }\r\n                fontSize='sm'\r\n                fontWeight='medium'\r\n                sx={{ transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}` }}>\r\n                {sort.label}\r\n              </Text>\r\n\r\n              <ScaleFade in={sort.isActive} unmountOnExit>\r\n                <Icon\r\n                  as={ArrowDownwardOutlinedIcon}\r\n                  color={colorMode === 'light' ? 'gray.50' : 'gray.900'}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes.lg} !important`,\r\n                    transform: sortDirection === 'asc' ? 'rotate(180deg)' : 'rotate(0deg)',\r\n                    transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']} !important`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            </HStack>\r\n          </Button>\r\n        ))}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Popover, PopoverTrigger, Portal, PopoverContent, VStack } from '@chakra-ui/react';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\n\r\nimport IconButton from '../Inputs/IconButton';\r\nimport Display from './components/Display';\r\nimport SortBy from './components/SortBy';\r\nimport { DisplayOptionsProps } from './types';\r\n\r\nconst DisplayOptions = ({ sortBy = [], onSortChange }: DisplayOptionsProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={16} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <IconButton\r\n          aria-label={isOpen ? '' : ''}\r\n          color={isOpen ? 'blue' : 'gray'}\r\n          icon={VisibilityOutlinedIcon}\r\n          onClick={!isOpen ? () => onOpen() : undefined}\r\n          size='sm'\r\n          variant='outlined'\r\n        />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          boxShadow='xl'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <VStack spacing={2}>\r\n            <Display />\r\n            {sortBy.length > 0 && onSortChange ? <SortBy sortBy={sortBy} onSortChange={onSortChange} /> : null}\r\n          </VStack>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default DisplayOptions;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, Text } from '@chakra-ui/react';\r\n\r\ntype HeaderProps = {\r\n  title: string;\r\n  header: ReactElement;\r\n};\r\n\r\nconst Header = ({ title, header }: HeaderProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <HStack width='100%' justify={title ? 'space-between' : 'flex-end'} p={[2]}>\r\n        {title ? (\r\n          <Text\r\n            align='left'\r\n            color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            textTransform='capitalize'>\r\n            {title}\r\n          </Text>\r\n        ) : null}\r\n\r\n        {header}\r\n      </HStack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack, Box } from '@chakra-ui/react';\r\n\r\nimport Header from './components/Header';\r\n\r\ntype VerticalGridProps = {\r\n  children: ReactElement;\r\n  title: string;\r\n  header: ReactElement;\r\n};\r\n\r\nconst VerticalGrid = (props: VerticalGridProps): ReactElement => {\r\n  const { children, title, header } = props;\r\n\r\n  return (\r\n    <VStack width='100%' spacing={0}>\r\n      {/* Header */}\r\n      <Header title={title} header={header} />\r\n\r\n      {/* Grid */}\r\n      <Box width='100%' px={2} my={0}>\r\n        {children}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalGrid;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, VStack, Text, Progress } from '@chakra-ui/react';\r\n\r\nimport Button from '../Inputs/Button';\r\nimport { LoadMoreProps } from './types';\r\n\r\nconst LoadMore = (props: LoadMoreProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { amount, total, mediaType, isLoading, onFetch } = props;\r\n\r\n  return (\r\n    <VStack spacing={3}>\r\n      <VStack max='50%' spacing={1}>\r\n        <Text align='center' fontSize='sm' color={colorMode === 'light' ? 'gray.400' : 'gray.500'}>\r\n          {`You've viewed ${amount} of ${total} ${mediaType}`}\r\n        </Text>\r\n        <Progress\r\n          width='100%'\r\n          color='blue.400'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='full'\r\n          size='sm'\r\n          value={(1000 * amount) / total}\r\n        />\r\n      </VStack>\r\n\r\n      <Button isLoading={isLoading} onClick={() => onFetch()} variant='outlined'>\r\n        Load more\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { DescriptionProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Description = (props: DescriptionProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { description, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}\r\n      mb={!isLoaded ? 0.5 : 0}>\r\n      <Tooltip\r\n        aria-label='Showing full description text'\r\n        label={description}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {description}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { SubtitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Subtitle = (props: SubtitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { subtitle, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full sub-title text'\r\n        label={subtitle}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['sm', 'md', 'lg', 'xl']}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {subtitle}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\n\r\nimport { useTheme, useColorMode, Text } from '@chakra-ui/react';\r\n\r\nimport utils from '../../../../../common/utils/utils';\r\nimport { Theme } from '../../../../../theme/types';\r\nimport SkeletonText from '../../../../Skeleton/Text';\r\nimport Tooltip from '../../../../Tooltip';\r\nimport { TitleProps } from './types';\r\n\r\nconst dummyTextWidths = utils.handleReturnDummyWidths(100, 10);\r\n\r\nconst Title = (props: TitleProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { title, isLoaded = false } = props;\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n  const [isTruncated, setIsTruncated] = useState<boolean>(false);\r\n\r\n  const handleIsTruncated = useCallback(\r\n    (ref: HTMLParagraphElement | null) => {\r\n      if (ref) {\r\n        setIsTruncated(utils.handleIsOverflowing(ref));\r\n      }\r\n    },\r\n    [isTruncated, setIsTruncated]\r\n  );\r\n\r\n  return (\r\n    <SkeletonText\r\n      width={!isLoaded ? `${dummyTextWidths[Math.floor(Math.random() * dummyTextWidths.length)]}%` : '100%'}\r\n      isLoaded={isLoaded}>\r\n      <Tooltip\r\n        aria-label='Showing full title text'\r\n        label={title}\r\n        placement='top'\r\n        isOpen={isTruncated ? isHovering : false}>\r\n        <Text\r\n          ref={handleIsTruncated}\r\n          cursor={isTruncated && !isHovering ? 'pointer' : 'text'}\r\n          align='left'\r\n          fontSize={['md', 'lg', 'xl', '2xl']}\r\n          fontWeight='semibold'\r\n          color={colorMode === 'light' ? 'gray.900' : 'gray.50'}\r\n          isTruncated\r\n          overflow='hidden'\r\n          whiteSpace='nowrap'\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(true);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.fast, 'ms'))\r\n          }\r\n          onMouseLeave={() =>\r\n            setTimeout(() => {\r\n              setIsHovering(false);\r\n            }, utils.handleReturnNumberFromString(theme.transition.duration.normal, 'ms'))\r\n          }>\r\n          {title}\r\n        </Text>\r\n      </Tooltip>\r\n    </SkeletonText>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, HStack, VStack, Box } from '@chakra-ui/react';\r\n\r\nimport Bookmark from '../../Bookmark';\r\nimport Image from '../../Image';\r\nimport Like from '../../Like';\r\nimport Rating from '../../Rating';\r\nimport Description from './components/Description';\r\nimport Subtitle from './components/Subtitle';\r\nimport Title from './components/Title';\r\nimport { HorizontalPosterProps } from './types';\r\n\r\nconst HorizontalPoster = (props: HorizontalPosterProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { mediaType, image, rating, title, subtitle, description, isLoaded } = props;\r\n\r\n  return (\r\n    <HStack\r\n      background='transparent'\r\n      borderRadius='lg'\r\n      border='solid2'\r\n      borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      spacing={[1, 2]}\r\n      p={[1, 2]}\r\n      sx={{ position: 'relative' }}>\r\n      {/* Image */}\r\n      <Image\r\n        width={['96px', '120px', '144px', '168px']}\r\n        orientation='vertical'\r\n        mediaType={mediaType}\r\n        alt={image.alt}\r\n        src={image.src}\r\n        size={image.size}\r\n        isLoaded={isLoaded}\r\n      />\r\n      <VStack\r\n        width={['calc(100% - 96px)', 'calc(100% - 120px)', 'calc(100% - 144px)', 'calc(100% - 168px)']}\r\n        alignItems='flex-start'\r\n        spacing={isLoaded ? 1 : 2}>\r\n        {/* Rating component */}\r\n        {mediaType !== 'person' ? <Rating rating={rating} isLoaded={isLoaded} /> : null}\r\n\r\n        {/* Text */}\r\n        <VStack width='100%' alignItems='flex-start' spacing={isLoaded ? 0 : 1}>\r\n          <Title title={title} isLoaded={isLoaded} />\r\n          <Subtitle subtitle={subtitle} isLoaded={isLoaded} />\r\n        </VStack>\r\n\r\n        <Box width='100%'>\r\n          <Description description={description} isLoaded={isLoaded} />\r\n        </Box>\r\n      </VStack>\r\n\r\n      {/* Like / List Icon buttons */}\r\n      <HStack\r\n        spacing={0}\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 1,\r\n          right: 1\r\n        }}>\r\n        {/* Like component */}\r\n        <Like isLiked={false} isDisabled={!isLoaded} title={title} mediaType={mediaType} />\r\n        {/* List component */}\r\n        {mediaType !== 'person' ? (\r\n          <Bookmark isBookmarked={false} isDisabled={!isLoaded} title={title} mediaType={mediaType} />\r\n        ) : null}\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalPoster;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useMediaQuery, SimpleGrid, VStack } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useInfiniteQuery } from 'react-query';\r\n\r\nimport useSelector from '../../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../../common/scripts/axios';\r\nimport { onSortChange } from '../../../common/scripts/sortBy';\r\nimport { PartialMovie } from '../../../common/types/movie';\r\nimport { Response, SortBy } from '../../../common/types/types';\r\nimport utils from '../../../common/utils/utils';\r\nimport DisplayOptions from '../../../components/DisplayOptions';\r\nimport Empty from '../../../components/Empty';\r\nimport Error from '../../../components/Error';\r\nimport VerticalGrid from '../../../components/Grid/Vertical';\r\nimport LoadMore from '../../../components/LoadMore';\r\nimport HorizontalPoster from '../../../components/Poster/Horizontal';\r\nimport VerticalPoster from '../../../components/Poster/Vertical';\r\n\r\nconst defaultSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nconst PopularMovies = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n  const [isSmallMob, isMob] = useMediaQuery(['(max-width: 350px)', '(max-width: 600px)']);\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const [sortBy, setSortBy] = useState<SortBy[]>(defaultSortBy);\r\n\r\n  const [movies, setMovies] = useState<PartialMovie[]>([]);\r\n\r\n  const size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\n  // Fetching popular movies\r\n  const popularMovies = useInfiniteQuery(\r\n    ['popularMovies', sortBy],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<PartialMovie[]>>('/movie/popular', {\r\n        params: { page: pageParam, sort_by: `${sortBy.find((sort) => sort.isActive)?.value}.${sortDirection}` },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false)\r\n    }\r\n  );\r\n\r\n  const handleSortChange = (paramSort: SortBy): void => {\r\n    setSortBy(onSortChange(paramSort, sortBy));\r\n  };\r\n\r\n  useEffect(() => {\r\n    popularMovies.refetch();\r\n  }, [sortDirection]);\r\n\r\n  useEffect(() => {\r\n    if (popularMovies.isSuccess && popularMovies.data && popularMovies.data.pages) {\r\n      let movies: PartialMovie[] = [];\r\n\r\n      popularMovies.data.pages.forEach((page) => {\r\n        movies = [...movies, ...page.results];\r\n      });\r\n\r\n      setMovies([...movies]);\r\n    }\r\n  }, [popularMovies.dataUpdatedAt]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <VerticalGrid\r\n      title={isMob ? 'Popular Movies' : ''}\r\n      header={<DisplayOptions sortBy={sortBy} onSortChange={handleSortChange} />}>\r\n      <VStack width='100%' spacing={4}>\r\n        {popularMovies.isLoading || popularMovies.isFetching || !hasOptionsDownloaded ? (\r\n          <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n            {[...Array(movies.length || 20)].map((_dummy, index) =>\r\n              displayMode === 'list' ? (\r\n                <HorizontalPoster\r\n                  key={index}\r\n                  mediaType='movie'\r\n                  image={{\r\n                    alt: 'movie poster',\r\n                    src: '',\r\n                    size\r\n                  }}\r\n                  rating={{\r\n                    rating: null,\r\n                    count: null\r\n                  }}\r\n                  title='Lorem ipsum'\r\n                  subtitle='Lorem ipsum'\r\n                  description='Lorem ipsum'\r\n                  isLoaded={false}\r\n                />\r\n              ) : (\r\n                <VerticalPoster\r\n                  key={index}\r\n                  width='100%'\r\n                  mediaType='movie'\r\n                  image={{\r\n                    alt: 'movie poster',\r\n                    src: '',\r\n                    size\r\n                  }}\r\n                  rating={{\r\n                    rating: null,\r\n                    count: null\r\n                  }}\r\n                  title='Lorem ipsum'\r\n                  subtitle='Lorem ipsum'\r\n                  isLoaded={false}\r\n                />\r\n              )\r\n            )}\r\n          </SimpleGrid>\r\n        ) : popularMovies.isError ? (\r\n          <Error label='Failed to fetch popular movies list!' variant='outlined' />\r\n        ) : popularMovies.isSuccess ? (\r\n          <SimpleGrid width='100%' columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]} spacing={2}>\r\n            {movies.map((movie: PartialMovie, index) =>\r\n              displayMode === 'list' ? (\r\n                <HorizontalPoster\r\n                  key={index}\r\n                  mediaType='movie'\r\n                  image={{\r\n                    alt: `${movie?.title || ''} movie poster`,\r\n                    src: movie?.poster_path || '',\r\n                    size\r\n                  }}\r\n                  rating={{\r\n                    rating: movie?.vote_average || null,\r\n                    count: movie?.vote_count || null\r\n                  }}\r\n                  title={movie?.title || ''}\r\n                  subtitle={`${utils.handleReturnDate(\r\n                    movie?.release_date || '',\r\n                    'full'\r\n                  )} • ${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n                  description={movie?.overview || ''}\r\n                  isLoaded={true}\r\n                />\r\n              ) : (\r\n                <VerticalPoster\r\n                  key={index}\r\n                  width='100%'\r\n                  mediaType='movie'\r\n                  image={{\r\n                    alt: `${movie?.title || ''} movie poster`,\r\n                    src: movie?.poster_path || '',\r\n                    size\r\n                  }}\r\n                  rating={{\r\n                    rating: movie?.vote_average || null,\r\n                    count: movie?.vote_count || null\r\n                  }}\r\n                  title={movie?.title || ''}\r\n                  subtitle={`${utils.handleReturnDate(\r\n                    movie?.release_date || '',\r\n                    'year'\r\n                  )} • ${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n                  isLoaded={true}\r\n                />\r\n              )\r\n            )}\r\n          </SimpleGrid>\r\n        ) : (\r\n          <Empty label='Popular movies list is empty!' variant='outlined' />\r\n        )}\r\n\r\n        {popularMovies.data && popularMovies.data.pages ? (\r\n          <LoadMore\r\n            amount={popularMovies.data.pages[popularMovies.data.pages.length - 1].page * 20}\r\n            total={popularMovies.data.pages[popularMovies.data.pages.length - 1].total_results}\r\n            mediaType='popular movies'\r\n            isLoading={popularMovies.isLoading || popularMovies.isFetching}\r\n            onFetch={popularMovies.fetchNextPage}\r\n          />\r\n        ) : null}\r\n      </VStack>\r\n    </VerticalGrid>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, Fade, VStack, Text } from '@chakra-ui/react';\r\n\r\nimport Button from '../../../../components/Inputs/Button';\r\n\r\nconst Label = ({ handleOpenModal }: { handleOpenModal: () => void }): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Fade in>\r\n      <VStack\r\n        width='100%'\r\n        background='transparent'\r\n        borderRadius='lg'\r\n        border='solid2'\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n        spacing={2}\r\n        px={2}\r\n        py={12}>\r\n        <Text align='center' fontSize='md' fontWeight='semibold' color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n          Select media type to view data!\r\n        </Text>\r\n        <Button color='blue' onClick={() => handleOpenModal()}>\r\n          Select media type\r\n        </Button>\r\n      </VStack>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack, Icon, Text } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\n\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { TypeProps } from './types';\r\n\r\nconst Type = (props: TypeProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const { label, value, iconActive, icon, isActive = false, onClick } = props;\r\n\r\n  const style = useStyles(theme, isActive);\r\n\r\n  return (\r\n    <VStack\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}\r\n      spacing={0}\r\n      onClick={!isActive ? () => onClick(value) : undefined}>\r\n      <Icon as={isActive ? iconActive : icon} sx={{ ..._.merge(style.common.icon, style[colorMode].icon) }} />\r\n      <Text sx={{ ..._.merge(style.common.text, style[colorMode].text) }}>{label}</Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Type;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype TypeStyle = {\r\n  common: { container: Style; icon: Style; text: Style };\r\n  light: { container: Style; icon: Style; text: Style };\r\n  dark: { container: Style; icon: Style; text: Style };\r\n};\r\n\r\nexport default (theme: Theme, isActive = false): TypeStyle => ({\r\n  common: {\r\n    container: {\r\n      'cursor': 'pointer',\r\n\r\n      'width': '100%',\r\n\r\n      'border': 'solid2',\r\n      'borderRadius': 'lg',\r\n\r\n      'transform': 'translateY(0)',\r\n\r\n      'padding': 4,\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:focus': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:hover': {\r\n        transform: 'translateY(0)'\r\n      },\r\n\r\n      '&:active': {\r\n        boxShadow: '0 0 transparent',\r\n\r\n        transform: !isActive ? 'translateY(4px)' : 'none'\r\n      },\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    icon: {\r\n      '&.MuiSvgIcon-root': {\r\n        fontSize: theme.fontSizes['6xl']\r\n      }\r\n    },\r\n    text: {\r\n      align: 'center',\r\n      fontSize: 'xl',\r\n      fontWeight: 'semibold',\r\n      textTransform: 'uppercase'\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.400',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 4px ${theme.colors.gray[400]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 4px ${theme.colors.gray[400]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.600',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        'boxShadow': isActive ? 'none' : `0 4px ${theme.colors.gray[600]}`,\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.600',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.600'\r\n        }\r\n      }\r\n    },\r\n    icon: {\r\n      color: isActive ? 'blue.400' : 'gray.400'\r\n    },\r\n    text: {\r\n      color: isActive ? 'blue.400' : 'gray.400'\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      'borderColor': isActive ? 'blue.400' : 'gray.500',\r\n      'backgroundColor': isActive ? 'blue.50' : 'transparent',\r\n      'boxShadow': isActive ? 'none' : `0 4px ${theme.colors.gray[500]}`,\r\n\r\n      '&:focus': {\r\n        boxShadow: isActive ? 'none' : `0 4px ${theme.colors.gray[500]}`\r\n      },\r\n\r\n      '&:hover': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.300',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        'boxShadow': isActive ? 'none' : `0 4px ${theme.colors.gray[300]}`,\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        }\r\n      },\r\n\r\n      '&:active': {\r\n        'borderColor': isActive ? 'blue.600' : 'gray.300',\r\n        'backgroundColor': isActive ? 'blue.200' : 'transparent',\r\n\r\n        '& .chakra-icon': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isActive ? 'blue.600' : 'gray.500'\r\n        }\r\n      }\r\n    },\r\n    icon: {\r\n      color: isActive ? 'blue.400' : 'gray.500'\r\n    },\r\n    text: {\r\n      color: isActive ? 'blue.400' : 'gray.500'\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useColorMode,\r\n  useMediaQuery,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  HStack,\r\n  Text,\r\n  VStack\r\n} from '@chakra-ui/react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { MediaType as MediaType } from '../../../../common/types/types';\r\nimport IconButton from '../../../../components/Inputs/IconButton';\r\nimport Type from './components/Type';\r\nimport { TypePickerProps, TypeItem } from './types';\r\n\r\nconst types: TypeItem[] = [\r\n  {\r\n    label: 'Movies',\r\n    value: 'movie',\r\n    iconActive: TheatersOutlinedIcon,\r\n    icon: TheatersOutlinedIcon\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    value: 'tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon\r\n  },\r\n  {\r\n    label: 'People',\r\n    value: 'person',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n];\r\n\r\nconst TypePicker = ({ mediaType, isOpen, onClose }: TypePickerProps): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const [isXs] = useMediaQuery('(max-width: 40em)');\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = (mediaType: MediaType) => {\r\n    history.push({ pathname: history.location.pathname, search: queryString.stringify({ mediaType }) });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered motionPreset='scale' size='2xl'>\r\n      <ModalOverlay />\r\n      <ModalContent mx={isXs ? 3 : 0}>\r\n        <ModalHeader\r\n          px={3}\r\n          py={1}\r\n          borderBottom='solid2'\r\n          borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}>\r\n          <HStack justifyContent='space-between'>\r\n            <Text\r\n              align='left'\r\n              fontSize='xl'\r\n              fontWeight='semibold'\r\n              color={colorMode === 'light' ? 'gray.900' : 'gray.50'}>\r\n              Select media type\r\n            </Text>\r\n\r\n            <IconButton\r\n              aria-label='Close type picker modal?'\r\n              icon={CloseOutlinedIcon}\r\n              onClick={() => onClose()}\r\n              size='sm'\r\n              variant='icon'\r\n            />\r\n          </HStack>\r\n        </ModalHeader>\r\n        <ModalBody p={3}>\r\n          {isXs ? (\r\n            <VStack justifyContent='space-between' spacing={2}>\r\n              {types.map((typeItem) => (\r\n                <Type\r\n                  key={typeItem.value}\r\n                  {...typeItem}\r\n                  isActive={typeItem.value === mediaType}\r\n                  onClick={handleClick}\r\n                />\r\n              ))}\r\n            </VStack>\r\n          ) : (\r\n            <HStack justifyContent='space-between' spacing={2}>\r\n              {types.map((typeItem) => (\r\n                <Type\r\n                  key={typeItem.value}\r\n                  {...typeItem}\r\n                  isActive={typeItem.value === mediaType}\r\n                  onClick={handleClick}\r\n                />\r\n              ))}\r\n            </HStack>\r\n          )}\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TypePicker;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\nimport { useDisclosure, useMediaQuery, SimpleGrid, VStack, HStack, Fade, useTheme } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { onSortChange } from '../../common/scripts/sortBy';\r\nimport { PartialMovie } from '../../common/types/movie';\r\nimport { PartialPerson } from '../../common/types/person';\r\nimport { PartialTV } from '../../common/types/tv';\r\nimport { Response, SortBy, MediaType } from '../../common/types/types';\r\nimport utils from '../../common/utils/utils';\r\nimport DisplayOptions from '../../components/DisplayOptions';\r\nimport Empty from '../../components/Empty';\r\nimport Error from '../../components/Error';\r\nimport VerticalGrid from '../../components/Grid/Vertical';\r\nimport Button from '../../components/Inputs/Button';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport HorizontalPoster from '../../components/Poster/Horizontal';\r\nimport VerticalPoster from '../../components/Poster/Vertical';\r\nimport { Theme } from '../../theme/types';\r\nimport Label from './components/Label';\r\nimport TypePicker from './components/TypePicker';\r\n\r\nconst MovieTVSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Rating',\r\n    value: 'vote_average',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Release Date',\r\n    value: 'release_date',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Title',\r\n    value: 'title',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nconst PeopleSortBy: SortBy[] = [\r\n  {\r\n    label: 'Popularity',\r\n    value: 'popularity',\r\n    isActive: true\r\n  },\r\n  {\r\n    label: 'Gender',\r\n    value: 'gender',\r\n    isActive: false\r\n  },\r\n  {\r\n    label: 'Name',\r\n    value: 'name',\r\n    isActive: false\r\n  }\r\n];\r\n\r\nconst Trending = (): ReactElement => {\r\n  const source = axios.CancelToken.source();\r\n\r\n  const theme = useTheme<Theme>();\r\n  const { isOpen: isTypePickerOpen, onOpen: onTypePickerOpen, onClose: onTypePickerClose } = useDisclosure();\r\n  const [isSmallMob] = useMediaQuery('(max-width: 350px)');\r\n  const [isMob] = useMediaQuery('(max-width: 600px)');\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n\r\n  const hasOptionsDownloaded = useSelector((state) => state.options.data.hasDownloaded);\r\n  const displayMode = useSelector((state) => state.app.data.displayMode);\r\n  const sortDirection = useSelector((state) => state.app.data.sortDirection);\r\n\r\n  const location = useLocation();\r\n\r\n  const [mediaType, setMediaType] = useState<MediaType | null>(null);\r\n  const [sortBy, setSortBy] = useState<SortBy[]>([]);\r\n\r\n  const [movies, setMovies] = useState<PartialMovie[]>([]);\r\n  const [tv, setTV] = useState<PartialTV[]>([]);\r\n  const [people, setPeople] = useState<PartialPerson[]>([]);\r\n\r\n  const size = utils.handleReturnImageSize('poster', 'sm');\r\n\r\n  // Fetching trending\r\n  const trending = useInfiniteQuery(\r\n    ['trending', sortBy, mediaType],\r\n    async ({ pageParam = 1 }) => {\r\n      const { data } = await axiosInstance.get<Response<any[]>>(`/trending/${mediaType}/day`, {\r\n        params: { page: pageParam, sort_by: `${sortBy.find((sort) => sort.isActive)?.value}.${sortDirection}` },\r\n        cancelToken: source.token\r\n      });\r\n      return data;\r\n    },\r\n    {\r\n      getPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? firstPage.page - 1 : false),\r\n      getNextPageParam: (lastPage) => (lastPage.page !== lastPage.total_pages ? lastPage.page + 1 : false)\r\n    }\r\n  );\r\n\r\n  const handleSortChange = (paramSort: SortBy): void => {\r\n    setSortBy(onSortChange(paramSort, sortBy));\r\n  };\r\n\r\n  useEffect(() => {\r\n    trending.refetch();\r\n  }, [sortDirection]);\r\n\r\n  useEffect(() => {\r\n    if (trending.isSuccess && trending.data && trending.data.pages) {\r\n      switch (mediaType) {\r\n        case 'person': {\r\n          let people: PartialPerson[] = [];\r\n\r\n          trending.data.pages.forEach((page) => {\r\n            people = [...people, ...page.results];\r\n          });\r\n\r\n          setPeople([...people]);\r\n          return;\r\n        }\r\n        case 'tv': {\r\n          let tv: PartialTV[] = [];\r\n\r\n          trending.data.pages.forEach((page) => {\r\n            tv = [...tv, ...page.results];\r\n          });\r\n\r\n          setTV([...tv]);\r\n          return;\r\n        }\r\n        default: {\r\n          let movies: PartialMovie[] = [];\r\n\r\n          trending.data.pages.forEach((page) => {\r\n            movies = [...movies, ...page.results];\r\n          });\r\n\r\n          setMovies([...movies]);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }, [trending.dataUpdatedAt]);\r\n\r\n  useEffect(() => {\r\n    // setType(null);\r\n\r\n    if (location.search.length > 0) {\r\n      const param = queryString.parse(location.search);\r\n\r\n      if (param && param.mediaType) {\r\n        switch (param.mediaType) {\r\n          case 'person':\r\n            setMediaType('person');\r\n            setSortBy(PeopleSortBy);\r\n            break;\r\n          case 'tv':\r\n            setMediaType('tv');\r\n            setSortBy(MovieTVSortBy);\r\n            break;\r\n          default:\r\n            setMediaType('movie');\r\n            setSortBy(MovieTVSortBy);\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      if (isLgUp) {\r\n        onTypePickerOpen();\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VerticalGrid\r\n        title={\r\n          isMob\r\n            ? `Trending ${mediaType === 'movie' ? 'movies' : mediaType === 'person' ? 'people' : 'tv' || ''}`\r\n            : mediaType\r\n            ? `Media-type: ${mediaType === 'movie' ? 'movies' : mediaType === 'person' ? 'people' : 'TV'}`\r\n            : ''\r\n        }\r\n        header={\r\n          <Fade in={!!mediaType} unmountOnExit>\r\n            <HStack spacing={2}>\r\n              <Button onClick={() => onTypePickerOpen()} variant='outlined'>\r\n                Change media-type\r\n              </Button>\r\n              <DisplayOptions sortBy={sortBy} onSortChange={handleSortChange} />\r\n            </HStack>\r\n          </Fade>\r\n        }>\r\n        {mediaType ? (\r\n          <VStack width='100%' spacing={4}>\r\n            {trending.isLoading || trending.isFetching || !hasOptionsDownloaded ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}>\r\n                {[\r\n                  ...Array(mediaType === 'movie' ? movies.length : mediaType === 'tv' ? tv.length : people.length || 20)\r\n                ].map((_dummy, index: number) =>\r\n                  displayMode === 'list' ? (\r\n                    <HorizontalPoster\r\n                      key={index}\r\n                      mediaType={mediaType}\r\n                      image={{\r\n                        alt: `${mediaType} poster`,\r\n                        src: '',\r\n                        size\r\n                      }}\r\n                      rating={{\r\n                        rating: null,\r\n                        count: null\r\n                      }}\r\n                      title='Lorem ipsum'\r\n                      subtitle='Lorem ipsum'\r\n                      description='Lorem ipsum'\r\n                      isLoaded={false}\r\n                    />\r\n                  ) : (\r\n                    <VerticalPoster\r\n                      key={index}\r\n                      width='100%'\r\n                      mediaType={mediaType}\r\n                      image={{\r\n                        alt: `${mediaType} poster`,\r\n                        src: '',\r\n                        size\r\n                      }}\r\n                      rating={{\r\n                        rating: null,\r\n                        count: null\r\n                      }}\r\n                      title='Lorem ipsum'\r\n                      subtitle='Lorem ipsum'\r\n                      isLoaded={false}\r\n                    />\r\n                  )\r\n                )}\r\n              </SimpleGrid>\r\n            ) : trending.isError ? (\r\n              <Error\r\n                label={`Failed to fetch trending ${\r\n                  mediaType === 'movie' ? 'movies' : mediaType === 'person' ? 'people' : 'tv'\r\n                } list!`}\r\n                variant='outlined'\r\n              />\r\n            ) : trending.isSuccess ? (\r\n              <SimpleGrid\r\n                width='100%'\r\n                columns={displayMode === 'list' ? 1 : [isSmallMob ? 1 : 2, 2, 4, 5, 5]}\r\n                spacing={2}>\r\n                {mediaType === 'movie'\r\n                  ? movies.map((movie: PartialMovie, index: number) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalPoster\r\n                          key={index}\r\n                          mediaType='movie'\r\n                          image={{\r\n                            alt: `${movie?.title || ''} movie poster`,\r\n                            src: movie?.poster_path || '',\r\n                            size\r\n                          }}\r\n                          rating={{\r\n                            rating: movie?.vote_average || null,\r\n                            count: movie?.vote_count || null\r\n                          }}\r\n                          title={movie?.title || ''}\r\n                          subtitle={`${utils.handleReturnDate(\r\n                            movie?.release_date || '',\r\n                            'full'\r\n                          )} • ${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n                          description={movie?.overview || ''}\r\n                          isLoaded={true}\r\n                        />\r\n                      ) : (\r\n                        <VerticalPoster\r\n                          key={index}\r\n                          width='100%'\r\n                          mediaType='movie'\r\n                          image={{\r\n                            alt: `${movie?.title || ''} movie poster`,\r\n                            src: movie?.poster_path || '',\r\n                            size\r\n                          }}\r\n                          rating={{\r\n                            rating: movie?.vote_average || null,\r\n                            count: movie?.vote_count || null\r\n                          }}\r\n                          title={movie?.title || ''}\r\n                          subtitle={`${utils.handleReturnDate(\r\n                            movie?.release_date || '',\r\n                            'year'\r\n                          )} • ${utils.handleReturnGenresByID(movie?.genre_ids || [], 'movie')}`}\r\n                          isLoaded={true}\r\n                        />\r\n                      )\r\n                    )\r\n                  : mediaType === 'tv'\r\n                  ? tv.map((show: PartialTV, index: number) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalPoster\r\n                          key={index}\r\n                          mediaType='tv'\r\n                          image={{\r\n                            alt: `${show?.name || ''} tv show poster`,\r\n                            src: show?.poster_path || '',\r\n                            size\r\n                          }}\r\n                          rating={{\r\n                            rating: show?.vote_average || null,\r\n                            count: show?.vote_count || null\r\n                          }}\r\n                          title={show?.name || ''}\r\n                          subtitle={`${utils.handleReturnDate(\r\n                            show?.first_air_date || '',\r\n                            'full'\r\n                          )} • ${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`}\r\n                          description={show?.overview || ''}\r\n                          isLoaded={true}\r\n                        />\r\n                      ) : (\r\n                        <VerticalPoster\r\n                          key={index}\r\n                          width='100%'\r\n                          mediaType='tv'\r\n                          image={{\r\n                            alt: `${show?.name || ''} tv show poster`,\r\n                            src: show?.poster_path || '',\r\n                            size\r\n                          }}\r\n                          rating={{\r\n                            rating: show?.vote_average || null,\r\n                            count: show?.vote_count || null\r\n                          }}\r\n                          title={show?.name || ''}\r\n                          subtitle={`${utils.handleReturnDate(\r\n                            show?.first_air_date || '',\r\n                            'year'\r\n                          )} • ${utils.handleReturnGenresByID(show?.genre_ids || [], 'tv')}`}\r\n                          isLoaded={true}\r\n                        />\r\n                      )\r\n                    )\r\n                  : people.map((person: PartialPerson, index: number) =>\r\n                      displayMode === 'list' ? (\r\n                        <HorizontalPoster\r\n                          key={index}\r\n                          mediaType='person'\r\n                          image={{\r\n                            alt: `${person?.name || ''} person poster`,\r\n                            src: person?.profile_path || '',\r\n                            size\r\n                          }}\r\n                          title={person?.name || ''}\r\n                          subtitle={person.known_for_department}\r\n                          description={person?.known_for.map((item) => item.name || item.title || '').join(', ') || ''}\r\n                          isLoaded={true}\r\n                        />\r\n                      ) : (\r\n                        <VerticalPoster\r\n                          key={index}\r\n                          width='100%'\r\n                          mediaType='person'\r\n                          image={{\r\n                            alt: `${person?.name || ''} person poster`,\r\n                            src: person?.profile_path || '',\r\n                            size\r\n                          }}\r\n                          title={person?.name || ''}\r\n                          subtitle={person.known_for_department}\r\n                          isLoaded={true}\r\n                        />\r\n                      )\r\n                    )}\r\n              </SimpleGrid>\r\n            ) : (\r\n              <Empty\r\n                label={`Trending ${\r\n                  mediaType === 'movie' ? 'movies' : mediaType === 'person' ? 'people' : 'tv'\r\n                } list is empty!`}\r\n                variant='outlined'\r\n              />\r\n            )}\r\n\r\n            {trending.data && trending.data.pages ? (\r\n              <LoadMore\r\n                amount={trending.data.pages[trending.data.pages.length - 1].page * 20}\r\n                total={trending.data.pages[trending.data.pages.length - 1].total_results}\r\n                mediaType='popular movies'\r\n                isLoading={trending.isLoading || trending.isFetching}\r\n                onFetch={trending.fetchNextPage}\r\n              />\r\n            ) : null}\r\n          </VStack>\r\n        ) : (\r\n          <Label handleOpenModal={() => onTypePickerOpen()} />\r\n        )}\r\n      </VerticalGrid>\r\n\r\n      <TypePicker\r\n        mediaType={mediaType}\r\n        isOpen={isTypePickerOpen}\r\n        onClose={onTypePickerClose}\r\n        onSetType={(mediaType: MediaType) => setMediaType(mediaType)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","export const sidebarWidth = {\r\n  expanded: 266,\r\n  collapsed: 64\r\n};\r\n","import { Theme } from '../../../../theme/types';\r\n\r\ntype TransitionsStyle = {\r\n  transition: string;\r\n};\r\n\r\nexport default (theme: Theme): TransitionsStyle => ({\r\n  transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  Breadcrumb as CUIBreadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Icon,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport useStyles from './styles';\r\n\r\nconst Breadcrumb = ({ breadcrumbs }: { breadcrumbs: BreadcrumbType[] }): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const style = useStyles(theme);\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <CUIBreadcrumb\r\n      separator={\r\n        <Icon\r\n          as={ChevronRightOutlinedIcon}\r\n          color={colorMode === 'light' ? 'gray.400' : 'gray.500'}\r\n          sx={{ fontSize: `${theme.fontSizes.xl} !important` }}\r\n        />\r\n      }\r\n      spacing={1}>\r\n      {breadcrumbs.map((breadcrumb) => (\r\n        <BreadcrumbItem\r\n          key={breadcrumb.label}\r\n          isCurrentPage={location.pathname === breadcrumb.path}\r\n          fontSize={['xl']}\r\n          sx={{ ...style.common.breadcrumbItem }}>\r\n          {location.pathname === breadcrumb.path ? (\r\n            <Text align='left' sx={{ ...style[colorMode].breadcrumbActive }}>\r\n              {breadcrumb.label}\r\n            </Text>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              as={Link}\r\n              to={breadcrumb.path}\r\n              sx={{ ..._.merge(style.common.breadcrumbLink, style[colorMode].breadcrumbLink) }}>\r\n              {breadcrumb.label}\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </CUIBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype BreadcrumbsStyle = {\r\n  common: {\r\n    breadcrumbItem: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  light: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n  dark: {\r\n    breadcrumbActive: Style;\r\n    breadcrumbLink: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme): BreadcrumbsStyle => ({\r\n  common: {\r\n    breadcrumbItem: {\r\n      fontWeight: 'medium'\r\n    },\r\n    breadcrumbLink: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']} !important`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    breadcrumbActive: {\r\n      color: 'gray.900',\r\n      fontWeight: 'semibold'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.400',\r\n\r\n      '&:hover': {\r\n        color: 'gray.900'\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    breadcrumbActive: {\r\n      color: 'gray.50'\r\n    },\r\n    breadcrumbLink: {\r\n      'color': 'gray.500',\r\n\r\n      '&:hover': {\r\n        color: 'gray.50'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport ExploreTwoToneIcon from '@material-ui/icons/ExploreTwoTone';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined';\r\nimport TheatersTwoToneIcon from '@material-ui/icons/TheatersTwoTone';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport TvTwoToneIcon from '@material-ui/icons/TvTwoTone';\r\nimport WhatshotOutlinedIcon from '@material-ui/icons/WhatshotOutlined';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\n\r\nimport { NavItem } from '../../components/NavItems/types';\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    label: 'Home',\r\n    path: '/',\r\n    iconActive: HomeTwoToneIcon,\r\n    icon: HomeOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Search',\r\n    path: '/search',\r\n    iconActive: SearchTwoToneIcon,\r\n    icon: SearchOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Discover',\r\n    path: '/discover',\r\n    iconActive: ExploreTwoToneIcon,\r\n    icon: ExploreOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Trending',\r\n    path: '/trending',\r\n    iconActive: WhatshotTwoToneIcon,\r\n    icon: WhatshotOutlinedIcon\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    path: '/movies',\r\n    iconActive: TheatersTwoToneIcon,\r\n    icon: TheatersOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular Movies', path: '/movies/popular' },\r\n      { label: 'Movies Now Playing', path: '/movies/now-playing' },\r\n      { label: 'Upcoming Movies', path: '/movies/upcoming' },\r\n      { label: 'Top Rated Movies', path: '/movies/top-rated' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'TV Shows',\r\n    path: '/tv',\r\n    iconActive: TvTwoToneIcon,\r\n    icon: TvOutlinedIcon,\r\n    children: [\r\n      { label: 'Popular TV', path: '/tv/popular' },\r\n      { label: 'Shows Airing Today', path: '/tv/airing-today' },\r\n      { label: 'On TV', path: '/tv/on-tv' },\r\n      { label: 'Top Rated TV', path: '/tv/top-rated' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'People',\r\n    path: '/people',\r\n    iconActive: PeopleAltTwoToneIcon,\r\n    icon: PeopleAltOutlinedIcon\r\n  }\r\n  // {\r\n  //   label: 'Companies',\r\n  //   path: '/companies',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // },\r\n  // {\r\n  //   label: 'Networks',\r\n  //   path: '/networks',\r\n  //   iconActive: SearchTwoToneIcon,\r\n  //   icon: SearchOutlinedIcon\r\n  // }\r\n];\r\n\r\nexport default navItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, Link, HStack, Text, Box } from '@chakra-ui/react';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\nimport useStyles from './styles';\r\nimport { NavItemChildProps } from './types';\r\n\r\nconst NavItemChild = ({ label, path, isLastChild = false }: NavItemChildProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const location = useLocation();\r\n  const isActive: boolean = location.pathname === path;\r\n  const style = useStyles(theme, isActive, sidebarMode === 'expanded', isLastChild);\r\n\r\n  /**\r\n   * This method will get the label and return the initials of that label\r\n   *\r\n   * @returns - Initials\r\n   */\r\n  const handleGetInitials = (): string => {\r\n    const parts = label.split(' ');\r\n    let initials = '';\r\n\r\n    parts.forEach((part) => {\r\n      if (part) {\r\n        initials += part[0];\r\n      }\r\n    });\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n      <HStack width='100%' spacing='15px'>\r\n        {sidebarMode === 'expanded' ? (\r\n          <Box height='44px' borderLeft='solid2' borderLeftColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n        ) : null}\r\n        <Tooltip\r\n          aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n          width='100%'\r\n          closeOnClick={false}\r\n          label={sidebarMode === 'collapsed' ? label : ''}\r\n          placement='right'>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent={sidebarMode === 'expanded' ? 'flex-start' : 'center'}\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={0}\r\n            sx={{ ..._.merge(style.common.child, style[colorMode].child) }}>\r\n            <Text\r\n              align='left'\r\n              fontSize={sidebarMode === 'expanded' ? 'md' : 'sm'}\r\n              fontWeight='semibold'\r\n              whiteSpace='nowrap'\r\n              textTransform={sidebarMode === 'expanded' ? 'capitalize' : 'uppercase'}>\r\n              {sidebarMode === 'expanded' ? label : handleGetInitials()}\r\n            </Text>\r\n          </HStack>\r\n        </Tooltip>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavItemChild;\r\n","import { Style } from '../../../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../../../theme/types';\r\n\r\ntype NavItemChildStyle = {\r\n  common: {\r\n    child: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    child: Style;\r\n  };\r\n  dark: {\r\n    child: Style;\r\n  };\r\n};\r\n\r\nexport default (theme: Theme, isActive = false, isExpanded = false, isLastChild = false): NavItemChildStyle => ({\r\n  common: {\r\n    child: {\r\n      'cursor': 'pointer',\r\n\r\n      'backgroundColor': 'transparent',\r\n      'borderRadius': isExpanded ? 'base' : isLastChild ? `0 0 ${theme.radii.base} ${theme.radii.base}` : 'none',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    child: {\r\n      'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? 'blue.500' : 'gray.100',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    child: {\r\n      'backgroundColor': isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-text': {\r\n        color: isActive ? 'gray.50' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isActive ? 'blue.500' : 'gray.800',\r\n\r\n        '& .chakra-text': {\r\n          color: isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  useColorMode,\r\n  useDisclosure,\r\n  VStack,\r\n  HStack,\r\n  Collapse,\r\n  Icon,\r\n  Text,\r\n  Link,\r\n  Box,\r\n  ScaleFade\r\n} from '@chakra-ui/react';\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport _ from 'lodash';\r\nimport { useLocation, Link as RRDLink } from 'react-router-dom';\r\n\r\nimport useSelector from '../../../../../../common/hooks/useSelectorTyped';\r\nimport Tooltip from '../../../../../../components/Tooltip';\r\nimport { Theme } from '../../../../../../theme/types';\r\nimport { NavItem as NavItemType } from '../../types';\r\nimport NavItemChild from './components/NavItemChild';\r\nimport useStyles from './styles';\r\n\r\nconst NavItem = (props: NavItemType): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const location = useLocation();\r\n\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const { label, path, icon, iconActive, children } = props;\r\n\r\n  const isActive: boolean = location.pathname === path;\r\n  const isChildActive: boolean = children ? children.some((child) => location.pathname === child.path) : false;\r\n  const style = useStyles(theme, isActive, isChildActive, sidebarMode === 'expanded', children ? isOpen : false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      onClose();\r\n    }\r\n  }, [sidebarMode]);\r\n\r\n  return (\r\n    <VStack\r\n      width='100%'\r\n      spacing={sidebarMode === 'expanded' ? 2 : 0}\r\n      sx={{ ..._.merge(style.common.container, style[colorMode].container) }}>\r\n      <Tooltip\r\n        aria-label={sidebarMode === 'collapsed' ? label : ''}\r\n        width='100%'\r\n        closeOnClick={false}\r\n        label={sidebarMode === 'collapsed' ? label : ''}\r\n        placement='right'>\r\n        <Link width='100%' as={RRDLink} to={path} sx={{ ...style.common.link }}>\r\n          <HStack\r\n            width='100%'\r\n            justifyContent='space-between'\r\n            px={sidebarMode === 'expanded' ? 2 : 1}\r\n            py={1}\r\n            spacing={2}\r\n            onClick={isOpen ? () => onClose() : () => onOpen()}\r\n            sx={{ ..._.merge(style.common.main, style[colorMode].main) }}>\r\n            <HStack width='100%' spacing={2}>\r\n              <Icon\r\n                as={isActive || isChildActive ? iconActive : icon}\r\n                sx={{ fontSize: `${theme.fontSizes['3xl']} !important` }}\r\n              />\r\n              <ScaleFade in={sidebarMode === 'expanded'} unmountOnExit>\r\n                <Text align='left' fontSize='lg' fontWeight='semibold' whiteSpace='nowrap'>\r\n                  {label}\r\n                </Text>\r\n              </ScaleFade>\r\n            </HStack>\r\n\r\n            {children ? (\r\n              <ScaleFade in={sidebarMode === 'expanded'} unmountOnExit>\r\n                <Icon\r\n                  as={ChevronRightOutlinedIcon}\r\n                  sx={{\r\n                    fontSize: `${theme.fontSizes['2xl']} !important`,\r\n                    transform: `rotate(${isOpen ? '90deg' : '0deg'})`\r\n                  }}\r\n                />\r\n              </ScaleFade>\r\n            ) : null}\r\n          </HStack>\r\n        </Link>\r\n      </Tooltip>\r\n\r\n      {children ? (\r\n        <Collapse in={isOpen} unmountOnExit style={{ width: '100%' }}>\r\n          <VStack\r\n            width='100%'\r\n            spacing={0}\r\n            pl={sidebarMode === 'expanded' ? '31px' : '0px'}\r\n            pr={sidebarMode === 'expanded' ? 2 : '0px'}\r\n            mb={sidebarMode === 'expanded' ? 1 : '0px'}>\r\n            {sidebarMode === 'collapsed' ? (\r\n              <Box width='100%' height='2px' backgroundColor={colorMode === 'light' ? 'gray.200' : 'gray.700'} />\r\n            ) : null}\r\n            {children.map((child, index) => (\r\n              <NavItemChild\r\n                key={child.label}\r\n                label={child.label}\r\n                path={child.path}\r\n                isLastChild={index === children.length - 1}\r\n              />\r\n            ))}\r\n          </VStack>\r\n        </Collapse>\r\n      ) : null}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import { Style } from '../../../../../../common/types/types';\r\nimport { Theme } from '../../../../../../theme/types';\r\n\r\ntype NavItemStyle = {\r\n  common: {\r\n    container: Style;\r\n    main: Style;\r\n    link: Style;\r\n  };\r\n  light: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n  dark: {\r\n    container: Style;\r\n    main: Style;\r\n  };\r\n};\r\n\r\nexport default (\r\n  theme: Theme,\r\n  isActive = false,\r\n  isChildActive = false,\r\n  isExpanded = false,\r\n  isOpen = false\r\n): NavItemStyle => ({\r\n  common: {\r\n    container: {\r\n      borderRadius: 'base',\r\n\r\n      transition: `${theme.transition.duration.slower} ${theme.transition.easing['ease-in-out']}`\r\n    },\r\n    main: {\r\n      'cursor': 'pointer',\r\n\r\n      'borderRadius': !isExpanded && isOpen ? `${theme.radii.base} ${theme.radii.base} 0 0` : 'base',\r\n\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '& .chakra-icon': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      },\r\n      '& .chakra-text': {\r\n        transition: `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`\r\n      }\r\n    },\r\n    link: {\r\n      'transition': `${theme.transition.duration.normal} ${theme.transition.easing['ease-out']}`,\r\n\r\n      '&:hover': {\r\n        textDecoration: 'none'\r\n      },\r\n      '&:focus': {\r\n        boxShadow: 'none'\r\n      }\r\n    }\r\n  },\r\n  light: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen ? 'gray.100' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.400'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.100' : isActive ? 'blue.500' : 'gray.100',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.900'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.50' : 'gray.900'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    container: {\r\n      backgroundColor: !isExpanded && isOpen ? 'gray.800' : 'transparent'\r\n    },\r\n    main: {\r\n      'backgroundColor': isChildActive ? 'transparent' : isActive ? 'blue.400' : 'transparent',\r\n\r\n      '& .chakra-icon': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n      '& .chakra-text': {\r\n        color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.500'\r\n      },\r\n\r\n      '&:hover': {\r\n        'backgroundColor': isChildActive ? 'gray.800' : isActive ? 'blue.500' : 'gray.800',\r\n\r\n        '& .chakra-icon': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.50'\r\n        },\r\n        '& .chakra-text': {\r\n          color: isChildActive ? 'blue.400' : isActive ? 'gray.900' : 'gray.50'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { VStack } from '@chakra-ui/react';\r\n\r\nimport NavItem from './components/NavItem';\r\nimport { NavItemsProps, NavItem as NavItemType } from './types';\r\n\r\nconst NavItems = ({ navItems }: NavItemsProps): ReactElement => {\r\n  return (\r\n    <VStack width='100%'>\r\n      {navItems.map((navItem: NavItemType) => (\r\n        <NavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerBody } from '@chakra-ui/react';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\n\r\nimport IconButton from '../../../../../../components/Inputs/IconButton';\r\nimport navItems from '../../../../common/data/navItems';\r\nimport NavItems from '../../../NavItems';\r\n\r\nconst Menu = (): ReactElement => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label='Open Menu' icon={MenuOutlinedIcon} onClick={onOpen} variant='icon' />\r\n\r\n      <Drawer isOpen={isOpen} placement='left' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerBody py={1} px={1}>\r\n            <NavItems navItems={navItems} />\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport IconButton from '../../../../../../components/Inputs/IconButton';\r\n\r\nconst Search = (): ReactElement => {\r\n  return <IconButton aria-label='Open Search' icon={SearchOutlinedIcon} variant='icon' />;\r\n};\r\n\r\nexport default Search;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useColorMode, useDisclosure, Avatar, Popover, PopoverTrigger, Portal, PopoverContent } from '@chakra-ui/react';\r\n\r\nconst User = (): ReactElement => {\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Popover isOpen={isOpen} placement='bottom-end' gutter={16} onOpen={onOpen} onClose={onClose}>\r\n      <PopoverTrigger>\r\n        <Avatar cursor='pointer' name='Test User' size='md' />\r\n      </PopoverTrigger>\r\n      <Portal>\r\n        <PopoverContent\r\n          width='auto'\r\n          border='solid2'\r\n          borderColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n          borderRadius='lg'\r\n          boxShadow='xl'\r\n          p={2}\r\n          sx={{\r\n            '&:focus': {\r\n              boxShadow: 'none'\r\n            }\r\n          }}>\r\n          <h1>Hello</h1>\r\n        </PopoverContent>\r\n      </Portal>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, HStack } from '@chakra-ui/react';\r\n\r\nimport { Breadcrumb as BreadcrumbType } from '../../../../common/types/types';\r\nimport { Theme } from '../../../../theme/types';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport Breadcrumb from './components/Breadcrumb';\r\nimport Menu from './components/Menu';\r\nimport Search from './components/Search';\r\nimport User from './components/User';\r\n\r\ntype HeaderProps = { width: string; left: string; breadcrumbs: BreadcrumbType[] };\r\n\r\nconst Header = (props: HeaderProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isMdUp] = useMediaQuery('(min-width: 600px)');\r\n  const [isLgDown] = useMediaQuery(`(max-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const { width, left, breadcrumbs } = props;\r\n\r\n  return (\r\n    <HStack\r\n      width={width}\r\n      maxWidth={width}\r\n      position='fixed'\r\n      top='0px'\r\n      left={left}\r\n      zIndex={800}\r\n      justifyContent='space-between'\r\n      background={colorMode === 'light' ? 'white' : 'gray.900'}\r\n      borderBottom='solid2'\r\n      borderBottomColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      px={2}\r\n      py={1}\r\n      sx={{ ...transition }}>\r\n      <HStack spacing={1}>\r\n        {isLgDown ? <Menu /> : null}\r\n        {isMdUp ? <Breadcrumb breadcrumbs={breadcrumbs} /> : null}\r\n      </HStack>\r\n      <HStack spacing={1}>\r\n        <Search />\r\n        <User />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { useTheme, useColorMode, VStack } from '@chakra-ui/react';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useSelector from '../../../../common/hooks/useSelectorTyped';\r\nimport Button from '../../../../components/Inputs/Button';\r\nimport { toggleSidebarMode } from '../../../../store/slices/app';\r\nimport { Theme } from '../../../../theme/types';\r\nimport navItems from '../../common/data/navItems';\r\nimport useTransitionsStyle from '../../common/styles/transitions';\r\nimport NavItems from '../NavItems';\r\nimport { SidebarProps } from './types';\r\n\r\nconst Sidebar = ({ width }: SidebarProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  return (\r\n    <VStack\r\n      width={width}\r\n      height='100vh'\r\n      position='fixed'\r\n      top='0px'\r\n      left='0px'\r\n      zIndex={900}\r\n      alignItems={sidebarMode === 'expanded' ? 'flex-start' : 'stretch'}\r\n      justifyContent='space-between'\r\n      background={colorMode ? 'white' : 'gray.900'}\r\n      borderRight='solid2'\r\n      borderRightColor={colorMode === 'light' ? 'gray.200' : 'gray.700'}\r\n      p={1}\r\n      spacing={2}\r\n      sx={{ ...transition }}>\r\n      <NavItems navItems={navItems} />\r\n\r\n      <Button\r\n        isFullWidth\r\n        onClick={() => dispatch(toggleSidebarMode(sidebarMode === 'expanded' ? 'collapsed' : 'expanded'))}\r\n        leftIcon={sidebarMode === 'expanded' ? RemoveOutlinedIcon : AddOutlinedIcon}\r\n        size='sm'\r\n        variant='outlined'>\r\n        {sidebarMode === 'expanded' ? 'Collapse' : ''}\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\n\r\nimport { useTheme, useColorMode, useMediaQuery, Center, Box } from '@chakra-ui/react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useQueriesTyped from '../../common/hooks/useQueriesTyped';\r\nimport useSelector from '../../common/hooks/useSelectorTyped';\r\nimport axiosInstance from '../../common/scripts/axios';\r\nimport { toggleSidebarMode } from '../../store/slices/app';\r\nimport { setMovieGenres, setTVGenres, toggleHasDownloaded } from '../../store/slices/options';\r\nimport { Theme } from '../../theme/types';\r\nimport { sidebarWidth } from './common/data/sidebar';\r\nimport useTransitionsStyle from './common/styles/transitions';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport { LayoutProps, GenreResponse } from './types';\r\n\r\nconst Layout = ({ children, breadcrumbs }: LayoutProps): ReactElement => {\r\n  const theme = useTheme<Theme>();\r\n  const { colorMode } = useColorMode();\r\n  const [isLgUp] = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`);\r\n  const transition = useTransitionsStyle(theme);\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarMode = useSelector((state) => state.app.data.sidebarMode);\r\n\r\n  const location = useLocation();\r\n\r\n  const [width, setWidth] = useState<string>('100%');\r\n  const [left, setLeft] = useState<string>('266px');\r\n\r\n  const queries = useQueriesTyped([\r\n    {\r\n      queryKey: ['movieGenres'],\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/movie/list');\r\n        return data;\r\n      }\r\n    },\r\n    {\r\n      queryKey: 'tvGenres',\r\n      queryFn: async () => {\r\n        const { data } = await axiosInstance.get<GenreResponse>('/genre/tv/list');\r\n        return data;\r\n      }\r\n    }\r\n  ]);\r\n\r\n  const handleBackground = (): string => {\r\n    switch (location.pathname) {\r\n      case '/':\r\n      case '/movies':\r\n      case '/tv':\r\n        return colorMode === 'light' ? 'gray.100' : 'gray.800';\r\n      default:\r\n        return colorMode === 'light' ? 'white' : 'black';\r\n    }\r\n  };\r\n\r\n  // Saving Movie genres data to redux store\r\n  useEffect(() => {\r\n    // if (options[0].isError) {\r\n    // } else\r\n    if (queries[0].isSuccess) {\r\n      dispatch(setMovieGenres(queries[0].data.genres));\r\n    }\r\n  }, [queries[0]]);\r\n\r\n  // Saving TV genres data to redux store\r\n  useEffect(() => {\r\n    // if (options[1].isError) {\r\n    // } else\r\n    if (queries[1].isSuccess) {\r\n      dispatch(setTVGenres(queries[1].data.genres));\r\n    }\r\n  }, [queries[1]]);\r\n\r\n  useEffect(() => {\r\n    if (queries.some((query) => query.isError || query.isLoading)) {\r\n      dispatch(toggleHasDownloaded(false));\r\n    } else {\r\n      dispatch(toggleHasDownloaded(true));\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    setWidth(isLgUp ? `calc(100% - ${sidebarWidth[sidebarMode]}px)` : '100%');\r\n    setLeft(isLgUp ? `${sidebarWidth[sidebarMode]}px` : '0px');\r\n  }, [isLgUp, sidebarMode]);\r\n\r\n  useEffect(() => {\r\n    if (!isLgUp) {\r\n      dispatch(toggleSidebarMode('expanded'));\r\n    }\r\n  }, [isLgUp]);\r\n\r\n  return (\r\n    <Center overflow='hidden'>\r\n      {isLgUp ? <Sidebar width={`${sidebarWidth[sidebarMode]}px`} /> : null}\r\n      <Box width={width} maxWidth={width} position='absolute' top='0px' left={left} sx={{ ...transition }}>\r\n        <Header width={width} left={left} breadcrumbs={breadcrumbs} />\r\n        <Box\r\n          width='100%'\r\n          maxWidth='100%'\r\n          position='relative'\r\n          top='76px'\r\n          left='0px'\r\n          backgroundColor={handleBackground()}\r\n          pb={4}>\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useQueries, UseQueryOptions, UseQueryResult } from 'react-query';\r\n\r\ntype Awaited<T> = T extends PromiseLike<infer U> ? Awaited<U> : T;\r\n\r\nexport default function useQueriesTyped<TQueries extends readonly UseQueryOptions[]>(\r\n  queries: [...TQueries]\r\n): {\r\n  [ArrayElement in keyof TQueries]: UseQueryResult<\r\n    TQueries[ArrayElement] extends { select: infer TSelect }\r\n      ? TSelect extends (data: unknown) => unknown\r\n        ? ReturnType<TSelect>\r\n        : never\r\n      : Awaited<ReturnType<NonNullable<Extract<TQueries[ArrayElement], UseQueryOptions>['queryFn']>>>\r\n  >;\r\n} {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return useQueries(queries as UseQueryOptions<unknown, unknown, unknown>[]) as any;\r\n}\r\n\r\n// Using John Reilly code: https://blog.johnnyreilly.com/2021/01/03/strongly-typing-react-query-s-usequeries/\r\n","import React, { ComponentType, ReactElement } from 'react';\r\n\r\nimport { useLocation, RouteComponentProps, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport { Breadcrumb } from '../common/types/types';\r\nimport Layout from '../containers/Layout';\r\n\r\ninterface DefaultRouteProps extends RouteProps {\r\n  component: ComponentType<RouteComponentProps | ComponentType>;\r\n  breadcrumbs: Breadcrumb[];\r\n}\r\n\r\nconst DefaultRoute = ({ component: Component, breadcrumbs, ...rest }: DefaultRouteProps): ReactElement => {\r\n  const location = useLocation();\r\n\r\n  sessionStorage.setItem('redirect_to', JSON.stringify(location));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <Layout {...props} breadcrumbs={breadcrumbs}>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { Box } from '@chakra-ui/react';\r\nimport { HashRouter, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport PopularMovies from '../pages/Movies/Popular';\r\nimport Trending from '../pages/Trending';\r\nimport DefaultRoute from './DefaultRoute';\r\n\r\nconst TempComp = () => {\r\n  return <Box p={2}>Temporary component</Box>;\r\n};\r\n\r\nconst Router = (): ReactElement => {\r\n  const breadcrumbs = {\r\n    home: { label: 'Home', path: '/' },\r\n    movies: { label: 'Movies', path: '/movies' },\r\n    tv: { label: 'TV Shows', path: '/tv' }\r\n  };\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        {/* Home Route */}\r\n        <DefaultRoute exact path='/' component={Home} breadcrumbs={[breadcrumbs.home]} />\r\n\r\n        {/* Search Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/search'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Search', path: '/search' }]}\r\n        />\r\n\r\n        {/* Discover Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/discover'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Discover', path: '/discover' }]}\r\n        />\r\n\r\n        {/* Trending Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/trending'\r\n          component={Trending}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'Trending', path: '/trending' }]}\r\n        />\r\n\r\n        {/* Movies Routes */}\r\n        <DefaultRoute exact path='/movies' component={TempComp} breadcrumbs={[breadcrumbs.home, breadcrumbs.movies]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/popular'\r\n          component={PopularMovies}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Popular Movies', path: '/movies/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/now-playing'\r\n          component={TempComp}\r\n          breadcrumbs={[\r\n            breadcrumbs.home,\r\n            breadcrumbs.movies,\r\n            { label: 'Movies Now Playing', path: '/movies/now-playing' }\r\n          ]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/upcoming'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Upcoming Movies', path: '/movies/upcoming' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/movies/top-rated'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.movies, { label: 'Top Rated Movies', path: '/movies/top-rated' }]}\r\n        />\r\n\r\n        {/* TV Routes */}\r\n        <DefaultRoute exact path='/tv' component={TempComp} breadcrumbs={[breadcrumbs.home, breadcrumbs.tv]} />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/popular'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Popular TV', path: '/tv/popular' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/airing-today'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Shows Airing Today', path: '/tv/airing-today' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/on-tv'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'On TV', path: '/tv/on-tv' }]}\r\n        />\r\n        <DefaultRoute\r\n          exact\r\n          path='/tv/top-rated'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, breadcrumbs.tv, { label: 'Top Rated TV', path: '/tv/top-rated' }]}\r\n        />\r\n\r\n        {/* People Route */}\r\n        <DefaultRoute\r\n          exact\r\n          path='/people'\r\n          component={TempComp}\r\n          breadcrumbs={[breadcrumbs.home, { label: 'People', path: '/people' }]}\r\n        />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Router from '../../routes';\r\nimport theme from '../../theme';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = (): ReactElement => {\r\n  console.log(theme);\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Router />\r\n      </QueryClientProvider>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './containers/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}