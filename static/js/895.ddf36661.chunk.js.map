{"version":3,"file":"static/js/895.ddf36661.chunk.js","mappings":"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","sources":["components/Clickable/DisplayMode/index.tsx","components/Poster/Horizontal/components/Description/index.tsx","components/Poster/Horizontal/components/Image/index.tsx","components/Poster/Horizontal/components/Subtitle/index.tsx","components/Poster/Horizontal/components/Title/index.tsx","components/Poster/Horizontal/index.tsx","pages/TV/components/Orientation/Vertical/index.tsx","pages/TV/components/Poster/Horizontal/index.tsx","pages/TV/components/Poster/Vertical/index.tsx","pages/TV/index.tsx"],"sourcesContent":["import { ReactElement, forwardRef } from 'react';\nimport { useIsFetching, useIsMutating } from 'react-query';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, useBoolean, ButtonGroup } from '@chakra-ui/react';\n\nimport { DisplayModeRef, DisplayModeProps } from './types';\n\nimport { useSelector } from '../../../common/hooks';\nimport { toggleDisplayMode } from '../../../store/slices/App';\nimport { Theme } from '../../../theme/types';\nimport Icon from '../../Icon';\nimport Tooltip from '../../Tooltip';\nimport IconButton from '../IconButton';\n\nconst DisplayMode = forwardRef<DisplayModeRef, DisplayModeProps>(function DisplayMode(props, ref): ReactElement {\n\tconst theme = useTheme<Theme>();\n\n\tconst dispatch = useDispatch();\n\tconst displayMode = useSelector((state) => state.app.ui.displayMode);\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst isFetching = useIsFetching();\n\tconst isMutating = useIsMutating();\n\n\tconst [isHoveringGrid, setIsHoveringGrid] = useBoolean();\n\tconst [isClickingGrid, setIsClickingGrid] = useBoolean();\n\n\tconst [isHoveringList, setIsHoveringList] = useBoolean();\n\tconst [isClickingList, setIsClickingList] = useBoolean();\n\n\treturn (\n\t\t<ButtonGroup ref={ref} {...props} isAttached>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'grid'\n\t\t\t\t\t\t? 'Display is in Grid Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to Grid Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tisOpen={isHoveringGrid}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\tgutter={isClickingGrid ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'grid' ? 'Display is in Grid Mode' : 'Set display mode to Grid Mode'}\n\t\t\t\t\tcolor={displayMode === 'grid' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'grid' ? () => dispatch(toggleDisplayMode('grid')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingGrid.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingGrid.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringGrid.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringGrid.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` },\n\t\t\t\t\t\tfront: { borderRadius: `${theme.radii.base} 0 0 ${theme.radii.base}` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='grid_on' type={displayMode === 'grid' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip\n\t\t\t\taria-label={\n\t\t\t\t\tdisplayMode === 'list'\n\t\t\t\t\t\t? 'Display is in List Mode (Tooltip)'\n\t\t\t\t\t\t: 'Set display mode to List Mode (Tooltip)'\n\t\t\t\t}\n\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\tisOpen={isHoveringList}\n\t\t\t\tplacement='top'\n\t\t\t\tlabel={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\tgutter={isClickingList ? 7 : 10}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label={displayMode === 'list' ? 'Display is in List Mode' : 'Set display mode to List Mode'}\n\t\t\t\t\tcolor={displayMode === 'list' ? color : 'gray'}\n\t\t\t\t\tisDisabled={isFetching > 0 || isMutating > 0}\n\t\t\t\t\tonClick={displayMode !== 'list' ? () => dispatch(toggleDisplayMode('list')) : undefined}\n\t\t\t\t\tonMouseDown={() => setIsClickingList.on()}\n\t\t\t\t\tonMouseUp={() => setIsClickingList.off()}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringList.on()}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringList.off()}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tback: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` },\n\t\t\t\t\t\tfront: { borderRadius: `0 ${theme.radii.base} ${theme.radii.base} 0` }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon='view_agenda' type={displayMode === 'list' ? 'filled' : 'outlined'} />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</ButtonGroup>\n\t);\n});\n\nexport default DisplayMode;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { DescriptionProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Description = (props: DescriptionProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { description, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{description || 'Poster Description'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Description;\n","import { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTheme, Box, AspectRatio, ScaleFade, Fade } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { PosterImageProps } from './types';\n\nimport { useSelector } from '../../../../../common/hooks';\nimport { MediaType } from '../../../../../common/types';\nimport { handleIsTouchDevice, handleReturnBoringTypeByMediaType, handleReturnRatio } from '../../../../../common/utils';\nimport Button from '../../../../../components/Clickable/Button';\nimport Skeleton from '../../../../../components/Skeleton';\nimport { toggleQuickView } from '../../../../../store/slices/Modals';\nimport { Theme } from '../../../../../theme/types';\nimport Image from '../../../../Image';\n\nconst width = ['100px', '116px', '152px', '188px', '188px', '224px'];\n\nconst PosterImage = <MT extends MediaType>(props: PosterImageProps<MT>): ReactElement => {\n\tconst theme = useTheme<Theme>();\n\n\tconst dispatch = useDispatch();\n\tconst color = useSelector((state) => state.user.ui.theme.color);\n\n\tconst {\n\t\tmediaItem,\n\t\tmediaType,\n\t\ttitle,\n\t\timage,\n\t\tisFocused = false,\n\t\tisLoading = true,\n\t\tisHovering = false,\n\t\tinView = false,\n\t\tonMouseChange\n\t} = props;\n\n\treturn (\n\t\t<AspectRatio as={Fade} in={inView} width={width} borderRadius='base' ratio={handleReturnRatio('portrait')}>\n\t\t\t<>\n\t\t\t\t<Skeleton borderRadius='base' isLoaded={!isLoading && inView}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\talt={image?.alt || ''}\n\t\t\t\t\t\tborderRadius='base'\n\t\t\t\t\t\tboringType={handleReturnBoringTypeByMediaType(mediaType)}\n\t\t\t\t\t\tthumbnailSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.thumbnail || ''}${\n\t\t\t\t\t\t\timage?.src || ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tfullSrc={`${process.env.REACT_APP_IMAGE_URL}/${image?.size.full || ''}${image?.src || ''}`}\n\t\t\t\t\t/>\n\t\t\t\t</Skeleton>\n\n\t\t\t\t{/* Quick View component */}\n\t\t\t\t{!(_.isNil(mediaItem) || _.isEmpty(mediaItem)) && !handleIsTouchDevice() && mediaType !== 'company' ? (\n\t\t\t\t\t<ScaleFade in={(isHovering || isFocused) && !isLoading} unmountOnExit>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tposition='absolute'\n\t\t\t\t\t\t\tbottom={theme.space[1]}\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\tonMouseEnter={() => onMouseChange(true)}\n\t\t\t\t\t\t\tonMouseLeave={() => onMouseChange(false)}\n\t\t\t\t\t\t\tpx={1}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tisFullWidth\n\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\ttoggleQuickView({\n\t\t\t\t\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\t\t\t\t\tmediaType,\n\t\t\t\t\t\t\t\t\t\t\tmediaItem: { id: mediaItem?.id || -1, title }\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tQuick view\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</ScaleFade>\n\t\t\t\t) : null}\n\t\t\t</>\n\t\t</AspectRatio>\n\t);\n};\n\nexport default PosterImage;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { SubtitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['16.5px', '19.25px', '22px', '24.75px', '27.5px', '33px'];\n\nconst Subtitle = (props: SubtitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'xs',\n\t\t'sm': 'sm',\n\t\t'md': 'md',\n\t\t'lg': 'lg',\n\t\t'xl': 'xl',\n\t\t'2xl': '2xl'\n\t});\n\n\tconst { subtitle, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='normal'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 400 : 500}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{subtitle || 'Poster Subtitle'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Subtitle;\n","import { ReactElement } from 'react';\n\nimport { useColorMode, useBreakpointValue, useConst, Box, Text } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport { TitleProps } from './types';\n\nimport { FontSizes } from '../../../../../theme/types';\nimport SkeletonText from '../../../../Skeleton/Text';\n\nconst dummies = _.range(25, 100, 10);\nconst height = ['19.25px', '22px', '24.75px', '27.5px', '33px', '41.25px'];\n\nconst Title = (props: TitleProps): ReactElement => {\n\tconst { colorMode } = useColorMode();\n\tconst fontSize = useBreakpointValue<keyof FontSizes>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { title, isLoading = false, inView = true } = props;\n\n\tconst dummy = useConst<number>(_.sample(dummies) || 100);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='100%'\n\t\t\tmaxWidth='100%'\n\t\t\theight={height} // Size of typography height\n\t\t>\n\t\t\t{inView ? (\n\t\t\t\t<SkeletonText width={isLoading ? `${dummy}%` : 'auto'} fontSize={fontSize} isLoaded={!isLoading}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign='left'\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfontWeight='semibold'\n\t\t\t\t\t\tcolor={`gray.${colorMode === 'light' ? 900 : 50}`}\n\t\t\t\t\t\tisTruncated\n\t\t\t\t\t\toverflow='hidden'\n\t\t\t\t\t\twhiteSpace='nowrap'\n\t\t\t\t\t>\n\t\t\t\t\t\t{title || 'Poster Title'}\n\t\t\t\t\t</Text>\n\t\t\t\t</SkeletonText>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n\nexport default Title;\n","import { ReactElement } from 'react';\nimport useInView from 'react-cool-inview';\n\nimport { useMediaQuery, useBreakpointValue, useBoolean, HStack, VStack, Center } from '@chakra-ui/react';\n\nimport _ from 'lodash';\n\nimport Description from './components/Description';\nimport Image from './components/Image';\nimport Subtitle from './components/Subtitle';\nimport Title from './components/Title';\nimport { HorizontalPosterProps } from './types';\n\nimport { MediaType } from '../../../common/types';\nimport { handleReturnMediaTypeLabel } from '../../../common/utils';\nimport { FontSizes } from '../../../theme/types';\nimport Card from '../..//Clickable/Card';\nimport Link from '../../Clickable/Link';\nimport Rating from '../../Rating';\nimport Bookmark from '../components/Bookmark';\nimport Like from '../components/Like';\n\nconst HorizontalPoster = <MT extends MediaType>(props: HorizontalPosterProps<MT>): ReactElement => {\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\tconst ratingFontSize = useBreakpointValue<keyof Omit<FontSizes, '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl'>>({\n\t\t'base': 'sm',\n\t\t'sm': 'md',\n\t\t'md': 'lg',\n\t\t'lg': 'xl',\n\t\t'xl': '2xl',\n\t\t'2xl': '3xl'\n\t});\n\n\tconst { observe: ref, inView } = useInView<HTMLDivElement>({\n\t\tthreshold: [0.2, 0.4, 0.6, 0.8, 1],\n\t\tunobserveOnEnter: true\n\t});\n\n\tconst { mediaItem, mediaType, image, rating, title, subtitle, description, isLoading = true } = props;\n\n\tconst [isFocused, setIsFocused] = useBoolean();\n\tconst [isHovering, setIsHovering] = useBoolean();\n\n\tconst [isDisabled, setIsDisabled] = useBoolean();\n\n\tconst handleOnImageChange = (bool: boolean): void => {\n\t\tif (bool) {\n\t\t\tsetIsDisabled.on();\n\t\t} else {\n\t\t\tsetIsDisabled.off();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Link\n\t\t\tisFullWidth\n\t\t\tisDisabled={isLoading || isDisabled || mediaType === 'company'}\n\t\t\tto={\n\t\t\t\tmediaType !== 'company'\n\t\t\t\t\t? { pathname: `/${handleReturnMediaTypeLabel(mediaType)}/${mediaItem?.id || ''}` }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t\tonFocus={() => setIsFocused.on()}\n\t\t\tonBlur={() => setIsFocused.off()}\n\t\t\tonMouseEnter={() => setIsHovering.on()}\n\t\t\tonMouseLeave={() => setIsHovering.off()}\n\t\t>\n\t\t\t<Card isFullWidth isDisabled={isLoading} isClickable={mediaType !== 'company'} isFixed={isDisabled} isLight>\n\t\t\t\t<HStack ref={ref} width='100%' position='relative' spacing={[1, 1, 2, 2, 2, 2]} p={[1, 1, 2, 2, 2, 2]}>\n\t\t\t\t\t{/* Image */}\n\t\t\t\t\t<Image\n\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\timage={image}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tisFocused={isFocused}\n\t\t\t\t\t\tisHovering={isHovering}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\tinView={inView}\n\t\t\t\t\t\tonMouseChange={handleOnImageChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<VStack\n\t\t\t\t\t\twidth={[\n\t\t\t\t\t\t\t'calc(100% - 108px)',\n\t\t\t\t\t\t\t'calc(100% - 124px)',\n\t\t\t\t\t\t\t'calc(100% - 168px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 204px)',\n\t\t\t\t\t\t\t'calc(100% - 240px)'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 2 : 1,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2,\n\t\t\t\t\t\t\tisLoading ? 4 : 2\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Rating */}\n\t\t\t\t\t\t{(mediaType === 'movie' || mediaType === 'tv') && rating ? (\n\t\t\t\t\t\t\t<Rating count={rating?.count} inView={inView} size={ratingFontSize} isLoading={isLoading}>\n\t\t\t\t\t\t\t\t{rating?.rating}\n\t\t\t\t\t\t\t</Rating>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\talignItems='flex-start'\n\t\t\t\t\t\t\tspacing={[\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 0.5 : 0.25,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5,\n\t\t\t\t\t\t\t\tisLoading ? 1 : 0.5\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title title={title} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t{(!_.isNil(subtitle) && !_.isEmpty(subtitle)) || isLoading ? (\n\t\t\t\t\t\t\t\t<Subtitle subtitle={subtitle} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t{(!_.isNil(description) && !_.isEmpty(description)) || isLoading ? (\n\t\t\t\t\t\t\t<Description description={description} isLoading={isLoading} inView={inView} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</VStack>\n\n\t\t\t\t\t{/* Like / List Icon buttons */}\n\t\t\t\t\t{mediaItem ? (\n\t\t\t\t\t\t<Center\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\t\tright: 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* Like component */}\n\t\t\t\t\t\t\t<Center onMouseEnter={() => setIsDisabled.on()} onMouseLeave={() => setIsDisabled.off()}>\n\t\t\t\t\t\t\t\t<Like\n\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t\t{/* List component */}\n\t\t\t\t\t\t\t{mediaType === 'movie' || mediaType === 'tv' ? (\n\t\t\t\t\t\t\t\t<Center\n\t\t\t\t\t\t\t\t\tonMouseEnter={() => setIsDisabled.on()}\n\t\t\t\t\t\t\t\t\tonMouseLeave={() => setIsDisabled.off()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Bookmark\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\t\tmediaItem={mediaItem}\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\tsize={isSm ? 'md' : 'lg'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Center>\n\t\t\t\t\t) : null}\n\t\t\t\t</HStack>\n\t\t\t</Card>\n\t\t</Link>\n\t);\n};\n\nexport default HorizontalPoster;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { VerticalTVProps } from './types';\n\nimport { PartialTV } from '../../../../../common/types/tv';\nimport Empty from '../../../../../components/Empty';\nimport Error from '../../../../../components/Error';\nimport VerticalGrid from '../../../../../components/Grid/Vertical';\nimport HorizontalTVShowPoster from '../../Poster/Horizontal';\nimport VerticalTVShowPoster from '../../Poster/Vertical';\n\nconst VerticalTV = (props: VerticalTVProps): ReactElement => {\n\tconst { isError = false, isSuccess = false, isLoading = true, shows } = props;\n\n\treturn !isLoading && isError ? (\n\t\t<Error label='Oh no! Something went wrong' description='Failed to fetch TV Shows list!' variant='outlined' />\n\t) : !isLoading && isSuccess && shows && shows.length === 0 ? (\n\t\t<Empty label='TV Shows list is currently empty!' variant='outlined' />\n\t) : !isLoading && isSuccess && shows && shows.length > 0 ? (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\tshows.map((show: PartialTV) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalTVShowPoster key={show.id} show={show} isLoading={false} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalTVShowPoster key={show.id} show={show} isLoading={false} />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t) : (\n\t\t<VerticalGrid>\n\t\t\t{({ displayMode }) =>\n\t\t\t\t_.range(0, isSuccess && shows && shows.length > 0 ? shows.length : 20).map((_dummy, index: number) =>\n\t\t\t\t\tdisplayMode === 'list' ? (\n\t\t\t\t\t\t<HorizontalTVShowPoster key={index} isLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<VerticalTVShowPoster key={index} isLoading />\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</VerticalGrid>\n\t);\n};\n\nexport default VerticalTV;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { HorizontalTVShowPosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../../common/utils';\nimport HorizontalPoster from '../../../../../components/Poster/Horizontal';\n\nconst HorizontalTVShowPoster = (props: HorizontalTVShowPosterProps): ReactElement => {\n\tconst { show, isLoading = true } = props;\n\tconst { name, poster_path, vote_average, vote_count, first_air_date, genre_ids, overview } = show || {};\n\n\treturn (\n\t\t<HorizontalPoster\n\t\t\tmediaItem={show ? { ...show } : undefined}\n\t\t\tmediaType='tv'\n\t\t\timage={{\n\t\t\t\talt: `${name || ''} tv show poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: {\n\t\t\t\t\tthumbnail: 'w92',\n\t\t\t\t\tfull: 'original'\n\t\t\t\t}\n\t\t\t}}\n\t\t\trating={{\n\t\t\t\trating: vote_average || null,\n\t\t\t\tcount: vote_count || null\n\t\t\t}}\n\t\t\ttitle={name || ''}\n\t\t\tsubtitle={`${_.compact([\n\t\t\t\t!_.isNil(first_air_date) && !_.isEmpty(first_air_date)\n\t\t\t\t\t? `${handleReturnDate(first_air_date || '', 'full')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!_.isNil(genre_ids) && !_.isEmpty(genre_ids)\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'tv')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tdescription={overview || ''}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default HorizontalTVShowPoster;\n","import { ReactElement } from 'react';\n\nimport _ from 'lodash';\n\nimport { VerticalTVShowPosterProps } from './types';\n\nimport { handleReturnDate, handleReturnGenresByID } from '../../../../../common/utils';\nimport VerticalPoster from '../../../../../components/Poster/Vertical';\n\nconst VerticalTVShowPoster = (props: VerticalTVShowPosterProps): ReactElement => {\n\tconst { show, width, isLoading = true } = props;\n\tconst { name, poster_path, vote_average, first_air_date, genre_ids } = show || {};\n\n\treturn (\n\t\t<VerticalPoster\n\t\t\twidth={width || '100%'}\n\t\t\tmediaItem={show ? { ...show } : undefined}\n\t\t\tmediaType='tv'\n\t\t\timage={{\n\t\t\t\talt: `${name || ''} tv show poster`,\n\t\t\t\tsrc: poster_path || '',\n\t\t\t\tsize: {\n\t\t\t\t\tthumbnail: 'w92',\n\t\t\t\t\tfull: 'original'\n\t\t\t\t}\n\t\t\t}}\n\t\t\trating={vote_average || null}\n\t\t\ttitle={name || ''}\n\t\t\tsubtitle={`${_.compact([\n\t\t\t\t!_.isNil(first_air_date) && !_.isEmpty(first_air_date)\n\t\t\t\t\t? `${handleReturnDate(first_air_date || '', 'year')}`\n\t\t\t\t\t: undefined,\n\t\t\t\t!_.isNil(genre_ids) && !_.isEmpty(genre_ids)\n\t\t\t\t\t? `${handleReturnGenresByID(genre_ids || [], 'tv')}`\n\t\t\t\t\t: undefined\n\t\t\t]).join(' • ')}`}\n\t\t\tisLoading={isLoading}\n\t\t/>\n\t);\n};\n\nexport default VerticalTVShowPoster;\n","import { ReactElement, useState, useCallback, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport { useInfiniteQuery } from 'react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { useMediaQuery, useBoolean, HStack, VStack, Fade, ScaleFade, Collapse } from '@chakra-ui/react';\n\nimport axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport qs from 'query-string';\nimport { useElementSize, useUpdateEffect, useEffectOnce } from 'usehooks-ts';\n\nimport VerticalTV from './components/Orientation/Vertical';\n\nimport axiosInstance, { handleDelay } from '../../common/scripts/axios';\nimport { Response } from '../../common/types';\nimport { PartialTV } from '../../common/types/tv';\nimport Badge from '../../components/Badge';\nimport Button from '../../components/Clickable/Button';\nimport DisplayMode from '../../components/Clickable/DisplayMode';\nimport LoadMore from '../../components/Clickable/LoadMore';\nimport { handlePopulateFilters } from '../../components/Filters/common/utils';\nimport DisplayFilters from '../../components/Filters/Display';\nimport FiltersForm, { defaultValues as defaultFilterValues } from '../../components/Filters/Form';\nimport { Filters as FiltersFormType } from '../../components/Filters/types';\nimport SortBy from '../../components/SortBy';\nimport { tvSortBy as sortBy } from '../../components/SortBy/common/data/sort';\nimport { Form as SortForm } from '../../components/SortBy/types';\nimport Page from '../../containers/Page';\n\nconst defaultFilters = {\n\t'language': 'en-US', // TODO: Make this dynamic\n\t'ott_region': 'US', // TODO: Make this dynamic\n\t'certification_country': 'US', // TODO: Make this dynamic\n\t'first_air_date.lte': moment().format('YYYY-MM-DD')\n};\n\nconst TV = (): ReactElement => {\n\tconst source = axios.CancelToken.source();\n\n\tconst [isSm] = useMediaQuery('(max-width: 600px)');\n\n\tconst location = useLocation();\n\tconst [searchParams, setSearchParams] = useSearchParams(defaultFilters);\n\n\tconst [ref, { height }] = useElementSize();\n\n\tconst [shows, setShows] = useState<Response<PartialTV[]>>();\n\tconst [isFetchingPage, setIsFetchingPage] = useBoolean();\n\n\tconst [totalActiveFilters, setTotalActiveFilters] = useState<number>(0);\n\n\t// Fetching TV Shows\n\tconst tvShowsQuery = useInfiniteQuery(\n\t\t'tv-shows',\n\t\tasync ({ pageParam = 1 }) => {\n\t\t\tconst { data } = await axiosInstance\n\t\t\t\t.get<Response<PartialTV[]>>('/discover/tv', {\n\t\t\t\t\tparams: { ...(qs.parse(searchParams.toString() || '') || {}), page: pageParam || 1 },\n\t\t\t\t\tcancelToken: source.token\n\t\t\t\t})\n\t\t\t\t.then((response) => handleDelay(isFetchingPage ? 0 : 2500, response));\n\t\t\treturn data;\n\t\t},\n\t\t{\n\t\t\tenabled: false,\n\t\t\tgetPreviousPageParam: (firstPage) => (firstPage.page !== 1 ? (firstPage?.page || 0) - 1 : false),\n\t\t\tgetNextPageParam: (lastPage) =>\n\t\t\t\tlastPage.page !== lastPage.total_pages ? (lastPage?.page || 0) + 1 : false,\n\t\t\tonSuccess: (data) => {\n\t\t\t\tlet shows: PartialTV[] = [];\n\n\t\t\t\tdata.pages.forEach((page) => {\n\t\t\t\t\tshows = [...shows, ...(page?.results || [])];\n\t\t\t\t});\n\n\t\t\t\tsetShows({\n\t\t\t\t\tpage: data.pages[data.pages.length - 1].page,\n\t\t\t\t\tresults: [..._.uniqBy(shows, 'id')],\n\t\t\t\t\ttotal_pages: data.pages[data.pages.length - 1].total_pages,\n\t\t\t\t\ttotal_results: data.pages[data.pages.length - 1].total_results\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t);\n\n\tconst handleCheckFilters = useCallback(\n\t\t_.debounce((filters: FiltersFormType) => {\n\t\t\tlet key: keyof FiltersFormType;\n\t\t\tlet total = 0;\n\n\t\t\tfor (key in filters) {\n\t\t\t\tif (\n\t\t\t\t\tkey === 'dates' &&\n\t\t\t\t\t((!_.isNil(filters.dates.gte) && !_.isEmpty(filters.dates.gte)) ||\n\t\t\t\t\t\t(!_.isNil(filters.dates.lte) && !_.isEmpty(filters.dates.lte)))\n\t\t\t\t) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t} else if (key !== 'dates' && !_.isNil(filters[key]) && !_.isEmpty(filters[key])) {\n\t\t\t\t\ttotal = total + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTotalActiveFilters(total);\n\t\t}, 500),\n\t\t[setTotalActiveFilters]\n\t);\n\n\tconst handleSetFilters = (form: FiltersFormType): void => {\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\t\tObject.keys(currentSearch).forEach((key) => key === 'sort_by' || delete currentSearch[key]);\n\n\t\tconst filters = _.omitBy(\n\t\t\t_.merge({\n\t\t\t\t...defaultFilters,\n\t\t\t\t'certification': form.certifications.length > 0 ? form.certifications.join('|') : undefined,\n\t\t\t\t'first_air_date.gte': form.dates.gte || undefined,\n\t\t\t\t'first_air_date.lte': form.dates.lte || undefined,\n\t\t\t\t'with_genres': form.genres.length > 0 ? form.genres.join(',') : undefined,\n\t\t\t\t'vote_average.gte': form.rating.length > 0 && form.rating[0] ? form.rating[0] : undefined,\n\t\t\t\t'vote_average.lte': form.rating.length > 0 && form.rating[1] ? form.rating[1] : undefined,\n\t\t\t\t'vote_count.gte': form.count.length > 0 && form.count[0] ? form.count[0] : undefined,\n\t\t\t\t'vote_count.lte': form.count.length > 0 && form.count[1] ? form.count[1] : undefined,\n\t\t\t\t'with_runtime.gte': form.runtime.length > 0 && form.runtime[0] ? form.runtime[0] : undefined,\n\t\t\t\t'with_runtime.lte': form.runtime.length > 0 && form.runtime[1] ? form.runtime[1] : undefined\n\t\t\t}),\n\t\t\t_.isNil || _.isEmpty\n\t\t);\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, ...filters }));\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t};\n\n\tconst handleSetSortBy = (form: SortForm): void => {\n\t\tconst currentSearch = _.omit(qs.parse(searchParams.toString() || ''), 'sort_by');\n\n\t\tconst sortBy = {\n\t\t\tsort_by: `${form.sortBy.value}.${form.direction}`\n\t\t};\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, ...sortBy }));\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t};\n\n\tconst handleLoadMore = (): void => {\n\t\tconst page = shows?.page || 1;\n\t\tconst currentSearch = qs.parse(searchParams.toString() || '');\n\n\t\tsetSearchParams(_.mergeWith({ ...currentSearch, page: page + 1 }));\n\n\t\tsetIsFetchingPage.on();\n\n\t\tsetTimeout(() => tvShowsQuery.fetchNextPage(), 250);\n\t};\n\n\tuseEffect(() => {\n\t\thandleCheckFilters(handlePopulateFilters(location.search, 'tv'));\n\t}, [location.search]);\n\n\tuseUpdateEffect(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\t\tconst totalPages =\n\t\t\tcurrentSearch && currentSearch.page && typeof currentSearch.page === 'string'\n\t\t\t\t? Number(currentSearch.page)\n\t\t\t\t: 1;\n\t\tconst page = shows?.page || 1;\n\n\t\tif (page < totalPages && tvShowsQuery.hasNextPage) {\n\t\t\tsetIsFetchingPage.on();\n\n\t\t\ttvShowsQuery.fetchNextPage();\n\t\t}\n\t}, [shows?.page]);\n\n\tuseEffectOnce(() => {\n\t\tconst currentSearch = qs.parse(location.search);\n\n\t\tsetSearchParams(\n\t\t\tObject.keys(currentSearch).length > 0\n\t\t\t\t? _.merge({ ...defaultFilters, ...currentSearch })\n\t\t\t\t: _.merge({ ...defaultFilters, sort_by: 'popularity.desc' })\n\t\t);\n\n\t\tsetTimeout(() => tvShowsQuery.refetch(), 250);\n\t});\n\n\tuseEffect(() => {\n\t\treturn () => source.cancel();\n\t}, []);\n\n\treturn (\n\t\t<Page title='TV Shows'>\n\t\t\t{{\n\t\t\t\tactions: (\n\t\t\t\t\t<HStack width={isSm ? '100%' : 'auto'} spacing={2}>\n\t\t\t\t\t\t<SortBy\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\ttvShowsQuery.isFetching || tvShowsQuery.isLoading || tvShowsQuery.isError\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSort By\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsortBy={[...sortBy]}\n\t\t\t\t\t\t\tonSort={handleSetSortBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FiltersForm\n\t\t\t\t\t\t\trenderButton={({ color, onClick }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\trenderRight={\n\t\t\t\t\t\t\t\t\t\ttotalActiveFilters > 0\n\t\t\t\t\t\t\t\t\t\t\t? ({ color }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Fade in unmountOnExit>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={color} size='xs'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CountUp duration={1} end={totalActiveFilters} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisFullWidth={isSm}\n\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\ttvShowsQuery.isFetching || tvShowsQuery.isLoading || tvShowsQuery.isError\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tsx={{ back: { height: `${height}px` } }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tmediaType='tv'\n\t\t\t\t\t\t\tonFilter={handleSetFilters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DisplayMode ref={ref} />\n\t\t\t\t\t</HStack>\n\t\t\t\t),\n\t\t\t\tbody: (\n\t\t\t\t\t<VStack width='100%' spacing={4} px={2} pt={2}>\n\t\t\t\t\t\t<VStack width='100%' spacing={2}>\n\t\t\t\t\t\t\t<Collapse in={totalActiveFilters > 0} unmountOnExit style={{ width: '100%' }}>\n\t\t\t\t\t\t\t\t<DisplayFilters\n\t\t\t\t\t\t\t\t\tmediaType='tv'\n\t\t\t\t\t\t\t\t\tonTagDelete={(filter, filters) =>\n\t\t\t\t\t\t\t\t\t\thandleSetFilters({ ...filters, [filter]: defaultFilterValues[filter] })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClear={() => handleSetFilters({ ...defaultFilterValues })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Collapse>\n\n\t\t\t\t\t\t\t<VerticalTV\n\t\t\t\t\t\t\t\tisError={tvShowsQuery.isError}\n\t\t\t\t\t\t\t\tisSuccess={tvShowsQuery.isSuccess}\n\t\t\t\t\t\t\t\tisLoading={tvShowsQuery.isFetching || tvShowsQuery.isLoading}\n\t\t\t\t\t\t\t\tshows={shows?.results || []}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</VStack>\n\n\t\t\t\t\t\t<ScaleFade\n\t\t\t\t\t\t\tin={!tvShowsQuery.isError && (shows?.total_results || 0) > 0}\n\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\tstyle={{ width: isSm ? '100%' : 'auto' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LoadMore\n\t\t\t\t\t\t\t\tamount={shows?.results?.length || 0}\n\t\t\t\t\t\t\t\ttotal={shows?.total_results || 0}\n\t\t\t\t\t\t\t\tlabel='TV Shows'\n\t\t\t\t\t\t\t\tisLoading={tvShowsQuery.isFetching || tvShowsQuery.isLoading}\n\t\t\t\t\t\t\t\tisButtonVisible={(tvShowsQuery.hasNextPage || true) && !tvShowsQuery.isError}\n\t\t\t\t\t\t\t\tonClick={handleLoadMore}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ScaleFade>\n\t\t\t\t\t</VStack>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Page>\n\t);\n};\n\nexport default TV;\n"],"names":["DisplayMode","forwardRef","props","ref","theme","useTheme","dispatch","useDispatch","displayMode","useSelector","state","app","ui","color","user","isFetching","useIsFetching","isMutating","useIsMutating","useBoolean","isHoveringGrid","setIsHoveringGrid","isClickingGrid","setIsClickingGrid","isHoveringList","setIsHoveringList","isClickingList","setIsClickingList","isAttached","isDisabled","isOpen","placement","label","gutter","onClick","toggleDisplayMode","undefined","onMouseDown","on","onMouseUp","off","onMouseEnter","onMouseLeave","variant","sx","back","borderRadius","radii","base","front","icon","type","dummies","_","height","colorMode","useColorMode","fontSize","useBreakpointValue","description","isLoading","inView","dummy","useConst","width","maxWidth","isLoaded","align","fontWeight","isTruncated","overflow","whiteSpace","mediaItem","mediaType","title","image","isFocused","isHovering","onMouseChange","as","Fade","in","ratio","handleReturnRatio","Skeleton","Image","alt","boringType","handleReturnBoringTypeByMediaType","thumbnailSrc","process","size","thumbnail","src","fullSrc","full","handleIsTouchDevice","unmountOnExit","position","bottom","space","px","Button","isFullWidth","event","preventDefault","stopPropagation","toggleQuickView","open","id","subtitle","useMediaQuery","isSm","ratingFontSize","useInView","threshold","unobserveOnEnter","observe","rating","setIsFocused","setIsHovering","setIsDisabled","Link","to","pathname","handleReturnMediaTypeLabel","onFocus","onBlur","Card","isClickable","isFixed","isLight","spacing","p","bool","alignItems","Rating","count","top","right","Like","Bookmark","isError","isSuccess","shows","length","map","show","_dummy","index","name","poster_path","vote_average","vote_count","first_air_date","genre_ids","overview","handleReturnDate","handleReturnGenresByID","join","defaultFilters","moment","format","source","axios","location","useLocation","useSearchParams","searchParams","setSearchParams","useElementSize","useState","setShows","isFetchingPage","setIsFetchingPage","totalActiveFilters","setTotalActiveFilters","tvShowsQuery","useInfiniteQuery","pageParam","axiosInstance","params","qs","toString","page","cancelToken","token","then","response","handleDelay","data","enabled","getPreviousPageParam","firstPage","getNextPageParam","lastPage","total_pages","onSuccess","pages","forEach","results","total_results","handleCheckFilters","useCallback","filters","key","total","dates","gte","lte","handleSetFilters","form","currentSearch","Object","keys","certifications","genres","runtime","setTimeout","refetch","useEffect","handlePopulateFilters","search","useUpdateEffect","totalPages","Number","hasNextPage","fetchNextPage","useEffectOnce","sort_by","cancel","actions","renderButton","sortBy","onSort","value","direction","renderRight","duration","end","onFilter","body","pt","style","onTagDelete","filter","defaultFilterValues","onClear","amount","isButtonVisible"],"sourceRoot":""}